/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/CommonUtils", "sap/fe/macros/internal/valuehelp/ValueListHelper", "sap/ui/mdc/odata/v4/FieldValueHelpDelegate"], function (CommonUtils, ValueListHelper, FieldValueHelpDelegate) {
  "use strict";

  var ODataFieldValueHelpDelegate = Object.assign({}, FieldValueHelpDelegate);
  /**
   * Requests to set the <code>filterFields</code> property of the <code>FieldValueHelp</code> element.
   *
   * This function is called when the field help is opened for suggestion.
   * If no search is supported, content controls are not needed right now as the field help is not opened in this case.
   *
   * @param oPayload Payload for delegate
   * @param oFieldHelp Field help instance
   * @returns Promise that is resolved if the <code>FilterFields</code> property is set
   */
  ODataFieldValueHelpDelegate.determineSearchSupported = function (oPayload, oFieldHelp) {
    return ValueListHelper.setValueListFilterFields(oPayload.propertyPath, oFieldHelp, true, oPayload.conditionModel);
  };
  /**
   * Requests the content of the field help.
   *
   * This function is called when the field help is opened or a key or description is requested.
   *
   * So, depending on the field help control used, all content controls and data need to be assigned.
   * Once they are assigned and the data is set, the returned <code>Promise</code> needs to be resolved.
   * Only then does the field help continue opening or reading data.
   *
   * @param oPayload Payload for the delegate
   * @param oFieldHelp Field help instance
   * @param bSuggestion Field help is called for suggestion
   * @param oProperties Properties contains the key (collectiveSearchKey) of the selected FieldValueHelp in case of multiple FieldValueHelp
   * @returns Promise that is resolved if all content is available
   */
  ODataFieldValueHelpDelegate.contentRequest = function (oPayload, oFieldHelp, bSuggestion, oProperties) {
    return ValueListHelper.showValueListInfo(oPayload.propertyPath, oFieldHelp, bSuggestion, oPayload.conditionModel, oProperties);
  };
  /**
   * Changes the search string
   *
   * If <code>$search</code> is used, depending on the back end, the search string might need to be adapted.
   *
   * @param oPayload Payload for the delegate
   * @param bTypeahead True if the search is called for a type-ahead
   * @param sSearch Search string
   * @returns Search string to be used
   */
  ODataFieldValueHelpDelegate.adjustSearch = function (oPayload, bTypeahead, sSearch) {
    return CommonUtils.normalizeSearchTerm(sSearch);
  };
  return ODataFieldValueHelpDelegate;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPRGF0YUZpZWxkVmFsdWVIZWxwRGVsZWdhdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJGaWVsZFZhbHVlSGVscERlbGVnYXRlIiwiZGV0ZXJtaW5lU2VhcmNoU3VwcG9ydGVkIiwib1BheWxvYWQiLCJvRmllbGRIZWxwIiwiVmFsdWVMaXN0SGVscGVyIiwic2V0VmFsdWVMaXN0RmlsdGVyRmllbGRzIiwicHJvcGVydHlQYXRoIiwiY29uZGl0aW9uTW9kZWwiLCJjb250ZW50UmVxdWVzdCIsImJTdWdnZXN0aW9uIiwib1Byb3BlcnRpZXMiLCJzaG93VmFsdWVMaXN0SW5mbyIsImFkanVzdFNlYXJjaCIsImJUeXBlYWhlYWQiLCJzU2VhcmNoIiwiQ29tbW9uVXRpbHMiLCJub3JtYWxpemVTZWFyY2hUZXJtIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJGaWVsZFZhbHVlSGVscERlbGVnYXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21tb25VdGlscyBmcm9tIFwic2FwL2ZlL2NvcmUvQ29tbW9uVXRpbHNcIjtcbmltcG9ydCBWYWx1ZUxpc3RIZWxwZXIgZnJvbSBcInNhcC9mZS9tYWNyb3MvaW50ZXJuYWwvdmFsdWVoZWxwL1ZhbHVlTGlzdEhlbHBlclwiO1xuaW1wb3J0IEZpZWxkVmFsdWVIZWxwRGVsZWdhdGUgZnJvbSBcInNhcC91aS9tZGMvb2RhdGEvdjQvRmllbGRWYWx1ZUhlbHBEZWxlZ2F0ZVwiO1xuXG5jb25zdCBPRGF0YUZpZWxkVmFsdWVIZWxwRGVsZWdhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBGaWVsZFZhbHVlSGVscERlbGVnYXRlKSBhcyBhbnk7XG4vKipcbiAqIFJlcXVlc3RzIHRvIHNldCB0aGUgPGNvZGU+ZmlsdGVyRmllbGRzPC9jb2RlPiBwcm9wZXJ0eSBvZiB0aGUgPGNvZGU+RmllbGRWYWx1ZUhlbHA8L2NvZGU+IGVsZW1lbnQuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiB0aGUgZmllbGQgaGVscCBpcyBvcGVuZWQgZm9yIHN1Z2dlc3Rpb24uXG4gKiBJZiBubyBzZWFyY2ggaXMgc3VwcG9ydGVkLCBjb250ZW50IGNvbnRyb2xzIGFyZSBub3QgbmVlZGVkIHJpZ2h0IG5vdyBhcyB0aGUgZmllbGQgaGVscCBpcyBub3Qgb3BlbmVkIGluIHRoaXMgY2FzZS5cbiAqXG4gKiBAcGFyYW0gb1BheWxvYWQgUGF5bG9hZCBmb3IgZGVsZWdhdGVcbiAqIEBwYXJhbSBvRmllbGRIZWxwIEZpZWxkIGhlbHAgaW5zdGFuY2VcbiAqIEByZXR1cm5zIFByb21pc2UgdGhhdCBpcyByZXNvbHZlZCBpZiB0aGUgPGNvZGU+RmlsdGVyRmllbGRzPC9jb2RlPiBwcm9wZXJ0eSBpcyBzZXRcbiAqL1xuT0RhdGFGaWVsZFZhbHVlSGVscERlbGVnYXRlLmRldGVybWluZVNlYXJjaFN1cHBvcnRlZCA9IGZ1bmN0aW9uIChvUGF5bG9hZDogYW55LCBvRmllbGRIZWxwOiBhbnkpIHtcblx0cmV0dXJuIFZhbHVlTGlzdEhlbHBlci5zZXRWYWx1ZUxpc3RGaWx0ZXJGaWVsZHMob1BheWxvYWQucHJvcGVydHlQYXRoLCBvRmllbGRIZWxwLCB0cnVlLCBvUGF5bG9hZC5jb25kaXRpb25Nb2RlbCk7XG59O1xuLyoqXG4gKiBSZXF1ZXN0cyB0aGUgY29udGVudCBvZiB0aGUgZmllbGQgaGVscC5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuIHRoZSBmaWVsZCBoZWxwIGlzIG9wZW5lZCBvciBhIGtleSBvciBkZXNjcmlwdGlvbiBpcyByZXF1ZXN0ZWQuXG4gKlxuICogU28sIGRlcGVuZGluZyBvbiB0aGUgZmllbGQgaGVscCBjb250cm9sIHVzZWQsIGFsbCBjb250ZW50IGNvbnRyb2xzIGFuZCBkYXRhIG5lZWQgdG8gYmUgYXNzaWduZWQuXG4gKiBPbmNlIHRoZXkgYXJlIGFzc2lnbmVkIGFuZCB0aGUgZGF0YSBpcyBzZXQsIHRoZSByZXR1cm5lZCA8Y29kZT5Qcm9taXNlPC9jb2RlPiBuZWVkcyB0byBiZSByZXNvbHZlZC5cbiAqIE9ubHkgdGhlbiBkb2VzIHRoZSBmaWVsZCBoZWxwIGNvbnRpbnVlIG9wZW5pbmcgb3IgcmVhZGluZyBkYXRhLlxuICpcbiAqIEBwYXJhbSBvUGF5bG9hZCBQYXlsb2FkIGZvciB0aGUgZGVsZWdhdGVcbiAqIEBwYXJhbSBvRmllbGRIZWxwIEZpZWxkIGhlbHAgaW5zdGFuY2VcbiAqIEBwYXJhbSBiU3VnZ2VzdGlvbiBGaWVsZCBoZWxwIGlzIGNhbGxlZCBmb3Igc3VnZ2VzdGlvblxuICogQHBhcmFtIG9Qcm9wZXJ0aWVzIFByb3BlcnRpZXMgY29udGFpbnMgdGhlIGtleSAoY29sbGVjdGl2ZVNlYXJjaEtleSkgb2YgdGhlIHNlbGVjdGVkIEZpZWxkVmFsdWVIZWxwIGluIGNhc2Ugb2YgbXVsdGlwbGUgRmllbGRWYWx1ZUhlbHBcbiAqIEByZXR1cm5zIFByb21pc2UgdGhhdCBpcyByZXNvbHZlZCBpZiBhbGwgY29udGVudCBpcyBhdmFpbGFibGVcbiAqL1xuT0RhdGFGaWVsZFZhbHVlSGVscERlbGVnYXRlLmNvbnRlbnRSZXF1ZXN0ID0gZnVuY3Rpb24gKG9QYXlsb2FkOiBhbnksIG9GaWVsZEhlbHA6IGFueSwgYlN1Z2dlc3Rpb246IGJvb2xlYW4sIG9Qcm9wZXJ0aWVzOiBvYmplY3QpIHtcblx0cmV0dXJuIFZhbHVlTGlzdEhlbHBlci5zaG93VmFsdWVMaXN0SW5mbyhvUGF5bG9hZC5wcm9wZXJ0eVBhdGgsIG9GaWVsZEhlbHAsIGJTdWdnZXN0aW9uLCBvUGF5bG9hZC5jb25kaXRpb25Nb2RlbCwgb1Byb3BlcnRpZXMpO1xufTtcbi8qKlxuICogQ2hhbmdlcyB0aGUgc2VhcmNoIHN0cmluZ1xuICpcbiAqIElmIDxjb2RlPiRzZWFyY2g8L2NvZGU+IGlzIHVzZWQsIGRlcGVuZGluZyBvbiB0aGUgYmFjayBlbmQsIHRoZSBzZWFyY2ggc3RyaW5nIG1pZ2h0IG5lZWQgdG8gYmUgYWRhcHRlZC5cbiAqXG4gKiBAcGFyYW0gb1BheWxvYWQgUGF5bG9hZCBmb3IgdGhlIGRlbGVnYXRlXG4gKiBAcGFyYW0gYlR5cGVhaGVhZCBUcnVlIGlmIHRoZSBzZWFyY2ggaXMgY2FsbGVkIGZvciBhIHR5cGUtYWhlYWRcbiAqIEBwYXJhbSBzU2VhcmNoIFNlYXJjaCBzdHJpbmdcbiAqIEByZXR1cm5zIFNlYXJjaCBzdHJpbmcgdG8gYmUgdXNlZFxuICovXG5PRGF0YUZpZWxkVmFsdWVIZWxwRGVsZWdhdGUuYWRqdXN0U2VhcmNoID0gZnVuY3Rpb24gKG9QYXlsb2FkOiBvYmplY3QsIGJUeXBlYWhlYWQ6IGJvb2xlYW4sIHNTZWFyY2g6IHN0cmluZykge1xuXHRyZXR1cm4gQ29tbW9uVXRpbHMubm9ybWFsaXplU2VhcmNoVGVybShzU2VhcmNoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9EYXRhRmllbGRWYWx1ZUhlbHBEZWxlZ2F0ZTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7OztFQUlBLElBQU1BLDJCQUEyQixHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRUMsc0JBQXNCLENBQVE7RUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDQUgsMkJBQTJCLENBQUNJLHdCQUF3QixHQUFHLFVBQVVDLFFBQWEsRUFBRUMsVUFBZSxFQUFFO0lBQ2hHLE9BQU9DLGVBQWUsQ0FBQ0Msd0JBQXdCLENBQUNILFFBQVEsQ0FBQ0ksWUFBWSxFQUFFSCxVQUFVLEVBQUUsSUFBSSxFQUFFRCxRQUFRLENBQUNLLGNBQWMsQ0FBQztFQUNsSCxDQUFDO0VBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0FWLDJCQUEyQixDQUFDVyxjQUFjLEdBQUcsVUFBVU4sUUFBYSxFQUFFQyxVQUFlLEVBQUVNLFdBQW9CLEVBQUVDLFdBQW1CLEVBQUU7SUFDakksT0FBT04sZUFBZSxDQUFDTyxpQkFBaUIsQ0FBQ1QsUUFBUSxDQUFDSSxZQUFZLEVBQUVILFVBQVUsRUFBRU0sV0FBVyxFQUFFUCxRQUFRLENBQUNLLGNBQWMsRUFBRUcsV0FBVyxDQUFDO0VBQy9ILENBQUM7RUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNBYiwyQkFBMkIsQ0FBQ2UsWUFBWSxHQUFHLFVBQVVWLFFBQWdCLEVBQUVXLFVBQW1CLEVBQUVDLE9BQWUsRUFBRTtJQUM1RyxPQUFPQyxXQUFXLENBQUNDLG1CQUFtQixDQUFDRixPQUFPLENBQUM7RUFDaEQsQ0FBQztFQUFDLE9BRWFqQiwyQkFBMkI7QUFBQSJ9