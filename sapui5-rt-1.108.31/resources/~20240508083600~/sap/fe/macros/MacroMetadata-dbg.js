/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/deepClone", "sap/base/util/merge", "sap/base/util/uid", "sap/fe/core/converters/ConverterContext"], function (deepClone, merge, uid, ConverterContext) {
  "use strict";

  var fnGetOverrides = function (mControlConfiguration, sID) {
    var oProps = {};
    if (mControlConfiguration) {
      var oControlConfig = mControlConfiguration[sID];
      if (oControlConfig) {
        Object.keys(oControlConfig).forEach(function (sConfigKey) {
          oProps[sConfigKey] = oControlConfig[sConfigKey];
        });
      }
    }
    return oProps;
  };
  var fnSetDefaultValue = function (oProps, sPropName, oOverrideValue, bForceUpdate) {
    if (oProps[sPropName] === undefined || bForceUpdate) {
      oProps[sPropName] = oOverrideValue;
    }
  };
  var MacroMetadata = {
    metadata: {
      properties: {
        _flexId: {
          type: "string"
        }
      }
    },
    extend: function (fnName, oContent) {
      oContent.metadata.properties._flexId = MacroMetadata.metadata.properties._flexId;
      oContent.hasValidation = true;
      oContent.getOverrides = fnGetOverrides.bind(oContent);
      oContent.setDefaultValue = fnSetDefaultValue.bind(oContent);
      oContent.getConverterContext = function (oVisualizationObjectPath, contextPath, mSettings, mExtraParams) {
        var oAppComponent = mSettings.appComponent;
        var originalViewData = mSettings.models.viewData && mSettings.models.viewData.getData();
        var viewData = Object.assign({}, originalViewData);
        delete viewData.resourceBundle;
        viewData = deepClone(viewData);
        viewData.controlConfiguration = merge(viewData.controlConfiguration, mExtraParams);
        return ConverterContext.createConverterContextForMacro(oVisualizationObjectPath.startingEntitySet.name, mSettings.models.metaModel, oAppComponent && oAppComponent.getDiagnostics(), merge, oVisualizationObjectPath.contextLocation, viewData);
      };
      oContent.createBindingContext = function (oData, mSettings) {
        var sContextPath = "/".concat(uid());
        mSettings.models.converterContext.setProperty(sContextPath, oData);
        return mSettings.models.converterContext.createBindingContext(sContextPath);
      };
      oContent.parseAggregation = function (oAggregation, fnCallback) {
        var oOutObjects = {};
        if (oAggregation && oAggregation.children.length > 0) {
          var children = oAggregation.children;
          for (var childIdx = 0; childIdx < children.length; childIdx++) {
            var childObject = fnCallback(children[childIdx], childIdx);
            if (childObject) {
              oOutObjects[childObject.key] = childObject;
            }
          }
        }
        return oOutObjects;
      };
      oContent.getContentId = function (sMacroId) {
        return "".concat(sMacroId, "-content");
      };
      return oContent;
    }
  };
  return MacroMetadata;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,