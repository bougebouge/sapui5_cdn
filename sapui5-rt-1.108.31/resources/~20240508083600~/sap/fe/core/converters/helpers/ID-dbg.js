/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["../../helpers/StableIdHelper"], function (StableIdHelper) {
  "use strict";

  var _exports = {};
  var generate = StableIdHelper.generate;
  var BASE_ID = ["fe"];

  /**
   * Shortcut to the stableIdHelper providing a "curry" like method where the last parameter is missing.
   *
   * @param sFixedPart
   * @returns A shortcut function with the fixed ID part
   */
  function createIDGenerator() {
    for (var _len = arguments.length, sFixedPart = new Array(_len), _key = 0; _key < _len; _key++) {
      sFixedPart[_key] = arguments[_key];
    }
    return function () {
      for (var _len2 = arguments.length, sIDPart = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        sIDPart[_key2] = arguments[_key2];
      }
      return generate(BASE_ID.concat.apply(BASE_ID, sFixedPart.concat(sIDPart)));
    };
  }

  /**
   * Those are all helpers to centralize ID generation in the code for different elements
   */
  _exports.createIDGenerator = createIDGenerator;
  var getHeaderFacetID = createIDGenerator("HeaderFacet");
  _exports.getHeaderFacetID = getHeaderFacetID;
  var getHeaderFacetContainerID = createIDGenerator("HeaderFacetContainer");
  _exports.getHeaderFacetContainerID = getHeaderFacetContainerID;
  var getHeaderFacetFormID = createIDGenerator("HeaderFacet", "Form");
  _exports.getHeaderFacetFormID = getHeaderFacetFormID;
  var getCustomHeaderFacetID = createIDGenerator("HeaderFacetCustomContainer");
  _exports.getCustomHeaderFacetID = getCustomHeaderFacetID;
  var getEditableHeaderSectionID = createIDGenerator("EditableHeaderSection");
  _exports.getEditableHeaderSectionID = getEditableHeaderSectionID;
  var getSectionID = createIDGenerator("FacetSection");
  _exports.getSectionID = getSectionID;
  var getCustomSectionID = createIDGenerator("CustomSection");
  _exports.getCustomSectionID = getCustomSectionID;
  var getSubSectionID = createIDGenerator("FacetSubSection");
  _exports.getSubSectionID = getSubSectionID;
  var getCustomSubSectionID = createIDGenerator("CustomSubSection");
  _exports.getCustomSubSectionID = getCustomSubSectionID;
  var getSideContentID = createIDGenerator("SideContent");
  _exports.getSideContentID = getSideContentID;
  var getSideContentLayoutID = function (sSectionID) {
    return generate(["fe", sSectionID, "SideContentLayout"]);
  };
  _exports.getSideContentLayoutID = getSideContentLayoutID;
  var getFormID = createIDGenerator("Form");
  _exports.getFormID = getFormID;
  var getFormContainerID = createIDGenerator("FormContainer");
  _exports.getFormContainerID = getFormContainerID;
  var getFormStandardActionButtonID = function (sFormContainerId, sActionName) {
    return generate(["fe", "FormContainer", sFormContainerId, "StandardAction", sActionName]);
  };
  _exports.getFormStandardActionButtonID = getFormStandardActionButtonID;
  var getTableID = createIDGenerator("table");
  _exports.getTableID = getTableID;
  var getCustomTabID = createIDGenerator("CustomTab");
  _exports.getCustomTabID = getCustomTabID;
  var getFilterBarID = createIDGenerator("FilterBar");
  _exports.getFilterBarID = getFilterBarID;
  var getDynamicListReportID = function () {
    return "fe::ListReport";
  };
  _exports.getDynamicListReportID = getDynamicListReportID;
  var getIconTabBarID = createIDGenerator("TabMultipleMode");
  _exports.getIconTabBarID = getIconTabBarID;
  var getFilterVariantManagementID = function (sFilterID) {
    return generate([sFilterID, "VariantManagement"]);
  };
  _exports.getFilterVariantManagementID = getFilterVariantManagementID;
  var getChartID = createIDGenerator("Chart");
  _exports.getChartID = getChartID;
  var getCustomActionID = function (sActionID) {
    return generate(["CustomAction", sActionID]);
  };
  _exports.getCustomActionID = getCustomActionID;
  var getKPIID = createIDGenerator("KPI");
  _exports.getKPIID = getKPIID;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCQVNFX0lEIiwiY3JlYXRlSURHZW5lcmF0b3IiLCJzRml4ZWRQYXJ0Iiwic0lEUGFydCIsImdlbmVyYXRlIiwiY29uY2F0IiwiZ2V0SGVhZGVyRmFjZXRJRCIsImdldEhlYWRlckZhY2V0Q29udGFpbmVySUQiLCJnZXRIZWFkZXJGYWNldEZvcm1JRCIsImdldEN1c3RvbUhlYWRlckZhY2V0SUQiLCJnZXRFZGl0YWJsZUhlYWRlclNlY3Rpb25JRCIsImdldFNlY3Rpb25JRCIsImdldEN1c3RvbVNlY3Rpb25JRCIsImdldFN1YlNlY3Rpb25JRCIsImdldEN1c3RvbVN1YlNlY3Rpb25JRCIsImdldFNpZGVDb250ZW50SUQiLCJnZXRTaWRlQ29udGVudExheW91dElEIiwic1NlY3Rpb25JRCIsImdldEZvcm1JRCIsImdldEZvcm1Db250YWluZXJJRCIsImdldEZvcm1TdGFuZGFyZEFjdGlvbkJ1dHRvbklEIiwic0Zvcm1Db250YWluZXJJZCIsInNBY3Rpb25OYW1lIiwiZ2V0VGFibGVJRCIsImdldEN1c3RvbVRhYklEIiwiZ2V0RmlsdGVyQmFySUQiLCJnZXREeW5hbWljTGlzdFJlcG9ydElEIiwiZ2V0SWNvblRhYkJhcklEIiwiZ2V0RmlsdGVyVmFyaWFudE1hbmFnZW1lbnRJRCIsInNGaWx0ZXJJRCIsImdldENoYXJ0SUQiLCJnZXRDdXN0b21BY3Rpb25JRCIsInNBY3Rpb25JRCIsImdldEtQSUlEIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJJRC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERhdGFGaWVsZEFic3RyYWN0VHlwZXMsIEZhY2V0VHlwZXMgfSBmcm9tIFwiQHNhcC11eC92b2NhYnVsYXJpZXMtdHlwZXMvdm9jYWJ1bGFyaWVzL1VJXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZSB9IGZyb20gXCIuLi8uLi9oZWxwZXJzL1N0YWJsZUlkSGVscGVyXCI7XG50eXBlIElEUGFydCA9IHN0cmluZyB8IHsgRmFjZXQ6IEZhY2V0VHlwZXMgfSB8IERhdGFGaWVsZEFic3RyYWN0VHlwZXM7XG5jb25zdCBCQVNFX0lEOiBJRFBhcnRbXSA9IFtcImZlXCJdO1xuXG4vKipcbiAqIFNob3J0Y3V0IHRvIHRoZSBzdGFibGVJZEhlbHBlciBwcm92aWRpbmcgYSBcImN1cnJ5XCIgbGlrZSBtZXRob2Qgd2hlcmUgdGhlIGxhc3QgcGFyYW1ldGVyIGlzIG1pc3NpbmcuXG4gKlxuICogQHBhcmFtIHNGaXhlZFBhcnRcbiAqIEByZXR1cm5zIEEgc2hvcnRjdXQgZnVuY3Rpb24gd2l0aCB0aGUgZml4ZWQgSUQgcGFydFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSURHZW5lcmF0b3IoLi4uc0ZpeGVkUGFydDogSURQYXJ0W10pIHtcblx0cmV0dXJuIGZ1bmN0aW9uICguLi5zSURQYXJ0OiBJRFBhcnRbXSkge1xuXHRcdHJldHVybiBnZW5lcmF0ZShCQVNFX0lELmNvbmNhdCguLi5zRml4ZWRQYXJ0LCAuLi5zSURQYXJ0KSk7XG5cdH07XG59XG5cbi8qKlxuICogVGhvc2UgYXJlIGFsbCBoZWxwZXJzIHRvIGNlbnRyYWxpemUgSUQgZ2VuZXJhdGlvbiBpbiB0aGUgY29kZSBmb3IgZGlmZmVyZW50IGVsZW1lbnRzXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRIZWFkZXJGYWNldElEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJIZWFkZXJGYWNldFwiKTtcbmV4cG9ydCBjb25zdCBnZXRIZWFkZXJGYWNldENvbnRhaW5lcklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJIZWFkZXJGYWNldENvbnRhaW5lclwiKTtcbmV4cG9ydCBjb25zdCBnZXRIZWFkZXJGYWNldEZvcm1JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiSGVhZGVyRmFjZXRcIiwgXCJGb3JtXCIpO1xuZXhwb3J0IGNvbnN0IGdldEN1c3RvbUhlYWRlckZhY2V0SUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkhlYWRlckZhY2V0Q3VzdG9tQ29udGFpbmVyXCIpO1xuZXhwb3J0IGNvbnN0IGdldEVkaXRhYmxlSGVhZGVyU2VjdGlvbklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJFZGl0YWJsZUhlYWRlclNlY3Rpb25cIik7XG5leHBvcnQgY29uc3QgZ2V0U2VjdGlvbklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJGYWNldFNlY3Rpb25cIik7XG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tU2VjdGlvbklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJDdXN0b21TZWN0aW9uXCIpO1xuZXhwb3J0IGNvbnN0IGdldFN1YlNlY3Rpb25JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRmFjZXRTdWJTZWN0aW9uXCIpO1xuZXhwb3J0IGNvbnN0IGdldEN1c3RvbVN1YlNlY3Rpb25JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiQ3VzdG9tU3ViU2VjdGlvblwiKTtcbmV4cG9ydCBjb25zdCBnZXRTaWRlQ29udGVudElEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJTaWRlQ29udGVudFwiKTtcbmV4cG9ydCBjb25zdCBnZXRTaWRlQ29udGVudExheW91dElEID0gZnVuY3Rpb24gKHNTZWN0aW9uSUQ6IHN0cmluZykge1xuXHRyZXR1cm4gZ2VuZXJhdGUoW1wiZmVcIiwgc1NlY3Rpb25JRCwgXCJTaWRlQ29udGVudExheW91dFwiXSk7XG59O1xuZXhwb3J0IGNvbnN0IGdldEZvcm1JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRm9ybVwiKTtcbmV4cG9ydCBjb25zdCBnZXRGb3JtQ29udGFpbmVySUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkZvcm1Db250YWluZXJcIik7XG5leHBvcnQgY29uc3QgZ2V0Rm9ybVN0YW5kYXJkQWN0aW9uQnV0dG9uSUQgPSBmdW5jdGlvbiAoc0Zvcm1Db250YWluZXJJZDogc3RyaW5nLCBzQWN0aW9uTmFtZTogc3RyaW5nKSB7XG5cdHJldHVybiBnZW5lcmF0ZShbXCJmZVwiLCBcIkZvcm1Db250YWluZXJcIiwgc0Zvcm1Db250YWluZXJJZCwgXCJTdGFuZGFyZEFjdGlvblwiLCBzQWN0aW9uTmFtZV0pO1xufTtcbmV4cG9ydCBjb25zdCBnZXRUYWJsZUlEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJ0YWJsZVwiKTtcbmV4cG9ydCBjb25zdCBnZXRDdXN0b21UYWJJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiQ3VzdG9tVGFiXCIpO1xuZXhwb3J0IGNvbnN0IGdldEZpbHRlckJhcklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJGaWx0ZXJCYXJcIik7XG5leHBvcnQgY29uc3QgZ2V0RHluYW1pY0xpc3RSZXBvcnRJRCA9IGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIFwiZmU6Okxpc3RSZXBvcnRcIjtcbn07XG5leHBvcnQgY29uc3QgZ2V0SWNvblRhYkJhcklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJUYWJNdWx0aXBsZU1vZGVcIik7XG5leHBvcnQgY29uc3QgZ2V0RmlsdGVyVmFyaWFudE1hbmFnZW1lbnRJRCA9IGZ1bmN0aW9uIChzRmlsdGVySUQ6IHN0cmluZykge1xuXHRyZXR1cm4gZ2VuZXJhdGUoW3NGaWx0ZXJJRCwgXCJWYXJpYW50TWFuYWdlbWVudFwiXSk7XG59O1xuZXhwb3J0IGNvbnN0IGdldENoYXJ0SUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkNoYXJ0XCIpO1xuZXhwb3J0IGNvbnN0IGdldEN1c3RvbUFjdGlvbklEID0gZnVuY3Rpb24gKHNBY3Rpb25JRDogc3RyaW5nKSB7XG5cdHJldHVybiBnZW5lcmF0ZShbXCJDdXN0b21BY3Rpb25cIiwgc0FjdGlvbklEXSk7XG59O1xuZXhwb3J0IGNvbnN0IGdldEtQSUlEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJLUElcIik7XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBO0FBQUE7Ozs7OztFQUdBLElBQU1BLE9BQWlCLEdBQUcsQ0FBQyxJQUFJLENBQUM7O0VBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNPLFNBQVNDLGlCQUFpQixHQUEwQjtJQUFBLGtDQUF0QkMsVUFBVTtNQUFWQSxVQUFVO0lBQUE7SUFDOUMsT0FBTyxZQUFnQztN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