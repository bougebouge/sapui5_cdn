/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/merge", "sap/ui/mdc/enum/BaseType", "sap/ui/mdc/odata/TypeUtil"], function (merge, BaseType, ODataTypeUtil) {
  "use strict";

  var ODataV4TypeUtil = Object.assign({}, ODataTypeUtil);
  ODataV4TypeUtil.getBaseType = function (type, formatOptions, constraints) {
    switch (type) {
      case "sap.ui.model.odata.type.Date":
        return BaseType.Date;
      case "sap.ui.model.odata.type.TimeOfDay":
        return BaseType.Time;
      case "sap.ui.model.odata.type.Unit":
      case "sap.ui.model.odata.type.Currency":
        if (!formatOptions || (!formatOptions.hasOwnProperty("showMeasure") || formatOptions.showMeasure) && (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber)) {
          return BaseType.Unit;
        } else if (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber) {
          return BaseType.Numeric; // only number to show
        } else {
          return BaseType.String; // only unit to show
        }

      default:
        return ODataTypeUtil.getBaseType.call(ODataV4TypeUtil, type, formatOptions, constraints);
    }
  };
  ODataV4TypeUtil.getDataTypeClassName = function (type) {
    // V4 specific types
    var edmTypes = {
      "Edm.Date": "sap.ui.model.odata.type.Date",
      // V4 Date
      "Edm.TimeOfDay": "sap.ui.model.odata.type.TimeOfDay" // V4 constraints: {precision}
    };

    if (edmTypes[type]) {
      type = edmTypes[type];
    } else {
      type = ODataTypeUtil.getDataTypeClassName.call(ODataV4TypeUtil, type);
    }
    return type;
  };
  ODataV4TypeUtil.getDataTypeInstance = function (dataType, formatOptions, constraints) {
    switch (dataType) {
      case "sap.ui.model.odata.type.DateTimeOffset":
      case "Edm.DateTimeOffset":
        constraints = merge({}, constraints || {});
        constraints.V4 = true;
        break;
      default:
    }
    var TypeClass = ODataV4TypeUtil.getDataTypeClass(dataType);
    return new TypeClass(formatOptions, constraints);
  };
  return ODataV4TypeUtil;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPRGF0YVY0VHlwZVV0aWwiLCJPYmplY3QiLCJhc3NpZ24iLCJPRGF0YVR5cGVVdGlsIiwiZ2V0QmFzZVR5cGUiLCJ0eXBlIiwiZm9ybWF0T3B0aW9ucyIsImNvbnN0cmFpbnRzIiwiQmFzZVR5cGUiLCJEYXRlIiwiVGltZSIsImhhc093blByb3BlcnR5Iiwic2hvd01lYXN1cmUiLCJzaG93TnVtYmVyIiwiVW5pdCIsIk51bWVyaWMiLCJTdHJpbmciLCJjYWxsIiwiZ2V0RGF0YVR5cGVDbGFzc05hbWUiLCJlZG1UeXBlcyIsImdldERhdGFUeXBlSW5zdGFuY2UiLCJkYXRhVHlwZSIsIm1lcmdlIiwiVjQiLCJUeXBlQ2xhc3MiLCJnZXREYXRhVHlwZUNsYXNzIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJUeXBlVXRpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWVyZ2UgZnJvbSBcInNhcC9iYXNlL3V0aWwvbWVyZ2VcIjtcbmltcG9ydCBCYXNlVHlwZSBmcm9tIFwic2FwL3VpL21kYy9lbnVtL0Jhc2VUeXBlXCI7XG5pbXBvcnQgdHlwZSB7IENvbnN0cmFpbnRzLCBGb3JtYXRPcHRpb25zIH0gZnJvbSBcInNhcC91aS9tZGMvb2RhdGEvVHlwZVV0aWxcIjtcbmltcG9ydCBPRGF0YVR5cGVVdGlsIGZyb20gXCJzYXAvdWkvbWRjL29kYXRhL1R5cGVVdGlsXCI7XG5pbXBvcnQgdHlwZSBTaW1wbGVUeXBlIGZyb20gXCJzYXAvdWkvbW9kZWwvU2ltcGxlVHlwZVwiO1xuY29uc3QgT0RhdGFWNFR5cGVVdGlsID0gT2JqZWN0LmFzc2lnbih7fSwgT0RhdGFUeXBlVXRpbCk7XG5PRGF0YVY0VHlwZVV0aWwuZ2V0QmFzZVR5cGUgPSBmdW5jdGlvbiAodHlwZTogc3RyaW5nLCBmb3JtYXRPcHRpb25zPzogRm9ybWF0T3B0aW9ucywgY29uc3RyYWludHM/OiBDb25zdHJhaW50cyk6IEJhc2VUeXBlIHtcblx0c3dpdGNoICh0eXBlKSB7XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLkRhdGVcIjpcblx0XHRcdHJldHVybiBCYXNlVHlwZS5EYXRlO1xuXHRcdGNhc2UgXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5UaW1lT2ZEYXlcIjpcblx0XHRcdHJldHVybiBCYXNlVHlwZS5UaW1lO1xuXHRcdGNhc2UgXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5Vbml0XCI6XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLkN1cnJlbmN5XCI6XG5cdFx0XHRpZiAoXG5cdFx0XHRcdCFmb3JtYXRPcHRpb25zIHx8XG5cdFx0XHRcdCgoIWZvcm1hdE9wdGlvbnMuaGFzT3duUHJvcGVydHkoXCJzaG93TWVhc3VyZVwiKSB8fCBmb3JtYXRPcHRpb25zLnNob3dNZWFzdXJlKSAmJlxuXHRcdFx0XHRcdCghZm9ybWF0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcInNob3dOdW1iZXJcIikgfHwgZm9ybWF0T3B0aW9ucy5zaG93TnVtYmVyKSlcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm4gQmFzZVR5cGUuVW5pdDtcblx0XHRcdH0gZWxzZSBpZiAoIWZvcm1hdE9wdGlvbnMuaGFzT3duUHJvcGVydHkoXCJzaG93TnVtYmVyXCIpIHx8IGZvcm1hdE9wdGlvbnMuc2hvd051bWJlcikge1xuXHRcdFx0XHRyZXR1cm4gQmFzZVR5cGUuTnVtZXJpYzsgLy8gb25seSBudW1iZXIgdG8gc2hvd1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIEJhc2VUeXBlLlN0cmluZzsgLy8gb25seSB1bml0IHRvIHNob3dcblx0XHRcdH1cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIE9EYXRhVHlwZVV0aWwuZ2V0QmFzZVR5cGUuY2FsbChPRGF0YVY0VHlwZVV0aWwsIHR5cGUsIGZvcm1hdE9wdGlvbnMsIGNvbnN0cmFpbnRzKTtcblx0fVxufTtcbk9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUNsYXNzTmFtZSA9IGZ1bmN0aW9uICh0eXBlOiBzdHJpbmcpOiBzdHJpbmcge1xuXHQvLyBWNCBzcGVjaWZpYyB0eXBlc1xuXHRjb25zdCBlZG1UeXBlcyA9IHtcblx0XHRcIkVkbS5EYXRlXCI6IFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuRGF0ZVwiLCAvLyBWNCBEYXRlXG5cdFx0XCJFZG0uVGltZU9mRGF5XCI6IFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuVGltZU9mRGF5XCIgLy8gVjQgY29uc3RyYWludHM6IHtwcmVjaXNpb259XG5cdH0gYXMgYW55O1xuXHRpZiAoZWRtVHlwZXNbdHlwZV0pIHtcblx0XHR0eXBlID0gZWRtVHlwZXNbdHlwZV07XG5cdH0gZWxzZSB7XG5cdFx0dHlwZSA9IE9EYXRhVHlwZVV0aWwuZ2V0RGF0YVR5cGVDbGFzc05hbWUuY2FsbChPRGF0YVY0VHlwZVV0aWwsIHR5cGUpO1xuXHR9XG5cdHJldHVybiB0eXBlO1xufTtcbk9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUluc3RhbmNlID0gZnVuY3Rpb24gKGRhdGFUeXBlOiBzdHJpbmcsIGZvcm1hdE9wdGlvbnM/OiBGb3JtYXRPcHRpb25zLCBjb25zdHJhaW50cz86IENvbnN0cmFpbnRzKTogU2ltcGxlVHlwZSB7XG5cdHN3aXRjaCAoZGF0YVR5cGUpIHtcblx0XHRjYXNlIFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuRGF0ZVRpbWVPZmZzZXRcIjpcblx0XHRjYXNlIFwiRWRtLkRhdGVUaW1lT2Zmc2V0XCI6XG5cdFx0XHRjb25zdHJhaW50cyA9IG1lcmdlKHt9LCBjb25zdHJhaW50cyB8fCB7fSk7XG5cdFx0XHRjb25zdHJhaW50cy5WNCA9IHRydWU7XG5cdFx0XHRicmVhaztcblx0XHRkZWZhdWx0OlxuXHR9XG5cdGNvbnN0IFR5cGVDbGFzcyA9IE9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUNsYXNzKGRhdGFUeXBlKTtcblx0cmV0dXJuIG5ldyBUeXBlQ2xhc3MoZm9ybWF0T3B0aW9ucywgY29uc3RyYWludHMpO1xufTtcbmV4cG9ydCBk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