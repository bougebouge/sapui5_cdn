/*
 * ! SAP UI development toolkit for HTML5 (SAPUI5)
        (c) Copyright 2009-2021 SAP SE. All rights reserved
    
 */
sap.ui.define(["sap/ui/test/OpaBuilder","sap/ui/test/Opa5","sap/fe/test/Utils"],function(e,t,i){"use strict";function a(a){a=Array.isArray(arguments[0])?arguments[0]:Array.prototype.slice.call(arguments,0);return i.mergeObjects.apply(i,[{actions:{iNavigateBack:function(){return e.create(this).hasId("backBtn").doPress().description("Navigating back via shell").execute()},iNavigateHome:function(){return e.create(this).hasId("shell-header").do(function(){var e=t.getWindow();e.document.getElementById("shell-header-logo").click()}).description("Pressing Home button in Shell header").execute()},iOpenNavigationMenu:function(){return e.create(this).pollingInterval(1e3).hasId("shellAppTitle").doPress().description("Expanding Shell Navigation Menu").execute()},iNavigateViaMenu:function(t){return e.create(this).hasId("sapUshellNavHierarchyItems").doOnAggregation("items",e.Matchers.properties({title:t}),e.Actions.press()).description(i.formatMessage("Navigating to '{0}' via Shell Navigation Menu",t)).execute()},iPressTile:function(e){return this.waitFor({controlType:"sap.ushell.ui.launchpad.Tile",matchers:function(t){return t.getTarget()==="#"+e},actions:function(e){e.getTileViews()[0].$().trigger("tap")},success:function(a){t.assert.ok(true,i.formatMessage("Clicking on tile with target '{0}'",e))},errorMessage:"Could not find the tile"})},iOpenDefaultValues:function(){return e.create(this).hasId("meAreaHeaderButton").doPress().description("Opening FLP Default Values dialog").execute()},iEnterAValueForUserDefaults:function(t,i){return e.create(this).hasProperties({name:t.field}).isDialogElement().doEnterText(i).description("Entering text in the field '"+t.field+"' with value '"+t+"'").execute()},iSelectAListItem:function(t){return e.create(this).hasType("sap.m.StandardListItem").hasProperties({title:t}).doPress().description("Selecting item: "+t).execute()},iLaunchExtendedParameterDialog:function(t){return e.create(this).hasType("sap.m.Button").isDialogElement().hasProperties({text:"Additional Values"}).doPress().description("Launching Extended Parameter Dialog").execute()},iClickOnButtonWithText:function(t){return e.create(this).hasType("sap.m.Button").hasProperties({text:t}).doPress().description("Clicking on button with text: "+t).execute()},iClickOnButtonWithIcon:function(t){return e.create(this).hasType("sap.m.Button").hasProperties({icon:"sap-icon://"+t}).doPress().description("Clicking on button with icon: "+t).execute()}},assertions:{iSeeFlpDashboard:function(){return e.create(this).hasId("sapUshellDashboardPage").description("Seeing FLP Dashboard").execute()},iShouldSeeTheAppTile:function(t){return e.create(this).hasType("sap.ushell.ui.launchpad.Tile").hasProperties({target:t}).description("Seeing Tile "+t).execute()},iSeeShellNavHierarchyItem:function(t,a,r,n){return e.create(this).viewId(null).hasId("sapUshellNavHierarchyItems").hasAggregationLength("items",r).has(e.Matchers.aggregationAtIndex("items",a-1)).hasProperties({title:t,description:n}).description(i.formatMessage("Checking Navigation Hierarchy Items ({2}): Name={0}, Position={1}, Description={3}",t,a,r,n)).execute()},iSeeShellAppTitle:function(t){return e.create(this).viewId(null).hasId("shellAppTitle").hasProperties({text:t}).description(t+" is the Shell App Title").execute()},iCheckIntentBasedNavigation:function(i,a,r){function n(e,t){try{t.forEach(function(t){if(e.hasOwnProperty(t.property)){if(e[t.property][0]!==t.value){throw"input parameter not equal to actual URL parameter"}}else{throw"input parameter not found in URL"}});return true}catch(e){return false}}return e.create(this).check(function(){var e=t.getWindow().sap.ushell.Container.getService("URLParsing").parseShellHash(t.getWindow().document.location.hash);if(e.semanticObject===i&&e.action===a){return!r||n(e.params,r)?true:false}else{return false}}).error(function(){var e=t.getWindow().document.location.hash,n="Expected properties/values: ";t.assert.ok(false,"Current hash value: "+e);t.assert.ok(false,"Expected semantic object: "+i);t.assert.ok(false,"Expected action: "+a);if(r){r.forEach(function(e){n=n+e.property+"="+e.value+","});t.assert.ok(false,n)}}).success("Navigation successful. SemanticObject: "+i+", Action: "+a+" and all URL parameters are valid.").execute()}}}].concat(a))}return a});
//# sourceMappingURL=Shell.js.map