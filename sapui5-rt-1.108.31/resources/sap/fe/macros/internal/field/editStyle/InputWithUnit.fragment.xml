<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	xmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	template:require="{
							MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
							COMMON: 'sap/fe/macros/CommonHelper',
							FIELD: 'sap/fe/macros/field/FieldHelper',
							ID: 'sap/fe/core/helpers/StableIdHelper',
							UI: 'sap/fe/core/templating/UIFormatters',
							FieldTemplating: 'sap/fe/macros/field/FieldTemplating',
							FE_MODEL: 'sap/fe/core/helpers/ModelHelper'
						 }"
>
	<template:if test="{= FIELD.hasStaticUnitOrCurrency(${property>$Path@})}">
		<template:then>
			<Input
				log:sourcePath="{this>dataSourcePath}"
				core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
				id="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-edit']) : undefined) }"
				value="{this>valueBindingExpression}"
				width="100%"
				fieldWidth="70%"
				description="{= FIELD.getStaticUnitOrCurrency(${property>$Path@}, ${this>formatOptions})}"
				editable="{this>editableExpression}"
				enabled="{this>enabledExpression}"
				required="{this>requiredExpression}"
				change="FieldRuntime.handleChange($controller, $event)"
				liveChange="{= ${this>collaborationEnabled} ? 'FieldRuntime.handleLiveChange' : undefined}"
				textAlign="{parts: [{path:'dataField>'}, {path:'this>formatOptions'}, {path:'property>@@FIELD.getPropertyCollection'}, {path:'this>editModeAsObject'}, {path:'property>@@UI.getConverterContext'}], formatter:'FIELD.getTypeAlignment'}"
				fieldGroupIds="{parts:[{path:'dataField>Value/$Path'}, {path:'entityType>'}], formatter: 'FIELD.getFieldGroupIds'}"
				validateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"
			>
				<template:if test="{this>collaborationEnabled}">
					<layoutData>
						<FlexItemData growFactor="9" />
					</layoutData>
				</template:if>
			</Input>
		</template:then>
		<template:else>
			<template:with path="property>$Path@" helper="FIELD.getUnitOrCurrency" var="unit">
				<Input
					log:sourcePath="{this>dataSourcePath}"
					core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
					id="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-edit']) : undefined) }"
					value="{this>valueBindingExpression}"
					width="{= UI.ifUnitEditable(${property>@@UI.getConverterContext},'70%','100%')}"
					fieldWidth="{= UI.ifUnitEditable(${property>@@UI.getConverterContext}, '100%' , '70%')}"
					description="{this>descriptionBindingExpression}"
					editable="{this>editableExpression}"
					enabled="{this>enabledExpression}"
					required="{this>requiredExpression}"
					change="FieldRuntime.handleChange($controller, $event)"
					liveChange="{= ${this>collaborationEnabled} ? 'FieldRuntime.handleLiveChange' : undefined}"
					textAlign="{parts: [{path:'dataField>'}, {path:'this>formatOptions'}, {path:'property>@@FIELD.getPropertyCollection'}, {path:'this>editModeAsObject'}, {path:'property>@@UI.getConverterContext'}], formatter:'FIELD.getTypeAlignment'}"
					fieldGroupIds="{parts:[{path:'dataField>Value/$Path'}, {path:'entityType>'}], formatter: 'FIELD.getFieldGroupIds'}"
					validateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"
				>
					<template:if test="{this>collaborationEnabled}">
						<layoutData>
							<FlexItemData growFactor="9" />
						</layoutData>
					</template:if>
				</Input>
				<template:if test="{= (${this>formatOptions/measureDisplayMode} !== 'Hidden')}">
					<template:then>
						<Input
							log:sourcePath="{this>dataSourcePath}"
							core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
							id="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-unitEdit']) : undefined) }"
							value="{this>unitBindingExpression}"
							width="30%"
							editable="{= (${this>formatOptions/measureDisplayMode} === 'ReadOnly' ? 'false' : ${this>unitEditable}) }"
							enabled="{this>enabledExpression}"
							change="FieldRuntime.handleChange($controller, $event)"
							liveChange="{= ${this>collaborationEnabled} ? 'FieldRuntime.handleLiveChange' : undefined}"
							textAlign="{parts: [{path:'dataField>'}, {path:'this>formatOptions'}, {path:'property>@@FIELD.getPropertyCollection'}, {path:'this>editModeAsObject'}, {path:'property>@@UI.getConverterContext'}], formatter:'FIELD.getTypeAlignment'}"
							fieldGroupIds="{parts:[{path:'dataField>Value/$Path'}, {path:'entityType>'}], formatter: 'FIELD.getFieldGroupIds'}"
							validateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"
							visible="{= UI.ifUnitEditable(${property>@@UI.getConverterContext},true,false)}"
						>
							<template:if test="{this>collaborationEnabled}">
								<layoutData>
									<FlexItemData growFactor="9" />
								</layoutData>
							</template:if>
						</Input>
					</template:then>
				</template:if>
			</template:with>
		</template:else>
	</template:if>
</core:FragmentDefinition>
