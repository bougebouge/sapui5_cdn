/*!
 * SAPUI5
    (c) Copyright 2009-2021 SAP SE. All rights reserved
  
 */
/*global sap*/
sap.ui.define(
[
"sap/sac/df/firefly/ff2200.ui","sap/sac/df/firefly/ff2240.ui.program","sap/sac/df/firefly/ff4200.olap.api","sap/sac/df/firefly/ff4220.olap.catalog.api","sap/sac/df/firefly/ff4305.olap.model"
],
function(oFF)
{
"use strict";

oFF.OuSetup = {

	staticSetup:function()
	{
			oFF.COuObject.staticSetupObject();
		oFF.OuSetupEnvironment.staticSetup();
		oFF.OuSetupLocalization.staticSetup();
		oFF.OuSetupIntegration.staticSetup();
		oFF.OuSetupListener.staticSetup();
		oFF.OuSetupMessages.staticSetup();
		oFF.OuSetupProperties.staticSetup();
		oFF.OuSetupModel.staticSetup();
		oFF.OuSetupRendering.staticSetup();
		oFF.OuSetupView.staticSetup();
		oFF.OuSetupDialog.staticSetup();
	}
};

oFF.OuSetupDialog = {

	staticSetup:function()
	{
			oFF.COuDialogButtons.staticSetupButtons();
	}
};

oFF.OuSetupEnvironment = {

	staticSetup:function() {}
};

oFF.OuSetupLocalization = {

	staticSetup:function()
	{
			oFF.OuLocalization.staticSetupLocalization();
		oFF.OuLocalizationTextsConditions.staticSetupConditionsTexts();
		oFF.OuLocalizationMessagesConditions.staticSetupConditionsMessages();
	}
};

oFF.OuSetupIntegration = {

	staticSetup:function()
	{
			oFF.COuEntryPointType.staticSetupEvent();
	}
};

oFF.OuListenerAccess = function() {};
oFF.OuListenerAccess.prototype = new oFF.XObject();
oFF.OuListenerAccess.prototype._ff_c = "OuListenerAccess";

oFF.OuListenerAccess.prototype.m_tListeners = null;
oFF.OuListenerAccess.prototype.setup = function()
{
	oFF.XObject.prototype.setup.call( this );
	this.m_tListeners = oFF.XList.create();
};
oFF.OuListenerAccess.prototype.getListeners = function()
{
	var ltRemoveListeners = oFF.XList.create();
	var loListener;
	var loListenerIterator = this.m_tListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		if (loListener.isReleased())
		{
			ltRemoveListeners.add(loListener);
		}
	}
	loListenerIterator = ltRemoveListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		this.m_tListeners.removeElement(loListener);
	}
	return this.m_tListeners;
};
oFF.OuListenerAccess.prototype.addListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	if (this.m_tListeners.contains(oListener))
	{
		return;
	}
	this.m_tListeners.add(oListener);
};
oFF.OuListenerAccess.prototype.removeListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	this.m_tListeners.removeElement(oListener);
};
oFF.OuListenerAccess.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_tListeners = oFF.XObjectExt.release(this.m_tListeners);
};

oFF.OuSetupListener = {

	staticSetup:function() {}
};

oFF.OuMessage = function() {};
oFF.OuMessage.prototype = new oFF.XObject();
oFF.OuMessage.prototype._ff_c = "OuMessage";

oFF.OuMessage.sCreateMessage = function(severity, oMessage, tReplacements, oAddInfo)
{
	var loInstance = new oFF.OuMessage();
	loInstance.setupMessage(severity, oMessage, oMessage.getId(), oMessage.getI18nText(), tReplacements, oAddInfo);
	return loInstance;
};
oFF.OuMessage.sCreateMessageSimple = function(severity, id, text, tReplacements, oAddInfo)
{
	var loInstance = new oFF.OuMessage();
	loInstance.setupMessage(severity, null, id, text, tReplacements, oAddInfo);
	return loInstance;
};
oFF.OuMessage.prototype.m_oI18nMessage = null;
oFF.OuMessage.prototype.m_uid = null;
oFF.OuMessage.prototype.m_severity = null;
oFF.OuMessage.prototype.m_id = null;
oFF.OuMessage.prototype.m_text = null;
oFF.OuMessage.prototype.m_tReplacements = null;
oFF.OuMessage.prototype.m_oAddInfo = null;
oFF.OuMessage.prototype.setupMessage = function(severity, oMessage, id, text, tReplacements, oAddInfo)
{
	oFF.XObject.prototype.setup.call( this );
	this.m_oI18nMessage = oMessage;
	this.m_severity = severity;
	this.m_id = oFF.notNull(id) ? id : this.m_oI18nMessage.getId();
	this.m_text = oFF.notNull(text) ? text : this.m_oI18nMessage.getI18nText();
	this.m_tReplacements = oFF.XListOfString.create();
	if (oFF.notNull(tReplacements))
	{
		var loReplacementIterator = tReplacements.getIterator();
		while (loReplacementIterator.hasNext())
		{
			var lReplacement = loReplacementIterator.next();
			if (oFF.isNull(lReplacement))
			{
				continue;
			}
			this.m_tReplacements.add(lReplacement);
		}
	}
	this.m_oAddInfo = oAddInfo;
	this.m_uid = oFF.XStringUtils.concatenate2(this.m_id, this.m_tReplacements.toString());
};
oFF.OuMessage.prototype.getUniqueId = function()
{
	return this.m_uid;
};
oFF.OuMessage.prototype.getId = function()
{
	if (oFF.notNull(this.m_oI18nMessage))
	{
		return this.m_oI18nMessage.getId();
	}
	else
	{
		return this.m_id;
	}
};
oFF.OuMessage.prototype.getSeverity = function()
{
	return this.m_severity;
};
oFF.OuMessage.prototype.getText = function()
{
	if (oFF.notNull(this.m_oI18nMessage))
	{
		if (this.m_tReplacements.isEmpty())
		{
			return this.m_oI18nMessage.getI18nText();
		}
		else
		{
			return this.m_oI18nMessage.getI18nTextWithPlaceHolders(this.m_tReplacements);
		}
	}
	else
	{
		return this.m_text;
	}
};
oFF.OuMessage.prototype.getReplacements = function()
{
	return this.m_tReplacements;
};
oFF.OuMessage.prototype.getAddInfo = function()
{
	return this.m_oAddInfo;
};
oFF.OuMessage.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oI18nMessage = oFF.XObjectExt.release(this.m_oI18nMessage);
	this.m_uid = null;
	this.m_severity = null;
	this.m_id = null;
	this.m_text = null;
	this.m_tReplacements = oFF.XObjectExt.release(this.m_tReplacements);
	this.m_oAddInfo = oFF.XObjectExt.release(this.m_oAddInfo);
};

oFF.OuSetupMessages = {

	staticSetup:function() {}
};

oFF.OuSetupModel = {

	staticSetup:function()
	{
			oFF.COuPropertySource.staticSetupSourceProperty();
		oFF.COuPropertyModel.staticSetupModelProperty();
		oFF.OuModelAQuery.staticSetupQueryModel();
		oFF.OuModelADimension.staticSetupQueryDimension();
		oFF.OuModelADimensionMember.staticSetupQueryDimensionMember();
		oFF.OuModelACondition.staticSetupQueryCondition();
		oFF.OuModelAConditionThreshold.staticSetupQueryConditionThreshold();
		oFF.OuModelConditions.staticSetupConditions();
		oFF.OuModelCondition.staticSetupCondition();
		oFF.OuModelConditionThresholds.staticSetupConditionThresholds();
		oFF.OuModelConditionThreshold.staticSetupConditionThreshold();
		oFF.OuModelConditionEvaluation.staticSetupConditionEvaluation();
	}
};

oFF.OuSetupProperties = {

	staticSetup:function()
	{
			oFF.COuPropertyType.staticSetupPropertyType();
		oFF.COuProperty.staticSetupProperty();
	}
};

oFF.OuEvent = function() {};
oFF.OuEvent.prototype = new oFF.XObject();
oFF.OuEvent.prototype._ff_c = "OuEvent";

oFF.OuEvent.sCreateEvent = function(oRenderingObject, controlName, event, oControlEvent)
{
	var loInstance = new oFF.OuEvent();
	loInstance.setupEvent(oRenderingObject, controlName, event, oControlEvent);
	return loInstance;
};
oFF.OuEvent.prototype.m_oRenderingObject = null;
oFF.OuEvent.prototype.m_controlName = null;
oFF.OuEvent.prototype.m_event = null;
oFF.OuEvent.prototype.m_oControlEvent = null;
oFF.OuEvent.prototype.setupEvent = function(oRenderingObject, controlName, event, oControlEvent)
{
	oFF.XObject.prototype.setup.call( this );
	this.m_oRenderingObject = oRenderingObject;
	this.m_controlName = controlName;
	this.m_event = event;
	this.m_oControlEvent = oControlEvent;
};
oFF.OuEvent.prototype.getRenderingObject = function()
{
	return this.m_oRenderingObject;
};
oFF.OuEvent.prototype.getControlName = function()
{
	return this.m_controlName;
};
oFF.OuEvent.prototype.getEvent = function()
{
	return this.m_event;
};
oFF.OuEvent.prototype.getControlEvent = function()
{
	return this.m_oControlEvent;
};
oFF.OuEvent.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oRenderingObject = null;
	this.m_controlName = null;
	this.m_event = null;
	this.m_oControlEvent = oFF.XObjectExt.release(this.m_oControlEvent);
};

oFF.OuSetupRendering = {

	staticSetup:function()
	{
			oFF.COuPropertyRenderingObject.staticSetupRenderingObjectProperty();
		oFF.COuEvent.staticSetupEvent();
	}
};

oFF.OuSetupView = {

	staticSetup:function()
	{
			oFF.COuDisplayMode.staticSetupDisplayMode();
	}
};

oFF.AldEntryPoint = function() {};
oFF.AldEntryPoint.prototype = new oFF.XObject();
oFF.AldEntryPoint.prototype._ff_c = "AldEntryPoint";

oFF.AldEntryPoint.createEntryPoint = function(application)
{
	var obj = new oFF.AldEntryPoint();
	obj.setupEntryPoint(application);
	return obj;
};
oFF.AldEntryPoint.prototype.m_aldController = null;
oFF.AldEntryPoint.prototype.setupEntryPoint = function(application)
{
	var uiMgr = application.getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	var context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_aldController = oFF.AldFactory.createFactory(application, context).newAldDialogInstance();
};
oFF.AldEntryPoint.prototype.openAldDialog = function(title, queryModel, listener)
{
	this.m_aldController.openDialog(title, queryModel, listener);
};
oFF.AldEntryPoint.prototype.closeAldDialog = function()
{
	this.m_aldController.closeDialog();
};
oFF.AldEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_aldController = oFF.XObjectExt.release(this.m_aldController);
};

oFF.AldFactory = function() {};
oFF.AldFactory.prototype = new oFF.XObject();
oFF.AldFactory.prototype._ff_c = "AldFactory";

oFF.AldFactory.createFactory = function(application, context)
{
	var obj = new oFF.AldFactory();
	obj.m_application = application;
	obj.m_context = context;
	return obj;
};
oFF.AldFactory.prototype.m_context = null;
oFF.AldFactory.prototype.m_application = null;
oFF.AldFactory.prototype.newAldDialogInstance = function()
{
	return oFF.AldControllerAxisLayout.create(this.m_application, this.m_context);
};

oFF.OlapUiCatalogAbstract = function() {};
oFF.OlapUiCatalogAbstract.prototype = new oFF.XObject();
oFF.OlapUiCatalogAbstract.prototype._ff_c = "OlapUiCatalogAbstract";

oFF.OlapUiCatalogAbstract.s_syncType = null;
oFF.OlapUiCatalogAbstract.prototype.m_valueRequestObject = null;
oFF.OlapUiCatalogAbstract.prototype.setupExt = function(valueRequestObject)
{
	this.m_valueRequestObject = valueRequestObject;
	if (oFF.isNull(oFF.OlapUiCatalogAbstract.s_syncType))
	{
		oFF.OlapUiCatalogAbstract.s_syncType = oFF.SyncType.NON_BLOCKING;
	}
};
oFF.OlapUiCatalogAbstract.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_valueRequestObject = null;
};

oFF.OlapUiHierarchyCatalogAbstract = function() {};
oFF.OlapUiHierarchyCatalogAbstract.prototype = new oFF.XObject();
oFF.OlapUiHierarchyCatalogAbstract.prototype._ff_c = "OlapUiHierarchyCatalogAbstract";

oFF.OlapUiHierarchyCatalogAbstract.s_syncType = null;
oFF.OlapUiHierarchyCatalogAbstract.prototype.m_valueRequestObject = null;
oFF.OlapUiHierarchyCatalogAbstract.prototype.setupExt = function(valueRequestObject)
{
	this.m_valueRequestObject = valueRequestObject;
	if (oFF.isNull(oFF.OlapUiHierarchyCatalogAbstract.s_syncType))
	{
		oFF.OlapUiHierarchyCatalogAbstract.s_syncType = oFF.SyncType.NON_BLOCKING;
	}
};
oFF.OlapUiHierarchyCatalogAbstract.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_valueRequestObject = null;
};

oFF.CbFactory = function() {};
oFF.CbFactory.prototype = new oFF.XObject();
oFF.CbFactory.prototype._ff_c = "CbFactory";

oFF.CbFactory.createFactory = function(context)
{
	var obj = new oFF.CbFactory();
	obj.m_context = context;
	return obj;
};
oFF.CbFactory.prototype.m_context = null;
oFF.CbFactory.prototype.newClipboardDialogInstance = function()
{
	return oFF.CbController.create(this.m_context);
};

oFF.ClipboardHelperForFdItem = function() {};
oFF.ClipboardHelperForFdItem.prototype = new oFF.XObject();
oFF.ClipboardHelperForFdItem.prototype._ff_c = "ClipboardHelperForFdItem";

oFF.ClipboardHelperForFdItem.createHelper = function(localization)
{
	var obj = new oFF.ClipboardHelperForFdItem();
	obj.m_i18n = localization;
	return obj;
};
oFF.ClipboardHelperForFdItem.prototype.m_i18n = null;
oFF.ClipboardHelperForFdItem.prototype.parseFromClipboard = function(text, useKey)
{
	var items = oFF.XLinkedHashMapByString.create();
	if (oFF.XStringUtils.isNullOrEmpty(text))
	{
		return oFF.XList.create();
	}
	var rows = oFF.DialogGridParser.deserializeWithDefault(text);
	var size = rows.size();
	for (var i = 0; i < size; i++)
	{
		var row = rows.get(i);
		if (row.hasElements())
		{
			var key = row.get(0);
			var value = oFF.FdSimpleItem.create(useKey ? key : null, useKey ? null : key, null);
			items.put(oFF.XString.toLowerCase(key), value);
		}
	}
	return oFF.XCollectionUtils.createListCopy(items.getValuesAsReadOnlyList());
};
oFF.ClipboardHelperForFdItem.prototype.getValueGrid = function(values)
{
	var rows = oFF.XList.create();
	for (var i = 0; i < values.size(); i++)
	{
		var value = values.get(i);
		var firstDisplayKey = value.getDisplayKey();
		if (oFF.isNull(firstDisplayKey))
		{
			continue;
		}
		var columns = oFF.XListOfString.create();
		if (oFF.XString.isEqual(firstDisplayKey, ""))
		{
			columns.add(this.mapToCbValue(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_NO_VALUE)));
		}
		else
		{
			columns.add(firstDisplayKey);
		}
		rows.add(columns);
	}
	return rows;
};
oFF.ClipboardHelperForFdItem.prototype.mapToCbValue = function(value)
{
	if (!oFF.XString.startsWith(value, "(") && !oFF.XString.endsWith(value, ")"))
	{
		return oFF.XStringUtils.concatenate3("(", value, ")");
	}
	return value;
};
oFF.ClipboardHelperForFdItem.prototype.releaseObject = function()
{
	this.m_i18n = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.ClipboardHelperForVdValue = function() {};
oFF.ClipboardHelperForVdValue.prototype = new oFF.XObject();
oFF.ClipboardHelperForVdValue.prototype._ff_c = "ClipboardHelperForVdValue";

oFF.ClipboardHelperForVdValue.createHelper = function(localization)
{
	var obj = new oFF.ClipboardHelperForVdValue();
	obj.m_i18n = localization;
	return obj;
};
oFF.ClipboardHelperForVdValue.prototype.m_i18n = null;
oFF.ClipboardHelperForVdValue.prototype.getValueGrid = function(values)
{
	var rows = oFF.XList.create();
	for (var i = 0; i < values.size(); i++)
	{
		var value = values.get(i);
		var operator = value.getOperator();
		var firstDisplayKey = value.getFirstOperand().getDisplayKey();
		var secondDisplayKey = value.getSecondOperand().getDisplayKey();
		if (oFF.isNull(operator) || oFF.isNull(firstDisplayKey))
		{
			continue;
		}
		var columns = oFF.XListOfString.create();
		if (operator.isNullOperator())
		{
			columns.add(this.mapToCbValue(operator.getShortText(this.m_i18n)));
		}
		else if (oFF.XString.isEqual(firstDisplayKey, ""))
		{
			columns.add(this.mapToCbValue(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_NO_VALUE)));
		}
		else
		{
			columns.add(firstDisplayKey);
		}
		if (oFF.XStringUtils.isNotNullAndNotEmpty(secondDisplayKey))
		{
			columns.add(secondDisplayKey);
		}
		rows.add(columns);
	}
	return rows;
};
oFF.ClipboardHelperForVdValue.prototype.parseFromClipboard = function(text, supportsNotNull, supportsBetween)
{
	var values = oFF.XLinkedHashMapByString.create();
	if (oFF.XStringUtils.isNullOrEmpty(text))
	{
		return oFF.XList.create();
	}
	var cbNullValue = this.mapToCbValue(oFF.VdComparisonOperator.IS_NULL.getShortText(this.m_i18n));
	var cbNotNullValue = this.mapToCbValue(oFF.VdComparisonOperator.IS_NOT_NULL.getShortText(this.m_i18n));
	var cbNoValue = this.mapToCbValue(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_NO_VALUE));
	var rows = oFF.DialogGridParser.deserializeWithDefault(text);
	var size = rows.size();
	for (var i = 0; i < size; i++)
	{
		var row = rows.get(i);
		if (row.hasElements())
		{
			var value = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, null, null);
			var displayKey1 = row.get(0);
			if (oFF.XString.isEqual(displayKey1, cbNullValue))
			{
				value.setOperator(oFF.VdComparisonOperator.IS_NULL);
			}
			else if (oFF.XString.isEqual(displayKey1, cbNotNullValue))
			{
				if (!supportsNotNull)
				{
					continue;
				}
				value.setOperator(oFF.VdComparisonOperator.IS_NOT_NULL);
			}
			else if (oFF.XString.isEqual(displayKey1, cbNoValue))
			{
				value.setFirstOperand(oFF.FdSimpleItem.create(null, "", null));
			}
			else
			{
				value.setFirstOperand(oFF.FdItemFactory.createItemByKey(null, displayKey1, null));
				if (row.size() > 1 && supportsBetween)
				{
					value.setSecondOperand(oFF.FdItemFactory.createItemByKey(null, row.get(1), null));
					value.setOperator(oFF.VdComparisonOperator.BETWEEN);
					value.updateOperandOrder();
				}
			}
			values.put(this.createUniqueValueKey(value), value);
		}
	}
	return oFF.XCollectionUtils.createListCopy(values.getValuesAsReadOnlyList());
};
oFF.ClipboardHelperForVdValue.prototype.createUniqueValueKey = function(value)
{
	var firstOperand = value.getFirstOperand();
	var secondOperand = value.getSecondOperand();
	var displayKey1 = firstOperand.getDisplayKey();
	var displayKey2 = oFF.notNull(secondOperand) ? secondOperand.getDisplayKey() : null;
	return oFF.XStringUtils.concatenate3(value.getOperator().getName(), oFF.XString.toLowerCase(displayKey1), oFF.XString.toLowerCase(displayKey2));
};
oFF.ClipboardHelperForVdValue.prototype.mapToCbValue = function(value)
{
	if (!oFF.XString.startsWith(value, "(") && !oFF.XString.endsWith(value, ")"))
	{
		return oFF.XStringUtils.concatenate3("(", value, ")");
	}
	return value;
};
oFF.ClipboardHelperForVdValue.prototype.releaseObject = function()
{
	this.m_i18n = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.CbLayout = function() {};
oFF.CbLayout.prototype = new oFF.XObject();
oFF.CbLayout.prototype._ff_c = "CbLayout";

oFF.CbLayout.create = function()
{
	return new oFF.CbLayout();
};
oFF.CbLayout.prototype.m_layout = null;
oFF.CbLayout.prototype.m_infoSection = null;
oFF.CbLayout.prototype.m_infoLabel = null;
oFF.CbLayout.prototype.m_textArea = null;
oFF.CbLayout.prototype.buildOlapDialogUi = function(genesis)
{
	var root = this.buildTree(genesis);
	genesis.setRoot(root);
};
oFF.CbLayout.prototype.buildTree = function(genesis)
{
	this.m_layout = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_layout.setName("ClipboardWrapper");
	this.m_infoSection = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_infoSection.setDirection(oFF.UiFlexDirection.ROW);
	var infoIco = genesis.newControl(oFF.UiType.ICON);
	infoIco.setIcon("message-information");
	infoIco.setEnabled(false);
	this.m_infoSection.addItem(infoIco);
	var spacer = genesis.newControl(oFF.UiType.SPACER);
	spacer.setWidth(oFF.UiCssLength.createExt(5, oFF.UiCssSizeUnit.PIXEL));
	this.m_infoSection.addItem(spacer);
	this.m_infoLabel = genesis.newControl(oFF.UiType.LABEL);
	this.m_infoLabel.setName("ClipboardInfoLbl");
	this.m_infoLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	this.m_infoLabel.setFontStyle(oFF.UiFontStyle.ITALIC);
	this.m_infoSection.addItem(this.m_infoLabel);
	this.m_layout.addItem(this.m_infoSection);
	var spacer2 = genesis.newControl(oFF.UiType.SPACER);
	spacer2.setHeight(oFF.UiCssLength.createExt(10, oFF.UiCssSizeUnit.PIXEL));
	this.m_layout.addItem(spacer2);
	this.m_textArea = genesis.newControl(oFF.UiType.TEXT_AREA);
	this.m_textArea.setName("ClipboardDialogTextArea");
	this.m_textArea.setWidth(oFF.UiCssLength.create("100%"));
	this.m_textArea.setHeight(oFF.UiCssLength.createExt(550, oFF.UiCssSizeUnit.PIXEL));
	this.m_layout.addItem(this.m_textArea);
	return this.m_layout;
};
oFF.CbLayout.prototype.getInfoSection = function()
{
	return this.m_infoSection;
};
oFF.CbLayout.prototype.getInfoLabel = function()
{
	return this.m_infoLabel;
};
oFF.CbLayout.prototype.getTextArea = function()
{
	return this.m_textArea;
};

oFF.CmtFactory = function() {};
oFF.CmtFactory.prototype = new oFF.XObject();
oFF.CmtFactory.prototype._ff_c = "CmtFactory";

oFF.CmtFactory.createFactory = function(context)
{
	var obj = new oFF.CmtFactory();
	obj.m_context = context;
	return obj;
};
oFF.CmtFactory.prototype.m_context = null;
oFF.CmtFactory.prototype.newCommentingDialogInstance = function()
{
	return oFF.CmtController.create(this.m_context);
};

oFF.CmtLayout = function() {};
oFF.CmtLayout.prototype = new oFF.XObject();
oFF.CmtLayout.prototype._ff_c = "CmtLayout";

oFF.CmtLayout.create = function()
{
	return new oFF.CmtLayout();
};
oFF.CmtLayout.prototype.m_layout = null;
oFF.CmtLayout.prototype.m_infoSection = null;
oFF.CmtLayout.prototype.m_infoLabel = null;
oFF.CmtLayout.prototype.m_textArea = null;
oFF.CmtLayout.prototype.buildOlapDialogUi = function(genesis)
{
	var root = this.buildTree(genesis);
	genesis.setRoot(root);
};
oFF.CmtLayout.prototype.buildTree = function(genesis)
{
	this.m_layout = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_layout.setName("CmtDialogWrapper");
	this.m_infoSection = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_infoSection.setDirection(oFF.UiFlexDirection.ROW);
	this.m_infoLabel = genesis.newControl(oFF.UiType.LABEL);
	this.m_infoLabel.setName("CommentingInfoLbl");
	this.m_infoLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	this.m_infoSection.addItem(this.m_infoLabel);
	this.m_layout.addItem(this.m_infoSection);
	this.m_textArea = genesis.newControl(oFF.UiType.TEXT_AREA);
	this.m_textArea.setName("CommentingTextArea");
	this.m_textArea.setWidth(oFF.UiCssLength.create("100%"));
	this.m_textArea.setHeight(oFF.UiCssLength.createExt(550, oFF.UiCssSizeUnit.PIXEL));
	this.m_layout.addItem(this.m_textArea);
	return this.m_layout;
};
oFF.CmtLayout.prototype.getInfoSection = function()
{
	return this.m_infoSection;
};
oFF.CmtLayout.prototype.getInfoLabel = function()
{
	return this.m_infoLabel;
};
oFF.CmtLayout.prototype.getTextArea = function()
{
	return this.m_textArea;
};

oFF.OuCurrencyConversionDialogHelper = function() {};
oFF.OuCurrencyConversionDialogHelper.prototype = new oFF.XObject();
oFF.OuCurrencyConversionDialogHelper.prototype._ff_c = "OuCurrencyConversionDialogHelper";

oFF.OuCurrencyConversionDialogHelper.EXCEPTION_NO_TRANSLATION_MANAGER = "A Currency Translation Manager must be provided!";
oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME = "CurrencyConversionDialog_EmptyItem";
oFF.OuCurrencyConversionDialogHelper.create = function(currencyTranslationManager)
{
	if (oFF.isNull(currencyTranslationManager))
	{
		throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialogHelper.EXCEPTION_NO_TRANSLATION_MANAGER);
	}
	var ccDialogHelper = new oFF.OuCurrencyConversionDialogHelper();
	ccDialogHelper.m_currencyTranslationManager = currencyTranslationManager;
	ccDialogHelper.setupCurrencyTranslations();
	return ccDialogHelper;
};
oFF.OuCurrencyConversionDialogHelper.prototype.m_availableCurrencies = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_availableCurrencyTranslations = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_translationsApplicableToAllCurrencies = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_currencyMap = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_translationMap = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_currencyToTranslationMap = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_translationToCurrencyMap = null;
oFF.OuCurrencyConversionDialogHelper.prototype.m_currencyTranslationManager = null;
oFF.OuCurrencyConversionDialogHelper.prototype.initInstanceVariables = function()
{
	this.m_availableCurrencies = oFF.XList.create();
	this.m_availableCurrencyTranslations = oFF.XList.create();
	this.m_translationsApplicableToAllCurrencies = oFF.XList.create();
	this.m_currencyMap = oFF.XHashMapByString.create();
	this.m_translationMap = oFF.XHashMapByString.create();
	this.m_currencyToTranslationMap = oFF.XHashMapByString.create();
	this.m_translationToCurrencyMap = oFF.XHashMapByString.create();
};
oFF.OuCurrencyConversionDialogHelper.prototype.setupCurrencyTranslations = function()
{
	this.initInstanceVariables();
	this.m_availableCurrencies = this.m_currencyTranslationManager.getAvailableCurrencies();
	if (oFF.isNull(this.m_availableCurrencies))
	{
		this.m_availableCurrencies = oFF.XList.create();
	}
	this.m_availableCurrencyTranslations = this.m_currencyTranslationManager.getAvailableCurrencyTranslationObjects();
	if (oFF.isNull(this.m_availableCurrencyTranslations))
	{
		this.m_availableCurrencyTranslations = oFF.XList.create();
	}
	this.setupSimpleLookups();
	this.setupCrossLookups();
};
oFF.OuCurrencyConversionDialogHelper.prototype.setupSimpleLookups = function()
{
	if (oFF.notNull(this.m_availableCurrencies) && this.m_availableCurrencies.size() > 0)
	{
		var currencyStream = oFF.XStream.of(this.m_availableCurrencies);
		this.m_currencyMap = currencyStream.collect(oFF.XStreamCollector.toMap( function(i1){
			return i1.getName();
		}.bind(this),  function(i2){
			return i2;
		}.bind(this)));
	}
	if (oFF.notNull(this.m_availableCurrencyTranslations) && this.m_availableCurrencyTranslations.size() > 0)
	{
		var translationStream = oFF.XStream.of(this.m_availableCurrencyTranslations);
		this.m_translationMap = translationStream.collect(oFF.XStreamCollector.toMap( function(i3){
			return i3.getName();
		}.bind(this),  function(i4){
			return i4;
		}.bind(this)));
	}
};
oFF.OuCurrencyConversionDialogHelper.prototype.setupCrossLookups = function()
{
	oFF.XStream.of(this.m_availableCurrencyTranslations).forEach( function(currencyTranslation){
		var currencyName = currencyTranslation.getFixedTargetCurrency();
		if (oFF.XStringUtils.isNullOrEmpty(currencyName))
		{
			this.m_translationsApplicableToAllCurrencies.add(currencyTranslation);
		}
		else
		{
			if (this.m_currencyToTranslationMap.containsKey(currencyName))
			{
				this.m_currencyToTranslationMap.getByKey(currencyName).add(currencyTranslation);
			}
			else
			{
				var translationList = oFF.XList.create();
				translationList.add(currencyTranslation);
				this.m_currencyToTranslationMap.put(currencyName, translationList);
			}
			var currencyTranslationName = currencyTranslation.getName();
			var currency = this.m_currencyMap.getByKey(currencyName);
			if (this.m_translationToCurrencyMap.containsKey(currencyTranslationName))
			{
				this.m_translationToCurrencyMap.getByKey(currencyTranslationName).add(currency);
			}
			else
			{
				var currencyList = oFF.XList.create();
				currencyList.add(currency);
				this.m_translationToCurrencyMap.put(currencyTranslationName, currencyList);
			}
		}
	}.bind(this));
};
oFF.OuCurrencyConversionDialogHelper.prototype.getAvailableCurrencies = function()
{
	return this.m_availableCurrencies;
};
oFF.OuCurrencyConversionDialogHelper.prototype.getAvailableCurrencyTranslations = function()
{
	return this.m_availableCurrencyTranslations;
};
oFF.OuCurrencyConversionDialogHelper.prototype.getCurrencyByName = function(currencyName)
{
	return this.m_currencyMap.getByKey(currencyName);
};
oFF.OuCurrencyConversionDialogHelper.prototype.getCurrencyTranslationByName = function(translationName)
{
	return this.m_translationMap.getByKey(translationName);
};
oFF.OuCurrencyConversionDialogHelper.prototype.getCurrenciesOfTranslation = function(translationName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(translationName) && !oFF.XString.isEqual(translationName, oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME))
	{
		var currencyList = this.m_translationToCurrencyMap.getByKey(translationName);
		if (oFF.notNull(currencyList))
		{
			return this.m_translationToCurrencyMap.getByKey(translationName);
		}
	}
	return this.getAvailableCurrencies();
};
oFF.OuCurrencyConversionDialogHelper.prototype.getTranslationsOfCurrency = function(currencyName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(currencyName) && !oFF.XString.isEqual(currencyName, oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME))
	{
		var translationList = this.m_currencyToTranslationMap.getByKey(currencyName);
		var currencyList = oFF.notNull(translationList) ? this.m_currencyToTranslationMap.getByKey(currencyName).createListCopy() : oFF.XList.create();
		currencyList.addAll(this.m_translationsApplicableToAllCurrencies);
		return currencyList;
	}
	else
	{
		return this.getAvailableCurrencyTranslations();
	}
};
oFF.OuCurrencyConversionDialogHelper.prototype.isEmptyItemValue = function(value)
{
	return oFF.XStringUtils.isNullOrEmpty(value) || oFF.XString.isEqual(value, oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME);
};
oFF.OuCurrencyConversionDialogHelper.prototype.releaseObject = function()
{
	this.m_availableCurrencies = null;
	this.m_availableCurrencyTranslations = null;
	this.m_translationsApplicableToAllCurrencies = oFF.XObjectExt.release(this.m_translationsApplicableToAllCurrencies);
	this.m_currencyMap = oFF.XObjectExt.release(this.m_currencyMap);
	this.m_translationMap = oFF.XObjectExt.release(this.m_translationMap);
	this.m_currencyToTranslationMap = oFF.XObjectExt.release(this.m_currencyToTranslationMap);
	this.m_translationToCurrencyMap = oFF.XObjectExt.release(this.m_translationToCurrencyMap);
	this.m_currencyTranslationManager = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.DataCellModel = function() {};
oFF.DataCellModel.prototype = new oFF.XObject();
oFF.DataCellModel.prototype._ff_c = "DataCellModel";

oFF.DataCellModel.create = function()
{
	return new oFF.DataCellModel();
};
oFF.DataCellModel.prototype.m_decimalSelections = null;
oFF.DataCellModel.prototype.m_scalingSelections = null;
oFF.DataCellModel.prototype.m_disaggregationModeSelections = null;
oFF.DataCellModel.prototype.m_resultCalculationSelections = null;
oFF.DataCellModel.prototype.m_singleValueCalculationSelections = null;
oFF.DataCellModel.prototype.m_decimal = null;
oFF.DataCellModel.prototype.m_scaling = null;
oFF.DataCellModel.prototype.m_valueType = null;
oFF.DataCellModel.prototype.m_disaggregationModeOnModel = null;
oFF.DataCellModel.prototype.m_resultCalculationOnModel = null;
oFF.DataCellModel.prototype.m_singleValueCalculationOnModel = null;
oFF.DataCellModel.prototype.m_decimalDefaultAsMetadata = false;
oFF.DataCellModel.prototype.m_decimalDefaultvalue = null;
oFF.DataCellModel.prototype.m_scalingDefaultAsMetadata = false;
oFF.DataCellModel.prototype.m_scalingDefaultvalue = null;
oFF.DataCellModel.prototype.m_disaggregationModeDefaultAsMetadata = false;
oFF.DataCellModel.prototype.m_disaggregationModeDefaultvalue = null;
oFF.DataCellModel.prototype.setModelValues = function(decimalSelections, scalingSelections, resultCalculationSelections, singleValueCalculationSelections, decimal, scalingFactor, resultCalculationOnModel, singleValueCalculationOnModel, valueType, disaggregationModeSelections, disaggregationModeOnModel)
{
	this.m_decimalSelections = decimalSelections;
	this.m_scalingSelections = scalingSelections;
	this.m_resultCalculationSelections = resultCalculationSelections;
	this.m_singleValueCalculationSelections = singleValueCalculationSelections;
	this.m_decimal = decimal;
	this.m_scaling = scalingFactor;
	this.m_resultCalculationOnModel = resultCalculationOnModel;
	this.m_singleValueCalculationOnModel = singleValueCalculationOnModel;
	this.m_valueType = valueType;
	this.m_disaggregationModeSelections = disaggregationModeSelections;
	this.m_disaggregationModeOnModel = disaggregationModeOnModel;
};
oFF.DataCellModel.prototype.getDecimalSelections = function()
{
	return this.m_decimalSelections;
};
oFF.DataCellModel.prototype.getScalingSelections = function()
{
	return this.m_scalingSelections;
};
oFF.DataCellModel.prototype.getResultCalculationSelections = function()
{
	return this.m_resultCalculationSelections;
};
oFF.DataCellModel.prototype.getSingleValueCalculationSelections = function()
{
	return this.m_singleValueCalculationSelections;
};
oFF.DataCellModel.prototype.getDisaggregationModeSelections = function()
{
	return this.m_disaggregationModeSelections;
};
oFF.DataCellModel.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.DataCellModel.prototype.getDecimal = function()
{
	return this.m_decimal;
};
oFF.DataCellModel.prototype.getScaling = function()
{
	return this.m_scaling;
};
oFF.DataCellModel.prototype.getDisaggregationModeOnModel = function()
{
	return this.m_disaggregationModeOnModel;
};
oFF.DataCellModel.prototype.getResultCalculationOnModel = function()
{
	return this.m_resultCalculationOnModel;
};
oFF.DataCellModel.prototype.getSingleValueCalculationOnModel = function()
{
	return this.m_singleValueCalculationOnModel;
};
oFF.DataCellModel.prototype.setDecimal = function(decimal)
{
	this.m_decimal = decimal;
};
oFF.DataCellModel.prototype.getDecimalDefaultValue = function()
{
	return oFF.notNull(this.m_decimalDefaultvalue) ? this.m_decimalDefaultvalue.getStringRepresentation() : null;
};
oFF.DataCellModel.prototype.setDecimalDefaultValue = function(decimalDefaultvalue)
{
	this.m_decimalDefaultvalue = decimalDefaultvalue;
};
oFF.DataCellModel.prototype.setDecimalDefaultAsMetadata = function(decimalDefaultAsMetadata)
{
	this.m_decimalDefaultAsMetadata = decimalDefaultAsMetadata;
};
oFF.DataCellModel.prototype.getDecimalDefaultAsMetadata = function()
{
	return this.m_decimalDefaultAsMetadata;
};
oFF.DataCellModel.prototype.setScaling = function(scaling)
{
	this.m_scaling = scaling;
};
oFF.DataCellModel.prototype.getScalingDefaultValue = function()
{
	return oFF.notNull(this.m_scalingDefaultvalue) ? this.m_scalingDefaultvalue.getStringRepresentation() : null;
};
oFF.DataCellModel.prototype.setScalingDefaultValue = function(scalingDefaultvalue)
{
	this.m_scalingDefaultvalue = scalingDefaultvalue;
};
oFF.DataCellModel.prototype.setScalingDefaultAsMetadata = function(scalingDefaultAsMetadata)
{
	this.m_scalingDefaultAsMetadata = scalingDefaultAsMetadata;
};
oFF.DataCellModel.prototype.getScalingDefaultAsMetadata = function()
{
	return this.m_scalingDefaultAsMetadata;
};
oFF.DataCellModel.prototype.getDisaggregationModeDefaultAsMetadata = function()
{
	return this.m_disaggregationModeDefaultAsMetadata;
};
oFF.DataCellModel.prototype.setDisaggregationModeDefaultAsMetadata = function(disaggregationModeDefaultAsMetadata)
{
	this.m_disaggregationModeDefaultAsMetadata = disaggregationModeDefaultAsMetadata;
};
oFF.DataCellModel.prototype.getDisaggregationModeDefaultvalue = function()
{
	return this.m_disaggregationModeDefaultvalue;
};
oFF.DataCellModel.prototype.setDisaggregationModeDefaultvalue = function(disaggregationModeDefaultvalue)
{
	this.m_disaggregationModeDefaultvalue = disaggregationModeDefaultvalue;
};

oFF.DdControllerAbstract = function() {};
oFF.DdControllerAbstract.prototype = new oFF.XObject();
oFF.DdControllerAbstract.prototype._ff_c = "DdControllerAbstract";

oFF.DdControllerAbstract.DOWN_BUTTON = "moveDown";
oFF.DdControllerAbstract.UP_BUTTON = "moveUp";
oFF.DdControllerAbstract.BOTTOM_BUTTON = "moveBottom";
oFF.DdControllerAbstract.TOP_BUTTON = "moveTop";
oFF.DdControllerAbstract.DISPLAY_CHECKBOX = "displayCheckbox";
oFF.DdControllerAbstract.addEditablePropertyVerticalLayout = function(layout, name, labelString, component)
{
	if (oFF.notNull(component))
	{
		component.setAlignSelf(oFF.UiFlexAlignSelf.AUTO);
		var row = layout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		var label = row.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setHeight(oFF.UiCssLength.create("100%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		label.setText(labelString).setName(name);
		row.addItem(component.setWidth(oFF.UiCssLength.create("100%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER));
	}
};
oFF.DdControllerAbstract.prototype.m_genesis = null;
oFF.DdControllerAbstract.prototype.setupGenesis = function(genesis)
{
	this.m_genesis = genesis;
};
oFF.DdControllerAbstract.prototype.getGenesis = function()
{
	return this.m_genesis;
};
oFF.DdControllerAbstract.prototype.addToVerticalLayout = function(layout)
{
	var labelTexts = this.getLabelTexts();
	var controls = this.getControls();
	var size = oFF.XMath.min(labelTexts.size(), controls.size());
	for (var i = 0; i < size; i++)
	{
		var label = layout.addNewItemOfType(oFF.UiType.LABEL);
		label.setText(labelTexts.get(i));
		layout.addItem(controls.get(i));
	}
};
oFF.DdControllerAbstract.prototype.addToLeftRightVerticalLayout = function(layout)
{
	var labelTexts = this.getLabelTexts();
	var controls = this.getControls();
	var size = oFF.XMath.min(labelTexts.size(), controls.size());
	for (var i = 0; i < size; i++)
	{
		var row = layout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		var label = row.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		label.setText(labelTexts.get(i));
		row.addItem(controls.get(i).setWidth(oFF.UiCssLength.create("100%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER));
	}
};
oFF.DdControllerAbstract.prototype.addVlHeaders = function(table)
{
	var row = table.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
	this.addHeadersToFl(row, this.getPrefixLabelTexts(), this.getPrefixWidths());
	this.addHeadersToFl(row, this.getLabelTexts(), this.getWidths());
	this.addHeadersToFl(row, this.getSuffixLabelTexts(), this.getSuffixWidths());
};
oFF.DdControllerAbstract.prototype.addHeadersToFl = function(row, labelTexts, widths)
{
	for (var h = 0; h < labelTexts.size(); h++)
	{
		row.addNewItemOfType(oFF.UiType.LABEL).setText(labelTexts.get(h)).setWidth(oFF.UiCssLength.create(widths.get(h))).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setTextAlign(oFF.UiTextAlign.CENTER);
	}
};
oFF.DdControllerAbstract.prototype.addFlexLayoutComponents = function(row)
{
	this.addControlsFl(row, this.getPrefixControls(), this.getPrefixWidths());
	this.addControlsFl(row, this.getControls(), this.getWidths());
	this.addControlsFl(row, this.getSuffixControls(), this.getSuffixWidths());
};
oFF.DdControllerAbstract.prototype.addControlsFl = function(row, controls, widths)
{
	for (var i = 0; i < controls.size(); i++)
	{
		row.addItem(controls.get(i).setWidth(oFF.UiCssLength.create(widths.get(i))).setTextAlign(oFF.UiTextAlign.CENTER).setAlignSelf(oFF.UiFlexAlignSelf.CENTER));
	}
};

oFF.DdFactory = function() {};
oFF.DdFactory.prototype = new oFF.XObject();
oFF.DdFactory.prototype._ff_c = "DdFactory";

oFF.DdFactory.createFactory = function(application, context)
{
	var obj = new oFF.DdFactory();
	obj.m_context = context;
	obj.m_application = application;
	return obj;
};
oFF.DdFactory.prototype.m_context = null;
oFF.DdFactory.prototype.m_application = null;
oFF.DdFactory.prototype.newDimensionDialogInstance = function()
{
	return oFF.DdControllerDimensionCompact.create(this.m_application, this.m_context);
};
oFF.DdFactory.prototype.newAxisDialogInstance = function()
{
	return oFF.DdControllerAxis.create(this.m_application, this.m_context);
};

oFF.DdOceanEntryPoint = function() {};
oFF.DdOceanEntryPoint.prototype = new oFF.XObject();
oFF.DdOceanEntryPoint.prototype._ff_c = "DdOceanEntryPoint";

oFF.DdOceanEntryPoint.createEntryPoint = function(application)
{
	var obj = new oFF.DdOceanEntryPoint();
	obj.setupEntryPoint(application);
	return obj;
};
oFF.DdOceanEntryPoint.prototype.m_ddControllerAxis = null;
oFF.DdOceanEntryPoint.prototype.m_ddControllerDimension = null;
oFF.DdOceanEntryPoint.prototype.setupEntryPoint = function(application)
{
	var uiMgr = application.getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	var context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_ddControllerAxis = oFF.DdFactory.createFactory(application, context).newAxisDialogInstance();
	this.m_ddControllerDimension = oFF.DdFactory.createFactory(application, context).newDimensionDialogInstance();
};
oFF.DdOceanEntryPoint.prototype.openAxisDialog = function(title, axis, listener)
{
	this.m_ddControllerAxis.openDialog(title, axis, listener);
};
oFF.DdOceanEntryPoint.prototype.openDimensionDialog = function(title, dimension, listener)
{
	this.m_ddControllerDimension.openDialog(title, dimension, listener);
};
oFF.DdOceanEntryPoint.prototype.closeAxisDialog = function()
{
	this.m_ddControllerAxis.closeDialog();
};
oFF.DdOceanEntryPoint.prototype.closeDimensionDialog = function()
{
	this.m_ddControllerDimension.closeDialog();
};
oFF.DdOceanEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_ddControllerAxis = oFF.XObjectExt.release(this.m_ddControllerAxis);
	this.m_ddControllerDimension = oFF.XObjectExt.release(this.m_ddControllerDimension);
};

oFF.DdLayoutAbstract = function() {};
oFF.DdLayoutAbstract.prototype = new oFF.XObject();
oFF.DdLayoutAbstract.prototype._ff_c = "DdLayoutAbstract";

oFF.DdLayoutAbstract.prototype.m_root = null;
oFF.DdLayoutAbstract.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_root = this.buildTree(genesis);
	genesis.setRoot(this.m_root);
};

oFF.DdModelAbstract = {

};

oFF.DdObservableModel = function() {};
oFF.DdObservableModel.prototype = new oFF.XObject();
oFF.DdObservableModel.prototype._ff_c = "DdObservableModel";

oFF.DdObservableModel.prototype.m_listeners = null;
oFF.DdObservableModel.prototype.setupListeners = function()
{
	this.m_listeners = oFF.XList.create();
};
oFF.DdObservableModel.prototype.releaseObject = function()
{
	this.m_listeners = oFF.XObjectExt.release(this.m_listeners);
};
oFF.DdObservableModel.prototype.addListener = function(listener)
{
	this.m_listeners.add(listener);
};
oFF.DdObservableModel.prototype.removeListener = function(listener)
{
	this.m_listeners.removeElement(listener);
};
oFF.DdObservableModel.prototype.callListeners = function()
{
	if (oFF.notNull(this.m_listeners))
	{
		for (var i = 0; i < this.m_listeners.size(); i++)
		{
			this.m_listeners.get(i).onObservableModelChange(this);
		}
	}
};

oFF.OuDd2AbstractTab = function() {};
oFF.OuDd2AbstractTab.prototype = new oFF.XObject();
oFF.OuDd2AbstractTab.prototype._ff_c = "OuDd2AbstractTab";

oFF.OuDd2AbstractTab.prototype.m_dimension = null;
oFF.OuDd2AbstractTab.prototype.m_i18n = null;
oFF.OuDd2AbstractTab.prototype.m_mainAttributeModel = null;
oFF.OuDd2AbstractTab.prototype.m_form = null;
oFF.OuDd2AbstractTab.prototype.m_startValues = null;
oFF.OuDd2AbstractTab.prototype.setupTab = function(dimension, i18n)
{
	this.m_dimension = dimension;
	this.m_i18n = i18n;
	var mainAttribute = this.m_dimension.getMainAttribute();
	if (oFF.isNull(mainAttribute))
	{
		this.m_mainAttributeModel = oFF.FieldContainerPresentationHelper.createFromFieldContainer(this.m_dimension);
	}
	else
	{
		this.m_mainAttributeModel = oFF.FieldContainerPresentationHelper.createFromFieldContainer(mainAttribute);
		var mainRsAttribute = oFF.XStream.of(this.m_dimension.getResultSetAttributes()).filter( function(a){
			return oFF.XString.isEqual(a.getName(), mainAttribute.getName());
		}.bind(this)).findAny();
		mainRsAttribute.ifPresent( function(att){
			this.m_mainAttributeModel.applyResultSetSettings(att);
		}.bind(this));
	}
};
oFF.OuDd2AbstractTab.prototype.hasChanged = function(currentModel, propertyName)
{
	return !oFF.XObjectExt.areEqual(currentModel.getByKey(propertyName), this.m_startValues.getByKey(propertyName));
};
oFF.OuDd2AbstractTab.prototype.focus = function()
{
	if (this.getTabBarItem() !== null)
	{
		this.getTabBarItem().focus();
	}
};
oFF.OuDd2AbstractTab.prototype.selectItem = function()
{
	var tabBarItem = this.getTabBarItem();
	if (oFF.notNull(tabBarItem))
	{
		tabBarItem.getParent().setSelectedItem(tabBarItem);
	}
};

oFF.FdContext = function() {};
oFF.FdContext.prototype = new oFF.XObject();
oFF.FdContext.prototype._ff_c = "FdContext";

oFF.FdContext.create = function(uiContext, configuration, contentType, closeListener)
{
	oFF.XObjectExt.assertNotNullExt(uiContext, "UiContext must be set");
	oFF.XObjectExt.assertNotNullExt(configuration, "Configuration must be set");
	oFF.XObjectExt.assertNotNullExt(contentType, "Content type must be set");
	var context = new oFF.FdContext();
	context.setupContext(uiContext, configuration, contentType, closeListener);
	return context;
};
oFF.FdContext.prototype.m_i18n = null;
oFF.FdContext.prototype.m_messagePoster = null;
oFF.FdContext.prototype.m_mobile = false;
oFF.FdContext.prototype.m_configuration = null;
oFF.FdContext.prototype.m_contentType = null;
oFF.FdContext.prototype.m_closeListener = null;
oFF.FdContext.prototype.m_dimension = null;
oFF.FdContext.prototype.m_variable = null;
oFF.FdContext.prototype.m_filterMeasureBased = null;
oFF.FdContext.prototype.m_structureMember = null;
oFF.FdContext.prototype.setupContext = function(uiContext, configuration, contentType, closeListener)
{
	this.m_i18n = uiContext.getLocalization();
	this.m_messagePoster = uiContext.getMessageCenter();
	this.m_mobile = uiContext.getDeviceInfo().isMobile();
	this.m_configuration = configuration;
	this.m_contentType = contentType;
	this.m_closeListener = closeListener;
};
oFF.FdContext.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_i18n = null;
	this.m_messagePoster = null;
	this.m_configuration = null;
	this.m_contentType = null;
	this.m_closeListener = null;
	this.m_dimension = null;
	this.m_variable = null;
	this.m_filterMeasureBased = null;
	this.m_structureMember = null;
};
oFF.FdContext.prototype.getI18n = function()
{
	return this.m_i18n;
};
oFF.FdContext.prototype.getMessagePoster = function()
{
	return this.m_messagePoster;
};
oFF.FdContext.prototype.isMobile = function()
{
	return this.m_mobile;
};
oFF.FdContext.prototype.getConfiguration = function()
{
	return this.m_configuration;
};
oFF.FdContext.prototype.getContentType = function()
{
	return this.m_contentType;
};
oFF.FdContext.prototype.getCloseListener = function()
{
	return this.m_closeListener;
};
oFF.FdContext.prototype.getDimension = function()
{
	return this.m_dimension;
};
oFF.FdContext.prototype.setDimension = function(dimension)
{
	this.m_dimension = dimension;
};
oFF.FdContext.prototype.getVariable = function()
{
	return this.m_variable;
};
oFF.FdContext.prototype.setVariable = function(variable)
{
	this.m_variable = variable;
};
oFF.FdContext.prototype.getFilterMeasureBased = function()
{
	return this.m_filterMeasureBased;
};
oFF.FdContext.prototype.setFilterMeasureBased = function(filterMeasureBased)
{
	this.m_filterMeasureBased = filterMeasureBased;
};
oFF.FdContext.prototype.getStructureMember = function()
{
	return this.m_structureMember;
};
oFF.FdContext.prototype.setStructureMember = function(structureMember)
{
	this.m_structureMember = structureMember;
};

oFF.FdPresentationUtils = {

	getMainPresentationByDim:function(dimension, i18n, isHierarchicalValueHelp)
	{
			var presentations = oFF.XList.create();
		var textField = isHierarchicalValueHelp ? dimension.getHierarchyTextField() : dimension.getFlatTextField();
		var displayKeyField = isHierarchicalValueHelp ? dimension.getHierarchyDisplayKeyField() : dimension.getFlatDisplayKeyField();
		if (oFF.isNull(textField))
		{
			textField = displayKeyField;
		}
		var descText = i18n.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION);
		var idText = i18n.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID);
		presentations.add(oFF.FdPresentation.create(descText).addTextPresentation(descText, textField, textField.isFilterable()));
		presentations.add(oFF.FdPresentation.create(i18n.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID_AND_DESCRIPTION)).addKeyPresentation(idText, displayKeyField, displayKeyField.isFilterable()).addTextPresentation(descText, textField, textField.isFilterable()));
		presentations.add(oFF.FdPresentation.create(idText).addKeyPresentation(idText, displayKeyField, displayKeyField.isFilterable()));
		return presentations;
	},
	mapDisplayInfoToPresentation:function(displayInfo, dimension, mainPresentations)
	{
			var dfPresentation = displayInfo !== oFF.FdDimensionDisplayInfo.QUERY_DEFAULT && oFF.notNull(displayInfo) ? oFF.FdPresentationUtils.getPresentation(mainPresentations, displayInfo.showId(), displayInfo.showDescription()) : null;
		if (oFF.isNull(dfPresentation) && dimension.getMainAttribute() !== null)
		{
			var resultSetFields = dimension.getMainAttribute().getDefaultResultSetFields();
			var idRequired = resultSetFields.contains(dimension.getFlatDisplayKeyField()) || resultSetFields.contains(dimension.getHierarchyDisplayKeyField()) || dimension.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND) !== null && resultSetFields.contains(dimension.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND));
			var descRequired = resultSetFields.contains(dimension.getFlatTextField()) || resultSetFields.contains(dimension.getHierarchyTextField());
			dfPresentation = oFF.FdPresentationUtils.getPresentation(mainPresentations, idRequired, descRequired);
		}
		return oFF.notNull(dfPresentation) ? dfPresentation : mainPresentations.get(0);
	},
	getPresentation:function(presentations, withKey, withText)
	{
			for (var i = 0; i < presentations.size(); i++)
		{
			var presentation = presentations.get(i);
			if (presentation.hasKeyPresentation() === withKey && presentation.hasTextPresentation() === withText)
			{
				return presentation;
			}
		}
		return null;
	},
	mapPresentationToDisplayInfo:function(presentation)
	{
			if (presentation.hasKeyPresentation())
		{
			return presentation.hasTextPresentation() ? oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION : oFF.FdDimensionDisplayInfo.ID;
		}
		return oFF.FdDimensionDisplayInfo.DESCRIPTION;
	},
	getAdditionalPresentationsByDim:function(dimension, i18n, isHierarchicalValueHelp)
	{
			var textId = i18n.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID);
		var textDescription = i18n.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION);
		var presentations = oFF.XList.create();
		var attributes = dimension.getAttributes();
		var mainAttribute = dimension.getMainAttribute();
		var isFilterable = !isHierarchicalValueHelp || !oFF.FdPresentationUtils.isBW(dimension);
		var size = attributes.size();
		for (var i = 0; i < size; i++)
		{
			var attribute = attributes.get(i);
			if (attribute !== mainAttribute)
			{
				var attributeText = oFF.XStringUtils.isNotNullAndNotEmpty(attribute.getText()) ? attribute.getText() : attribute.getName();
				var displayKeyField = isHierarchicalValueHelp ? attribute.getHierarchyDisplayKeyField() : attribute.getFlatDisplayKeyField();
				var textField = isHierarchicalValueHelp ? attribute.getHierarchyTextField() : attribute.getFlatTextField();
				if (oFF.notNull(displayKeyField) || oFF.notNull(textField))
				{
					var presentation = oFF.FdPresentation.create(attributeText);
					presentations.add(presentation);
					if (oFF.notNull(displayKeyField))
					{
						presentation.addKeyPresentation(oFF.XStringUtils.concatenate4(attributeText, " (", textId, ")"), displayKeyField, isFilterable && displayKeyField.isFilterable());
					}
					if (oFF.notNull(textField))
					{
						presentation.addTextPresentation(oFF.XStringUtils.concatenate4(attributeText, " (", textDescription, ")"), textField, isFilterable && textField.isFilterable());
					}
				}
			}
		}
		return presentations;
	},
	isBW:function(dimension)
	{
			var systemName = dimension.getDataSource().getSystemName();
		var systemDescription = dimension.getApplication().getSystemLandscape().getSystemDescription(systemName);
		return systemDescription.getSystemType().isTypeOf(oFF.SystemType.ABAP);
	},
	getFieldsFromPresentations:function(presentations)
	{
			if (oFF.notNull(presentations))
		{
			var fields = oFF.XList.create();
			for (var i = 0; i < presentations.size(); i++)
			{
				var presentation = presentations.get(i);
				oFF.FdPresentationUtils.addIfNotPresent(fields, presentation.getKeyPresentation());
				oFF.FdPresentationUtils.addIfNotPresent(fields, presentation.getTextPresentation());
			}
			return fields;
		}
		return null;
	},
	getFieldsFromPresentationValues:function(presentations)
	{
			if (oFF.notNull(presentations))
		{
			var fields = oFF.XList.create();
			for (var i = 0; i < presentations.size(); i++)
			{
				oFF.FdPresentationUtils.addIfNotPresent(fields, presentations.get(i));
			}
			return fields;
		}
		return null;
	},
	addIfNotPresent:function(fields, presentationValue)
	{
			if (oFF.notNull(presentationValue))
		{
			var field = presentationValue.getCustomObject();
			if (!fields.contains(field))
			{
				fields.add(field);
			}
		}
	},
	flattenPresentations:function(presentations)
	{
			var presentationValues = oFF.XList.create();
		var size = presentations.size();
		for (var i = 0; i < size; i++)
		{
			var presentation = presentations.get(i);
			var keyPresentation = presentation.getKeyPresentation();
			if (oFF.notNull(keyPresentation))
			{
				presentationValues.add(keyPresentation);
			}
			var textPresentation = presentation.getTextPresentation();
			if (oFF.notNull(textPresentation))
			{
				presentationValues.add(textPresentation);
			}
		}
		return presentationValues;
	},
	getFilterablePresentations:function(mainPresentations, additionalPresentations)
	{
			var searchPresentations = oFF.XList.create();
		for (var i = 0; i < mainPresentations.size(); i++)
		{
			var presentation = mainPresentations.get(i);
			var keyPresentation = presentation.getKeyPresentation();
			var textPresentation = presentation.getTextPresentation();
			if ((oFF.isNull(keyPresentation) || keyPresentation.isFilterable()) && (oFF.isNull(textPresentation) || textPresentation.isFilterable()))
			{
				searchPresentations.add(presentation);
			}
		}
		var size = additionalPresentations.size();
		for (var j = 0; j < size; j++)
		{
			var additionalPresentation = additionalPresentations.get(j);
			if (additionalPresentation.isFilterable())
			{
				searchPresentations.add(additionalPresentation);
			}
		}
		return searchPresentations;
	},
	getPresentationNames:function(presentations)
	{
			if (oFF.XCollectionUtils.hasElements(presentations))
		{
			var result = oFF.XListOfString.create();
			for (var i = 0; i < presentations.size(); i++)
			{
				result.add(presentations.get(i).getName());
			}
			return result;
		}
		return null;
	},
	getPresentationsByName:function(presentationNames, allPresentations)
	{
			if (oFF.XCollectionUtils.hasElements(presentationNames) && oFF.XCollectionUtils.hasElements(allPresentations))
		{
			var result = oFF.XList.create();
			for (var i = 0; i < allPresentations.size(); i++)
			{
				if (presentationNames.contains(allPresentations.get(i).getName()))
				{
					result.add(allPresentations.get(i));
				}
			}
			return result;
		}
		return null;
	}
};

oFF.FdConfiguration = function() {};
oFF.FdConfiguration.prototype = new oFF.XObject();
oFF.FdConfiguration.prototype._ff_c = "FdConfiguration";

oFF.FdConfiguration.SEARCH_DEBOUNCE_TIMEOUT = 1000;
oFF.FdConfiguration.DEFAULT_PAGE_SIZE = 20;
oFF.FdConfiguration.MIN_PRELOAD_PAGE_COUNT = 8;
oFF.FdConfiguration.DEFAULT_CHILD_NODES_PAGE_SIZE = 50;
oFF.FdConfiguration.DEFAULT_SEARCH_SIZE = 100;
oFF.FdConfiguration.DEFAULT_DYNAMIC_DATE_RANGE_MAX_YEARS = 100;
oFF.FdConfiguration.BETA_FEATURES_ENABLED = false;
oFF.FdConfiguration.create = function(title, selectionMode, selection)
{
	return oFF.FdConfiguration.createWithContext(title, selectionMode, selection, null);
};
oFF.FdConfiguration.createWithContext = function(title, selectionMode, selection, uiContext)
{
	var config = new oFF.FdConfiguration();
	config.setupConfig(title, selectionMode, selection, uiContext);
	return config;
};
oFF.FdConfiguration.prototype.m_filterTypes = null;
oFF.FdConfiguration.prototype.m_defaultVisibleFilterType = null;
oFF.FdConfiguration.prototype.m_fdEvents = null;
oFF.FdConfiguration.prototype.m_title = null;
oFF.FdConfiguration.prototype.m_selectionMode = null;
oFF.FdConfiguration.prototype.m_selectionRequired = false;
oFF.FdConfiguration.prototype.m_selection = null;
oFF.FdConfiguration.prototype.m_pageSize = 0;
oFF.FdConfiguration.prototype.m_searchSize = 0;
oFF.FdConfiguration.prototype.m_preloadedPages = 0;
oFF.FdConfiguration.prototype.m_childNodesPageSize = 0;
oFF.FdConfiguration.prototype.m_dimensionDisplayInfo = null;
oFF.FdConfiguration.prototype.m_alwaysShowSelectionContainer = false;
oFF.FdConfiguration.prototype.m_determineSelectionFromContext = false;
oFF.FdConfiguration.prototype.m_resizable = false;
oFF.FdConfiguration.prototype.m_dynamicDateRangeMaxYears = 0;
oFF.FdConfiguration.prototype.m_offerClipboard = false;
oFF.FdConfiguration.prototype.m_offerExclude = false;
oFF.FdConfiguration.prototype.m_offerEqualInRangeView = false;
oFF.FdConfiguration.prototype.m_offerHierarchyChange = false;
oFF.FdConfiguration.prototype.m_width = 0;
oFF.FdConfiguration.prototype.m_widthUnit = null;
oFF.FdConfiguration.prototype.m_height = 0;
oFF.FdConfiguration.prototype.m_heightUnit = null;
oFF.FdConfiguration.prototype.m_uiContext = null;
oFF.FdConfiguration.prototype.m_externalValueHelpProcess = null;
oFF.FdConfiguration.prototype.setupConfig = function(title, selectionMode, selection, uiContext)
{
	this.reset(title, selectionMode);
	this.m_fdEvents = oFF.FdEvents.create();
	this.m_selection = selection;
	this.m_uiContext = uiContext;
};
oFF.FdConfiguration.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_uiContext = null;
	this.m_filterTypes = oFF.XObjectExt.release(this.m_filterTypes);
	this.m_defaultVisibleFilterType = null;
	this.m_title = null;
	this.m_selectionMode = null;
	this.m_selection = oFF.XObjectExt.release(this.m_selection);
	this.m_widthUnit = null;
	this.m_heightUnit = null;
	this.m_dimensionDisplayInfo = null;
	this.m_fdEvents = oFF.XObjectExt.release(this.m_fdEvents);
};
oFF.FdConfiguration.prototype.reset = function(title, selectionMode)
{
	this.m_filterTypes = oFF.XCollectionUtils.singletonList(oFF.FdFilterType.LIST);
	this.m_defaultVisibleFilterType = null;
	this.m_title = title;
	this.m_selectionMode = selectionMode;
	this.m_selectionRequired = false;
	if (oFF.notNull(this.m_selection))
	{
		this.m_selection.clear();
	}
	this.m_pageSize = oFF.FdConfiguration.DEFAULT_PAGE_SIZE;
	this.m_searchSize = oFF.FdConfiguration.DEFAULT_SEARCH_SIZE;
	this.m_preloadedPages = oFF.FdConfiguration.MIN_PRELOAD_PAGE_COUNT;
	this.m_childNodesPageSize = oFF.FdConfiguration.DEFAULT_CHILD_NODES_PAGE_SIZE;
	this.m_dimensionDisplayInfo = null;
	this.m_alwaysShowSelectionContainer = false;
	this.m_determineSelectionFromContext = false;
	this.m_externalValueHelpProcess = null;
	this.m_width = 974;
	this.m_widthUnit = oFF.UiCssSizeUnit.PIXEL;
	this.m_height = 640;
	this.m_heightUnit = oFF.UiCssSizeUnit.PIXEL;
	this.m_resizable = true;
	this.m_dynamicDateRangeMaxYears = oFF.FdConfiguration.DEFAULT_DYNAMIC_DATE_RANGE_MAX_YEARS;
	this.m_offerClipboard = false;
	this.m_offerExclude = false;
	this.m_offerEqualInRangeView = false;
	this.m_offerHierarchyChange = false;
};
oFF.FdConfiguration.prototype.getEvents = function()
{
	return this.m_fdEvents;
};
oFF.FdConfiguration.prototype.getFilterTypes = function()
{
	return oFF.notNull(this.m_filterTypes) ? this.m_filterTypes : oFF.XList.create();
};
oFF.FdConfiguration.prototype.addFilterType = function(filterType)
{
	if (oFF.isNull(filterType))
	{
		return;
	}
	if (oFF.isNull(this.m_filterTypes))
	{
		this.m_filterTypes = oFF.XList.create();
	}
	if (!this.m_filterTypes.contains(filterType))
	{
		this.m_filterTypes.add(filterType);
	}
};
oFF.FdConfiguration.prototype.removeFilterType = function(filterType)
{
	if (oFF.notNull(filterType) && oFF.notNull(this.m_filterTypes))
	{
		this.m_filterTypes.removeElement(filterType);
	}
};
oFF.FdConfiguration.prototype.setFilterTypes = function(filterTypes)
{
	this.m_filterTypes = filterTypes;
};
oFF.FdConfiguration.prototype.getDefaultVisibleFilterType = function()
{
	return this.m_defaultVisibleFilterType;
};
oFF.FdConfiguration.prototype.setDefaultVisibleFilterType = function(filterType)
{
	this.m_defaultVisibleFilterType = filterType;
};
oFF.FdConfiguration.prototype.getTitle = function()
{
	return this.m_title;
};
oFF.FdConfiguration.prototype.setTitle = function(title)
{
	this.m_title = title;
};
oFF.FdConfiguration.prototype.getSelectionMode = function()
{
	return this.m_selectionMode;
};
oFF.FdConfiguration.prototype.setSelectionMode = function(selectionMode)
{
	this.m_selectionMode = selectionMode;
};
oFF.FdConfiguration.prototype.setSelectionRequired = function(selectionRequired)
{
	this.m_selectionRequired = selectionRequired;
};
oFF.FdConfiguration.prototype.isSelectionRequired = function()
{
	return this.m_selectionRequired;
};
oFF.FdConfiguration.prototype.setMultiSelection = function(multiSelection)
{
	this.m_selectionMode = multiSelection ? oFF.UiSelectionMode.MULTI_SELECT : oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
};
oFF.FdConfiguration.prototype.getSelection = function()
{
	return this.m_selection;
};
oFF.FdConfiguration.prototype.setSelection = function(selection)
{
	this.m_selection = selection;
};
oFF.FdConfiguration.prototype.addSelectedItem = function(item)
{
	if (oFF.notNull(item))
	{
		if (oFF.isNull(this.m_selection))
		{
			this.m_selection = oFF.XList.create();
		}
		this.m_selection.add(item);
	}
};
oFF.FdConfiguration.prototype.getItemFactory = function()
{
	return oFF.notNull(this.m_uiContext) ? this.m_uiContext.getFilterDialogItemFactory() : null;
};
oFF.FdConfiguration.prototype.setPageSize = function(pageSize)
{
	this.m_pageSize = pageSize;
};
oFF.FdConfiguration.prototype.getPageSize = function()
{
	return this.m_pageSize;
};
oFF.FdConfiguration.prototype.setSearchSize = function(searchSize)
{
	this.m_searchSize = searchSize;
};
oFF.FdConfiguration.prototype.getSearchSize = function()
{
	return this.m_searchSize;
};
oFF.FdConfiguration.prototype.getPreloadedPages = function()
{
	return this.m_preloadedPages;
};
oFF.FdConfiguration.prototype.setPreloadedPages = function(preloadedPages)
{
	if (preloadedPages >= oFF.FdConfiguration.MIN_PRELOAD_PAGE_COUNT)
	{
		this.m_preloadedPages = preloadedPages;
	}
};
oFF.FdConfiguration.prototype.getChildNodesPageSize = function()
{
	return this.m_childNodesPageSize;
};
oFF.FdConfiguration.prototype.setChildNodesPageSize = function(childNodesPageSize)
{
	this.m_childNodesPageSize = childNodesPageSize;
};
oFF.FdConfiguration.prototype.getWidth = function()
{
	return this.m_width;
};
oFF.FdConfiguration.prototype.getWidthUnit = function()
{
	return this.m_widthUnit;
};
oFF.FdConfiguration.prototype.getHeight = function()
{
	return this.m_height;
};
oFF.FdConfiguration.prototype.getHeightUnit = function()
{
	return this.m_heightUnit;
};
oFF.FdConfiguration.prototype.setDialogWidth = function(width, unit)
{
	this.m_width = width;
	this.m_widthUnit = unit;
};
oFF.FdConfiguration.prototype.setDialogHeight = function(height, unit)
{
	this.m_height = height;
	this.m_heightUnit = unit;
};
oFF.FdConfiguration.prototype.setDimensionDisplayInfo = function(displayInfo)
{
	this.m_dimensionDisplayInfo = displayInfo;
};
oFF.FdConfiguration.prototype.getDimensionDisplayInfo = function()
{
	return this.m_dimensionDisplayInfo;
};
oFF.FdConfiguration.prototype.getExternalValueHelpProcess = function()
{
	return this.m_externalValueHelpProcess;
};
oFF.FdConfiguration.prototype.getNoResultMessageTag = function()
{
	return oFF.notNull(this.m_externalValueHelpProcess) ? this.m_externalValueHelpProcess.getNoResultMessageTag() : null;
};
oFF.FdConfiguration.prototype.setExternalValueHelpProcess = function(externalValueHelpProcess)
{
	this.m_externalValueHelpProcess = externalValueHelpProcess;
};
oFF.FdConfiguration.prototype.isAlwaysShowSelectionContainer = function()
{
	return this.m_alwaysShowSelectionContainer;
};
oFF.FdConfiguration.prototype.setAlwaysShowSelectionContainer = function(alwaysShowSelectionContainer)
{
	this.m_alwaysShowSelectionContainer = alwaysShowSelectionContainer;
};
oFF.FdConfiguration.prototype.isDetermineSelectionFromContext = function()
{
	return this.m_determineSelectionFromContext;
};
oFF.FdConfiguration.prototype.setDetermineSelectionFromContext = function(determineSelectionFromContext)
{
	this.m_determineSelectionFromContext = determineSelectionFromContext;
};
oFF.FdConfiguration.prototype.setResizable = function(resizable)
{
	this.m_resizable = resizable;
};
oFF.FdConfiguration.prototype.isResizable = function()
{
	return this.m_resizable;
};
oFF.FdConfiguration.prototype.setDynamicDateRangeMaxYears = function(years)
{
	if (years > 0)
	{
		this.m_dynamicDateRangeMaxYears = years;
	}
};
oFF.FdConfiguration.prototype.getDynamicDateRangeMaxYears = function()
{
	return this.m_dynamicDateRangeMaxYears;
};
oFF.FdConfiguration.prototype.isOfferingClipboard = function()
{
	return this.m_offerClipboard;
};
oFF.FdConfiguration.prototype.setOfferingClipboard = function(clipboardEnabled)
{
	this.m_offerClipboard = clipboardEnabled;
};
oFF.FdConfiguration.prototype.isOfferingExclude = function()
{
	return this.m_offerExclude;
};
oFF.FdConfiguration.prototype.setOfferingExclude = function(excludeEnabled)
{
	this.m_offerExclude = excludeEnabled;
};
oFF.FdConfiguration.prototype.isOfferingEqualInRangeView = function()
{
	return this.m_offerEqualInRangeView;
};
oFF.FdConfiguration.prototype.setOfferingEqualInRangeView = function(equalInRangeViewEnabled)
{
	this.m_offerEqualInRangeView = equalInRangeViewEnabled;
};
oFF.FdConfiguration.prototype.isOfferingHierarchyChange = function()
{
	return this.m_offerHierarchyChange;
};
oFF.FdConfiguration.prototype.setOfferingHierarchyChange = function(hierarchyChangeEnabled)
{
	this.m_offerHierarchyChange = hierarchyChangeEnabled;
};

oFF.FdFactory = function() {};
oFF.FdFactory.prototype = new oFF.XObject();
oFF.FdFactory.prototype._ff_c = "FdFactory";

oFF.FdFactory.createFactory = function(context)
{
	var obj = new oFF.FdFactory();
	obj.m_context = context;
	return obj;
};
oFF.FdFactory.prototype.m_context = null;
oFF.FdFactory.prototype.newFilterDialogInstanceForVariable = function(variable, configuration, listener)
{
	var fdContext = oFF.FdContext.create(this.m_context, configuration, oFF.FdContentType.VARIABLE_VALUE_HELP, listener);
	fdContext.setVariable(variable);
	return oFF.FdController.create(fdContext, this.m_context);
};
oFF.FdFactory.prototype.newFilterDialogInstanceForDimension = function(dimension, configuration, listener)
{
	var fdContext = oFF.FdContext.create(this.m_context, configuration, oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP, listener);
	fdContext.setDimension(dimension);
	return oFF.FdController.create(fdContext, this.m_context);
};
oFF.FdFactory.prototype.newFilterDialogInstanceForHierarchyCatalog = function(dimension, configuration, listener)
{
	var fdContext = oFF.FdContext.create(this.m_context, configuration, oFF.FdContentType.HIERARCHY_CATALOG, listener);
	fdContext.setDimension(dimension);
	return oFF.FdController.create(fdContext, this.m_context);
};
oFF.FdFactory.prototype.newFilterDialogInstanceForMeasureBasedFilter = function(filterMeasureBased, member, configuration, listener)
{
	var fdContext = oFF.FdContext.create(this.m_context, configuration, oFF.FdContentType.MEASURE_BASED_FILTER, listener);
	fdContext.setFilterMeasureBased(filterMeasureBased);
	fdContext.setStructureMember(member);
	return oFF.FdController.create(fdContext, this.m_context);
};

oFF.FdSessionBasedSettings = function() {};
oFF.FdSessionBasedSettings.prototype = new oFF.XObject();
oFF.FdSessionBasedSettings.prototype._ff_c = "FdSessionBasedSettings";

oFF.FdSessionBasedSettings.s_readModes = null;
oFF.FdSessionBasedSettings.s_displayInfos = null;
oFF.FdSessionBasedSettings.s_additionalPresentations = null;
oFF.FdSessionBasedSettings.s_hierarchies = null;
oFF.FdSessionBasedSettings.createByQuery = function(queryManager, contentType, nameObject)
{
	var key = oFF.XStringBuffer.create();
	if (oFF.notNull(queryManager))
	{
		key.append(queryManager.getInstanceId()).append("-");
	}
	key.append(contentType.isVariableValueHelp() ? "var-" : "dim-");
	key.append(nameObject.getName());
	var settings = new oFF.FdSessionBasedSettings();
	settings.setupSettings(key.toString());
	return settings;
};
oFF.FdSessionBasedSettings.createEmpty = function()
{
	var obj = new oFF.FdSessionBasedSettings();
	obj.setupSettings(null);
	return obj;
};
oFF.FdSessionBasedSettings.prototype.m_cacheKey = null;
oFF.FdSessionBasedSettings.prototype.setupSettings = function(cacheKey)
{
	this.m_cacheKey = cacheKey;
	if (oFF.isNull(oFF.FdSessionBasedSettings.s_readModes))
	{
		oFF.FdSessionBasedSettings.s_readModes = oFF.XHashMapByString.create();
		oFF.FdSessionBasedSettings.s_displayInfos = oFF.XHashMapByString.create();
		oFF.FdSessionBasedSettings.s_additionalPresentations = oFF.XHashMapByString.create();
		oFF.FdSessionBasedSettings.s_hierarchies = oFF.XHashMapByString.create();
	}
};
oFF.FdSessionBasedSettings.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_cacheKey = null;
};
oFF.FdSessionBasedSettings.prototype.getReadMode = function()
{
	return oFF.FdSessionBasedSettings.s_readModes.getByKey(this.m_cacheKey);
};
oFF.FdSessionBasedSettings.prototype.setReadMode = function(readMode)
{
	if (oFF.notNull(this.m_cacheKey))
	{
		if (oFF.isNull(readMode))
		{
			oFF.FdSessionBasedSettings.s_readModes.remove(this.m_cacheKey);
		}
		else
		{
			oFF.FdSessionBasedSettings.s_readModes.put(this.m_cacheKey, readMode);
		}
	}
};
oFF.FdSessionBasedSettings.prototype.setSelectedPresentations = function(mainPresentation, additionalPresentations)
{
	if (oFF.notNull(this.m_cacheKey))
	{
		oFF.FdSessionBasedSettings.s_displayInfos.put(this.m_cacheKey, oFF.FdPresentationUtils.mapPresentationToDisplayInfo(mainPresentation));
		oFF.FdSessionBasedSettings.s_additionalPresentations.remove(this.m_cacheKey);
		if (oFF.XCollectionUtils.hasElements(additionalPresentations))
		{
			oFF.FdSessionBasedSettings.s_additionalPresentations.put(this.m_cacheKey, oFF.FdPresentationUtils.getPresentationNames(additionalPresentations));
		}
	}
};
oFF.FdSessionBasedSettings.prototype.getMainPresentationDisplayInfo = function()
{
	return oFF.FdSessionBasedSettings.s_displayInfos.getByKey(this.m_cacheKey);
};
oFF.FdSessionBasedSettings.prototype.getAdditionalPresentations = function(availablePresentations)
{
	return oFF.FdPresentationUtils.getPresentationsByName(oFF.FdSessionBasedSettings.s_additionalPresentations.getByKey(this.m_cacheKey), availablePresentations);
};
oFF.FdSessionBasedSettings.prototype.getHierarchies = function()
{
	var hierarchies = oFF.FdSessionBasedSettings.s_hierarchies.getByKey(this.m_cacheKey);
	return oFF.notNull(hierarchies) ? hierarchies.getFirstObject().createListOfStringCopy() : null;
};
oFF.FdSessionBasedSettings.prototype.getHierarchiesDueDate = function()
{
	var hierarchies = oFF.FdSessionBasedSettings.s_hierarchies.getByKey(this.m_cacheKey);
	return oFF.notNull(hierarchies) ? hierarchies.getSecondObject() : null;
};
oFF.FdSessionBasedSettings.prototype.setHierarchies = function(hierarchies, dueDate)
{
	if (oFF.notNull(this.m_cacheKey))
	{
		if (oFF.isNull(hierarchies))
		{
			oFF.FdSessionBasedSettings.s_hierarchies.remove(this.m_cacheKey);
		}
		else
		{
			oFF.FdSessionBasedSettings.s_hierarchies.put(this.m_cacheKey, oFF.XPair.create(hierarchies.createListOfStringCopy(), dueDate));
		}
	}
};

oFF.FdDimensionsByTextComparator = function() {};
oFF.FdDimensionsByTextComparator.prototype = new oFF.XObject();
oFF.FdDimensionsByTextComparator.prototype._ff_c = "FdDimensionsByTextComparator";

oFF.FdDimensionsByTextComparator.create = function()
{
	return new oFF.FdDimensionsByTextComparator();
};
oFF.FdDimensionsByTextComparator.prototype.compare = function(o1, o2)
{
	var text1 = o1.getText();
	if (oFF.XStringUtils.isNullOrEmpty(text1))
	{
		text1 = o1.getName();
	}
	var text2 = o2.getText();
	if (oFF.XStringUtils.isNullOrEmpty(text2))
	{
		text2 = o2.getName();
	}
	return oFF.XString.compare(text1, text2);
};

oFF.FdItemFactory = function() {};
oFF.FdItemFactory.prototype = new oFF.XObject();
oFF.FdItemFactory.prototype._ff_c = "FdItemFactory";

oFF.FdItemFactory.createFactory = function()
{
	return new oFF.FdItemFactory();
};
oFF.FdItemFactory.createValueHelpItem = function(node, hierarchyName)
{
	return oFF.FdValueHelpItem.create(node, hierarchyName);
};
oFF.FdItemFactory.createHierarchyCatalogItem = function(item)
{
	return oFF.FdHierarchyCatalogItem.createHierarchyCatalogItem(item);
};
oFF.FdItemFactory.createItemByKey = function(key, displayKey, text)
{
	return oFF.FdSimpleItem.create(key, displayKey, text);
};
oFF.FdItemFactory.createRange = function(low, high, excludedRange)
{
	return oFF.FdRangeItem.create(low, high, excludedRange);
};
oFF.FdItemFactory.createDateRangeDynamic = function(dateRange)
{
	return oFF.FdDynamicDateRangeItem.create(dateRange);
};
oFF.FdItemFactory.createDateRangeFixed = function(min, max, granularity)
{
	return oFF.FdFixedDateRangeItem.create(min, max, granularity);
};
oFF.FdItemFactory.createEmpty = function()
{
	return oFF.FdSimpleItem.create(null, null, null);
};
oFF.FdItemFactory.createNull = function()
{
	var item = oFF.FdSimpleItem.create("", "", null);
	item.setNull(true);
	return item;
};
oFF.FdItemFactory.createOperand = function(dimVar, memberFilter, valueBag)
{
	var key = null;
	var value = valueBag.getValue();
	if (oFF.notNull(value))
	{
		key = value.getStringRepresentation();
	}
	var displayKey = valueBag.getDisplayKeySupplement(memberFilter);
	var text = valueBag.getTextSupplement(memberFilter);
	if (oFF.isNull(key) && oFF.isNull(displayKey) && oFF.isNull(text))
	{
		return null;
	}
	if (dimVar.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NAME_VARIABLE))
	{
		displayKey = key;
	}
	return oFF.FdSimpleItem.create(key, displayKey, text);
};
oFF.FdItemFactory.prototype.newItem = function(key, displayKey, text)
{
	return this.newItemWithType(key, displayKey, text, null);
};
oFF.FdItemFactory.prototype.newItemExt = function(key, displayKey, text, operator)
{
	var item = this.newItemWithType(key, displayKey, text, null);
	item.setComparisonOperator(operator);
	return item;
};
oFF.FdItemFactory.prototype.newItemWithType = function(key, displayKey, text, valueType)
{
	return oFF.FdSimpleItem.createWithType(key, displayKey, text, valueType);
};
oFF.FdItemFactory.prototype.newValueHelpItem = function(node)
{
	if (oFF.notNull(node))
	{
		var dim = node.getDimension();
		var hierarchyName = dim.isSelectorHierarchyActive() ? (oFF.XStringUtils.isNotNullAndNotEmpty(dim.getSelectorHierarchyName()) ? dim.getSelectorHierarchyName() : dim.getHierarchyName()) : null;
		return oFF.FdItemFactory.createValueHelpItem(node, hierarchyName);
	}
	return null;
};
oFF.FdItemFactory.prototype.newRangeItem = function(low, high, excludedRange)
{
	return oFF.FdRangeItem.create(low, high, excludedRange);
};
oFF.FdItemFactory.prototype.newEmptyItem = function()
{
	return oFF.FdItemFactory.createEmpty();
};
oFF.FdItemFactory.prototype.newNullItem = function()
{
	return oFF.FdItemFactory.createNull();
};
oFF.FdItemFactory.prototype.createSelectionFromFilter = function(dimension, filter)
{
	var selection = oFF.XList.create();
	if (oFF.notNull(dimension) && oFF.notNull(filter) && oFF.XString.isEqual(filter.getDimensionName(), dimension.getName()))
	{
		for (var i = 0; i < filter.size(); i++)
		{
			var cartesianElement = filter.getCartesianElement(i);
			var comparisonOperator = cartesianElement.getComparisonOperator();
			if (comparisonOperator === oFF.ComparisonOperator.IS_NULL)
			{
				var nullItem = oFF.FdItemFactory.createNull();
				nullItem.setExcluded(cartesianElement.getSetSign() === oFF.SetSign.EXCLUDING);
				selection.add(nullItem);
				continue;
			}
			var low = cartesianElement.getLow();
			if (low.getValue() === null)
			{
				continue;
			}
			var item = this.createItem(filter, cartesianElement, low, dimension);
			if ((comparisonOperator === oFF.ComparisonOperator.BETWEEN || comparisonOperator === oFF.ComparisonOperator.NOT_BETWEEN) && cartesianElement.getHigh() !== null)
			{
				var highItem = this.createItem(filter, cartesianElement, cartesianElement.getHigh(), dimension);
				if (oFF.notNull(item) && oFF.notNull(highItem))
				{
					item.setComparisonOperator(oFF.FdComparisonOperator.EQUAL);
					highItem.setComparisonOperator(oFF.FdComparisonOperator.EQUAL);
					item = oFF.FdRangeItem.create(item, highItem, comparisonOperator === oFF.ComparisonOperator.NOT_BETWEEN || (comparisonOperator === oFF.ComparisonOperator.BETWEEN && cartesianElement.getSetSign() === oFF.SetSign.EXCLUDING));
				}
			}
			if (oFF.notNull(item))
			{
				selection.add(item);
			}
		}
	}
	return selection;
};
oFF.FdItemFactory.prototype.createItem = function(filter, cartesianElement, valueBag, dimension)
{
	var filterField = filter.getField();
	var isFilterOnKey = filterField === dimension.getFlatKeyField() || filterField === dimension.getHierarchyKeyField();
	var isFilterOnDisplayKey = !isFilterOnKey && (filterField === dimension.getFlatDisplayKeyField() || filterField === dimension.getHierarchyDisplayKeyField());
	var isFilterOnText = !isFilterOnKey && !isFilterOnDisplayKey && (filterField === dimension.getFlatTextField() || filterField === dimension.getHierarchyTextField());
	var filterValue = valueBag.getValue().getStringRepresentation();
	var key = filterValue;
	if (!isFilterOnKey)
	{
		key = valueBag.getSupplementValueString(dimension.getFlatKeyField().getName());
		if (oFF.isNull(key))
		{
			key = valueBag.getSupplementValueString(dimension.getHierarchyKeyField().getName());
		}
	}
	var displayKey = isFilterOnDisplayKey ? filterValue : valueBag.getDisplayKeySupplement(filter);
	var text = isFilterOnText ? filterValue : valueBag.getTextSupplement(filter);
	if (oFF.notNull(key) || oFF.notNull(displayKey) || oFF.notNull(text))
	{
		var item = oFF.FdSimpleItem.createWithType(key, displayKey, text, valueBag.getValueType());
		item.setComparisonOperator(oFF.FdComparisonOperator.lookup(cartesianElement.getComparisonOperator().getName()));
		item.setExcluded(cartesianElement.getSetSign() === oFF.SetSign.EXCLUDING);
		item.setHierarchyName(oFF.XStringUtils.isNotNullAndNotEmpty(cartesianElement.getHierarchyName()) ? cartesianElement.getHierarchyName() : filter.getHierarchyName());
		return item;
	}
	return null;
};
oFF.FdItemFactory.prototype.createSelectionFromVariable = function(variable)
{
	var selection = oFF.XList.create();
	var memberFilter = variable.getMemberFilter();
	for (var i = 0; i < memberFilter.size(); i++)
	{
		var filterOp = memberFilter.getOp(i);
		var filterPart = filterOp.getLow();
		if (filterPart.getValueType() === oFF.XValueType.VARIABLE)
		{
			continue;
		}
		var comparisonOperator = filterOp.getComparisonOperator();
		if (comparisonOperator === oFF.ComparisonOperator.IS_NULL)
		{
			selection.add(oFF.FdItemFactory.createNull());
			continue;
		}
		else if (comparisonOperator !== oFF.ComparisonOperator.EQUAL)
		{
			continue;
		}
		var operand = oFF.FdItemFactory.createOperand(variable, memberFilter, filterPart);
		if (oFF.notNull(operand))
		{
			selection.add(operand);
		}
	}
	return selection;
};

oFF.FdFunctionalValuesModel = function() {};
oFF.FdFunctionalValuesModel.prototype = new oFF.XObject();
oFF.FdFunctionalValuesModel.prototype._ff_c = "FdFunctionalValuesModel";

oFF.FdFunctionalValuesModel.create = function()
{
	var model = new oFF.FdFunctionalValuesModel();
	model.m_functionControllers = oFF.XList.create();
	return model;
};
oFF.FdFunctionalValuesModel.prototype.m_functionControllers = null;
oFF.FdFunctionalValuesModel.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_functionControllers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_functionControllers);
};
oFF.FdFunctionalValuesModel.prototype.addFunctionController = function(functionController)
{
	this.m_functionControllers.add(functionController);
};
oFF.FdFunctionalValuesModel.prototype.getFunctionSize = function()
{
	return this.m_functionControllers.size();
};
oFF.FdFunctionalValuesModel.prototype.getFunctions = function()
{
	var list = oFF.XList.create();
	oFF.XCollectionUtils.forEach(this.m_functionControllers,  function(controller){
		list.add(oFF.XPairOfString.create(controller.getName(), controller.getDescription()));
	}.bind(this));
	return list;
};
oFF.FdFunctionalValuesModel.prototype.onFunctionTabSelected = function(name, container)
{
	oFF.XStream.of(this.m_functionControllers).filter( function(controller){
		return oFF.XString.isEqual(controller.getName(), name);
	}.bind(this)).findAny().ifPresent( function(functionController){
		functionController.onTabSelected(container);
	}.bind(this));
};

oFF.FdHierarchyModel = function() {};
oFF.FdHierarchyModel.prototype = new oFF.XObject();
oFF.FdHierarchyModel.prototype._ff_c = "FdHierarchyModel";

oFF.FdHierarchyModel.create = function()
{
	var hierarchyModel = new oFF.FdHierarchyModel();
	hierarchyModel.m_hierarchies = oFF.XListOfString.create();
	hierarchyModel.m_hierarchyChangeListeners = oFF.XList.create();
	hierarchyModel.m_availableHierarchiesChangeListeners = oFF.XList.create();
	return hierarchyModel;
};
oFF.FdHierarchyModel.prototype.m_hierarchies = null;
oFF.FdHierarchyModel.prototype.m_availableHierarchiesChangeListeners = null;
oFF.FdHierarchyModel.prototype.m_activeHierarchy = null;
oFF.FdHierarchyModel.prototype.m_activeHierarchyChanged = false;
oFF.FdHierarchyModel.prototype.m_hierarchyChangeListeners = null;
oFF.FdHierarchyModel.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_hierarchies = oFF.XObjectExt.release(this.m_hierarchies);
	this.m_activeHierarchy = null;
	this.m_hierarchyChangeListeners = oFF.XObjectExt.release(this.m_hierarchyChangeListeners);
	this.m_availableHierarchiesChangeListeners = oFF.XObjectExt.release(this.m_availableHierarchiesChangeListeners);
};
oFF.FdHierarchyModel.prototype.registerOnAvailableHierarchiesChange = function(listener)
{
	this.m_availableHierarchiesChangeListeners.add(listener);
};
oFF.FdHierarchyModel.prototype.registerOnActiveHierarchyChange = function(listener)
{
	this.m_hierarchyChangeListeners.add(listener);
};
oFF.FdHierarchyModel.prototype.setHierarchies = function(hierarchies)
{
	this.m_hierarchies = hierarchies;
	this.ensureActiveHierarchyExistsInHierarchyList();
	if (oFF.notNull(this.m_availableHierarchiesChangeListeners))
	{
		oFF.XCollectionUtils.forEach(this.m_availableHierarchiesChangeListeners,  function(listener){
			listener.onAvailableHierarchiesChanged(this.m_hierarchies, this.m_activeHierarchy);
		}.bind(this));
	}
};
oFF.FdHierarchyModel.prototype.getHierarchies = function()
{
	return this.m_hierarchies;
};
oFF.FdHierarchyModel.prototype.setActiveHierarchy = function(activeHierarchy)
{
	if (!oFF.XString.isEqual(this.m_activeHierarchy, activeHierarchy))
	{
		var hierarchicalStateChanged = oFF.isNull(this.m_activeHierarchy) && oFF.notNull(activeHierarchy) || oFF.notNull(this.m_activeHierarchy) && oFF.isNull(activeHierarchy);
		this.m_activeHierarchy = activeHierarchy;
		this.m_activeHierarchyChanged = true;
		this.ensureActiveHierarchyExistsInHierarchyList();
		oFF.XCollectionUtils.forEach(this.m_hierarchyChangeListeners,  function(listener){
			listener.onHierarchyChanged(this.m_activeHierarchy, hierarchicalStateChanged);
		}.bind(this));
	}
};
oFF.FdHierarchyModel.prototype.getActiveHierarchy = function()
{
	return this.m_activeHierarchy;
};
oFF.FdHierarchyModel.prototype.hasActiveHierarchy = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_activeHierarchy);
};
oFF.FdHierarchyModel.prototype.isActiveHierarchyChanged = function()
{
	return this.m_activeHierarchyChanged;
};
oFF.FdHierarchyModel.prototype.resetHierarchyChangedState = function()
{
	this.m_activeHierarchyChanged = false;
};
oFF.FdHierarchyModel.prototype.ensureActiveHierarchyExistsInHierarchyList = function()
{
	if (oFF.notNull(this.m_hierarchies) && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_activeHierarchy) && !this.m_hierarchies.contains(this.m_activeHierarchy))
	{
		this.m_hierarchies.add(this.m_activeHierarchy);
	}
};

oFF.FdRangeModel = function() {};
oFF.FdRangeModel.prototype = new oFF.XObject();
oFF.FdRangeModel.prototype._ff_c = "FdRangeModel";

oFF.FdRangeModel.create = function()
{
	var model = new oFF.FdRangeModel();
	model.m_inputValueType = oFF.XValueType.LONG;
	return model;
};
oFF.FdRangeModel.prototype.m_supportedComparisonOperators = null;
oFF.FdRangeModel.prototype.m_inputValueType = null;
oFF.FdRangeModel.prototype.m_min = null;
oFF.FdRangeModel.prototype.m_max = null;
oFF.FdRangeModel.prototype.m_dimContext = null;
oFF.FdRangeModel.prototype.m_measureContext = null;
oFF.FdRangeModel.prototype.m_availableDimContextValues = null;
oFF.FdRangeModel.prototype.m_availableMeasureContextValues = null;
oFF.FdRangeModel.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_supportedComparisonOperators = oFF.XObjectExt.release(this.m_supportedComparisonOperators);
	this.m_inputValueType = null;
	this.m_min = oFF.XObjectExt.release(this.m_min);
	this.m_max = oFF.XObjectExt.release(this.m_max);
	this.m_dimContext = oFF.XObjectExt.release(this.m_dimContext);
	this.m_measureContext = null;
	this.m_availableDimContextValues = oFF.XObjectExt.release(this.m_availableDimContextValues);
	this.m_availableMeasureContextValues = oFF.XObjectExt.release(this.m_availableMeasureContextValues);
};
oFF.FdRangeModel.prototype.getSupportedComparisonOperators = function()
{
	return this.m_supportedComparisonOperators;
};
oFF.FdRangeModel.prototype.setSupportedComparisonOperators = function(supportedComparisonOperators)
{
	this.m_supportedComparisonOperators = supportedComparisonOperators;
};
oFF.FdRangeModel.prototype.getInputValueType = function()
{
	return this.m_inputValueType;
};
oFF.FdRangeModel.prototype.setInputValueType = function(inputValueType)
{
	if (oFF.notNull(inputValueType))
	{
		this.m_inputValueType = inputValueType;
	}
};
oFF.FdRangeModel.prototype.getMin = function()
{
	return this.m_min;
};
oFF.FdRangeModel.prototype.getMax = function()
{
	return this.m_max;
};
oFF.FdRangeModel.prototype.setRange = function(items)
{
	this.m_min = null;
	this.m_max = null;
	if (oFF.XCollectionUtils.hasElements(items))
	{
		var valueType = this.m_inputValueType === oFF.XValueType.NUMC ? oFF.XValueType.STRING : this.m_inputValueType;
		this.m_min = oFF.XStream.of(items).map( function(item){
			return this.getRangeValue(item, valueType);
		}.bind(this)).filterNullValues().findAny().orElse(null);
		this.m_max = this.getLastValidValue(items, valueType);
	}
};
oFF.FdRangeModel.prototype.getLastValidValue = function(items, valueType)
{
	for (var i = items.size() - 1; i >= 0; i--)
	{
		var value = this.getRangeValue(items.get(i), valueType);
		if (oFF.notNull(value))
		{
			return value;
		}
	}
	return null;
};
oFF.FdRangeModel.prototype.getRangeValue = function(item, valueType)
{
	if (oFF.notNull(item) && !item.isNull())
	{
		var valueAccess = oFF.XValueAccess.createWithType(valueType);
		var parseResult = valueAccess.parseString(item.getKey());
		if (parseResult.isValid())
		{
			return valueAccess.getValue();
		}
	}
	return null;
};
oFF.FdRangeModel.prototype.getDimContext = function()
{
	if (oFF.isNull(this.m_dimContext))
	{
		this.m_dimContext = oFF.XListOfString.create();
	}
	return this.m_dimContext;
};
oFF.FdRangeModel.prototype.setDimContext = function(contextValues)
{
	this.m_dimContext = contextValues;
};
oFF.FdRangeModel.prototype.getMeasureContext = function()
{
	return this.m_measureContext;
};
oFF.FdRangeModel.prototype.setMeasureContext = function(measureContext)
{
	this.m_measureContext = measureContext;
};
oFF.FdRangeModel.prototype.getAvailableDimContextValues = function()
{
	if (oFF.notNull(this.m_availableDimContextValues))
	{
		return this.m_availableDimContextValues;
	}
	return oFF.XList.create();
};
oFF.FdRangeModel.prototype.setAvailableDimContextValues = function(availableDimContextValues)
{
	this.m_availableDimContextValues = availableDimContextValues;
};
oFF.FdRangeModel.prototype.getAvailableMeasureContextValues = function()
{
	if (oFF.notNull(this.m_availableMeasureContextValues))
	{
		return this.m_availableMeasureContextValues;
	}
	return oFF.XList.create();
};
oFF.FdRangeModel.prototype.setAvailableMeasureContextValues = function(availableMeasureContextValues)
{
	this.m_availableMeasureContextValues = availableMeasureContextValues;
};

oFF.FdPresentation = function() {};
oFF.FdPresentation.prototype = new oFF.XObject();
oFF.FdPresentation.prototype._ff_c = "FdPresentation";

oFF.FdPresentation.create = function(name)
{
	var fdPresentation = new oFF.FdPresentation();
	fdPresentation.m_name = name;
	return fdPresentation;
};
oFF.FdPresentation.prototype.m_name = null;
oFF.FdPresentation.prototype.m_keyPresentation = null;
oFF.FdPresentation.prototype.m_textPresentation = null;
oFF.FdPresentation.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_name = null;
	this.m_keyPresentation = oFF.XObjectExt.release(this.m_keyPresentation);
	this.m_textPresentation = oFF.XObjectExt.release(this.m_textPresentation);
};
oFF.FdPresentation.prototype.addKeyPresentation = function(name, customObject, isFilterable)
{
	this.m_keyPresentation = oFF.FdPresentationValue.create(name, customObject, true, isFilterable, this);
	return this;
};
oFF.FdPresentation.prototype.addTextPresentation = function(name, customObject, isFilterable)
{
	this.m_textPresentation = oFF.FdPresentationValue.create(name, customObject, false, isFilterable, this);
	return this;
};
oFF.FdPresentation.prototype.getName = function()
{
	return this.m_name;
};
oFF.FdPresentation.prototype.isFilterable = function()
{
	return oFF.notNull(this.m_keyPresentation) && this.m_keyPresentation.isFilterable() || oFF.notNull(this.m_textPresentation) && this.m_textPresentation.isFilterable();
};
oFF.FdPresentation.prototype.getKeyPresentation = function()
{
	return this.m_keyPresentation;
};
oFF.FdPresentation.prototype.hasKeyPresentation = function()
{
	return oFF.notNull(this.m_keyPresentation);
};
oFF.FdPresentation.prototype.getTextPresentation = function()
{
	return this.m_textPresentation;
};
oFF.FdPresentation.prototype.hasTextPresentation = function()
{
	return oFF.notNull(this.m_textPresentation);
};
oFF.FdPresentation.prototype.toString = function()
{
	return this.m_name;
};

oFF.FdPresentationValue = function() {};
oFF.FdPresentationValue.prototype = new oFF.XObject();
oFF.FdPresentationValue.prototype._ff_c = "FdPresentationValue";

oFF.FdPresentationValue.create = function(name, customObject, isKey, isFilterable, parent)
{
	var type = new oFF.FdPresentationValue();
	type.m_name = name;
	type.m_customObject = customObject;
	type.m_isKey = isKey;
	type.m_filterable = isFilterable;
	type.m_parent = parent;
	return type;
};
oFF.FdPresentationValue.prototype.m_name = null;
oFF.FdPresentationValue.prototype.m_customObject = null;
oFF.FdPresentationValue.prototype.m_isKey = false;
oFF.FdPresentationValue.prototype.m_filterable = false;
oFF.FdPresentationValue.prototype.m_parent = null;
oFF.FdPresentationValue.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_name = null;
	this.m_customObject = null;
	this.m_parent = null;
};
oFF.FdPresentationValue.prototype.getName = function()
{
	return this.m_name;
};
oFF.FdPresentationValue.prototype.getCustomObject = function()
{
	return this.m_customObject;
};
oFF.FdPresentationValue.prototype.isKey = function()
{
	return this.m_isKey;
};
oFF.FdPresentationValue.prototype.toString = function()
{
	return this.m_name;
};
oFF.FdPresentationValue.prototype.isFilterable = function()
{
	return this.m_filterable;
};
oFF.FdPresentationValue.prototype.getParent = function()
{
	return this.m_parent;
};

oFF.FdViewCustomIdentifier = function() {};
oFF.FdViewCustomIdentifier.prototype = new oFF.XObject();
oFF.FdViewCustomIdentifier.prototype._ff_c = "FdViewCustomIdentifier";

oFF.FdViewCustomIdentifier.creatForSearch = function(searchValue)
{
	var identifier = new oFF.FdViewCustomIdentifier();
	identifier.m_isSearchIdentifier = true;
	identifier.m_searchValue = searchValue;
	return identifier;
};
oFF.FdViewCustomIdentifier.creatForFetchChildrenByRow = function(parentRow)
{
	var identifier = new oFF.FdViewCustomIdentifier();
	identifier.m_isFetchChildrenIdentifier = true;
	identifier.m_parentRow = parentRow;
	return identifier;
};
oFF.FdViewCustomIdentifier.creatForFetchChildrenByItem = function(parentItem)
{
	var identifier = new oFF.FdViewCustomIdentifier();
	identifier.m_isFetchChildrenIdentifier = true;
	identifier.m_parentItem = parentItem;
	return identifier;
};
oFF.FdViewCustomIdentifier.prototype.m_isSearchIdentifier = false;
oFF.FdViewCustomIdentifier.prototype.m_searchValue = null;
oFF.FdViewCustomIdentifier.prototype.m_isFetchChildrenIdentifier = false;
oFF.FdViewCustomIdentifier.prototype.m_parentRow = null;
oFF.FdViewCustomIdentifier.prototype.m_parentItem = null;
oFF.FdViewCustomIdentifier.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_searchValue = null;
	this.m_parentRow = null;
	this.m_parentItem = null;
};
oFF.FdViewCustomIdentifier.prototype.isSearchIdentifier = function()
{
	return this.m_isSearchIdentifier;
};
oFF.FdViewCustomIdentifier.prototype.getSearchValue = function()
{
	return this.m_searchValue;
};
oFF.FdViewCustomIdentifier.prototype.isFetchChildrenIdentifier = function()
{
	return this.m_isFetchChildrenIdentifier;
};
oFF.FdViewCustomIdentifier.prototype.getParentRow = function()
{
	return this.m_parentRow;
};
oFF.FdViewCustomIdentifier.prototype.getParentItem = function()
{
	return this.m_parentItem;
};

oFF.FdUiTable = function() {};
oFF.FdUiTable.prototype = new oFF.XObject();
oFF.FdUiTable.prototype._ff_c = "FdUiTable";

oFF.FdUiTable.createTable = function(layout)
{
	return oFF.FdUiTable.createFdTable(layout, oFF.UiType.TABLE);
};
oFF.FdUiTable.createResponsiveTable = function(layout)
{
	return oFF.FdUiTable.createFdTable(layout, oFF.UiType.RESPONSIVE_TABLE);
};
oFF.FdUiTable.createTreeTable = function(layout)
{
	return oFF.FdUiTable.createFdTable(layout, oFF.UiType.TREE_TABLE);
};
oFF.FdUiTable.createFdTable = function(layout, type)
{
	var table = new oFF.FdUiTable();
	table.m_layout = layout;
	table.m_tableType = type;
	table.m_table = layout.getRoot();
	return table;
};
oFF.FdUiTable.prototype.m_layout = null;
oFF.FdUiTable.prototype.m_table = null;
oFF.FdUiTable.prototype.m_tableType = null;
oFF.FdUiTable.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_table = null;
	this.m_tableType = null;
};
oFF.FdUiTable.prototype.isResponsiveTable = function()
{
	return this.m_tableType === oFF.UiType.RESPONSIVE_TABLE;
};
oFF.FdUiTable.prototype.isTreeTable = function()
{
	return this.m_tableType === oFF.UiType.TREE_TABLE;
};
oFF.FdUiTable.prototype.getTableControl = function()
{
	return this.m_table;
};
oFF.FdUiTable.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdUiTable.prototype.setBusy = function(busy)
{
	return this.m_table.setBusy(busy);
};
oFF.FdUiTable.prototype.isBusy = function()
{
	return this.m_table.isBusy();
};
oFF.FdUiTable.prototype.setCustomObject = function(customObject)
{
	return this.m_table.setCustomObject(customObject);
};
oFF.FdUiTable.prototype.getCustomObject = function()
{
	return this.m_table.getCustomObject();
};
oFF.FdUiTable.prototype.setSelectionMode = function(selectionMode)
{
	return this.m_table.setSelectionMode(selectionMode);
};
oFF.FdUiTable.prototype.getSelectionMode = function()
{
	return this.m_table.getSelectionMode();
};
oFF.FdUiTable.prototype.getFirstVisibleRow = function()
{
	return this.m_table.getFirstVisibleRow();
};
oFF.FdUiTable.prototype.setFirstVisibleRow = function(firstVisibleRow)
{
	return this.m_table.setFirstVisibleRow(firstVisibleRow);
};
oFF.FdUiTable.prototype.registerOnSelectionChange = function(listener)
{
	this.m_table.registerOnSelectionChange(listener);
};
oFF.FdUiTable.prototype.registerOnExpand = function(listener)
{
	this.m_table.registerOnExpand(listener);
};
oFF.FdUiTable.prototype.registerOnCollapse = function(listener)
{
	this.m_table.registerOnCollapse(listener);
};
oFF.FdUiTable.prototype.registerOnScroll = function(listener)
{
	this.m_table.registerOnScroll(listener);
};
oFF.FdUiTable.prototype.registerOnScrollLoad = function(listener)
{
	if (this.isResponsiveTable())
	{
		this.m_table.registerOnScrollLoad(listener);
	}
};
oFF.FdUiTable.prototype.getSelectedItems = function()
{
	return this.m_table.getSelectedItems();
};
oFF.FdUiTable.prototype.clearSelectedItems = function()
{
	this.m_table.clearSelectedItems();
};
oFF.FdUiTable.prototype.getRows = function()
{
	if (this.isTreeTable())
	{
		return this.m_table.getTreeTableRows();
	}
	if (this.isResponsiveTable())
	{
		return this.m_table.getResponsiveTableRows();
	}
	return this.m_table.getRows();
};
oFF.FdUiTable.prototype.clearRows = function()
{
	if (this.isTreeTable())
	{
		this.m_table.clearTreeTableRows();
	}
	else if (this.isResponsiveTable())
	{
		this.m_table.clearResponsiveTableRows();
	}
	else
	{
		this.m_table.clearRows();
	}
};
oFF.FdUiTable.prototype.addNewRow = function()
{
	if (this.isTreeTable())
	{
		return this.m_table.addNewTreeTableRow();
	}
	if (this.isResponsiveTable())
	{
		return this.m_table.addNewResponsiveTableRow();
	}
	return this.m_table.addNewRow();
};
oFF.FdUiTable.prototype.newRow = function()
{
	if (this.isTreeTable())
	{
		return this.m_table.newTreeTableRow();
	}
	if (this.isResponsiveTable())
	{
		return this.m_table.newResponsiveTableRow();
	}
	return this.m_table.newRow();
};
oFF.FdUiTable.prototype.addAllRows = function(rows)
{
	if (this.isTreeTable())
	{
		this.m_table.addAllTreeTableRows(this.mapList(rows));
	}
	else if (this.isResponsiveTable())
	{
		this.m_table.addAllResponsiveTableRows(this.mapList(rows));
	}
	else
	{
		this.m_table.addAllRows(this.mapList(rows));
	}
};
oFF.FdUiTable.prototype.getVisibleRowCount = function()
{
	return this.m_table.getVisibleRowCount();
};
oFF.FdUiTable.prototype.setListItemType = function(row, listItemType)
{
	if (this.isResponsiveTable())
	{
		row.setListItemType(listItemType);
	}
};
oFF.FdUiTable.prototype.getColumn = function(index)
{
	if (this.isResponsiveTable())
	{
		return this.m_table.getResponsiveTableColumn(index);
	}
	return this.m_table.getColumn(index);
};
oFF.FdUiTable.prototype.removeColumn = function(column)
{
	if (this.isResponsiveTable())
	{
		this.m_table.removeResponsiveTableColumn(column);
	}
	else
	{
		this.m_table.removeColumn(column);
	}
};
oFF.FdUiTable.prototype.removeRow = function(row)
{
	if (this.isTreeTable())
	{
		this.m_table.removeTreeTableRow(row);
	}
	else if (this.isResponsiveTable())
	{
		this.m_table.removeResponsiveTableRow(row);
	}
	else
	{
		this.m_table.removeRow(row);
	}
};
oFF.FdUiTable.prototype.hasColumns = function()
{
	if (this.isResponsiveTable())
	{
		return this.m_table.hasResponsiveTableColumns();
	}
	return this.m_table.hasColumns();
};
oFF.FdUiTable.prototype.numberOfColumns = function()
{
	if (this.isResponsiveTable())
	{
		return this.m_table.numberOfResponsiveTableColumns();
	}
	return this.m_table.numberOfColumns();
};
oFF.FdUiTable.prototype.addNewColumn = function()
{
	if (this.isResponsiveTable())
	{
		return this.m_table.addNewResponsiveTableColumn();
	}
	return this.m_table.addNewColumn();
};
oFF.FdUiTable.prototype.getColumns = function()
{
	if (this.isResponsiveTable())
	{
		return this.m_table.getResponsiveTableColumns();
	}
	return this.m_table.getColumns();
};
oFF.FdUiTable.prototype.newCell = function(tableRow)
{
	if (this.isResponsiveTable())
	{
		return oFF.FdUiTableCell.createResponsiveCell(tableRow);
	}
	return oFF.FdUiTableCell.createCell(tableRow);
};
oFF.FdUiTable.prototype.addAllCells = function(tableRow, cellList)
{
	if (this.isResponsiveTable())
	{
		var responsiveCellList = oFF.XCollectionUtils.map(cellList,  function(obj1){
			return obj1.getResponsiveTableCell();
		}.bind(this));
		tableRow.addAllResponsiveTableCells(responsiveCellList);
	}
	else
	{
		var standardCellList = oFF.XCollectionUtils.map(cellList,  function(obj2){
			return obj2.getTableCell();
		}.bind(this));
		tableRow.addAllCells(standardCellList);
	}
};
oFF.FdUiTable.prototype.clearCells = function(tableRow)
{
	if (this.isResponsiveTable())
	{
		tableRow.clearResponsiveTableCells();
	}
	else
	{
		tableRow.clearCells();
	}
};
oFF.FdUiTable.prototype.mapList = function(source)
{
	return source;
};

oFF.FdUiTableCell = function() {};
oFF.FdUiTableCell.prototype = new oFF.XObject();
oFF.FdUiTableCell.prototype._ff_c = "FdUiTableCell";

oFF.FdUiTableCell.createCell = function(row)
{
	var newCell = new oFF.FdUiTableCell();
	newCell.setupCell(row);
	return newCell;
};
oFF.FdUiTableCell.createResponsiveCell = function(responsiveRow)
{
	var newResponsiveCell = new oFF.FdUiTableCell();
	newResponsiveCell.setupResponsiveCell(responsiveRow);
	return newResponsiveCell;
};
oFF.FdUiTableCell.prototype.m_cellControl = null;
oFF.FdUiTableCell.prototype.m_responsiveCellControl = null;
oFF.FdUiTableCell.prototype.releaseObject = function()
{
	this.m_cellControl = oFF.XObjectExt.release(this.m_cellControl);
	this.m_responsiveCellControl = oFF.XObjectExt.release(this.m_responsiveCellControl);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.FdUiTableCell.prototype.setupCell = function(row)
{
	this.m_cellControl = row.newCell();
};
oFF.FdUiTableCell.prototype.setupResponsiveCell = function(responsiveRow)
{
	this.m_responsiveCellControl = responsiveRow.newResponsiveTableCellOfType(oFF.UiType.LABEL);
};
oFF.FdUiTableCell.prototype.isResponsive = function()
{
	return oFF.notNull(this.m_responsiveCellControl);
};
oFF.FdUiTableCell.prototype.setText = function(text)
{
	if (this.isResponsive())
	{
		this.m_responsiveCellControl.setText(text);
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		this.m_cellControl.setText(text);
	}
};
oFF.FdUiTableCell.prototype.getText = function()
{
	if (this.isResponsive())
	{
		return this.m_responsiveCellControl.getText();
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		return this.m_cellControl.getText();
	}
	return null;
};
oFF.FdUiTableCell.prototype.setTooltip = function(tooltip)
{
	if (this.isResponsive())
	{
		this.m_responsiveCellControl.setTooltip(tooltip);
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		this.m_cellControl.setTooltip(tooltip);
	}
};
oFF.FdUiTableCell.prototype.getTooltip = function()
{
	if (this.isResponsive())
	{
		return this.m_responsiveCellControl.getTooltip();
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		return this.m_cellControl.getTooltip();
	}
	return null;
};
oFF.FdUiTableCell.prototype.getTableCell = function()
{
	return this.m_cellControl;
};
oFF.FdUiTableCell.prototype.getResponsiveTableCell = function()
{
	return this.m_responsiveCellControl;
};
oFF.FdUiTableCell.prototype.getCustomObject = function()
{
	if (this.isResponsive())
	{
		return this.m_responsiveCellControl.getCustomObject();
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		return this.m_cellControl.getCustomObject();
	}
	return null;
};
oFF.FdUiTableCell.prototype.setCustomObject = function(customObject)
{
	if (this.isResponsive())
	{
		this.m_responsiveCellControl.setCustomObject(customObject);
	}
	else if (oFF.notNull(this.m_cellControl))
	{
		this.m_cellControl.setCustomObject(customObject);
	}
};

oFF.FdDialogLayout = function() {};
oFF.FdDialogLayout.prototype = new oFF.XObject();
oFF.FdDialogLayout.prototype._ff_c = "FdDialogLayout";

oFF.FdDialogLayout.OK_BUTTON = "okButton";
oFF.FdDialogLayout.CANCEL_BUTTON = "cancelButton";
oFF.FdDialogLayout.create = function(context)
{
	var layout = new oFF.FdDialogLayout();
	layout.m_fdContext = context;
	return layout;
};
oFF.FdDialogLayout.prototype.m_display = null;
oFF.FdDialogLayout.prototype.m_fdContext = null;
oFF.FdDialogLayout.prototype.m_okButton = null;
oFF.FdDialogLayout.prototype.m_cancelButton = null;
oFF.FdDialogLayout.prototype.m_sideTab = null;
oFF.FdDialogLayout.prototype.m_view = null;
oFF.FdDialogLayout.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_view = null;
	this.m_fdContext = null;
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_sideTab = oFF.XObjectExt.release(this.m_sideTab);
};
oFF.FdDialogLayout.prototype.isOpen = function()
{
	return oFF.notNull(this.m_display) && this.m_display.isOpen();
};
oFF.FdDialogLayout.prototype.open = function(uiContext, controller, configuration)
{
	var display = uiContext.getDisplayFactory().getInstance();
	if (oFF.isNull(display) || display !== this.m_display)
	{
		this.m_display = display;
		this.m_display.addCssClass("ffFilterDialog");
		this.m_display.setName("FilterDialog");
		this.m_display.setResizable(configuration.isResizable() && !this.m_fdContext.isMobile());
		this.m_display.registerOnAfterOpen(controller);
		this.m_display.registerOnBeforeClose(controller);
		this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
		this.m_okButton = this.m_display.addNewButton();
		this.m_okButton.setName(oFF.FdDialogLayout.OK_BUTTON);
		this.m_okButton.setText(this.m_fdContext.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_OK));
		this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
		this.m_okButton.registerOnPress(controller);
		this.m_okButton.setVisible(false);
		this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
		this.m_cancelButton = this.m_display.addNewButton();
		this.m_cancelButton.setName(oFF.FdDialogLayout.CANCEL_BUTTON);
		this.m_cancelButton.setText(this.m_fdContext.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_CANCEL));
		this.m_cancelButton.registerOnPress(controller);
	}
	this.m_display.setTitle(configuration.getTitle());
	if (configuration.getWidth() > 0 && configuration.getWidthUnit() !== null)
	{
		this.m_display.setWidth(oFF.UiCssLength.createExt(configuration.getWidth(), configuration.getWidthUnit()));
	}
	if (configuration.getHeight() > 0 && configuration.getHeightUnit() !== null)
	{
		this.m_display.setHeight(oFF.UiCssLength.createExt(configuration.getHeight(), configuration.getHeightUnit()));
	}
	this.m_display.getGenesis().newRoot(oFF.UiType.ACTIVITY_INDICATOR).useMaxSpace();
	this.m_display.open();
};
oFF.FdDialogLayout.prototype.onViewCreated = function(view)
{
	this.m_view = view;
	var genesis = this.m_display.getGenesis();
	view.buildOlapDialogUi(genesis, this.m_display.getOffsetWidth());
	genesis.setRoot(view.getLayout().getRoot());
	this.m_okButton.setVisible(true);
	this.m_display.registerOnResize(view);
};
oFF.FdDialogLayout.prototype.onViewChanged = function()
{
	this.m_view.buildOlapDialogUi(this.m_display.getGenesis(), this.m_display.getOffsetWidth());
};
oFF.FdDialogLayout.prototype.close = function()
{
	if (this.isOpen())
	{
		this.m_display.close();
	}
};
oFF.FdDialogLayout.prototype.isActivityIndicatorVisible = function()
{
	return oFF.isNull(this.m_display) || this.m_display.getGenesis().getRoot().getUiType() === oFF.UiType.ACTIVITY_INDICATOR;
};
oFF.FdDialogLayout.prototype.onTabSelected = function(container)
{
	container.setContent(this.m_view.getLayout().getRoot());
};
oFF.FdDialogLayout.prototype.onTabDeselected = function() {};
oFF.FdDialogLayout.prototype.getActiveSideTabName = function()
{
	return oFF.notNull(this.m_sideTab) ? this.m_sideTab.getActiveTabName() : null;
};
oFF.FdDialogLayout.prototype.shake = function()
{
	this.m_display.shake();
};

oFF.FdLayoutUtils = {

	createHr:function(genesis)
	{
			var separator = genesis.newControl(oFF.UiType.SEPARATOR);
		separator.setWidth(oFF.UiCssLength.create("calc(100% + 2rem)"));
		separator.setMargin(oFF.UiCssBoxEdges.create("1rem 0 1rem -1rem"));
		separator.setHeight(oFF.UiCssLength.create("0.0625rem"));
		return separator;
	},
	createErrorLabelContainer:function(genesis)
	{
			var errorLabelContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
		errorLabelContainer.setDirection(oFF.UiFlexDirection.ROW);
		errorLabelContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
		errorLabelContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
		errorLabelContainer.setName("FilterDialogErrorLabelContainer");
		errorLabelContainer.setPadding(oFF.UiCssBoxEdges.create("0.5rem"));
		return errorLabelContainer;
	},
	addDropdownItem:function(dropdown, name, text, customObject)
	{
			var dropdownItem = dropdown.addNewItem();
		dropdownItem.setName(name);
		dropdownItem.setText(text);
		dropdownItem.setCustomObject(customObject);
		return dropdownItem;
	}
};

oFF.OuQueryInformationDialogConstants = {

	MODEL_DISPLAY_NAME_KEY:"displayName",
	MODEL_SUBTYPE_KEY:"modelSubtype",
	MODEL_SUBTYPE_PLANNING:"PLANNING"
};

oFF.VdConstants = {

	BASIC_DIALOG_WIDTH:600,
	EMPTY_OPTION:"empty",
	BW_NULL_DATE:"00000000",
	BW_NULL_OPERATOR:"#",
	DATE_VALUE_FORMAT:"yyyy-MM-dd",
	DATE_DISPLAY_FORMAT:"yyyy-MM-dd"
};

oFF.VdConfiguration = function() {};
oFF.VdConfiguration.prototype = new oFF.XObject();
oFF.VdConfiguration.prototype._ff_c = "VdConfiguration";

oFF.VdConfiguration.createConfig = function(title, variableProcessor)
{
	var obj = new oFF.VdConfiguration();
	obj.setupConfig(title, variableProcessor);
	return obj;
};
oFF.VdConfiguration.prototype.m_title = null;
oFF.VdConfiguration.prototype.m_varProcessor = null;
oFF.VdConfiguration.prototype.m_dateDisplayFormat = null;
oFF.VdConfiguration.prototype.m_labelMode = null;
oFF.VdConfiguration.prototype.m_variablesToDisplay = null;
oFF.VdConfiguration.prototype.m_linkedVariableNames = null;
oFF.VdConfiguration.prototype.m_dimensionDisplayInfo = null;
oFF.VdConfiguration.prototype.m_useDatePicker = false;
oFF.VdConfiguration.prototype.m_textVariablesEnabled = false;
oFF.VdConfiguration.prototype.m_updatingDynamicVariables = false;
oFF.VdConfiguration.prototype.m_alwaysValidateSimpleType = false;
oFF.VdConfiguration.prototype.m_autoSubmitOnStartup = false;
oFF.VdConfiguration.prototype.m_functionalValuesEnabled = false;
oFF.VdConfiguration.prototype.m_hideNotBetweenOperator = false;
oFF.VdConfiguration.prototype.m_implicitSubmit = false;
oFF.VdConfiguration.prototype.m_variantManagement = false;
oFF.VdConfiguration.prototype.m_startValues = null;
oFF.VdConfiguration.prototype.m_valueJsonFormat = null;
oFF.VdConfiguration.prototype.m_startValuesJson = null;
oFF.VdConfiguration.prototype.setupConfig = function(title, variableProcessor)
{
	this.m_title = title;
	this.m_varProcessor = variableProcessor;
	this.m_dateDisplayFormat = oFF.VdConstants.DATE_DISPLAY_FORMAT;
	this.m_labelMode = oFF.DialogLabelMode.TEXT;
	this.m_useDatePicker = true;
	this.m_textVariablesEnabled = true;
	this.m_updatingDynamicVariables = true;
	this.m_implicitSubmit = true;
	this.m_variantManagement = true;
};
oFF.VdConfiguration.prototype.getTitle = function()
{
	return this.m_title;
};
oFF.VdConfiguration.prototype.setTitle = function(title)
{
	this.m_title = title;
};
oFF.VdConfiguration.prototype.getVarProcessor = function()
{
	return this.m_varProcessor;
};
oFF.VdConfiguration.prototype.setVarProcessor = function(varProcessor)
{
	this.m_varProcessor = varProcessor;
};
oFF.VdConfiguration.prototype.getLabelMode = function()
{
	return this.m_labelMode;
};
oFF.VdConfiguration.prototype.setLabelMode = function(labelMode)
{
	this.m_labelMode = labelMode;
};
oFF.VdConfiguration.prototype.getDateDisplayFormat = function()
{
	return this.m_dateDisplayFormat;
};
oFF.VdConfiguration.prototype.setDateDisplayFormat = function(dateDisplayFormat)
{
	if (oFF.XStringUtils.isNullOrEmpty(dateDisplayFormat))
	{
		this.m_dateDisplayFormat = oFF.VdConstants.DATE_DISPLAY_FORMAT;
	}
	else
	{
		this.m_dateDisplayFormat = dateDisplayFormat;
	}
};
oFF.VdConfiguration.prototype.getVariablesToDisplay = function()
{
	return this.m_variablesToDisplay;
};
oFF.VdConfiguration.prototype.setVariablesToDisplay = function(variablesToDisplay)
{
	this.m_variablesToDisplay = variablesToDisplay;
};
oFF.VdConfiguration.prototype.getStartValues = function()
{
	return this.m_startValues;
};
oFF.VdConfiguration.prototype.setStartValues = function(startValues)
{
	this.m_startValues = startValues;
};
oFF.VdConfiguration.prototype.useDatePicker = function()
{
	return this.m_useDatePicker;
};
oFF.VdConfiguration.prototype.setUseDatePicker = function(useDatePicker)
{
	this.m_useDatePicker = useDatePicker;
};
oFF.VdConfiguration.prototype.setTextVariablesEnabled = function(textVariablesEnabled)
{
	this.m_textVariablesEnabled = textVariablesEnabled;
};
oFF.VdConfiguration.prototype.isTextVariablesEnabled = function()
{
	return this.m_textVariablesEnabled;
};
oFF.VdConfiguration.prototype.setUpdatingDynamicVariables = function(updatingDynamicVariables)
{
	this.m_updatingDynamicVariables = updatingDynamicVariables;
};
oFF.VdConfiguration.prototype.isUpdatingDynamicVariables = function()
{
	return this.m_updatingDynamicVariables;
};
oFF.VdConfiguration.prototype.addDimensionDisplayInfo = function(dimensionName, displayInfo)
{
	if (oFF.XStringUtils.isNullOrEmpty(dimensionName))
	{
		return;
	}
	if (oFF.isNull(this.m_dimensionDisplayInfo))
	{
		this.m_dimensionDisplayInfo = oFF.XHashMapByString.create();
	}
	this.m_dimensionDisplayInfo.putIfNotNull(dimensionName, displayInfo);
};
oFF.VdConfiguration.prototype.getDimensionDisplayInfo = function(dimensionName)
{
	return oFF.notNull(this.m_dimensionDisplayInfo) ? this.m_dimensionDisplayInfo.getByKey(dimensionName) : null;
};
oFF.VdConfiguration.prototype.setAlwaysValidateSimpleType = function(alwaysValidateSimpleType)
{
	this.m_alwaysValidateSimpleType = alwaysValidateSimpleType;
};
oFF.VdConfiguration.prototype.isAlwaysValidatingSimpleType = function()
{
	return this.m_alwaysValidateSimpleType;
};
oFF.VdConfiguration.prototype.setAutoSubmitOnStartup = function(autoSubmitOnStartup)
{
	this.m_autoSubmitOnStartup = autoSubmitOnStartup;
};
oFF.VdConfiguration.prototype.isAutoSubmitOnStartup = function()
{
	return this.m_autoSubmitOnStartup;
};
oFF.VdConfiguration.prototype.setFunctionalValuesEnabled = function(functionalValuesEnabled)
{
	this.m_functionalValuesEnabled = functionalValuesEnabled;
};
oFF.VdConfiguration.prototype.isFunctionalValuesEnabled = function()
{
	return this.m_functionalValuesEnabled;
};
oFF.VdConfiguration.prototype.hideOperatorNotBetween = function(hide)
{
	this.m_hideNotBetweenOperator = hide;
};
oFF.VdConfiguration.prototype.isHidingOperatorNotBetween = function()
{
	return this.m_hideNotBetweenOperator;
};
oFF.VdConfiguration.prototype.setStartValuesJson = function(format, startValuesJson)
{
	this.m_valueJsonFormat = format;
	this.m_startValuesJson = startValuesJson;
};
oFF.VdConfiguration.prototype.getValueJsonFormat = function()
{
	return this.m_valueJsonFormat;
};
oFF.VdConfiguration.prototype.getStartValueJson = function()
{
	return this.m_startValuesJson;
};
oFF.VdConfiguration.prototype.setImplicitSubmit = function(implicitSubmit)
{
	this.m_implicitSubmit = implicitSubmit;
};
oFF.VdConfiguration.prototype.useImplicitSubmit = function()
{
	return this.m_implicitSubmit;
};
oFF.VdConfiguration.prototype.setLinkedVariableNames = function(linkedVariableNames)
{
	this.m_linkedVariableNames = linkedVariableNames;
};
oFF.VdConfiguration.prototype.isLinkedVariable = function(varName)
{
	return oFF.notNull(this.m_linkedVariableNames) && this.m_linkedVariableNames.contains(varName);
};
oFF.VdConfiguration.prototype.setVariantManagementEnabled = function(enabled)
{
	this.m_variantManagement = enabled;
};
oFF.VdConfiguration.prototype.isVariantManagementEnabled = function()
{
	return this.m_variantManagement;
};
oFF.VdConfiguration.prototype.releaseObject = function()
{
	this.m_title = null;
	this.m_varProcessor = null;
	this.m_labelMode = null;
	this.m_dateDisplayFormat = null;
	this.m_variablesToDisplay = null;
	this.m_startValues = null;
	this.m_linkedVariableNames = null;
	this.m_dimensionDisplayInfo = oFF.XObjectExt.release(this.m_dimensionDisplayInfo);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdImportExport = {

	setValuesToProcessor:function(processor, values)
	{
			var keys = values.getKeysAsIteratorOfString();
		while (keys.hasNext())
		{
			var varName = keys.next();
			var variable = processor.getVariable(varName);
			if (oFF.notNull(variable))
			{
				oFF.VdImportExport.setValuesToVariable(variable, values.getByKey(varName));
			}
		}
	},
	setValuesToVariable:function(variable, values)
	{
			variable.clear();
		if (!oFF.XCollectionUtils.hasElements(values))
		{
			return;
		}
		if (variable.hasExternalRepresentation())
		{
			variable.setExternalRepresentation(null);
		}
		var variableType = variable.getVariableType();
		if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			var dimVar = variable;
			var dimension = dimVar.getDimension();
			var memberFilter = dimVar.getMemberFilter();
			memberFilter.addSupplementField(dimension.getDisplayKeyField());
			memberFilter.addSupplementField(dimension.getTextField());
			var useDisplayKeys = oFF.VdImportExport.submitOnDisplayKeys(values);
			var keyNotCompoundField = !useDisplayKeys && oFF.VdImportExport.useKeyNotCompound(dimVar) ? dimension.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND) : null;
			if (useDisplayKeys)
			{
				memberFilter.setField(dimension.getDisplayKeyField());
			}
			else if (oFF.notNull(keyNotCompoundField))
			{
				memberFilter.setField(keyNotCompoundField);
			}
			var valueType = variable.getValueType();
			var memberField = memberFilter.getField();
			if (memberField === dimension.getHierarchyKeyField() && memberField.getValueType() !== dimension.getFlatKeyField().getValueType())
			{
				valueType = dimension.getFlatKeyField().getValueType();
			}
			for (var i = 0; i < values.size(); i++)
			{
				var vdValue = values.get(i);
				if (vdValue.isEmpty())
				{
					continue;
				}
				var operator = vdValue.getOperator();
				var setSign = oFF.SetSign.INCLUDING;
				if (operator === oFF.VdComparisonOperator.NOT_EQUAL)
				{
					operator = oFF.VdComparisonOperator.EQUAL;
					setSign = oFF.SetSign.EXCLUDING;
				}
				else if (operator === oFF.VdComparisonOperator.BETWEEN && oFF.VdImportExport.switchComparisonOperatorBetweenToEqual(vdValue, dimVar))
				{
					operator = oFF.VdComparisonOperator.EQUAL;
				}
				else if (operator === oFF.VdComparisonOperator.NOT_BETWEEN)
				{
					operator = oFF.VdImportExport.switchComparisonOperatorBetweenToEqual(vdValue, dimVar) ? oFF.VdComparisonOperator.EQUAL : oFF.VdComparisonOperator.BETWEEN;
					setSign = oFF.SetSign.EXCLUDING;
				}
				else if (operator === oFF.VdComparisonOperator.IS_NOT_NULL)
				{
					operator = oFF.VdComparisonOperator.IS_NULL;
					setSign = oFF.SetSign.EXCLUDING;
				}
				var filterElement = memberFilter.addNewCartesianElement();
				filterElement.setComparisonOperator(operator.getOriginOperator());
				filterElement.setSetSign(setSign);
				if (operator.getNumberOfParameters() < 1)
				{
					continue;
				}
				var firstValue = oFF.VdImportExport.getValue(vdValue.getFirstOperand(), useDisplayKeys, keyNotCompoundField);
				if (!oFF.VdImportExport.trySetValue(firstValue, dimension, filterElement.getLow(), vdValue.getFirstOperand(), valueType))
				{
					memberFilter.removeElement(filterElement);
					continue;
				}
				if (operator.getNumberOfParameters() < 2)
				{
					continue;
				}
				var secondValue = oFF.VdImportExport.getValue(vdValue.getSecondOperand(), useDisplayKeys, keyNotCompoundField);
				if (!oFF.VdImportExport.trySetValue(secondValue, dimension, filterElement.getHigh(), vdValue.getSecondOperand(), valueType))
				{
					memberFilter.removeElement(filterElement);
				}
			}
		}
		else if (variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
		{
			var optionVar = variable;
			if (!optionVar.supportsMultipleValues())
			{
				optionVar.setOptionByName(values.get(0).getFirstOperand().getKey());
			}
			else
			{
				for (var j = 0; j < values.size(); j++)
				{
					optionVar.addOptionByName(values.get(j).getFirstOperand().getKey());
				}
			}
		}
		else if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
		{
			var simpleVar = variable;
			if (!simpleVar.supportsMultipleValues())
			{
				simpleVar.setValueByString(oFF.VdImportExport.getSimpleTypeValue(variable, values.get(0)));
			}
			else
			{
				for (var k = 0; k < values.size(); k++)
				{
					simpleVar.addValueByString(oFF.VdImportExport.getSimpleTypeValue(variable, values.get(k)));
				}
			}
		}
	},
	switchComparisonOperatorBetweenToEqual:function(value, dimVar)
	{
			if (value.isOperandFilled(oFF.VdValue.FIRST) && !value.isOperandFilled(oFF.VdValue.SECOND))
		{
			var supportedOperators = dimVar.getFilterCapability().getSupportedComparisonOperators(oFF.SetSign.INCLUDING);
			return oFF.notNull(supportedOperators) && supportedOperators.contains(value.getOperator() === oFF.VdComparisonOperator.BETWEEN ? oFF.ComparisonOperator.EQUAL : oFF.ComparisonOperator.NOT_EQUAL);
		}
		return false;
	},
	getValue:function(item, useDisplayKeys, keyNotCompoundField)
	{
			if (useDisplayKeys)
		{
			return item.getDisplayKey();
		}
		else if (oFF.notNull(keyNotCompoundField))
		{
			var keyNotCompound = item.getValueByField(keyNotCompoundField);
			if (oFF.notNull(keyNotCompound))
			{
				return keyNotCompound;
			}
		}
		return item.getKey();
	},
	trySetValue:function(value, dimension, valueBag, item, valueType)
	{
			var highValue = oFF.VdImportExport.createXValue(valueType, value);
		if (oFF.isNull(highValue))
		{
			if (valueType.isDateBased())
			{
				highValue = oFF.VdImportExport.createXValue(oFF.XValueType.STRING, value);
			}
			if (oFF.isNull(highValue))
			{
				return false;
			}
		}
		valueBag.setValue(highValue);
		oFF.VdImportExport.addSupplementValues(dimension, valueBag, item);
		return true;
	},
	submitOnDisplayKeys:function(values)
	{
			var keysAvailable = true;
		var displayKeysAvailable = true;
		for (var j = 0; j < values.size(); j++)
		{
			var vdValue = values.get(j);
			var operator = vdValue.getOperator();
			if (vdValue.isEmpty() || operator.getNumberOfParameters() <= 0)
			{
				continue;
			}
			var firstOperand = vdValue.getFirstOperand();
			var firstDisplayKey = firstOperand.getDisplayKey();
			if (!oFF.XString.isEqual(firstDisplayKey, oFF.VdConstants.BW_NULL_OPERATOR))
			{
				keysAvailable = keysAvailable && firstOperand.getKey() !== null;
				displayKeysAvailable = displayKeysAvailable && oFF.notNull(firstDisplayKey);
			}
			if (operator.getNumberOfParameters() < 2)
			{
				continue;
			}
			var secondOperand = vdValue.getSecondOperand();
			var secondDisplayKey = secondOperand.getDisplayKey();
			if (!oFF.XString.isEqual(secondDisplayKey, oFF.VdConstants.BW_NULL_OPERATOR))
			{
				keysAvailable = keysAvailable && secondOperand.getKey() !== null;
				displayKeysAvailable = displayKeysAvailable && oFF.notNull(secondDisplayKey);
			}
		}
		return !keysAvailable && displayKeysAvailable;
	},
	addSupplementValues:function(dimension, valueBag, operand)
	{
			var displayKeyField = dimension.getDisplayKeyField();
		if (oFF.notNull(displayKeyField))
		{
			valueBag.addSupplementValue(displayKeyField.getName(), operand.getDisplayKey());
		}
		var textField = dimension.getTextField();
		if (oFF.notNull(textField))
		{
			valueBag.addSupplementValue(textField.getName(), operand.getText());
		}
	},
	getSimpleTypeValue:function(variable, value)
	{
			var key = value.getFirstOperand().getKey();
		if (variable.getValueType().isTypeOf(oFF.XValueType.NUMBER) && oFF.XStringUtils.isNotNullAndNotEmpty(key) && oFF.XStringUtils.isNullOrEmpty(oFF.UiNumberFormatterCenter.getCenter().parseFormattedNumber(key)))
		{
			return null;
		}
		return key;
	},
	createXValue:function(type, key)
	{
			var firstAccess = oFF.XValueAccess.createWithType(type);
		firstAccess.parseString(key);
		return firstAccess.getValue();
	},
	getValuesFromProcessor:function(variableProcessor)
	{
			var result = oFF.XHashMapByString.create();
		var variables = variableProcessor.getInputEnabledAndNonTechnicalVariables();
		for (var i = 0; i < variables.size(); i++)
		{
			var variable = variables.get(i);
			result.put(variable.getName(), oFF.VdImportExport.getValuesFromVariable(variable));
		}
		return result;
	},
	getDynamicFilterValuesFromProcessor:function(variableProcessor)
	{
			var result = oFF.XHashMapByString.create();
		var variables = variableProcessor.getInputEnabledAndNonTechnicalVariables();
		for (var i = 0; i < variables.size(); i++)
		{
			var variable = variables.get(i);
			if (!variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
			{
				continue;
			}
			result.putIfNotNull(variable.getName(), oFF.VdImportExport.getDynamicFilterValues(variable));
		}
		return result;
	},
	getValuesFromVariable:function(variable)
	{
			var variableType = variable.getVariableType();
		if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			return oFF.VdImportExport.getDimensionMemberValues(variable);
		}
		else if (variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
		{
			return oFF.VdImportExport.getOptionListValues(variable);
		}
		return oFF.VdImportExport.getSimpleTypeValues(variable);
	},
	getSimpleTypeValues:function(simpleVar)
	{
			var values = oFF.XList.create();
		if (!simpleVar.supportsMultipleValues())
		{
			var simpleValue = simpleVar.getValue();
			if (oFF.notNull(simpleValue))
			{
				var item = oFF.FdSimpleItem.create(simpleValue.getStringRepresentation(), null, null);
				values.add(oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, item, null));
			}
		}
		else
		{
			var simpleValues = simpleVar.getValues();
			for (var i = 0; i < simpleValues.size(); i++)
			{
				var fdItem = oFF.FdSimpleItem.create(simpleValues.get(i).getStringRepresentation(), null, null);
				values.add(oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, fdItem, null));
			}
		}
		return values;
	},
	getOptionListValues:function(optionVar)
	{
			var values = oFF.XList.create();
		var option = optionVar.getCurrentOption();
		if (oFF.notNull(option))
		{
			var item = oFF.FdSimpleItem.create(option.getName(), null, option.getText());
			values.add(oFF.VdValue.createValue(oFF.VdComparisonOperator.UNDEFINED, item, null));
		}
		return values;
	},
	getDimensionMemberValues:function(dimVar)
	{
			var values = oFF.XList.create();
		if (dimVar.hasMemberFilter())
		{
			values = oFF.VdImportExport.getDimensionMemberValuesFromFilter(dimVar, dimVar.getMemberFilter());
		}
		return values;
	},
	getDynamicFilterValues:function(dimVar)
	{
			if (!dimVar.isUsedInDynamicFilter() || dimVar.getDimension().getAxisType() === oFF.AxisType.REPOSITORY || !oFF.VdImportExport.useDynamicFilterForVariable(dimVar))
		{
			return null;
		}
		var values = oFF.XList.create();
		var dynamicFilter = dimVar.getQueryModel().getFilter().getDynamicFilter();
		var cartesianList;
		if (!dynamicFilter.isComplexFilter())
		{
			cartesianList = dynamicFilter.getCartesianProductWithDefault().getCartesianList(dimVar.getDimension());
			if (oFF.notNull(cartesianList))
			{
				values = oFF.VdImportExport.getDimensionMemberValuesFromFilter(dimVar, cartesianList);
			}
		}
		else
		{
			cartesianList = oFF.VdImportExport.searchChildrenForList(dimVar, dynamicFilter);
			if (oFF.notNull(cartesianList))
			{
				values = oFF.VdImportExport.getDimensionMemberValuesFromFilter(dimVar, cartesianList);
			}
		}
		return values;
	},
	useDynamicFilterForVariable:function(dimVar)
	{
			return !oFF.VdImportExport.useKeyNotCompound(dimVar);
	},
	useKeyNotCompound:function(dimVar)
	{
			if (dimVar.getDimension().isCompound())
		{
			var systemName = dimVar.getDataSource().getSystemName();
			var systemDescription = dimVar.getApplication().getSystemLandscape().getSystemDescription(systemName);
			if (oFF.notNull(systemDescription) && systemDescription.getSystemType().isTypeOf(oFF.SystemType.BW))
			{
				var varType = dimVar.getVariableType();
				return oFF.isNull(varType) || !varType.isTypeOf(oFF.VariableType.HIERARCHY_NODE_VARIABLE) || oFF.XStringUtils.isNullOrEmpty(dimVar.getHierarchyName());
			}
		}
		return false;
	},
	searchChildrenForList:function(dimVar, element)
	{
			var childrenIterator = element.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var child = childrenIterator.next();
			if (child.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				var cartesianList = child;
				if (oFF.XString.isEqual(cartesianList.getDimensionName(), dimVar.getDimension().getName()))
				{
					return cartesianList;
				}
			}
			else
			{
				var children = oFF.VdImportExport.searchChildrenForList(dimVar, child);
				if (oFF.notNull(children))
				{
					return children;
				}
			}
		}
		return null;
	},
	getDimensionMemberValuesFromFilter:function(dimVar, memberFilter)
	{
			var values = oFF.XList.create();
		for (var i = 0; i < memberFilter.size(); i++)
		{
			var filterOp = memberFilter.getOp(i);
			if (filterOp.getLow().getValueType() === oFF.XValueType.VARIABLE)
			{
				continue;
			}
			var vdOperator = oFF.VdComparisonOperator.lookupExt(filterOp.getComparisonOperator().getName(), filterOp.getSetSign() === oFF.SetSign.EXCLUDING);
			if (oFF.isNull(vdOperator))
			{
				continue;
			}
			if (vdOperator.isNullOperator())
			{
				values.add(oFF.VdValue.createValue(vdOperator, oFF.FdItemFactory.createNull(), null));
				continue;
			}
			var first = oFF.VdImportExport.createOperand(dimVar, memberFilter, filterOp.getLow());
			var second = oFF.VdImportExport.createOperand(dimVar, memberFilter, filterOp.getHigh());
			values.add(oFF.VdValue.createValue(vdOperator, first, second));
		}
		return values;
	},
	createOperand:function(dimVar, memberFilter, valueBag)
	{
			var key = null;
		var value = valueBag.getValue();
		if (oFF.notNull(value))
		{
			key = value.getStringRepresentation();
		}
		var displayKey = valueBag.getDisplayKeySupplement(memberFilter);
		var text = valueBag.getTextSupplement(memberFilter);
		if (oFF.isNull(key) && oFF.isNull(displayKey) && oFF.isNull(text))
		{
			return null;
		}
		if (dimVar.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NAME_VARIABLE))
		{
			displayKey = key;
		}
		return oFF.FdSimpleItem.create(key, displayKey, text);
	}
};

oFF.VdStartupAction = function() {};
oFF.VdStartupAction.prototype = new oFF.XObject();
oFF.VdStartupAction.prototype._ff_c = "VdStartupAction";

oFF.VdStartupAction.createAndRun = function(form, onSuccess, onFailure)
{
	var obj = new oFF.VdStartupAction();
	obj.setupAndRun(form, onSuccess, onFailure);
	return obj;
};
oFF.VdStartupAction.prototype.m_form = null;
oFF.VdStartupAction.prototype.m_onSuccess = null;
oFF.VdStartupAction.prototype.m_onFailure = null;
oFF.VdStartupAction.prototype.setupAndRun = function(form, onSuccess, onFailure)
{
	this.m_form = form;
	this.m_onSuccess = onSuccess;
	this.m_onFailure = onFailure;
	this.runAction();
};
oFF.VdStartupAction.prototype.releaseObject = function()
{
	this.m_form = null;
	this.m_onSuccess = null;
	this.m_onFailure = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdStartupAction.prototype.runAction = function()
{
	var queryListener = oFF.OuQueryExecutionListenerLambda.createSingleUse( function(queryResult){
		if (queryResult.isValid())
		{
			this.m_form.setDynamicVariables(true);
		}
		this.initialUpdateDescriptions();
	}.bind(this));
	this.m_form.getStateHandler().reinitVariables(oFF.VariableProcessorCallbackLambda.createSingleUse( function(variableResult){
		if (variableResult.hasErrors())
		{
			this.m_onFailure(variableResult);
			oFF.XObjectExt.release(queryListener);
			return;
		}
		if (!this.m_form.hasDynamicVariables() || !this.m_form.isUpdatingDynamicVariables())
		{
			this.initialUpdateDescriptions();
			oFF.XObjectExt.release(queryListener);
			return;
		}
		this.m_form.getVariableProcessor().updateDynamicVariables(oFF.OlapUiValueHelpAbstract.s_syncType, queryListener, null);
	}.bind(this)), null);
};
oFF.VdStartupAction.prototype.initialUpdateDescriptions = function()
{
	this.m_form.setBusy(true);
	oFF.VdValueHelp.updateDescriptions(this.m_form.getVariableProcessor(), this.m_form.getModel().getCurrentValues(),  function(){
		this.m_form.setBusy(false);
		this.m_onSuccess();
	}.bind(this));
};

oFF.VdValueRenderer = function() {};
oFF.VdValueRenderer.prototype = new oFF.XObject();
oFF.VdValueRenderer.prototype._ff_c = "VdValueRenderer";

oFF.VdValueRenderer.create = function(context, config, view, variable, value)
{
	var obj = new oFF.VdValueRenderer();
	obj.setupConfigurator(context, config, view, variable, value);
	return obj;
};
oFF.VdValueRenderer.prototype.m_context = null;
oFF.VdValueRenderer.prototype.m_config = null;
oFF.VdValueRenderer.prototype.m_view = null;
oFF.VdValueRenderer.prototype.m_variable = null;
oFF.VdValueRenderer.prototype.m_value = null;
oFF.VdValueRenderer.prototype.setupConfigurator = function(context, config, view, variable, value)
{
	this.m_context = context;
	this.m_config = config;
	this.m_view = view;
	this.m_variable = variable;
	this.m_value = value;
	var valueName;
	var type = this.m_variable.getVariableType();
	if (type === oFF.VariableType.DIMENSION_MEMBER_VARIABLE)
	{
		valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_MEMBER_ID);
	}
	else if (type === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
	{
		valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NAME);
	}
	else if (type === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
	{
		valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NODE);
	}
	else
	{
		var valueType = this.m_variable.getValueType();
		if (valueType.isString())
		{
			valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_STRING);
		}
		else if (valueType.isNumber())
		{
			valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_NUMBER);
		}
		else
		{
			valueName = context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VALUE);
		}
	}
	var placeholder = context.getLocalization().getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_ENTER, valueName);
	this.m_view.getInput1().setPlaceholder(placeholder);
	this.m_view.getInput2().setPlaceholder(placeholder);
};
oFF.VdValueRenderer.prototype.update = function(labelMode, inputEnabled)
{
	var type = this.m_variable.getVariableType();
	if (this.m_variable.getValueType().isBoolean())
	{
		this.drawBooleanList(inputEnabled);
	}
	else if (type.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		this.drawDimension(labelMode, inputEnabled);
	}
	else if (type.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		this.drawOptionList(inputEnabled);
	}
	else
	{
		this.drawSimple(inputEnabled);
	}
};
oFF.VdValueRenderer.prototype.drawDimension = function(labelMode, inputEnabled)
{
	var comp = this.m_value.getOperator();
	var interval = this.m_variable.isInterval();
	var showTwoInputs = interval && comp.getNumberOfParameters() > 1;
	this.setupComparisonDropdown(comp);
	this.m_view.getDropdown().setEnabled(inputEnabled);
	this.m_view.setDeleteLineButtonVisible(this.m_value !== this.m_variable.getInputValue(), this.m_variable.getValues().isEmpty()).setEnabled(inputEnabled);
	if (this.m_view.getDatePicker1() !== oFF.UiContextDummy.getSingleton())
	{
		this.m_view.setInput1Visible(false);
		this.m_view.setInput2Visible(false);
		this.m_view.getValueHelpButton1().setVisible(false);
		this.m_view.getValueHelpButton2().setVisible(false);
		this.m_view.getDeleteButton1().setVisible(false);
		this.m_view.getDeleteButton2().setVisible(false);
		var firstKey = this.m_value.getFirstOperand().getKey();
		if (oFF.XStringUtils.isNullOrEmpty(firstKey))
		{
			firstKey = this.m_value.getFirstOperand().getDisplayKey();
		}
		if (this.m_view.getDatePicker1().getCustomObject() !== oFF.VdControllerState.DIRTY)
		{
			var firstDate = this.getDateDisplayValue(firstKey);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(firstDate))
			{
				this.m_view.getDatePicker1().setValue(firstDate);
			}
		}
		var secondKey = this.m_value.getSecondOperand().getKey();
		if (oFF.XStringUtils.isNullOrEmpty(secondKey))
		{
			secondKey = this.m_value.getSecondOperand().getDisplayKey();
		}
		if (this.m_view.getDatePicker2().getCustomObject() !== oFF.VdControllerState.DIRTY)
		{
			var secondDate = this.getDateDisplayValue(secondKey);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(secondDate))
			{
				this.m_view.getDatePicker2().setValue(secondDate);
			}
		}
		this.m_view.getDatePicker1().setEnabled(inputEnabled);
		this.m_view.setDatePicker2Visible(showTwoInputs).setEnabled(inputEnabled);
	}
	else
	{
		var firstText = comp.isNullOperator() ? this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_NULL) : this.getDisplayValue(labelMode, this.m_value, oFF.VdValue.FIRST);
		var secondText = this.getDisplayValue(labelMode, this.m_value, oFF.VdValue.SECOND);
		var hasFirstValue = oFF.XStringUtils.isNotNullAndNotEmpty(firstText);
		var hasSecondValue = oFF.XStringUtils.isNotNullAndNotEmpty(secondText);
		this.m_view.setDatePicker1Visible(false);
		this.m_view.setDatePicker2Visible(false);
		var input1 = this.m_view.getInput1();
		if (!input1.isEditable() || !input1.isEnabled() || hasFirstValue)
		{
			input1.setText(firstText);
		}
		input1.setTooltip(comp.isNullOperator() ? firstText : this.getDisplayValue(oFF.DialogLabelMode.KEY_AND_TEXT, this.m_value, oFF.VdValue.FIRST));
		input1.setEnabled(inputEnabled);
		input1.setEditable(!hasFirstValue);
		var input2 = this.m_view.getInput2();
		if (!input2.isEditable() || !input2.isEnabled() || hasSecondValue)
		{
			input2.setText(secondText);
		}
		input2.setTooltip(showTwoInputs ? this.getDisplayValue(oFF.DialogLabelMode.KEY_AND_TEXT, this.m_value, oFF.VdValue.SECOND) : null);
		input2.setEnabled(inputEnabled);
		input2.setEditable(!hasSecondValue);
		this.m_view.setInput2Visible(showTwoInputs);
		this.m_view.getValueHelpButton1().setVisible(!hasFirstValue && this.m_variable.supportsValueHelp());
		this.m_view.getValueHelpButton1().setEnabled(inputEnabled);
		this.m_view.getValueHelpButton2().setVisible(!hasSecondValue && this.m_variable.supportsValueHelp() && showTwoInputs);
		this.m_view.getValueHelpButton2().setEnabled(inputEnabled);
		this.m_view.getDeleteButton1().setVisible(interval && hasFirstValue && !comp.isNullOperator()).setEnabled(inputEnabled);
		this.m_view.getDeleteButton2().setVisible(interval && hasSecondValue && showTwoInputs).setEnabled(inputEnabled);
	}
};
oFF.VdValueRenderer.prototype.getDateDisplayValue = function(key)
{
	if (oFF.XString.isEqual(key, oFF.VdConstants.BW_NULL_DATE))
	{
		return oFF.VdConstants.BW_NULL_OPERATOR;
	}
	if (oFF.XStringUtils.isNullOrEmpty(key))
	{
		return null;
	}
	var value = oFF.XValueAccess.createWithType(this.m_variable.getValueType());
	value.parseString(key);
	return value.getString();
};
oFF.VdValueRenderer.prototype.drawOptionList = function(inputEnabled)
{
	this.setupOptionDropdown();
	this.dropdownOnly(inputEnabled);
};
oFF.VdValueRenderer.prototype.drawBooleanList = function(inputEnabled)
{
	var i18n = this.m_context.getLocalization();
	var dropdown = this.m_view.getDropdown();
	dropdown.clearItems();
	if (!this.m_variable.isMandatory())
	{
		dropdown.addNewItem().setName(oFF.VdConstants.EMPTY_OPTION);
	}
	var itemTrue = dropdown.addNewItem();
	itemTrue.setName(oFF.XBoolean.convertToString(true));
	itemTrue.setText(i18n.getText(oFF.VariableDialogI18n.I18N_VD_TRUE));
	var itemFalse = dropdown.addNewItem();
	itemFalse.setName(oFF.XBoolean.convertToString(false));
	itemFalse.setText(i18n.getText(oFF.VariableDialogI18n.I18N_VD_FALSE));
	var currentValue = this.m_value.getFirstOperand().getKey();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(currentValue))
	{
		dropdown.setSelectedName(currentValue);
	}
	this.dropdownOnly(inputEnabled);
};
oFF.VdValueRenderer.prototype.dropdownOnly = function(inputEnabled)
{
	this.m_view.getDropdown().setEnabled(inputEnabled);
	this.m_view.getDropdown().setFlex("1 auto");
	this.m_view.setInput1Visible(false);
	this.m_view.setInput2Visible(false);
	this.m_view.getValueHelpButton1().setVisible(false);
	this.m_view.getValueHelpButton2().setVisible(false);
	this.m_view.getDeleteButton1().setVisible(false);
	this.m_view.getDeleteButton2().setVisible(false);
	this.m_view.setDeleteLineButtonVisible(false, this.m_variable.getValues().isEmpty());
	this.m_view.setDatePicker1Visible(false);
	this.m_view.setDatePicker2Visible(false);
};
oFF.VdValueRenderer.prototype.drawSimple = function(inputEnabled)
{
	this.m_view.setDatePicker1Visible(false);
	var valueType = this.m_variable.getValueType();
	var firstKey = this.m_value.getFirstOperand().getDisplayKey();
	if (oFF.XStringUtils.isNullOrEmpty(firstKey))
	{
		firstKey = this.m_value.getFirstOperand().getKey();
	}
	if (valueType.isTypeOf(oFF.XValueType.STRING))
	{
		this.m_view.getInput1().setInputType(oFF.UiInputType.TEXT);
	}
	else if (valueType.isDateBased())
	{
		var datePicker1 = this.m_view.getDatePicker1();
		datePicker1.setVisible(true).setEnabled(inputEnabled);
		if (oFF.XStringUtils.isNullOrEmpty(firstKey))
		{
			datePicker1.setValue(null);
		}
		else
		{
			var dateValue = this.getDateDisplayValue(firstKey);
			datePicker1.setValue(oFF.notNull(dateValue) ? dateValue : firstKey);
		}
	}
	if (this.m_variable.getVariableType() === oFF.VariableType.TEXT_VARIABLE)
	{
		this.m_view.getInput1().setEnabled(inputEnabled && this.m_config.isTextVariablesEnabled());
	}
	else
	{
		this.m_view.getInput1().setEnabled(inputEnabled);
	}
	this.m_view.getInput1().setText(firstKey);
	this.m_view.getInput1().setTooltip(firstKey);
	this.m_view.setDropdownVisible(false);
	this.m_view.setInput2Visible(false);
	this.m_view.getValueHelpButton1().setVisible(false);
	this.m_view.getValueHelpButton2().setVisible(false);
	this.m_view.getDeleteButton1().setVisible(false);
	this.m_view.getDeleteButton2().setVisible(false);
	var supportMultipleValues = this.m_variable.supportsMultipleValues();
	this.m_view.setDeleteLineButtonVisible(supportMultipleValues && this.m_value !== this.m_variable.getInputValue(), !supportMultipleValues || this.m_variable.getValues().isEmpty()).setEnabled(inputEnabled);
	this.m_view.setDatePicker2Visible(false);
};
oFF.VdValueRenderer.prototype.setupComparisonDropdown = function(defaultSelection)
{
	var isSmartphone = this.m_context.getDeviceInfo().isSmartphone();
	var supportedOperators = this.getSupportedComparisonOperators(defaultSelection);
	var dropdown = this.m_view.getDropdown();
	dropdown.clearItems();
	var size = supportedOperators.size();
	for (var i = 0; i < size; i++)
	{
		var op = supportedOperators.get(i);
		if (op === oFF.VdComparisonOperator.NOT_BETWEEN && op !== defaultSelection && this.m_config.isHidingOperatorNotBetween())
		{
			continue;
		}
		var text = isSmartphone ? op.getLongText(this.m_context.getLocalization()) : op.getShortText(this.m_context.getLocalization());
		dropdown.addNewItem().setCustomObject(op).setName(op.getName()).setText(text);
	}
	dropdown.setSelectedName(defaultSelection.getName());
	this.m_view.setDropdownVisible(dropdown.getItemCount() > 1);
};
oFF.VdValueRenderer.prototype.getSupportedComparisonOperators = function(defaultSelection)
{
	var supportedComparisonOperators = this.m_variable.getSupportedComparisonOperators();
	if (defaultSelection === oFF.VdComparisonOperator.UNDEFINED || supportedComparisonOperators.contains(defaultSelection))
	{
		return supportedComparisonOperators;
	}
	var supportedOperators = oFF.XListOfNameObject.create();
	supportedOperators.addAll(supportedComparisonOperators);
	supportedOperators.add(defaultSelection);
	return supportedOperators;
};
oFF.VdValueRenderer.prototype.setupOptionDropdown = function()
{
	var optionNames = oFF.XListOfString.create();
	var options = this.m_variable.getOptions();
	var dropdown = this.m_view.getDropdown();
	dropdown.clearItems();
	var variable = this.m_variable.getVariable();
	var currencyVar = variable.getProcessingType() === oFF.ProcessingType.CURRENCY_CONVERSION;
	if (!this.m_variable.isMandatory() || currencyVar)
	{
		var emptyItem = dropdown.addNewItem();
		emptyItem.setName(oFF.VdConstants.EMPTY_OPTION);
		if (currencyVar)
		{
			emptyItem.setText(this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_EMPTY_CURRENCY_OPTION_TEXT));
		}
		optionNames.add(oFF.VdConstants.EMPTY_OPTION);
	}
	for (var j = 0; j < options.size(); j++)
	{
		var option = options.get(j);
		dropdown.addNewItem().setName(option.getName()).setText(option.getText());
		optionNames.add(option.getName());
	}
	var selectedOption = this.m_value.getFirstOperand().getKey();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(selectedOption))
	{
		if (!optionNames.contains(selectedOption))
		{
			dropdown.addNewItem().setName(selectedOption).setText(selectedOption);
		}
		dropdown.setSelectedName(selectedOption);
	}
};
oFF.VdValueRenderer.prototype.getDisplayValue = function(labelMode, value, operandIndex)
{
	var operand = value.getOperand(operandIndex);
	var key = operand.getDisplayKey();
	var hasKey = oFF.XStringUtils.isNotNullAndNotEmpty(key);
	if (!hasKey)
	{
		key = operand.getKey();
		hasKey = oFF.XStringUtils.isNotNullAndNotEmpty(key);
	}
	var text = operand.getText();
	var hasText = oFF.XStringUtils.isNotNullAndNotEmpty(text);
	var dimension = this.m_variable.getVariable().getDimension();
	var keyField = dimension.getKeyField();
	if (hasText)
	{
		text = this.formatText(text, key, dimension.getTextField(), keyField);
	}
	else if (hasKey)
	{
		key = this.formatText(key, key, keyField, keyField);
	}
	var result = key;
	if (labelMode === oFF.DialogLabelMode.KEY_AND_TEXT && hasText)
	{
		result = hasKey ? oFF.XStringUtils.concatenate4("[", key, "] ", text) : text;
	}
	else if (labelMode === oFF.DialogLabelMode.TEXT && hasText)
	{
		result = text;
	}
	if (oFF.notNull(result) && oFF.XString.size(result) === 0)
	{
		return this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_NO_VALUE);
	}
	return result;
};
oFF.VdValueRenderer.prototype.formatText = function(text, key, textField, keyField)
{
	if (oFF.notNull(keyField) && keyField.getValueType().isDateTime())
	{
		return oFF.UiNumberFormatterCenter.getCenter().formatTextForDateTimeKey(text, key, keyField.getValueType());
	}
	if (oFF.notNull(textField) && textField.getValueType().isTypeOf(oFF.XValueType.NUMBER))
	{
		var formattedText = oFF.UiNumberFormatterCenter.getCenter().format(text);
		return oFF.XStringUtils.isNotNullAndNotEmpty(formattedText) ? formattedText : text;
	}
	return text;
};
oFF.VdValueRenderer.prototype.releaseObject = function()
{
	this.m_view = null;
	this.m_value = null;
	this.m_variable = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVariableOrderComparator = function() {};
oFF.VdVariableOrderComparator.prototype = new oFF.XObject();
oFF.VdVariableOrderComparator.prototype._ff_c = "VdVariableOrderComparator";

oFF.VdVariableOrderComparator.INSTANCE = null;
oFF.VdVariableOrderComparator.getComparator = function()
{
	if (oFF.isNull(oFF.VdVariableOrderComparator.INSTANCE))
	{
		oFF.VdVariableOrderComparator.INSTANCE = new oFF.VdVariableOrderComparator();
	}
	return oFF.VdVariableOrderComparator.INSTANCE;
};
oFF.VdVariableOrderComparator.prototype.compare = function(o1, o2)
{
	var order1 = o1.getOrder();
	var order2 = o2.getOrder();
	if (order1 < order2)
	{
		return -1;
	}
	if (order1 > order2)
	{
		return 1;
	}
	return 0;
};

oFF.VdValue = function() {};
oFF.VdValue.prototype = new oFF.XObject();
oFF.VdValue.prototype._ff_c = "VdValue";

oFF.VdValue.FIRST = 0;
oFF.VdValue.SECOND = 1;
oFF.VdValue.EMPTY_OPERAND = null;
oFF.VdValue.NEXT_ID = 0;
oFF.VdValue.createValue = function(operator, first, second)
{
	var obj = new oFF.VdValue();
	obj.setupValue(operator, first, second);
	return obj;
};
oFF.VdValue.cloneValueMap = function(original)
{
	var clone = oFF.XHashMapByString.create();
	var keys = original.getKeysAsIteratorOfString();
	while (keys.hasNext())
	{
		var varName = keys.next();
		var values = original.getByKey(varName);
		clone.put(varName, oFF.XCollectionUtils.createListOfClones(values));
	}
	return clone;
};
oFF.VdValue.prototype.m_id = null;
oFF.VdValue.prototype.m_initialOperator = null;
oFF.VdValue.prototype.m_operator = null;
oFF.VdValue.prototype.m_firstOperand = null;
oFF.VdValue.prototype.m_secondOperand = null;
oFF.VdValue.prototype.m_firstValueState = null;
oFF.VdValue.prototype.m_secondValueState = null;
oFF.VdValue.prototype.m_firstValueStateText = null;
oFF.VdValue.prototype.m_secondValueStateText = null;
oFF.VdValue.prototype.m_listeners = null;
oFF.VdValue.prototype.m_valueStateListeners = null;
oFF.VdValue.prototype.setupValue = function(operator, first, second)
{
	this.m_id = oFF.XInteger.convertToString(oFF.VdValue.NEXT_ID);
	oFF.VdValue.NEXT_ID = oFF.VdValue.NEXT_ID + 1;
	this.m_operator = oFF.notNull(operator) ? operator : oFF.VdComparisonOperator.UNDEFINED;
	this.m_initialOperator = this.m_operator;
	this.m_firstOperand = first;
	this.m_secondOperand = second;
	this.m_listeners = oFF.XList.create();
	this.m_valueStateListeners = oFF.XList.create();
	this.m_firstValueState = oFF.UiValueState.NONE;
	this.m_secondValueState = oFF.UiValueState.NONE;
};
oFF.VdValue.prototype.createShallowCopy = function()
{
	var value = new oFF.VdValue();
	value.m_operator = this.m_operator;
	value.m_initialOperator = this.m_initialOperator;
	value.m_firstOperand = this.m_firstOperand;
	value.m_secondOperand = this.m_secondOperand;
	value.m_id = this.m_id;
	value.m_listeners = oFF.XList.create();
	value.m_valueStateListeners = oFF.XList.create();
	return value;
};
oFF.VdValue.prototype.getId = function()
{
	return this.m_id;
};
oFF.VdValue.prototype.isFilled = function()
{
	return this.isOperandFilled(oFF.VdValue.FIRST) && (this.m_operator.getNumberOfParameters() < 2 || this.isOperandFilled(oFF.VdValue.SECOND));
};
oFF.VdValue.prototype.isEmpty = function()
{
	return !this.isOperandFilled(oFF.VdValue.FIRST) && (this.m_operator.getNumberOfParameters() < 2 || !this.isOperandFilled(oFF.VdValue.SECOND));
};
oFF.VdValue.prototype.hasErrors = function()
{
	if (this.m_operator.getNumberOfParameters() < 1)
	{
		return false;
	}
	return this.getFirstValueState() === oFF.UiValueState.ERROR || this.m_operator.getNumberOfParameters() > 1 && this.getSecondValueState() === oFF.UiValueState.ERROR;
};
oFF.VdValue.prototype.clear = function()
{
	if (this.m_operator !== this.m_initialOperator || this.isOperandSet(0) || this.isOperandSet(1))
	{
		this.m_operator = this.m_initialOperator;
		this.m_firstOperand = oFF.VdValue.EMPTY_OPERAND;
		this.m_secondOperand = oFF.VdValue.EMPTY_OPERAND;
		this.callListener();
	}
};
oFF.VdValue.prototype.isOperandSet = function(index)
{
	var operand = index === 0 ? this.m_firstOperand : this.m_secondOperand;
	return oFF.notNull(operand) && operand !== oFF.VdValue.EMPTY_OPERAND;
};
oFF.VdValue.prototype.isOperandFilled = function(index)
{
	var operand = this.getOperand(index);
	return operand.getKey() !== null || operand.getDisplayKey() !== null;
};
oFF.VdValue.prototype.getOperator = function()
{
	return this.m_operator;
};
oFF.VdValue.prototype.setOperator = function(operator)
{
	if (oFF.isNull(operator))
	{
		return;
	}
	if (operator.getNumberOfParameters() < 2)
	{
		this.m_secondOperand = oFF.VdValue.EMPTY_OPERAND;
	}
	if (operator.isNullOperator())
	{
		this.m_firstOperand = oFF.FdItemFactory.createNull();
	}
	else if (operator.getNumberOfParameters() < 1 || this.m_operator.isNullOperator())
	{
		this.m_firstOperand = oFF.VdValue.EMPTY_OPERAND;
	}
	this.m_operator = operator;
	this.callListener();
};
oFF.VdValue.prototype.getOperand = function(index)
{
	if (index < 0 || index > 1)
	{
		throw oFF.XException.createIllegalArgumentException("illegal index");
	}
	return index === 0 ? this.getFirstOperand() : this.getSecondOperand();
};
oFF.VdValue.prototype.getFirstOperand = function()
{
	if (oFF.isNull(this.m_firstOperand))
	{
		return this.getEmptyOperand();
	}
	return this.m_firstOperand;
};
oFF.VdValue.prototype.getSecondOperand = function()
{
	if (oFF.isNull(this.m_secondOperand))
	{
		return this.getEmptyOperand();
	}
	return this.m_secondOperand;
};
oFF.VdValue.prototype.setOperand = function(index, operand)
{
	if (index < 0 || index > 1)
	{
		throw oFF.XException.createIllegalArgumentException("illegal index");
	}
	this.resetValueState(index);
	if (index === 0)
	{
		this.m_firstOperand = operand;
	}
	else
	{
		this.m_secondOperand = operand;
	}
	this.callListener();
};
oFF.VdValue.prototype.updateOperandOrder = function()
{
	if (this.operandSwitchRequired())
	{
		var first = this.m_firstOperand;
		this.m_firstOperand = this.m_secondOperand;
		this.m_secondOperand = first;
		this.callListener();
	}
};
oFF.VdValue.prototype.operandSwitchRequired = function()
{
	return this.m_operator.getNumberOfParameters() === 2 && oFF.notNull(this.m_firstOperand) && oFF.notNull(this.m_secondOperand) && (this.m_firstOperand.getKey() !== null && this.m_secondOperand.getKey() !== null || this.m_firstOperand.hasDisplayKey() && this.m_secondOperand.hasDisplayKey()) && this.m_firstOperand.compareTo(this.m_secondOperand) > 0;
};
oFF.VdValue.prototype.setFirstOperand = function(first)
{
	this.setOperand(0, first);
};
oFF.VdValue.prototype.setSecondOperand = function(second)
{
	this.setOperand(1, second);
};
oFF.VdValue.prototype.removeFirstOperand = function()
{
	this.removeOperand(0);
};
oFF.VdValue.prototype.removeSecondOperand = function()
{
	this.removeOperand(1);
};
oFF.VdValue.prototype.removeOperand = function(index)
{
	if (index < 0 || index > 1)
	{
		throw oFF.XException.createIllegalArgumentException("illegal index");
	}
	if (this.isOperandSet(index))
	{
		this.setOperand(index, oFF.VdValue.EMPTY_OPERAND);
	}
};
oFF.VdValue.prototype.cloneExt = function(flags)
{
	return oFF.VdValue.createValue(this.m_operator, this.m_firstOperand, this.m_secondOperand);
};
oFF.VdValue.prototype.setWarning = function(index, msg)
{
	this.setValueState(index, msg, oFF.UiValueState.WARNING);
};
oFF.VdValue.prototype.setError = function(index, msg)
{
	this.setValueState(index, msg, oFF.UiValueState.ERROR);
};
oFF.VdValue.prototype.resetValueState = function(index)
{
	this.setValueState(index, "", oFF.UiValueState.NONE);
};
oFF.VdValue.prototype.setValueState = function(index, text, state)
{
	if (index <= 0)
	{
		this.m_firstValueStateText = text;
		this.m_firstValueState = state;
	}
	if (index < 0 || index === 1)
	{
		this.m_secondValueStateText = text;
		this.m_secondValueState = state;
	}
	this.callValueStateListener();
};
oFF.VdValue.prototype.getFirstValueState = function()
{
	return this.m_firstValueState;
};
oFF.VdValue.prototype.getSecondValueState = function()
{
	return this.m_secondValueState;
};
oFF.VdValue.prototype.getFirstValueStateText = function()
{
	return this.m_firstValueStateText;
};
oFF.VdValue.prototype.getSecondValueStateText = function()
{
	return this.m_secondValueStateText;
};
oFF.VdValue.prototype.getEmptyOperand = function()
{
	if (oFF.isNull(oFF.VdValue.EMPTY_OPERAND))
	{
		oFF.VdValue.EMPTY_OPERAND = oFF.FdItemFactory.createEmpty();
	}
	return oFF.VdValue.EMPTY_OPERAND;
};
oFF.VdValue.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherValue = other;
	return oFF.XObjectExt.areEqual(this.getOperator(), otherValue.getOperator()) && this.operandsEqualTo(otherValue);
};
oFF.VdValue.prototype.operandsEqualTo = function(otherValue)
{
	if (oFF.isNull(otherValue) || this.getOperator().getNumberOfParameters() !== otherValue.getOperator().getNumberOfParameters())
	{
		return false;
	}
	var compareSecondOperand = this.getOperator().getNumberOfParameters() > 1;
	var firstOperand = this.getFirstOperand();
	var secondOperand = compareSecondOperand ? this.getSecondOperand() : null;
	var firstOperandOther = otherValue.getFirstOperand();
	var secondOperandOther = compareSecondOperand ? otherValue.getSecondOperand() : null;
	if (oFF.XObjectExt.areEqual(firstOperand, firstOperandOther) && oFF.XObjectExt.areEqual(secondOperand, secondOperandOther))
	{
		return true;
	}
	return this.operandSwitchRequired() && oFF.XObjectExt.areEqual(firstOperand, secondOperandOther) && oFF.XObjectExt.areEqual(secondOperand, firstOperandOther);
};
oFF.VdValue.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.append("{");
	buffer.append(this.m_operator.getName());
	buffer.append(", ").append(this.getFirstOperand().toString());
	var secondOperand = this.getSecondOperand().toString();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(secondOperand))
	{
		buffer.append(", ").append(secondOperand);
	}
	buffer.append("}");
	return buffer.toString();
};
oFF.VdValue.prototype.addListener = function(listener)
{
	this.m_listeners.add(listener);
};
oFF.VdValue.prototype.removeListener = function(listener)
{
	this.m_listeners.removeElement(listener);
};
oFF.VdValue.prototype.addValueStateListener = function(listener)
{
	this.m_valueStateListeners.add(listener);
};
oFF.VdValue.prototype.removeValueStateListener = function(listener)
{
	this.m_valueStateListeners.removeElement(listener);
};
oFF.VdValue.prototype.callListener = function()
{
	for (var i = this.m_listeners.size() - 1; i >= 0; i--)
	{
		this.m_listeners.get(i).onValueChanged(this);
	}
};
oFF.VdValue.prototype.callValueStateListener = function()
{
	for (var i = this.m_valueStateListeners.size() - 1; i >= 0; i--)
	{
		this.m_valueStateListeners.get(i).onValueStateChanged();
	}
};
oFF.VdValue.prototype.releaseObject = function()
{
	this.m_id = null;
	this.m_operator = null;
	this.m_firstOperand = null;
	this.m_secondOperand = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdResolveHelperHandle = function() {};
oFF.VdResolveHelperHandle.prototype = new oFF.XObject();
oFF.VdResolveHelperHandle.prototype._ff_c = "VdResolveHelperHandle";

oFF.VdResolveHelperHandle.createHandle = function(master, name)
{
	var obj = new oFF.VdResolveHelperHandle();
	obj.m_master = master;
	obj.m_name = name;
	return obj;
};
oFF.VdResolveHelperHandle.prototype.m_master = null;
oFF.VdResolveHelperHandle.prototype.m_name = null;
oFF.VdResolveHelperHandle.prototype.releaseObject = function()
{
	this.m_master = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdResolveHelperHandle.prototype.getMaster = function()
{
	return this.m_master;
};
oFF.VdResolveHelperHandle.prototype.addResult = function(value)
{
	this.m_master.addResult(this.m_name, value);
};

oFF.VdVariantManagerFactory = function() {};
oFF.VdVariantManagerFactory.prototype = new oFF.XObject();
oFF.VdVariantManagerFactory.prototype._ff_c = "VdVariantManagerFactory";

oFF.VdVariantManagerFactory.createFactory = function(context)
{
	var obj = new oFF.VdVariantManagerFactory();
	obj.m_context = context;
	return obj;
};
oFF.VdVariantManagerFactory.prototype.m_context = null;
oFF.VdVariantManagerFactory.prototype.releaseObject = function()
{
	this.m_context = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVariantManagerFactory.prototype.newVariantPopupInstance = function()
{
	return oFF.VdVariantManager.createManager(this.m_context);
};

oFF.VdVariantComparator = function() {};
oFF.VdVariantComparator.prototype = new oFF.XObject();
oFF.VdVariantComparator.prototype._ff_c = "VdVariantComparator";

oFF.VdVariantComparator.s_instance = null;
oFF.VdVariantComparator.getInstance = function()
{
	if (oFF.isNull(oFF.VdVariantComparator.s_instance))
	{
		oFF.VdVariantComparator.s_instance = new oFF.VdVariantComparator();
	}
	return oFF.VdVariantComparator.s_instance;
};
oFF.VdVariantComparator.prototype.compare = function(o1, o2)
{
	var lcA = oFF.XString.toLowerCase(o1.getText());
	var lcB = oFF.XString.toLowerCase(o2.getText());
	return oFF.XString.compare(lcA, lcB);
};

oFF.VdHeaderButtons = function() {};
oFF.VdHeaderButtons.prototype = new oFF.XObject();
oFF.VdHeaderButtons.prototype._ff_c = "VdHeaderButtons";

oFF.VdHeaderButtons.createHeaderButtons = function(uiMgr, name)
{
	var obj = new oFF.VdHeaderButtons();
	obj.setupExt(uiMgr, name);
	return obj;
};
oFF.VdHeaderButtons.prototype.m_root = null;
oFF.VdHeaderButtons.prototype.m_clearButton = null;
oFF.VdHeaderButtons.prototype.m_clipboardButton = null;
oFF.VdHeaderButtons.prototype.setupExt = function(uiMgr, name)
{
	this.m_root = uiMgr.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.addCssClass("ffVdVariableHeaderButtons");
	this.m_root.setName(oFF.XStringUtils.concatenate2("VariableHeaderButtons-", name));
	this.m_root.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setFlex("0 0 auto");
	this.m_root.setGap(oFF.UiCssGap.create("5px"));
	this.m_clearButton = this.m_root.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_clearButton.addCssClass("ffVdVariableClearButton");
	this.m_clearButton.setName(oFF.XStringUtils.concatenate2("VariableClearButton-", name));
	this.m_clearButton.setIcon("delete");
	this.m_clearButton.setTooltip("Clear");
	this.m_clearButton.setVisible(true);
	this.m_clearButton.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_clipboardButton = this.m_root.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_clipboardButton.addCssClass("ffVdVariableClipboardButton");
	this.m_clipboardButton.setName(oFF.XStringUtils.concatenate2("VariableClipboardButton-", name));
	this.m_clipboardButton.setIcon("paste");
	this.m_clipboardButton.setTooltip("Clipboard");
	this.m_clipboardButton.setVisible(true);
	this.m_clipboardButton.setButtonType(oFF.UiButtonType.TRANSPARENT);
};
oFF.VdHeaderButtons.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdHeaderButtons.prototype.getClearButton = function()
{
	return this.m_clearButton;
};
oFF.VdHeaderButtons.prototype.getClipboardButton = function()
{
	return this.m_clipboardButton;
};
oFF.VdHeaderButtons.prototype.releaseObject = function()
{
	this.m_clearButton = oFF.XObjectExt.release(this.m_clearButton);
	this.m_clipboardButton = oFF.XObjectExt.release(this.m_clipboardButton);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVariableView = function() {};
oFF.VdVariableView.prototype = new oFF.XObject();
oFF.VdVariableView.prototype._ff_c = "VdVariableView";

oFF.VdVariableView.MOBILE_ICON_FONT_SIZE = "18px";
oFF.VdVariableView.create = function(uiMgr, name, headerButtons)
{
	var obj = new oFF.VdVariableView();
	obj.setupVariableView(uiMgr, name, headerButtons);
	return obj;
};
oFF.VdVariableView.prototype.m_uiMgr = null;
oFF.VdVariableView.prototype.m_name = null;
oFF.VdVariableView.prototype.m_root = null;
oFF.VdVariableView.prototype.m_header = null;
oFF.VdVariableView.prototype.m_titleWrapper = null;
oFF.VdVariableView.prototype.m_title = null;
oFF.VdVariableView.prototype.m_body = null;
oFF.VdVariableView.prototype.m_moreValuesBtn = null;
oFF.VdVariableView.prototype.m_icons = null;
oFF.VdVariableView.prototype.m_dynamicFilterInfoIcon = null;
oFF.VdVariableView.prototype.m_dynamicFilterInfoPopover = null;
oFF.VdVariableView.prototype.m_headerButtons = null;
oFF.VdVariableView.prototype.m_valueViews = null;
oFF.VdVariableView.prototype.setupVariableView = function(uiMgr, name, headerButtons)
{
	this.m_uiMgr = uiMgr;
	this.m_name = name;
	this.m_valueViews = oFF.XList.create();
	this.buildUi();
	this.m_headerButtons = headerButtons;
	if (oFF.notNull(this.m_headerButtons))
	{
		this.m_header.addItem(this.m_headerButtons.getRoot());
	}
};
oFF.VdVariableView.prototype.releaseObject = function()
{
	this.m_uiMgr = null;
	this.m_dynamicFilterInfoIcon = oFF.XObjectExt.release(this.m_dynamicFilterInfoIcon);
	this.m_dynamicFilterInfoPopover = oFF.XObjectExt.release(this.m_dynamicFilterInfoPopover);
	this.m_headerButtons = oFF.XObjectExt.release(this.m_headerButtons);
	this.m_valueViews = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_valueViews);
	this.m_header = oFF.XObjectExt.release(this.m_header);
	this.m_title = oFF.XObjectExt.release(this.m_title);
	this.m_body = oFF.XObjectExt.release(this.m_body);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVariableView.prototype.buildUi = function()
{
	this.m_root = this.m_uiMgr.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_root.addCssClass("ffVdVariable");
	this.m_root.setName(oFF.XStringUtils.concatenate2("Variable-", this.m_name));
	this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 0 1.5rem 0"));
	this.m_header = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_header.addCssClass("ffVdVariableHeader");
	this.m_header.setName(oFF.XStringUtils.concatenate2("VariableHeader-", this.m_name));
	this.m_header.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_header.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_header.setWidth(oFF.UiCssLength.create("100%"));
	this.m_header.setHeight(oFF.UiCssLength.create("auto"));
	this.m_header.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_titleWrapper = this.m_header.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_titleWrapper.addCssClass("ffVdVariableTitleWrapper");
	this.m_titleWrapper.setName(oFF.XStringUtils.concatenate2("VariableTitleWrapper-", this.m_name));
	this.m_titleWrapper.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_titleWrapper.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_title = this.m_titleWrapper.addNewItemOfType(oFF.UiType.LABEL);
	this.m_title.addCssClass("ffVdVariableTitle");
	this.m_title.setName(oFF.XStringUtils.concatenate2("VariableTitle-", this.m_name));
	this.m_title.setWrapping(true);
	this.m_title.setFontWeight(oFF.UiFontWeight.BOLD);
	this.m_icons = this.m_titleWrapper.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_icons.addCssClass("ffVdVariableHeaderIcons");
	this.m_icons.setName(oFF.XStringUtils.concatenate2("VariableIcons-", this.m_name));
	this.m_icons.setFlex("0 0 auto");
	this.m_body = this.m_root.addNewItemOfType(oFF.UiType.VERTICAL_LAYOUT);
	this.m_body.addCssClass("ffVdVariableBody");
	this.m_body.setName(oFF.XStringUtils.concatenate2("VariableBody-", this.m_name));
};
oFF.VdVariableView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdVariableView.prototype.insertValue = function(index, view)
{
	this.m_valueViews.insert(index, view);
	this.m_body.insertItem(view.getRoot(), index);
};
oFF.VdVariableView.prototype.addValue = function(view)
{
	this.m_valueViews.add(view);
	this.m_body.addItem(view.getRoot());
};
oFF.VdVariableView.prototype.removeValue = function(view)
{
	this.m_body.removeItem(view.getRoot());
	this.m_valueViews.removeElement(view);
};
oFF.VdVariableView.prototype.clearValues = function()
{
	this.m_moreValuesBtn = null;
	this.m_body.clearItems();
	this.m_valueViews.clear();
};
oFF.VdVariableView.prototype.getMoreButton = function()
{
	if (oFF.notNull(this.m_moreValuesBtn))
	{
		return this.m_moreValuesBtn;
	}
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdVariableView.prototype.getMoreButtonIndex = function()
{
	if (oFF.isNull(this.m_moreValuesBtn))
	{
		return -1;
	}
	return this.m_body.getIndexOfItem(this.m_moreValuesBtn);
};
oFF.VdVariableView.prototype.showMoreButton = function()
{
	if (oFF.isNull(this.m_moreValuesBtn))
	{
		this.m_moreValuesBtn = this.m_body.addNewItemOfType(oFF.UiType.BUTTON);
		this.m_moreValuesBtn.setName("ffVdVariableMoreValueBtn");
		this.m_moreValuesBtn.setIcon("overflow");
		this.m_moreValuesBtn.setWidth(oFF.UiCssLength.create("100%"));
		this.m_moreValuesBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	}
	return this.m_moreValuesBtn;
};
oFF.VdVariableView.prototype.hideMoreButton = function()
{
	if (this.m_body.getItems().contains(this.m_moreValuesBtn))
	{
		this.m_body.removeItem(this.m_moreValuesBtn);
	}
};
oFF.VdVariableView.prototype.getValueViews = function()
{
	return this.m_valueViews;
};
oFF.VdVariableView.prototype.getNameLabel = function()
{
	return this.m_title;
};
oFF.VdVariableView.prototype.addNewHeaderIcon = function()
{
	var icon = this.m_icons.addNewItemOfType(oFF.UiType.ICON);
	icon.setMargin(oFF.UiCssBoxEdges.create("5px"));
	if (this.m_uiMgr.getDeviceInfo().isMobile())
	{
		icon.setIconSize(oFF.UiCssLength.create(oFF.VdVariableView.MOBILE_ICON_FONT_SIZE));
		icon.setMargin(oFF.UiCssBoxEdges.create("10px"));
	}
	return icon;
};
oFF.VdVariableView.prototype.showDynamicFilterInfoIcon = function()
{
	if (oFF.isNull(this.m_dynamicFilterInfoIcon))
	{
		this.m_dynamicFilterInfoIcon = this.addNewHeaderIcon();
		this.m_dynamicFilterInfoIcon.setName("DynamicFilterInfoIco");
		this.m_dynamicFilterInfoIcon.setIcon("message-information");
		var text = this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_FILTER_INFO);
		this.m_dynamicFilterInfoPopover = oFF.OlapUiIconPopover.createPopoverWithText(this.m_uiMgr, "DynamicFilterInfoPop", this.m_dynamicFilterInfoIcon, text);
	}
};
oFF.VdVariableView.prototype.getClearButton = function()
{
	if (oFF.notNull(this.m_headerButtons))
	{
		return this.m_headerButtons.getClearButton();
	}
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdVariableView.prototype.getClipboardButton = function()
{
	if (oFF.notNull(this.m_headerButtons))
	{
		return this.m_headerButtons.getClipboardButton();
	}
	return oFF.UiContextDummy.getSingleton();
};

oFF.VdView = function() {};
oFF.VdView.prototype = new oFF.XObject();
oFF.VdView.prototype._ff_c = "VdView";

oFF.VdView.create = function(uiManager, embedded)
{
	var obj = new oFF.VdView();
	obj.setupExt(uiManager, embedded);
	return obj;
};
oFF.VdView.prototype.m_uiMgr = null;
oFF.VdView.prototype.m_variableLayouts = null;
oFF.VdView.prototype.m_root = null;
oFF.VdView.prototype.m_customSection = null;
oFF.VdView.prototype.m_variantSection = null;
oFF.VdView.prototype.m_variantDd = null;
oFF.VdView.prototype.m_embedded = false;
oFF.VdView.prototype.setupExt = function(uiManager, embedded)
{
	this.m_uiMgr = uiManager;
	this.m_variableLayouts = oFF.XHashMapByString.create();
	this.m_embedded = embedded;
	this.buildUi();
};
oFF.VdView.prototype.releaseObject = function()
{
	this.m_uiMgr = null;
	this.m_variableLayouts = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_variableLayouts);
	this.m_variantDd = oFF.XObjectExt.release(this.m_variantDd);
	this.m_variantSection = oFF.XObjectExt.release(this.m_variantSection);
	this.m_customSection = oFF.XObjectExt.release(this.m_customSection);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdView.prototype.buildUi = function()
{
	this.m_root = this.m_uiMgr.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_root.addCssClass("ffVdDialogContent");
	this.m_root.setName("VariableDialogContent");
	if (this.m_embedded)
	{
		this.m_root.addCssClass("ffVdEmbedded");
	}
	this.m_customSection = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_customSection.addCssClass("ffVdCustomSection");
	this.m_variantSection = this.m_root.addNewItemOfType(oFF.UiType.VERTICAL_LAYOUT);
	this.m_variantSection.addCssClass("ffVdVariantSection");
	this.m_variantSection.setName("VariableDialogVariant");
	this.m_variantSection.setPadding(oFF.UiCssBoxEdges.create("0 0 1.5rem 0"));
	var variantLabel = this.m_variantSection.addNewItemOfType(oFF.UiType.LABEL);
	variantLabel.setText(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_APPLY_VARIANT));
	this.m_variantDd = this.m_variantSection.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_variantDd.setName("VariableDialogVariantDd");
	this.m_variantDd.setWidth(oFF.UiCssLength.create("100%"));
	var noneItem = this.m_variantDd.addNewItem();
	noneItem.setName("VariableDialogVariantDdNoneItem");
	noneItem.setText("None");
	this.m_root.addItem(this.m_variantSection);
};
oFF.VdView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdView.prototype.getRootNativeControl = function()
{
	var tmpRoot = this.getRoot();
	return tmpRoot.getNativeControl();
};
oFF.VdView.prototype.getCustomSection = function()
{
	return this.m_customSection;
};
oFF.VdView.prototype.getVariantSection = function()
{
	return this.m_variantSection;
};
oFF.VdView.prototype.getVariantDd = function()
{
	return this.m_variantDd;
};
oFF.VdView.prototype.addVariable = function(varName, withHeaderButtons)
{
	var headerButtons = null;
	if (withHeaderButtons)
	{
		headerButtons = oFF.VdHeaderButtons.createHeaderButtons(this.m_uiMgr, varName);
	}
	var variableView = oFF.VdVariableView.create(this.m_uiMgr, varName, headerButtons);
	this.m_variableLayouts.put(varName, variableView);
	this.m_root.addItem(variableView.getRoot());
	return variableView;
};
oFF.VdView.prototype.clearVariables = function()
{
	var varNames = this.m_variableLayouts.getKeysAsReadOnlyListOfString();
	for (var i = 0; i < varNames.size(); i++)
	{
		var varName = varNames.get(i);
		var variableLayout = this.m_variableLayouts.remove(varName);
		this.m_root.removeItem(variableLayout.getRoot());
	}
};

oFF.VdAbstractValueView = function() {};
oFF.VdAbstractValueView.prototype = new oFF.XObject();
oFF.VdAbstractValueView.prototype._ff_c = "VdAbstractValueView";

oFF.VdAbstractValueView.prototype.getDropdown = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setDropdownVisible = function(visible)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getInput1 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getInput2 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setInput1Visible = function(visible)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setInput2Visible = function(visible)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getValueHelpButton1 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getValueHelpButton2 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getDeleteButton1 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getDeleteButton2 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getDeleteLineButton = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setDeleteLineButtonVisible = function(visible, isFirst)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getDatePicker1 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.getDatePicker2 = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setDateValueFormat = function(valueFormat) {};
oFF.VdAbstractValueView.prototype.setDateDisplayFormat = function(displayFormat) {};
oFF.VdAbstractValueView.prototype.setDatePicker1Visible = function(visible)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.VdAbstractValueView.prototype.setDatePicker2Visible = function(visible)
{
	return oFF.UiContextDummy.getSingleton();
};

oFF.VdAbstractValueParser = function() {};
oFF.VdAbstractValueParser.prototype = new oFF.XObject();
oFF.VdAbstractValueParser.prototype._ff_c = "VdAbstractValueParser";

oFF.VdAbstractValueParser.getSAPFormat = function(valueType, stringValue)
{
	var value = oFF.XValueAccess.createWithType(valueType);
	value.parseString(stringValue);
	if (valueType === oFF.XValueType.TIME)
	{
		return value.getTime().toSAPFormat();
	}
	if (valueType === oFF.XValueType.DATE)
	{
		return value.getDate().toSAPFormat();
	}
	if (valueType === oFF.XValueType.DATE_TIME)
	{
		return value.getDateTime().toSAPFormat();
	}
	return value.getString();
};
oFF.VdAbstractValueParser.getTextOrDisplayKey = function(item)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(item.getText()))
	{
		return item.getText();
	}
	else if (item.hasDisplayKey())
	{
		return item.getDisplayKey();
	}
	return null;
};
oFF.VdAbstractValueParser.isBw = function(variable)
{
	var systemName = variable.getDataSource().getSystemName();
	var systemDescription = variable.getApplication().getSystemLandscape().getSystemDescription(systemName);
	return systemDescription.getSystemType().isTypeOf(oFF.SystemType.ABAP);
};
oFF.VdAbstractValueParser.useKeysAsDisplayKeys = function(variable, isLinked)
{
	if (!oFF.VdAbstractValueParser.isBw(variable) || !variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		return false;
	}
	var dimVar = variable;
	if (dimVar.isEnforcedDynamicValue())
	{
		return false;
	}
	var dimension = dimVar.getDimension();
	if (!dimVar.supportsValueHelp())
	{
		return true;
	}
	return !isLinked && !dimension.isStructure() && !dimension.isHierarchyActive() && !dimVar.getValueType().isDateBased() && !dimension.getHasCheckTable();
};

oFF.VdDragonflyEntryPoint = {

	createEntryPoint:function(title, variableProcessor, listener)
	{
			var uiMgr = variableProcessor.getApplication().getUiManager();
		var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
		var context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
		var config = oFF.VdConfiguration.createConfig(title, variableProcessor);
		config.setFunctionalValuesEnabled(true);
		return oFF.VdVariableDialog.createAsDisplay(context, config, listener);
	}
};

oFF.DialogEntryPoint = function() {};
oFF.DialogEntryPoint.prototype = new oFF.XObject();
oFF.DialogEntryPoint.prototype._ff_c = "DialogEntryPoint";

oFF.DialogEntryPoint.prototype.m_uiContext = null;
oFF.DialogEntryPoint.prototype.setupEntryPoint = function(application)
{
	var uiMgr = application.getProcess().getSubSystem(oFF.SubSystemType.GUI);
	if (oFF.isNull(uiMgr))
	{
		uiMgr = application.getUiManager();
	}
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	var uiContext = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.setupEntryPointWithContext(uiContext);
};
oFF.DialogEntryPoint.prototype.setupEntryPointWithContext = function(uiContext)
{
	this.m_uiContext = uiContext;
};
oFF.DialogEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_uiContext = null;
};
oFF.DialogEntryPoint.prototype.getUiContext = function()
{
	return this.m_uiContext;
};
oFF.DialogEntryPoint.prototype.setI18nProvider = function(i18nProvider, keyMapper)
{
	if (oFF.notNull(i18nProvider) || oFF.isNull(keyMapper))
	{
		this.m_uiContext.getLocalization().setExternalLocalization(keyMapper, i18nProvider);
	}
};

oFF.UiVdFactory = function() {};
oFF.UiVdFactory.prototype = new oFF.XObject();
oFF.UiVdFactory.prototype._ff_c = "UiVdFactory";

oFF.UiVdFactory.staticSetup = function()
{
	oFF.UiAppDialogFactory.registerFactory("variablescreen", new oFF.UiVdFactory());
};
oFF.UiVdFactory.prototype.newAppDialog = function(uiManager, name)
{
	return oFF.UiVdDialog.createDialog(uiManager);
};

oFF.FdOceanEntryPoint = function() {};
oFF.FdOceanEntryPoint.prototype = new oFF.XObject();
oFF.FdOceanEntryPoint.prototype._ff_c = "FdOceanEntryPoint";

oFF.FdOceanEntryPoint.createEntryPoint = function(application)
{
	var obj = new oFF.FdOceanEntryPoint();
	obj.setupEntryPoint(application);
	return obj;
};
oFF.FdOceanEntryPoint.prototype.m_factory = null;
oFF.FdOceanEntryPoint.prototype.m_fdController = null;
oFF.FdOceanEntryPoint.prototype.setupEntryPoint = function(application)
{
	var uiMgr = application.getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	var context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_factory = oFF.FdFactory.createFactory(context);
};
oFF.FdOceanEntryPoint.prototype.createConfiguration = function(title, selectionMode, preselection)
{
	return oFF.FdConfiguration.create(title, selectionMode, preselection);
};
oFF.FdOceanEntryPoint.prototype.openWithVariable = function(variable, config, listener)
{
	if (oFF.isNull(this.m_fdController) || !this.m_fdController.isOpen())
	{
		this.m_fdController = this.m_factory.newFilterDialogInstanceForVariable(variable, config, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdOceanEntryPoint.prototype.openWithDimension = function(dimension, config, listener)
{
	if (oFF.isNull(this.m_fdController) || !this.m_fdController.isOpen())
	{
		this.m_fdController = this.m_factory.newFilterDialogInstanceForDimension(dimension, config, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdOceanEntryPoint.prototype.cancelDialog = function()
{
	if (oFF.notNull(this.m_fdController))
	{
		this.m_fdController.cancelSelection();
		this.m_fdController = oFF.XObjectExt.release(this.m_fdController);
	}
};
oFF.FdOceanEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_fdController = oFF.XObjectExt.release(this.m_fdController);
	this.m_factory = oFF.XObjectExt.release(this.m_factory);
};

oFF.OrcaConstants = {

	NAME:"name",
	DISPLAY_KEY:"displayKey",
	DISPLAY_NAME:"displayName",
	DIMENSION_ID:"dimensionId",
	IS_INPUT_ENABLED:"isInputEnabled",
	IS_MANDATORY:"isMandatory",
	VALUE_TYPE:"valueType",
	VARIABLE_TYPE:"variableType",
	SUPPORTS_MULTIPLE_VALUES:"supportsMultipleValues",
	IS_USED_IN_DYNAMIC_FILTER:"isUsedInDynamicFilter",
	VARIABLE_OBJ:"variableObj",
	OPERATORS:"operators",
	VALUE_DETAILS:"valueDetails",
	OPERATOR:"operator",
	OPERAND_1:"operand1",
	OPERAND_2:"operand2",
	DESC_1:"desc1",
	DESC_2:"desc2",
	DISPLAY_INFO_ID:"id",
	DISPLAY_INFO_DESCRIPTION:"description",
	DISPLAY_INFO_ID_AND_DESCRIPTION:"idAndDescription",
	DIMENSION_DISPLAY_INFO:"dimensionDisplayInfo",
	SELECTED_DATA:"selectedData",
	SELECTION:"selection",
	SELECTION_SINGLE:"single",
	SELECTION_MULTI:"multi",
	URL_PARAM_AUTO_SUBMIT:"autoSubmit",
	mapOrcaDisplayInfo:function(dimensionDisplayInfo, defaultDisplayInfo)
	{
			if (oFF.XStringUtils.isNotNullAndNotEmpty(dimensionDisplayInfo))
		{
			switch (dimensionDisplayInfo)
			{
				case oFF.OrcaConstants.DISPLAY_INFO_ID:
					return oFF.FdDimensionDisplayInfo.ID;

				case oFF.OrcaConstants.DISPLAY_INFO_DESCRIPTION:
					return oFF.FdDimensionDisplayInfo.DESCRIPTION;

				case oFF.OrcaConstants.DISPLAY_INFO_ID_AND_DESCRIPTION:
					return oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION;

				default:
					break;
			}
		}
		return defaultDisplayInfo;
	}
};

oFF.OrcaI18nMapping = function() {};
oFF.OrcaI18nMapping.prototype = new oFF.XObject();
oFF.OrcaI18nMapping.prototype._ff_c = "OrcaI18nMapping";

oFF.OrcaI18nMapping.KEY_MAPPING = null;
oFF.OrcaI18nMapping.create = function()
{
	if (oFF.isNull(oFF.OrcaI18nMapping.KEY_MAPPING))
	{
		oFF.OrcaI18nMapping.KEY_MAPPING = oFF.XHashMapOfStringByString.create();
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.OlapUiI18n.I18N_OK, "FIREFLY_DIALOGS_OK");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.OlapUiI18n.I18N_CANCEL, "BUTTON_CANCEL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.ClipboardDialogI18n.I18N_CB_CLIPBOARD, "FIREFLY_DIALOGS_CLIPBOARD");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.CatalogDialogI18n.I18N_CD_SEARCH, "FIREFLY_DIALOGS_SEARCH");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_FOR, "REPORT_VARIABLES_DIALOG_TITLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES, "REPORT_VARIABLES_DIALOG_TITLE_SIMPLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_PS, "REPORT_VARIABLES_DIALOG_TITLE_PLSQ");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET, "REPORT_VARIABLES_DIALOG_OKBUTTON_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_DELETE, "DELETE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ENTER, "FIREFLY_DIALOGS_ENTER");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SELECT_MEMBER_FOR, "REPORT_VARIABLES_DIM_MEM_SELECT_TITLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_MEMBER_ID, "FIREFLY_DIALOGS_MEMBER_ID");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NAME, "FIREFLY_DIALOGS_HIERARCHY_NAME");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NODE, "FIREFLY_DIALOGS_HIERARCHY_NODE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_STRING, "FIREFLY_DIALOGS_VALUE_TYPE_STRING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_NUMBER, "REPORT_VARIABLES_VALUETYPE_NUMBER");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VALUE, "FIREFLY_DIALOGS_VALUE_TYPE_DEFAULT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_STORY_LEVEL, "REPORT_VARIABLES_OPTION_STORY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_APP_LEVEL, "REPORT_VARIABLES_OPTION_APPLICATION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_CHART_LEVEL, "REPORT_VARIABLES_OPTION_CHART");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_TABLE_LEVEL, "REPORT_VARIABLES_OPTION_TABLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY, "REPORT_VARIABLES_DIALOG_FORCE_PROMPT_SETTING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY_INFO, "REPORT_VARIABLES_DIALOG_FORCE_PROMPT_WARNING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_APP, "REPORT_VARIABLES_DIALOG_FORCE_PROMPT_APPLICATION_SETTING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_DISABLE_EXIT, "REPORT_VARIABLES_DIALOG_DISABLE_EXIT_VARIABLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_DISABLE_DYNAMIC, "REPORT_VARIABLES_DIALOG_FORCE_DYNAMIC_PROMPT_SETTING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_PS, "REPORT_VARIABLES_DIALOG_FORCE_PROMPT_PLSQ_SETTING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_APPLY_VARIANT, "BW_USE_VARIANT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_CHOOSE_VARIANT, "BW_VARIANT_APPLY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VALUE_HELP, "FIREFLY_DIALOGS_VALUE_HELP");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_FILTER_INFO, "REPORT_VARIABLES_DYNAMIC_FILTER_TIP_INFO_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET_FOR_ALL_PAGES, "REPORT_VARIABLES_OPTION_ALL_PAGES");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SET_FOR_CURRENT_PAGE, "REPORT_VARIABLES_OPTION_CURRENT_PAGE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_CLIPBOARD_INFO, "FIREFLY_DIALOGS_CLIPBOARD_INFO");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_NULL, "DIMENSION_HEADER_LABEL_NULL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_NO_VALUE, "DIMENSION_HEADER_LABEL_EMPTY_STRING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_LINK_INFO_MESSAGE, "REPORT_VARIABLES_LINK_TIP_INFO_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_MANDATORY_VAR, "REPORT_VARIABLES_DIALOG_VALIDATION_MANDATORY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_VALUE_MISSING, "FIREFLY_DIALOGS_ERROR_MSG_VALUE_MISSING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_MEMBER_DOES_NOT_EXIST, "REPORT_VARIABLES_NO_DIM_MEM");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_TEXT_VARIABLE_DISABLED, "REPORT_VARIABLES_TEXT_VAR_DISABLED");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_NUMBER_VALIDATION, "REPORT_VARIABLES_DIALOG_VALIDATION_LONG");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_WARNING_MSG_NUMBER_FORMAT, "FIREFLY_DIALOGS_WARNING_NUMBER_FORMAT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NULL, "REPORT_VARIABLES_OPERATOR_ISNULL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NOT_NULL, "REPORT_VARIABLES_OPERATOR_ISNOTNULL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH_TEXT, "FIREFLY_DIALOGS_OPERATOR_CONTAINS_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL_TEXT, "FIREFLY_DIALOGS_OPERATOR_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL_TEXT, "FIREFLY_DIALOGS_OPERATOR_NOT_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_TEXT, "FIREFLY_DIALOGS_OPERATOR_GREATER_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL_TEXT, "FIREFLY_DIALOGS_OPERATOR_GREATER_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_TEXT, "FIREFLY_DIALOGS_OPERATOR_LESS_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL_TEXT, "FIREFLY_DIALOGS_OPERATOR_LESS_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN_TEXT, "FIREFLY_DIALOGS_OPERATOR_BETWEEN_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN_TEXT, "FIREFLY_DIALOGS_OPERATOR_NOT_BETWEEN_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_DATE_VALIDATION, "REPORT_VARIABLES_DIALOG_VALIDATION_DATE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_VARIABLE_INFO, "REPORT_VARIABLES_DYNAMIC_VARIABLE_TIP_INFO_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_NO_VARIABLES, "REPORT_VARIABLES_INFO_NO_VARIABLES");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERR_UNKNOWN_ERROR, "FIREFLY_DIALOGS_ERR_UNKNOWN_ERROR");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR, "FIREFLY_DIALOGS_ERR_VH_SERVER_ERROR");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_WARN_VH_VALUES_NOT_FOUND, "FIREFLY_DIALOGS_WARN_VH_VALUES_NOT_FOUND");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT, "FIREFLY_DIALOGS_SAVED_PROMPTS_FOR_DYNAMIC_SHORT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_LONG, "FIREFLY_DIALOGS_SAVED_PROMPTS_FOR_DYNAMIC_LONG");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_LINKED_VARIABLE_NO_RESULTS, "NO_DESCRIPTION_AVAILABLE_FOR_SEARCH");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERR_QUERIES_IN_PROCESSING, "REPORT_VARIABLES_DIALOG_CAN_NOT_OPEN_QUERIES_IN_PROCESSING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_ERR_VAR_SUBMIT_IN_PROCESSING, "REPORT_VARIABLES_DIALOG_CAN_NOT_SUBMIT_QUERIES_IN_PROCESSING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_DATE_VIEW_SELECT_DATE, "FIREFLY_DIALOGS_VH_MOBILE_DATE_VIEW_SELECT_DATE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE, "FIREFLY_DIALOGS_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_LIST_VIEW_SELECT, "FIREFLY_DIALOGS_VH_MOBILE_LIST_VIEW_SELECT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS_SELECTION, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS_SELECTION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP, "FIREFLY_DIALOGS_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_MISSING_LINK_WARNING, "LINK_VARIABLE_LINKS_INVALID");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_VARIABLE_VALUES_SET_TO, "FIREFLY_DIALOGS_VARIABLE_VALUES_SET_TO");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_EMPTY_CURRENCY_OPTION_TEXT, "FIREFLY_DIALOGS_EMPTY_CURRENCY_OPTION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_TRUE, "FIREFLY_DIALOGS_TRUE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariableDialogI18n.I18N_VD_FALSE, "FIREFLY_DIALOGS_FALSE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_OK, "FIREFLY_DIALOGS_OK");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_CANCEL, "BUTTON_CANCEL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SETTINGS, "FIREFLY_DIALOGS_SETTINGS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_NO_RESULTS, "FIREFLY_DIALOGS_NO_AVAILABLE_MEMBERS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_MAX_RESULTS, "FIREFLY_DIALOGS_MAX_RESULTS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SELECTED_MEMBERS, "FIREFLY_DIALOGS_SELECTED_MEMBERS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION, "FIREFLY_DIALOGS_CLEAR_SELECTION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SHOW_PRESENTATION, "FIREFLY_DIALOGS_DISPLAY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID, "FIREFLY_DIALOGS_PRESENTATION_ID");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION, "FIREFLY_DIALOGS_PRESENTATION_DESCRIPTION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID_AND_DESCRIPTION, "FIREFLY_DIALOGS_PRESENTATION_ID_AND_DESCRIPTION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_ATTRIBUTES, "FIREFLY_DIALOGS_ATTRIBUTES");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SELECT_ATTRIBUTE, "FIREFLY_DIALOGS_SELECT_ATTRIBUTE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_HIERARCHY, "FIREFLY_DIALOGS_HIERARCHY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_HIERARCHY_FLAT_PRESENTATION, "MEMBER_SELECTOR_FLAT_VIEW");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_LOADING, "FIREFLY_DIALOGS_LOADING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SEARCH, "FIREFLY_DIALOGS_SEARCH_IN");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SEARCH_TOOLTIP, "FIREFLY_DIALOGS_SEARCH_OPTION_TOOLTIP");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_PREVIOUS, "FIREFLY_DIALOGS_PREVIOUS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_NEXT, "FIREFLY_DIALOGS_NEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_NULL, "DIMENSION_HEADER_LABEL_NULL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_NO_VALUE, "DIMENSION_HEADER_LABEL_EMPTY_STRING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_FVH_ERROR_MSG_VALUE_MISSING, "FIREFLY_DIALOGS_ERROR_MSG_VALUE_MISSING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_ERR_VH_SERVER_ERROR, "FIREFLY_DIALOGS_ERR_VH_SERVER_ERROR");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS, "FILTER_SETTING_SELECTION_MODE_FIELD_BOOKED_MEMBER_ONLY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT, "FIREFLY_DIALOGS_USE_DEFAULT_READMODE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT_TOOLTIP, "FIREFLY_DIALOGS_READMODE_USE_DEFAULT_INFO");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_EXCLUDE_MEMBERS, "MEMBER_SELECTOR_EXCLUDE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_ERR_NO_VALUES_FOR_MANDATORY_VARIABLES, "FIREFLY_DIALOGS_NO_VALUES_FOR_MANDATORY_VARIABLES");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_BOOKED_DISABLED, "FIREFLY_DIALOGS_READMODE_SWITCH_BOOKED_DISABLED");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_UNBOOKED_DISABLED, "FIREFLY_DIALOGS_READMODE_SWITCH_UNBOOKED_DISABLED");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SHOW_ONLY_SELECTED_MEMBERS, "FIREFLY_DIALOGS_SHOW_ONLY_SELECTED_MEMBERS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_SELECT_MEMBER_FOR, "REPORT_VARIABLES_DIM_MEM_SELECT_TITLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_EQUAL, "FIREFLY_DIALOGS_OPERATOR_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_EQUAL, "FIREFLY_DIALOGS_OPERATOR_NOT_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER, "FIREFLY_DIALOGS_OPERATOR_GREATER_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER_EQUAL, "FIREFLY_DIALOGS_OPERATOR_GREATER_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS, "FIREFLY_DIALOGS_OPERATOR_LESS_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS_EQUAL, "FIREFLY_DIALOGS_OPERATOR_LESS_EQUAL_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_BETWEEN, "FIREFLY_DIALOGS_OPERATOR_BETWEEN_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_BETWEEN, "FIREFLY_DIALOGS_OPERATOR_NOT_BETWEEN_TEXT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_NAME, "FIREFLY_DIALOGS_VARIANT_NAME");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_TYPE, "FIREFLY_DIALOGS_VARIANT_TYPE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME, "FIREFLY_DIALOGS_VARIANT_TECHNICAL_NAME");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_PERSONAL, "FIREFLY_DIALOGS_VARIANT_PERSONAL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_GLOBAL, "FIREFLY_DIALOGS_VARIANT_GLOBAL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_GENERATED_ID, "FIREFLY_DIALOGS_VARIANT_GENERATED_ID");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_MANAGE, "FIREFLY_DIALOGS_VARIANT_MANAGE_TITLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_SAVE, "FIREFLY_DIALOGS_VARIANT_SAVE_TITLE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE, "FIREFLY_DIALOGS_VARIANT_OVERWRITE_CURRENT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_CURRENT, "FIREFLY_DIALOGS_VARIANT_SAVE_CURRENT");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_NAME_REQUIRED, "FIREFLY_DIALOGS_VARIANT_NAME_REQUIRED");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_REQUIRED, "FIREFLY_DIALOGS_VARIANT_TECHNICAL_NAME_REQUIRED");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_NAME_UNIQUE, "FIREFLY_DIALOGS_VARIANT_NAME_UNIQUE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_UNIQUE, "FIREFLY_DIALOGS_VARIANT_TECHNICAL_NAME_UNIQUE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_SAVE, "FIREFLY_DIALOGS_VARIANT_CANNOT_SAVE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_DELETE, "FIREFLY_DIALOGS_VARIANT_CANNOT_DELETE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_CHANGE, "FIREFLY_DIALOGS_VARIANT_CANNOT_CHANGE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_SAVE, "FIREFLY_DIALOGS_VARIANT_POPUP_SAVE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL, "FIREFLY_DIALOGS_VARIANT_POPUP_CANCEL");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CLOSE, "FIREFLY_DIALOGS_VARIANT_POPUP_CLOSE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_DELETE, "FIREFLY_DIALOGS_VARIANT_POPUP_DELETE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_EMPTY, "FIREFLY_DIALOGS_VARIANT_EMPTY");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_NONE, "FIREFLY_DIALOGS_VARIANT_NONE");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_SUCCESS, "FIREFLY_DIALOGS_VARIANT_SAVE_SUCCESS");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_WARNING, "FIREFLY_DIALOGS_VARIANT_WARNING");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_DELETE_CONFIRMATION, "FIREFLY_DIALOGS_VARIANT_DELETE_CONFIRMATION");
		oFF.OrcaI18nMapping.KEY_MAPPING.put(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE_CONFIRMATION, "FIREFLY_DIALOGS_VARIANT_OVERWRITE_CONFIRMATION");
	}
	return new oFF.OrcaI18nMapping();
};
oFF.OrcaI18nMapping.prototype.lookupExternalKey = function(internalKey)
{
	return oFF.OrcaI18nMapping.KEY_MAPPING.getByKey(internalKey);
};

oFF.VdOrcaNativeParams = function() {};
oFF.VdOrcaNativeParams.prototype = new oFF.XObject();
oFF.VdOrcaNativeParams.prototype._ff_c = "VdOrcaNativeParams";

oFF.VdOrcaNativeParams.create = function()
{
	var params = new oFF.VdOrcaNativeParams();
	params.linkTooltips = oFF.XHashMapByString.create();
	params.linkage = oFF.XHashMapByString.create();
	params.linkSkipSubmit = oFF.XList.create();
	return params;
};
oFF.VdOrcaNativeParams.prototype.title = null;
oFF.VdOrcaNativeParams.prototype.infoText = null;
oFF.VdOrcaNativeParams.prototype.queryManager = null;
oFF.VdOrcaNativeParams.prototype.varProcessor = null;
oFF.VdOrcaNativeParams.prototype.analyticVarProcessor = null;
oFF.VdOrcaNativeParams.prototype.datasetVariables = null;
oFF.VdOrcaNativeParams.prototype.preSetVariables = null;
oFF.VdOrcaNativeParams.prototype.filterVariables = null;
oFF.VdOrcaNativeParams.prototype.linkedModelsText = null;
oFF.VdOrcaNativeParams.prototype.variablesToDisplay = null;
oFF.VdOrcaNativeParams.prototype.storyEditable = false;
oFF.VdOrcaNativeParams.prototype.forcePrompt = false;
oFF.VdOrcaNativeParams.prototype.forcePromptExec = false;
oFF.VdOrcaNativeParams.prototype.showChartVariables = false;
oFF.VdOrcaNativeParams.prototype.useTableMessage = false;
oFF.VdOrcaNativeParams.prototype.disableExitVariables = false;
oFF.VdOrcaNativeParams.prototype.analyticApp = false;
oFF.VdOrcaNativeParams.prototype.datasetVariablesEditable = false;
oFF.VdOrcaNativeParams.prototype.preSetVariablesEditable = false;
oFF.VdOrcaNativeParams.prototype.customStoryButtonText = null;
oFF.VdOrcaNativeParams.prototype.datasetVariablesButtonText = null;
oFF.VdOrcaNativeParams.prototype.presetVariablesButtonText = null;
oFF.VdOrcaNativeParams.prototype.presetVariablesSelected = false;
oFF.VdOrcaNativeParams.prototype.showVariantSection = false;
oFF.VdOrcaNativeParams.prototype.isWidget = false;
oFF.VdOrcaNativeParams.prototype.isPlanningSequence = false;
oFF.VdOrcaNativeParams.prototype.dateDisplayFormat = null;
oFF.VdOrcaNativeParams.prototype.isStoryUsingDynamicVariables = false;
oFF.VdOrcaNativeParams.prototype.isWidgetUsingDynamicVariables = false;
oFF.VdOrcaNativeParams.prototype.dimensionDisplayInfo = null;
oFF.VdOrcaNativeParams.prototype.singleVariableKey = null;
oFF.VdOrcaNativeParams.prototype.linkedVariables = null;
oFF.VdOrcaNativeParams.prototype.linkTooltips = null;
oFF.VdOrcaNativeParams.prototype.linkage = null;
oFF.VdOrcaNativeParams.prototype.linkSkipSubmit = null;
oFF.VdOrcaNativeParams.prototype.linkVarHelper = null;
oFF.VdOrcaNativeParams.prototype.linkVarSubmitHandling = null;
oFF.VdOrcaNativeParams.prototype.displayFactory = null;
oFF.VdOrcaNativeParams.prototype.readOnly = false;
oFF.VdOrcaNativeParams.prototype.isPublication = false;
oFF.VdOrcaNativeParams.prototype.releaseObject = function()
{
	this.title = null;
	this.queryManager = null;
	this.varProcessor = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdOrcaPlanningSequenceHandler = function() {};
oFF.VdOrcaPlanningSequenceHandler.prototype = new oFF.XObject();
oFF.VdOrcaPlanningSequenceHandler.prototype._ff_c = "VdOrcaPlanningSequenceHandler";

oFF.VdOrcaPlanningSequenceHandler.create = function(context, originalHandler, analyticProcessor, startValues)
{
	var obj = new oFF.VdOrcaPlanningSequenceHandler();
	obj.setupExt(context, originalHandler, analyticProcessor, startValues);
	return obj;
};
oFF.VdOrcaPlanningSequenceHandler.prototype.m_context = null;
oFF.VdOrcaPlanningSequenceHandler.prototype.m_originalHandler = null;
oFF.VdOrcaPlanningSequenceHandler.prototype.m_analyticProcessor = null;
oFF.VdOrcaPlanningSequenceHandler.prototype.m_startValues = null;
oFF.VdOrcaPlanningSequenceHandler.prototype.setupExt = function(context, originalHandler, analyticProcessor, startValues)
{
	this.m_context = context;
	this.m_originalHandler = originalHandler;
	this.m_startValues = oFF.notNull(startValues) ? startValues : oFF.XHashMapByString.create();
	if (oFF.notNull(analyticProcessor))
	{
		this.m_analyticProcessor = oFF.VdBackendStateHandler.createHandler(analyticProcessor, this.m_context);
	}
};
oFF.VdOrcaPlanningSequenceHandler.prototype.releaseObject = function()
{
	this.m_context = null;
	this.m_originalHandler = null;
	this.m_analyticProcessor = null;
	this.m_startValues = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdOrcaPlanningSequenceHandler.prototype.getSubmitProcessor = function()
{
	if (oFF.isNull(this.m_analyticProcessor))
	{
		return null;
	}
	return this.m_analyticProcessor.getSubmitProcessor();
};
oFF.VdOrcaPlanningSequenceHandler.prototype.transferVariables = function(values, variable, listener, customIdentifier)
{
	this.m_originalHandler.transferVariables(values, variable, listener, customIdentifier);
};
oFF.VdOrcaPlanningSequenceHandler.prototype.reinitVariables = function(listener, customIdentifier)
{
	this.m_originalHandler.reinitVariables(listener, customIdentifier);
};
oFF.VdOrcaPlanningSequenceHandler.prototype.activateVariant = function(variant, listener, customIdentifier)
{
	this.m_originalHandler.activateVariant(variant, listener, customIdentifier);
};
oFF.VdOrcaPlanningSequenceHandler.prototype.saveVariant = function(values, variant, listener, customIdentifier)
{
	this.m_originalHandler.saveVariant(values, variant, listener, customIdentifier);
};
oFF.VdOrcaPlanningSequenceHandler.prototype.cancelReinitVariables = function(startValues, listener, customIdentifier)
{
	if (oFF.isNull(this.m_analyticProcessor))
	{
		listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
	}
	else
	{
		this.m_analyticProcessor.cancelReinitVariables(startValues, listener, customIdentifier);
	}
};
oFF.VdOrcaPlanningSequenceHandler.prototype.submitVariables = function(values, listener, customIdentifier)
{
	if (oFF.isNull(this.m_analyticProcessor))
	{
		listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
	}
	else
	{
		var mergedValues = oFF.XLinkedHashMapByString.create();
		var variables = this.m_analyticProcessor.getSubmitProcessor().getInputEnabledAndNonTechnicalVariables();
		for (var i = 0; i < variables.size(); i++)
		{
			var varName = variables.get(i).getName();
			if (!values.containsKey(varName))
			{
				mergedValues.put(varName, this.m_startValues.getByKey(varName));
			}
			else
			{
				mergedValues.put(varName, values.getByKey(varName));
			}
		}
		this.m_analyticProcessor.submitVariables(mergedValues, listener, customIdentifier);
	}
};

oFF.VdOrcaUiHelperConfig = function() {};
oFF.VdOrcaUiHelperConfig.prototype = new oFF.XObject();
oFF.VdOrcaUiHelperConfig.prototype._ff_c = "VdOrcaUiHelperConfig";

oFF.VdOrcaUiHelperConfig.createConfig = function(scenario, level)
{
	var obj = new oFF.VdOrcaUiHelperConfig();
	obj.m_scenario = scenario;
	obj.m_level = level;
	obj.m_linkTooltips = oFF.XHashMapByString.create();
	return obj;
};
oFF.VdOrcaUiHelperConfig.prototype.m_scenario = null;
oFF.VdOrcaUiHelperConfig.prototype.m_level = null;
oFF.VdOrcaUiHelperConfig.prototype.m_storyEditable = false;
oFF.VdOrcaUiHelperConfig.prototype.m_readOnly = false;
oFF.VdOrcaUiHelperConfig.prototype.m_useBottomLevelVariables = false;
oFF.VdOrcaUiHelperConfig.prototype.m_topLevelUsingDynamicVariables = false;
oFF.VdOrcaUiHelperConfig.prototype.m_bottomLevelUsingDynamicVariables = false;
oFF.VdOrcaUiHelperConfig.prototype.m_forcePrompt = false;
oFF.VdOrcaUiHelperConfig.prototype.m_disableExit = false;
oFF.VdOrcaUiHelperConfig.prototype.m_showVariants = false;
oFF.VdOrcaUiHelperConfig.prototype.m_hideLevelSection = false;
oFF.VdOrcaUiHelperConfig.prototype.m_infoText = null;
oFF.VdOrcaUiHelperConfig.prototype.m_linkedModelsText = null;
oFF.VdOrcaUiHelperConfig.prototype.m_customStoryButtonText = null;
oFF.VdOrcaUiHelperConfig.prototype.m_boardRoomParentLevelText = null;
oFF.VdOrcaUiHelperConfig.prototype.m_boardRoomChildLevelText = null;
oFF.VdOrcaUiHelperConfig.prototype.m_linkTooltips = null;
oFF.VdOrcaUiHelperConfig.prototype.m_topLevelValues = null;
oFF.VdOrcaUiHelperConfig.prototype.m_bottomLevelValues = null;
oFF.VdOrcaUiHelperConfig.prototype.releaseObject = function()
{
	this.m_scenario = null;
	this.m_level = null;
	this.m_linkTooltips = null;
	this.m_topLevelValues = null;
	this.m_bottomLevelValues = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdOrcaUiHelperConfig.prototype.getScenario = function()
{
	return this.m_scenario;
};
oFF.VdOrcaUiHelperConfig.prototype.getLevel = function()
{
	return this.m_level;
};
oFF.VdOrcaUiHelperConfig.prototype.setStoryEditable = function(storyEditable)
{
	this.m_storyEditable = storyEditable;
};
oFF.VdOrcaUiHelperConfig.prototype.isStoryEditable = function()
{
	return this.m_storyEditable;
};
oFF.VdOrcaUiHelperConfig.prototype.setReadOnly = function(readOnly)
{
	this.m_readOnly = readOnly;
};
oFF.VdOrcaUiHelperConfig.prototype.isReadOnly = function()
{
	return this.m_readOnly;
};
oFF.VdOrcaUiHelperConfig.prototype.useBottomLevelVariables = function()
{
	return this.m_useBottomLevelVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.setUseBottomLevelVariables = function(useBottomLevelVariables)
{
	this.m_useBottomLevelVariables = useBottomLevelVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.isTopLevelUsingDynamicVariables = function()
{
	return this.m_topLevelUsingDynamicVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.setTopLevelUsingDynamicVariables = function(storyUsingDynamicVariables)
{
	this.m_topLevelUsingDynamicVariables = storyUsingDynamicVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.isBottomLevelUsingDynamicVariables = function()
{
	return this.m_bottomLevelUsingDynamicVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.setBottomLevelUsingDynamicVariables = function(bottomLevelUsingDynamicVariables)
{
	this.m_bottomLevelUsingDynamicVariables = bottomLevelUsingDynamicVariables;
};
oFF.VdOrcaUiHelperConfig.prototype.isForcePrompt = function()
{
	return this.m_forcePrompt;
};
oFF.VdOrcaUiHelperConfig.prototype.setForcePrompt = function(forcePrompt)
{
	this.m_forcePrompt = forcePrompt;
};
oFF.VdOrcaUiHelperConfig.prototype.isDisableExit = function()
{
	return this.m_disableExit;
};
oFF.VdOrcaUiHelperConfig.prototype.setShowVariantSection = function(showVariantSection)
{
	this.m_showVariants = showVariantSection;
};
oFF.VdOrcaUiHelperConfig.prototype.showVariantSection = function()
{
	return this.m_showVariants;
};
oFF.VdOrcaUiHelperConfig.prototype.setHideLevelSection = function(hideLevelSection)
{
	this.m_hideLevelSection = hideLevelSection;
};
oFF.VdOrcaUiHelperConfig.prototype.hideLevelSection = function()
{
	return this.m_hideLevelSection;
};
oFF.VdOrcaUiHelperConfig.prototype.setDisableExit = function(disableExit)
{
	this.m_disableExit = disableExit;
};
oFF.VdOrcaUiHelperConfig.prototype.getInfoText = function()
{
	return this.m_infoText;
};
oFF.VdOrcaUiHelperConfig.prototype.setInfoText = function(infoText)
{
	this.m_infoText = infoText;
};
oFF.VdOrcaUiHelperConfig.prototype.getLinkedModelsText = function()
{
	return this.m_linkedModelsText;
};
oFF.VdOrcaUiHelperConfig.prototype.setLinkedModelsText = function(linkedModelsText)
{
	this.m_linkedModelsText = linkedModelsText;
};
oFF.VdOrcaUiHelperConfig.prototype.getBoardRoomParentLevelText = function()
{
	return this.m_boardRoomParentLevelText;
};
oFF.VdOrcaUiHelperConfig.prototype.setCustomStoryButtonText = function(storyButtonText)
{
	this.m_customStoryButtonText = storyButtonText;
};
oFF.VdOrcaUiHelperConfig.prototype.getCustomStoryButtonText = function()
{
	return this.m_customStoryButtonText;
};
oFF.VdOrcaUiHelperConfig.prototype.setBoardRoomParentLevelText = function(boardRoomParentLevelText)
{
	this.m_boardRoomParentLevelText = boardRoomParentLevelText;
};
oFF.VdOrcaUiHelperConfig.prototype.getBoardRoomChildLevelText = function()
{
	return this.m_boardRoomChildLevelText;
};
oFF.VdOrcaUiHelperConfig.prototype.setBoardRoomChildLevelText = function(boardRoomChildLevelText)
{
	this.m_boardRoomChildLevelText = boardRoomChildLevelText;
};
oFF.VdOrcaUiHelperConfig.prototype.getLinkTooltips = function()
{
	return this.m_linkTooltips;
};
oFF.VdOrcaUiHelperConfig.prototype.setLinkTooltips = function(linkTooltips)
{
	this.m_linkTooltips = linkTooltips;
};
oFF.VdOrcaUiHelperConfig.prototype.getTopLevelValues = function()
{
	return this.m_topLevelValues;
};
oFF.VdOrcaUiHelperConfig.prototype.setTopLevelValues = function(topLevelValues)
{
	this.m_topLevelValues = topLevelValues;
};
oFF.VdOrcaUiHelperConfig.prototype.getBottomLevelValues = function()
{
	return this.m_bottomLevelValues;
};
oFF.VdOrcaUiHelperConfig.prototype.setBottomLevelValues = function(bottomLevelValues)
{
	this.m_bottomLevelValues = bottomLevelValues;
};

oFF.VdStandalone = function() {};
oFF.VdStandalone.prototype = new oFF.XObject();
oFF.VdStandalone.prototype._ff_c = "VdStandalone";

oFF.VdStandalone.TITLE = "title";
oFF.VdStandalone.VARIABLE_PROCESSOR_ID = "variableProcessId";
oFF.VdStandalone.START_VALUES_FORMAT = "startValuesFormat";
oFF.VdStandalone.START_VALUES = "startValues";
oFF.VdStandalone.DATE_DISPLAY_FORMAT = "dateDisplayFormat";
oFF.VdStandalone.SUPPRESS_LOCALIZATION_DEFAULTS = "suppressLocalizationDefaults";
oFF.VdStandalone.LOCALIZATION = "localization";
oFF.VdStandalone.IMPLICIT_SUBMIT = "implicitSubmit";
oFF.VdStandalone.VARIABLE_NAMES = "variableNames";
oFF.VdStandalone.UPDATE_DYNAMIC_VARIABLES_ON_START = "updateDynamicVariablesOnStart";
oFF.VdStandalone.USE_DATEPICKER = "useDatePicker";
oFF.VdStandalone.HIDE_OPERATOR_NOT_BEWEEN = "hideOperatorNotBetween";
oFF.VdStandalone.DISABLE_TEXT_VARIABLE_INPUT = "disableTextVariableInput";
oFF.VdStandalone.HIDE_LEVEL_SECTION = "hideLevelSection";
oFF.VdStandalone.SCENARIO = "scenario";
oFF.VdStandalone.LEVEL = "level";
oFF.VdStandalone.STORY_EDITABLE = "storyEditable";
oFF.VdStandalone.READ_ONLY = "readOnly";
oFF.VdStandalone.DISABLE_EXIT = "disableExit";
oFF.VdStandalone.FORCE_PROMPT = "forcePrompt";
oFF.VdStandalone.SHOW_VARIANT_SECTION = "showVariantSection";
oFF.VdStandalone.USE_BOTTOM_LEVEL_VARIABLES = "useBottomLevelVariables";
oFF.VdStandalone.TOP_LEVEL_VALUES = "topLevelValues";
oFF.VdStandalone.TOP_LEVEL_DYNAMIC_VARIABLES = "topLevelDynamicVars";
oFF.VdStandalone.TOP_LEVEL_TEXT = "topLevelText";
oFF.VdStandalone.BOTTOM_LEVEL_VALUES = "bottomLevelValues";
oFF.VdStandalone.BOTTOM_LEVEL_DYNAMIC_VARIABLES = "bottomLevelDynamicVars";
oFF.VdStandalone.INFO_TEXT = "infoText";
oFF.VdStandalone.LINKED_MODELS_TEXT = "linkedModelsText";
oFF.VdStandalone.LINK_VAR_SUBMIT_HANDLING = "linkVarSubmitHandling";
oFF.VdStandalone.LINKAGE = "linkage";
oFF.VdStandalone.VARIABLE_NAME = "variableName";
oFF.VdStandalone.JOIN_MODE = "joinMode";
oFF.VdStandalone.LINKED_VAR_PROCESSOR_ID = "linkedProcessorIds";
oFF.VdStandalone.LINKED_VAR_NAMES = "linkedVariableNames";
oFF.VdStandalone.TOOLTIP_VARIABLE = "tooltipVariable";
oFF.VdStandalone.TOOLTIP_DATASET = "tooltipDataset";
oFF.VdStandalone.BW_PARALLEL_LINK_DATASET_ID_TAG = "bwParallelLinkDataSetIdTag";
oFF.VdStandalone.BW_PARALLEL_LINK_SHOULD_BE_SUBMITTED_TAG = "bwParallelLinkShouldBeSubmittedTag";
oFF.VdStandalone.BW_PARALLEL_LINK_REMOVE_AFTER_SUBMIT_TAG = "bwParallelLinkRemoveAfterSubmitTag";
oFF.VdStandalone.createInstance = function(application, i18nProvider, parameters)
{
	var standalone = new oFF.VdStandalone();
	standalone.setupContext(application, i18nProvider, parameters);
	return standalone;
};
oFF.VdStandalone.createDisplayWithJson = function(application, i18nProvider, parameters, listener)
{
	var parser = oFF.JsonParserFactory.newInstance();
	var structure = parser.convertFromNative(parameters).asStructure();
	oFF.XObjectExt.release(parser);
	return oFF.VdStandalone.createDisplayWithParameters(application, i18nProvider, structure, listener);
};
oFF.VdStandalone.createDisplayWithParameters = function(application, i18nProvider, parameters, listener)
{
	var instance = oFF.VdStandalone.createInstance(application, i18nProvider, parameters);
	var controller = oFF.VdVariableDialog.createAsDisplay(instance.m_uiContext, instance.m_vdConfig, listener);
	instance.setupController(controller);
	var facade = oFF.VdOrcaFacade.createFacadeDisplay(controller, instance.m_uiHelper, instance.m_linkedVariableNames);
	oFF.XObjectExt.release(instance);
	return facade;
};
oFF.VdStandalone.createTokenWithJson = function(application, i18nProvider, parameters)
{
	return oFF.VdStandalone.createTokenWithParameters(application, i18nProvider, oFF.VdStandalone.parseNativeJsonParams(parameters));
};
oFF.VdStandalone.createTokenWithParameters = function(application, i18nProvider, parameters)
{
	var instance = oFF.VdStandalone.createInstance(application, i18nProvider, parameters);
	var controller = oFF.VdVariableForm.createAsToken(instance.m_uiContext, instance.m_vdConfig);
	instance.setupController(controller);
	var facade = oFF.VdOrcaFacade.createFacadeToken(controller, instance.m_uiHelper, instance.m_linkedVariableNames);
	oFF.XObjectExt.release(instance);
	return facade;
};
oFF.VdStandalone.parseNativeJsonParams = function(parameters)
{
	var parser = oFF.JsonParserFactory.newInstance();
	var structure = parser.convertFromNative(parameters).asStructure();
	oFF.XObjectExt.release(parser);
	return structure;
};
oFF.VdStandalone.createUiContext = function(uiManager)
{
	return oFF.OlapUiContext.createContext(uiManager, oFF.OlapUiDisplayFactory.createFactoryForDialog(uiManager));
};
oFF.VdStandalone.createVdConfig = function(application, parameters, level)
{
	var olapEnv = application.getOlapEnvironment();
	var title = oFF.VdStandalone.determineTitle(parameters);
	var variableProcessor = oFF.VdStandalone.determineVariableProcessor(parameters, olapEnv);
	var variablesToDisplay = oFF.VdStandalone.determineVariablesToDisplay(parameters);
	var vdConfig = oFF.VdConfiguration.createConfig(title, variableProcessor);
	var implicitSubmit = parameters.getBooleanByKeyExt(oFF.VdStandalone.IMPLICIT_SUBMIT, vdConfig.useImplicitSubmit());
	var updateDynamicVariables = parameters.getBooleanByKeyExt(oFF.VdStandalone.UPDATE_DYNAMIC_VARIABLES_ON_START, vdConfig.isUpdatingDynamicVariables());
	var useDatepicker = parameters.getBooleanByKeyExt(oFF.VdStandalone.USE_DATEPICKER, vdConfig.useDatePicker());
	var hideOperatorNotBetween = parameters.getBooleanByKeyExt(oFF.VdStandalone.HIDE_OPERATOR_NOT_BEWEEN, vdConfig.isHidingOperatorNotBetween());
	var disableTextVariables = parameters.getBooleanByKeyExt(oFF.VdStandalone.DISABLE_TEXT_VARIABLE_INPUT, !vdConfig.isTextVariablesEnabled());
	var dateDisplayFormat = parameters.getStringByKey(oFF.VdStandalone.DATE_DISPLAY_FORMAT);
	var valueFormat = oFF.VdValueFormat.lookup(parameters.getStringByKey(oFF.VdStandalone.START_VALUES_FORMAT));
	var jsonValues = parameters.getByKey(oFF.VdStandalone.START_VALUES);
	vdConfig.setVariablesToDisplay(variablesToDisplay);
	vdConfig.setDateDisplayFormat(dateDisplayFormat);
	vdConfig.setImplicitSubmit(implicitSubmit);
	vdConfig.setStartValuesJson(valueFormat, jsonValues);
	vdConfig.setUpdatingDynamicVariables(updateDynamicVariables);
	vdConfig.setUseDatePicker(useDatepicker);
	vdConfig.hideOperatorNotBetween(hideOperatorNotBetween);
	vdConfig.setTextVariablesEnabled(oFF.isNull(level) ? !disableTextVariables : !level.isTypeOf(oFF.VdOrcaLevel.WIDGET));
	oFF.VdOrcaFacade.configureVariantManagement(variableProcessor, vdConfig);
	return vdConfig;
};
oFF.VdStandalone.createUiConfig = function(variableProcessor, scenario, level, parameters)
{
	var valueFormat = oFF.VdValueFormat.lookup(parameters.getStringByKey(oFF.VdStandalone.START_VALUES_FORMAT));
	var uiConfig = oFF.VdOrcaUiHelperConfig.createConfig(scenario, level);
	uiConfig.setUseBottomLevelVariables(parameters.getBooleanByKey(oFF.VdStandalone.USE_BOTTOM_LEVEL_VARIABLES));
	uiConfig.setStoryEditable(parameters.getBooleanByKey(oFF.VdStandalone.STORY_EDITABLE));
	uiConfig.setReadOnly(parameters.getBooleanByKey(oFF.VdStandalone.READ_ONLY));
	uiConfig.setForcePrompt(parameters.getBooleanByKey(oFF.VdStandalone.FORCE_PROMPT));
	uiConfig.setShowVariantSection(parameters.getBooleanByKey(oFF.VdStandalone.SHOW_VARIANT_SECTION));
	uiConfig.setHideLevelSection(parameters.getBooleanByKey(oFF.VdStandalone.HIDE_LEVEL_SECTION));
	uiConfig.setTopLevelUsingDynamicVariables(parameters.getBooleanByKey(oFF.VdStandalone.TOP_LEVEL_DYNAMIC_VARIABLES));
	uiConfig.setBottomLevelUsingDynamicVariables(parameters.getBooleanByKey(oFF.VdStandalone.BOTTOM_LEVEL_DYNAMIC_VARIABLES));
	uiConfig.setCustomStoryButtonText(parameters.getStringByKey(oFF.VdStandalone.TOP_LEVEL_TEXT));
	uiConfig.setDisableExit(parameters.getBooleanByKey(oFF.VdStandalone.DISABLE_EXIT));
	uiConfig.setInfoText(parameters.getStringByKey(oFF.VdStandalone.INFO_TEXT));
	uiConfig.setLinkedModelsText(parameters.getStringByKey(oFF.VdStandalone.LINKED_MODELS_TEXT));
	uiConfig.setLinkTooltips(oFF.VdStandalone.extractLinkTooltips(parameters));
	var topLevelValues = parameters.getByKey(oFF.VdStandalone.TOP_LEVEL_VALUES);
	if (oFF.notNull(topLevelValues))
	{
		uiConfig.setTopLevelValues(valueFormat.getParser().deserialize(variableProcessor, topLevelValues));
	}
	var bottomLevelValues = parameters.getByKey(oFF.VdStandalone.BOTTOM_LEVEL_VALUES);
	if (oFF.notNull(bottomLevelValues))
	{
		uiConfig.setBottomLevelValues(valueFormat.getParser().deserialize(variableProcessor, bottomLevelValues));
	}
	return uiConfig;
};
oFF.VdStandalone.determineTitle = function(parameters)
{
	var title = parameters.getStringByKey(oFF.VdStandalone.TITLE);
	if (oFF.XStringUtils.isNullOrEmpty(title))
	{
		return "Variables";
	}
	return title;
};
oFF.VdStandalone.determineVariableProcessor = function(parameters, olapEnv)
{
	var variableProcessorId = parameters.getStringByKey(oFF.VdStandalone.VARIABLE_PROCESSOR_ID);
	var processor = oFF.VdStandalone.findVariableProcessorById(olapEnv, variableProcessorId);
	if (oFF.notNull(processor))
	{
		return processor;
	}
	return olapEnv.getVariableProcessor();
};
oFF.VdStandalone.findVariableProcessorById = function(olapEnv, variableProcessorId)
{
	if (oFF.notNull(variableProcessorId))
	{
		var allQueryManagers = olapEnv.getAllAreaQueryManager();
		for (var i = 0; i < allQueryManagers.size(); i++)
		{
			var queryManager = allQueryManagers.get(i);
			var tagging = queryManager.getTagging();
			var value = tagging.getByKey(oFF.VdStandalone.VARIABLE_PROCESSOR_ID);
			if (oFF.XString.isEqual(value, variableProcessorId))
			{
				return queryManager.getVariableProcessor();
			}
		}
	}
	return null;
};
oFF.VdStandalone.createLinkManager = function(controller, parameters)
{
	var linkage = parameters.getListByKey(oFF.VdStandalone.LINKAGE);
	if (!oFF.XCollectionUtils.hasElements(linkage))
	{
		return null;
	}
	var handling = oFF.OrcaLinkVarSubmitHandling.lookupWithDefault(parameters.getStringByKey(oFF.VdStandalone.LINK_VAR_SUBMIT_HANDLING));
	var processor = controller.getVariableProcessor();
	var olapEnv = processor.getOlapEnv();
	var linkVarManager = oFF.OrcaLinkVarManager.createWithController(controller);
	if (handling === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT)
	{
		linkVarManager.activateSubmitLinked();
	}
	else if (handling === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE)
	{
		var datasetIdTag = parameters.getStringByKey(oFF.VdStandalone.BW_PARALLEL_LINK_DATASET_ID_TAG);
		var shouldBeSubmittedTag = parameters.getStringByKey(oFF.VdStandalone.BW_PARALLEL_LINK_SHOULD_BE_SUBMITTED_TAG);
		var removeAfterSubmitTag = parameters.getStringByKey(oFF.VdStandalone.BW_PARALLEL_LINK_REMOVE_AFTER_SUBMIT_TAG);
		linkVarManager.activateSubmitAll(oFF.VdStandaloneLinkVarHelper.createHelper(datasetIdTag, shouldBeSubmittedTag, removeAfterSubmitTag));
	}
	for (var i = 0; i < linkage.size(); i++)
	{
		var linkStruct = linkage.getStructureAt(i);
		var varName = linkStruct.getStringByKey(oFF.VdStandalone.VARIABLE_NAME);
		var mainVariable = processor.getVariable(varName);
		if (oFF.isNull(mainVariable))
		{
			continue;
		}
		var linkedProcessorIds = linkStruct.getListByKey(oFF.VdStandalone.LINKED_VAR_PROCESSOR_ID);
		var linkedVarNames = linkStruct.getListByKey(oFF.VdStandalone.LINKED_VAR_NAMES);
		var joinMode = oFF.OrcaLinkVarJoinMode.lookup(linkStruct.getStringByKey(oFF.VdStandalone.JOIN_MODE));
		if (!oFF.XCollectionUtils.hasElements(linkedVarNames) || !oFF.XCollectionUtils.hasElements(linkedProcessorIds) || linkedProcessorIds.size() !== linkedVarNames.size() || oFF.isNull(joinMode))
		{
			linkVarManager.setHasMissingLink(mainVariable);
			continue;
		}
		var variables = oFF.XList.create();
		for (var j = 0; j < linkedProcessorIds.size(); j++)
		{
			var linkedProcessor = oFF.VdStandalone.findVariableProcessorById(olapEnv, linkedProcessorIds.getStringAt(j));
			if (oFF.isNull(linkedProcessor))
			{
				linkVarManager.setHasMissingLink(mainVariable);
				continue;
			}
			var linkedVariable = linkedProcessor.getVariable(linkedVarNames.getStringAt(j));
			if (oFF.isNull(linkedVariable))
			{
				linkVarManager.setHasMissingLink(mainVariable);
				continue;
			}
			variables.add(linkedVariable);
		}
		linkVarManager.addLinks(mainVariable, variables, joinMode);
	}
	controller.setExternalStateHandler(linkVarManager);
	controller.setValueHelpProcessorProvider(linkVarManager);
	return linkVarManager;
};
oFF.VdStandalone.extractLinkTooltips = function(parameters)
{
	var linkTooltips = oFF.XHashMapByString.create();
	var linkage = parameters.getListByKey(oFF.VdStandalone.LINKAGE);
	if (!oFF.XCollectionUtils.hasElements(linkage))
	{
		return linkTooltips;
	}
	for (var i = 0; i < linkage.size(); i++)
	{
		var linkStruct = linkage.getStructureAt(i);
		var varName = linkStruct.getStringByKey(oFF.VdStandalone.VARIABLE_NAME);
		var tooltipList = linkStruct.getListByKey(oFF.VdStandalone.TOOLTIP_VARIABLE);
		var tooltipDataset = linkStruct.getListByKey(oFF.VdStandalone.TOOLTIP_DATASET);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(varName) && oFF.XCollectionUtils.hasElements(tooltipList) && oFF.XCollectionUtils.hasElements(tooltipDataset) && tooltipList.size() === tooltipDataset.size())
		{
			var tmpTooltips = oFF.XList.create();
			for (var a = 0; a < tooltipList.size(); a++)
			{
				tmpTooltips.add(oFF.XPairOfString.create(tooltipList.getStringAt(a), tooltipDataset.getStringAt(a)));
			}
			linkTooltips.put(varName, tmpTooltips);
		}
	}
	return linkTooltips;
};
oFF.VdStandalone.addLinkSymbols = function(vdController, parameters)
{
	if (oFF.isNull(vdController) || oFF.isNull(parameters))
	{
		return;
	}
	var structure = oFF.VdStandalone.parseNativeJsonParams(parameters);
	var linkTooltips = oFF.VdStandalone.extractLinkTooltips(structure);
	if (oFF.isNull(linkTooltips))
	{
		return;
	}
	var controllers = vdController.getControllers();
	if (oFF.notNull(controllers))
	{
		for (var i = 0; i < controllers.size(); i++)
		{
			var controller = controllers.get(i);
			var varName = controller.getName();
			if (!linkTooltips.containsKey(varName))
			{
				continue;
			}
			oFF.VdOrcaUiHelper.showLinkIconForVariable(controller, linkTooltips.getByKey(varName), vdController.getContext());
		}
	}
};
oFF.VdStandalone.determineVariablesToDisplay = function(parameters)
{
	var varNames = parameters.getListByKey(oFF.VdStandalone.VARIABLE_NAMES);
	if (!oFF.XCollectionUtils.hasElements(varNames))
	{
		return null;
	}
	var result = oFF.XHashSetOfString.create();
	for (var i = 0; i < varNames.size(); i++)
	{
		result.add(varNames.getStringAt(i));
	}
	return result;
};
oFF.VdStandalone.prototype.m_uiContext = null;
oFF.VdStandalone.prototype.m_vdConfig = null;
oFF.VdStandalone.prototype.m_params = null;
oFF.VdStandalone.prototype.m_scenario = null;
oFF.VdStandalone.prototype.m_level = null;
oFF.VdStandalone.prototype.m_uiHelper = null;
oFF.VdStandalone.prototype.m_linkedVariableNames = null;
oFF.VdStandalone.prototype.setupContext = function(application, i18nProvider, parameters)
{
	this.m_params = parameters;
	var uiManager = application.getUiManager();
	this.m_uiContext = oFF.VdStandalone.createUiContext(uiManager);
	this.m_uiContext.getLocalization().setExternalLocalization(oFF.OrcaI18nMapping.create(), i18nProvider);
	this.m_scenario = oFF.VdOrcaScenario.lookup(parameters.getStringByKey(oFF.VdStandalone.SCENARIO));
	this.m_level = oFF.VdOrcaLevel.lookup(parameters.getStringByKey(oFF.VdStandalone.LEVEL));
	this.m_vdConfig = oFF.VdStandalone.createVdConfig(application, parameters, this.m_level);
};
oFF.VdStandalone.prototype.setupController = function(controller)
{
	var linkManager = oFF.VdStandalone.createLinkManager(controller, this.m_params);
	this.m_linkedVariableNames = oFF.notNull(linkManager) ? linkManager.getLinkedVariableNames() : oFF.XListOfString.create();
	var uiConfig = oFF.VdStandalone.createUiConfig(this.m_vdConfig.getVarProcessor(), this.m_scenario, this.m_level, this.m_params);
	this.m_uiHelper = oFF.VdOrcaUiHelper.createUiHelper(controller, uiConfig);
};
oFF.VdStandalone.prototype.releaseObject = function()
{
	this.m_uiContext = null;
	this.m_vdConfig = null;
	this.m_scenario = null;
	this.m_level = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdStandaloneLinkVarHelper = function() {};
oFF.VdStandaloneLinkVarHelper.prototype = new oFF.XObject();
oFF.VdStandaloneLinkVarHelper.prototype._ff_c = "VdStandaloneLinkVarHelper";

oFF.VdStandaloneLinkVarHelper.createHelper = function(datasetIdTag, shouldBeSubmittedTag, removeAfterSubmitTag)
{
	var obj = new oFF.VdStandaloneLinkVarHelper();
	obj.m_datasetIdTag = datasetIdTag;
	obj.m_shouldBeSubmittedTag = shouldBeSubmittedTag;
	obj.m_removeAfterSubmitTag = removeAfterSubmitTag;
	return obj;
};
oFF.VdStandaloneLinkVarHelper.prototype.m_datasetIdTag = null;
oFF.VdStandaloneLinkVarHelper.prototype.m_shouldBeSubmittedTag = null;
oFF.VdStandaloneLinkVarHelper.prototype.m_removeAfterSubmitTag = null;
oFF.VdStandaloneLinkVarHelper.prototype.getLinkGroupId = function(queryManager)
{
	return queryManager.getTagging().getByKey(this.m_datasetIdTag);
};
oFF.VdStandaloneLinkVarHelper.prototype.applySavedValues = function(queryManager) {};
oFF.VdStandaloneLinkVarHelper.prototype.shouldBeSubmitted = function(queryManager)
{
	var tagging = queryManager.getTagging();
	if (!tagging.containsKey(this.m_shouldBeSubmittedTag))
	{
		return true;
	}
	return oFF.XBoolean.convertFromString(tagging.getByKey(this.m_shouldBeSubmittedTag));
};
oFF.VdStandaloneLinkVarHelper.prototype.onAfterVariableSubmit = function(queryManager)
{
	queryManager.getTagging().remove(this.m_removeAfterSubmitTag);
};

oFF.VdsJsonI18n = function() {};
oFF.VdsJsonI18n.prototype = new oFF.XObject();
oFF.VdsJsonI18n.prototype._ff_c = "VdsJsonI18n";

oFF.VdsJsonI18n.create = function(json)
{
	var obj = new oFF.VdsJsonI18n();
	obj.m_json = json;
	return obj;
};
oFF.VdsJsonI18n.prototype.m_json = null;
oFF.VdsJsonI18n.prototype.releaseObject = function()
{
	this.m_json = oFF.XObjectExt.release(this.m_json);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdsJsonI18n.prototype.getText = function(key)
{
	return this.m_json.getStringByKey(key);
};
oFF.VdsJsonI18n.prototype.getTextWithPlaceholder = function(key, replacement)
{
	var text = this.getText(key);
	if (oFF.isNull(text))
	{
		return null;
	}
	return oFF.XString.replace(text, "{0}", replacement);
};
oFF.VdsJsonI18n.prototype.getTextWithPlaceholder2 = function(key, replacement1, replacement2)
{
	var text = this.getTextWithPlaceholder(key, replacement1);
	if (oFF.isNull(text))
	{
		return null;
	}
	return oFF.XString.replace(text, "{1}", replacement2);
};

oFF.VdUqmConstants = {

	ID:"id",
	VARIABLE_ID:"variableId",
	MODEL_ID:"modelId",
	LOCAL_ID:"localId",
	TYPE:"type",
	TYPE_DIMENSION_MEMBER:"DimensionMemberVariable",
	TYPE_HIERARCHY_NAME:"HierarchyNameVariable",
	TYPE_OPTION_LIST:"OptionListVariable",
	TYPE_SIMPLE:"SimpleTypeVariable",
	TYPE_TEXT:"TextVariable",
	TYPE_FORMULA:"FormulaVariable",
	TYPE_HIERARCHY_NODE:"HierarchyNodeVariable",
	VALUE_TYPE:"valueType",
	VALUE_TYPE_DATE:"Date",
	VALUE_TYPE_TIME:"Time",
	VALUE_TYPE_DATETIME:"DateTime",
	VALUE_TYPE_STRING:"String",
	VALUE_TYPE_UNKNOWN:"",
	MEMBERS:"members",
	HIERARCHY_NAME:"hierarchyName",
	HIERARCHY_DESCRIPTION:"hierarchyDescription",
	HIERARCHY_NAME_DIMENSION:"hierarchyNameDimension",
	HIERARCHY_DUE_DATE:"dueDate",
	OPTION_NAME:"optionName",
	SIMPLE_TYPE_VALUES:"simpleTypeValues",
	TEXT_VALUE:"textValue",
	FORMULA_VALUE:"formulaValue",
	OPERATOR:"operator",
	OPERATOR_IN:"IN",
	OPERATOR_NOT_IN:"NOT_IN",
	OPERATOR_GREATER:"GREATER",
	OPERATOR_LESS:"LESS",
	OPERATOR_CONTAINS:"CONTAINS",
	MEMBER_ID:"memberId",
	MEMBER_IDS:"memberIds",
	NAME:"name",
	DESCRIPTION:"description",
	EMPTY_OPTION_VALUE:"empty",
	IS_MANDATORY:"isMandatory"
};

oFF.CtFactory = function() {};
oFF.CtFactory.prototype = new oFF.XObject();
oFF.CtFactory.prototype._ff_c = "CtFactory";

oFF.CtFactory.createFactory = function(context)
{
	var obj = new oFF.CtFactory();
	obj.m_context = context;
	return obj;
};
oFF.CtFactory.prototype.m_context = null;
oFF.CtFactory.prototype.newQCTDialogInstance = function()
{
	return oFF.QctController.create(this.m_context);
};

oFF.CtOceanEntryPoint = function() {};
oFF.CtOceanEntryPoint.prototype = new oFF.XObject();
oFF.CtOceanEntryPoint.prototype._ff_c = "CtOceanEntryPoint";

oFF.CtOceanEntryPoint.createEntryPoint = function(application)
{
	var obj = new oFF.CtOceanEntryPoint();
	obj.setupEntryPoint(application);
	return obj;
};
oFF.CtOceanEntryPoint.prototype.m_qccController = null;
oFF.CtOceanEntryPoint.prototype.setupEntryPoint = function(application)
{
	var uiMgr = application.getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	var context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_qccController = oFF.CtFactory.createFactory(context).newQCTDialogInstance();
};
oFF.CtOceanEntryPoint.prototype.openQCTDialog = function(title, currencyTranslationManager, listener)
{
	this.m_qccController.openDialog(title, currencyTranslationManager, listener);
};
oFF.CtOceanEntryPoint.prototype.closeQCTDialog = function()
{
	this.m_qccController.closeDialog();
};
oFF.CtOceanEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_qccController = oFF.XObjectExt.release(this.m_qccController);
};

oFF.OlapCmdButtonFactory = function() {};
oFF.OlapCmdButtonFactory.prototype = new oFF.XObject();
oFF.OlapCmdButtonFactory.prototype._ff_c = "OlapCmdButtonFactory";

oFF.OlapCmdButtonFactory.prototype.newInstance = function()
{
	return oFF.OlapCmdButton.create();
};

oFF.OlapContextMenuFactory = function() {};
oFF.OlapContextMenuFactory.prototype = new oFF.XObject();
oFF.OlapContextMenuFactory.prototype._ff_c = "OlapContextMenuFactory";

oFF.OlapContextMenuFactory.prototype.newInstance = function()
{
	return oFF.OlapContextMenu.create();
};

oFF.OlapPivotTableFactory = function() {};
oFF.OlapPivotTableFactory.prototype = new oFF.XObject();
oFF.OlapPivotTableFactory.prototype._ff_c = "OlapPivotTableFactory";

oFF.OlapPivotTableFactory.prototype.newInstance = function()
{
	return oFF.OlapPivotTable.create();
};

oFF.UiConvenienceCmdsMenuFactory = function() {};
oFF.UiConvenienceCmdsMenuFactory.prototype = new oFF.XObject();
oFF.UiConvenienceCmdsMenuFactory.prototype._ff_c = "UiConvenienceCmdsMenuFactory";

oFF.UiConvenienceCmdsMenuFactory.prototype.newInstance = function()
{
	return oFF.UiConvenienceCmdsMenu.create();
};

oFF.UiRedoButtonFactory = function() {};
oFF.UiRedoButtonFactory.prototype = new oFF.XObject();
oFF.UiRedoButtonFactory.prototype._ff_c = "UiRedoButtonFactory";

oFF.UiRedoButtonFactory.prototype.newInstance = function()
{
	return oFF.UiRedoButton.create();
};

oFF.UiUndoButtonFactory = function() {};
oFF.UiUndoButtonFactory.prototype = new oFF.XObject();
oFF.UiUndoButtonFactory.prototype._ff_c = "UiUndoButtonFactory";

oFF.UiUndoButtonFactory.prototype.newInstance = function()
{
	return oFF.UiUndoButton.create();
};

oFF.FieldContainerPresentationHelper = function() {};
oFF.FieldContainerPresentationHelper.prototype = new oFF.XObject();
oFF.FieldContainerPresentationHelper.prototype._ff_c = "FieldContainerPresentationHelper";

oFF.FieldContainerPresentationHelper.createFromFieldContainer = function(fieldContainer)
{
	var instance = new oFF.FieldContainerPresentationHelper();
	instance.setupExt(fieldContainer);
	return instance;
};
oFF.FieldContainerPresentationHelper.createFromSingleField = function(field)
{
	var instance = new oFF.FieldContainerPresentationHelper();
	instance.setupExtFromField(field);
	return instance;
};
oFF.FieldContainerPresentationHelper.flattenKeyView = function(keyView)
{
	var result = keyView;
	if (keyView === oFF.PresentationType.HIERARCHY_DISPLAY_KEY)
	{
		result = oFF.PresentationType.DISPLAY_KEY;
	}
	else if (keyView === oFF.PresentationType.HIERARCHY_KEY)
	{
		result = oFF.PresentationType.KEY;
	}
	return result;
};
oFF.FieldContainerPresentationHelper.getFallbackTextField = function(fieldContainer)
{
	var fallbackField = fieldContainer.getDefaultResultSetTextField();
	if (oFF.isNull(fallbackField))
	{
		fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.ABSTRACT_TEXT)).orElse(null);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getTextField();
	}
	return fallbackField;
};
oFF.FieldContainerPresentationHelper.filterOnType = function(presentationType)
{
	return  function(fi){
		return fi.getPresentationType().isTypeOf(presentationType);
	}.bind(this);
};
oFF.FieldContainerPresentationHelper.getFallbackKeyField = function(fieldContainer)
{
	var fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT)).orElse(null);
	if (oFF.isNull(fallbackField))
	{
		fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND)).orElse(null);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.DISPLAY_KEY)).orElse(null);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.KEY_NOT_COMPOUND)).orElse(null);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = oFF.XStream.of(fieldContainer.getDefaultResultSetFields()).find(oFF.FieldContainerPresentationHelper.filterOnType(oFF.PresentationType.ABSTRACT_KEY)).orElse(null);
	}
	var keyField = fieldContainer.getKeyField();
	if (oFF.notNull(keyField) && oFF.notNull(fallbackField) && fallbackField !== keyField && fallbackField.getPresentationType() === oFF.FieldContainerPresentationHelper.flattenKeyView(keyField.getPresentationType()))
	{
		fallbackField = null;
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getDisplayKeyField();
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getFieldByPresentationType(oFF.PresentationType.KEY_NOT_COMPOUND);
	}
	if (oFF.isNull(fallbackField))
	{
		fallbackField = fieldContainer.getKeyField();
	}
	return fallbackField;
};
oFF.FieldContainerPresentationHelper.getNonMainAttributeRsFields = function(dimension)
{
	var mainAttribute = dimension.getMainAttribute();
	return oFF.XStream.of(dimension.getResultSetFields()).filter( function(fi){
		return !oFF.FieldContainerPresentationHelper.isMainAttributeField(fi, mainAttribute, dimension);
	}.bind(this)).collect(oFF.XStreamCollector.toList());
};
oFF.FieldContainerPresentationHelper.isMainAttributeField = function(field, mainAttribute, dimension)
{
	if (oFF.notNull(mainAttribute) && field.getAttribute() !== null)
	{
		return mainAttribute === field.getAttribute();
	}
	return field === dimension.getKeyField() || field === dimension.getFlatKeyField() || field === dimension.getHierarchyKeyField() || field === dimension.getDisplayKeyField() || field === dimension.getHierarchyDisplayKeyField() || field === dimension.getTextField() || field === dimension.getHierarchyTextField();
};
oFF.FieldContainerPresentationHelper.setDefaultKeyDisplayForFieldContainer = function(fieldContainer, keyDisplay)
{
	var field = null;
	if (keyDisplay === oFF.FieldContainerKeyDisplay.INTERNAL_KEY)
	{
		field = fieldContainer.getKeyField();
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.EXTERNAL_KEY)
	{
		field = fieldContainer.getMixedDisplayKeyField();
		if (oFF.isNull(field))
		{
			field = fieldContainer.getDisplayKeyField();
		}
		if (oFF.isNull(field))
		{
			field = fieldContainer.getKeyField();
		}
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY)
	{
		field = fieldContainer.getDisplayKeyField();
		if (oFF.isNull(field))
		{
			field = fieldContainer.getKeyField();
		}
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.NON_COMPOUNDED_KEY)
	{
		field = fieldContainer.getFieldByPresentationType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND);
		if (oFF.isNull(field))
		{
			field = fieldContainer.getFieldByPresentationType(oFF.PresentationType.KEY_NOT_COMPOUND);
		}
	}
	if (oFF.notNull(field))
	{
		fieldContainer.setClientDefaultKeyField(field);
	}
};
oFF.FieldContainerPresentationHelper.enforceKeyDisplayForDimension = function(dimension, keyDisplay, includeAttributes)
{
	oFF.FieldContainerPresentationHelper.setDefaultKeyDisplayForFieldContainer(dimension, keyDisplay);
	if (includeAttributes)
	{
		var attributes = dimension.getAttributes();
		for (var i = 0; i < attributes.size(); i++)
		{
			var attribute = attributes.getAttributeAt(i);
			oFF.FieldContainerPresentationHelper.setDefaultKeyDisplayForFieldContainer(attribute, keyDisplay);
		}
	}
	else
	{
		var mainAttribute = dimension.getMainAttribute();
		if (oFF.notNull(mainAttribute))
		{
			oFF.FieldContainerPresentationHelper.setDefaultKeyDisplayForFieldContainer(mainAttribute, keyDisplay);
		}
	}
};
oFF.FieldContainerPresentationHelper.refreshDisplayAttributesForDimension = function(dimension)
{
	oFF.FieldContainerPresentationHelper.refreshDisplayAttributesForDimensionExt(dimension, null);
};
oFF.FieldContainerPresentationHelper.refreshDisplayAttributesForDimensionExt = function(dimension, displayAs)
{
	var selectPresentationHelper;
	var fieldLayoutType = dimension.getFieldLayoutType();
	var mainAttribute = dimension.getMainAttribute();
	var defaultKeyField;
	var defaultTextField;
	if (oFF.isNull(mainAttribute))
	{
		selectPresentationHelper = oFF.FieldContainerPresentationHelper.createFromFieldContainer(dimension);
		selectPresentationHelper.setKeyView(dimension.getClientDefaultKeyField().getPresentationType());
		defaultKeyField = dimension.getClientDefaultKeyField();
		defaultTextField = dimension.getClientDefaultTextField();
	}
	else
	{
		selectPresentationHelper = oFF.FieldContainerPresentationHelper.createFromFieldContainer(mainAttribute);
		var mainRsAttribute = oFF.XStream.of(dimension.getResultSetAttributes()).filter( function(a){
			return oFF.XString.isEqual(a.getName(), mainAttribute.getName());
		}.bind(this)).findAny();
		mainRsAttribute.ifPresent( function(att){
			selectPresentationHelper.applyResultSetSettings(att);
		}.bind(this));
		defaultKeyField = dimension.getClientDefaultKeyField();
		defaultTextField = dimension.getClientDefaultTextField();
	}
	if (oFF.notNull(defaultKeyField))
	{
		selectPresentationHelper.setKeyView(defaultKeyField.getPresentationType());
	}
	if (oFF.notNull(defaultTextField))
	{
		selectPresentationHelper.setTextView(defaultTextField.getPresentationType());
	}
	if (oFF.notNull(displayAs) && selectPresentationHelper.getAvailableDisplayAs().contains(displayAs))
	{
		selectPresentationHelper.setDisplayAs(displayAs);
	}
	var queryModel = dimension.getQueryModel();
	queryModel.getConvenienceCommands().clearAllAttributeFields(dimension.getName(), dimension.getName(), oFF.QContextType.RESULT_SET);
	selectPresentationHelper.applyToQueryModel(queryModel, dimension.getName());
	if (fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		selectPresentationHelper.applyMainAttributeForFieldLayout(dimension);
	}
};
oFF.FieldContainerPresentationHelper.removeDisplayAttributesFromDimension = function(dimension)
{
	var cmd = dimension.getQueryModel().getConvenienceCommands();
	if (dimension.getFieldLayoutType() === oFF.FieldLayoutType.FIELD_BASED)
	{
		var mainAttribute = dimension.getMainAttribute();
		oFF.XStream.of(dimension.getFields()).filter( function(fi){
			return fi.getAttribute() !== mainAttribute;
		}.bind(this)).forEach( function(displayField){
			cmd.removeField(null, dimension.getName(), null, displayField.getName(), oFF.QContextType.RESULT_SET);
		}.bind(this));
	}
	else
	{
		oFF.XStream.of(dimension.getAttributes()).filter( function(attr){
			return attr !== dimension.getMainAttribute();
		}.bind(this)).forEach( function(displayAttribute){
			cmd.removeAttributeFromResultSet(dimension.getName(), displayAttribute.getName());
		}.bind(this));
	}
};
oFF.FieldContainerPresentationHelper.prototype.m_componentName = null;
oFF.FieldContainerPresentationHelper.prototype.m_componentText = null;
oFF.FieldContainerPresentationHelper.prototype.m_mayDisplayText = false;
oFF.FieldContainerPresentationHelper.prototype.m_mayDisplayKey = false;
oFF.FieldContainerPresentationHelper.prototype.m_textViewDefault = null;
oFF.FieldContainerPresentationHelper.prototype.m_keyViewDefault = null;
oFF.FieldContainerPresentationHelper.prototype.m_hierarchyChanged = false;
oFF.FieldContainerPresentationHelper.prototype.m_hierarchicalKeyPresentationAsymmetry = false;
oFF.FieldContainerPresentationHelper.prototype.m_displayText = false;
oFF.FieldContainerPresentationHelper.prototype.m_displayKey = false;
oFF.FieldContainerPresentationHelper.prototype.m_displayKeyBeforeText = false;
oFF.FieldContainerPresentationHelper.prototype.m_textView = null;
oFF.FieldContainerPresentationHelper.prototype.m_keyView = null;
oFF.FieldContainerPresentationHelper.prototype.m_displayUseDimensionSetting = false;
oFF.FieldContainerPresentationHelper.prototype.m_textViewsAvailable = null;
oFF.FieldContainerPresentationHelper.prototype.m_keyViewsAvailable = null;
oFF.FieldContainerPresentationHelper.prototype.m_fieldBased = false;
oFF.FieldContainerPresentationHelper.prototype.isMayDisplayText = function()
{
	return this.m_mayDisplayText;
};
oFF.FieldContainerPresentationHelper.prototype.isMayDisplayKey = function()
{
	return this.m_mayDisplayKey;
};
oFF.FieldContainerPresentationHelper.prototype.isDisplayText = function()
{
	return this.m_displayText;
};
oFF.FieldContainerPresentationHelper.prototype.getKeyDisplaysAvailable = function()
{
	return this.m_hierarchicalKeyPresentationAsymmetry ? null : oFF.XStream.of(this.m_keyViewsAvailable).map( function(kv){
		return this.mapKeyPresentation(kv);
	}.bind(this)).collect(oFF.XStreamCollector.toList());
};
oFF.FieldContainerPresentationHelper.prototype.mapKeyPresentation = function(keyPresentation)
{
	var resultDisplay = oFF.FieldContainerKeyDisplay.EXTERNAL_KEY;
	if (keyPresentation === oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT)
	{
		resultDisplay = oFF.FieldContainerKeyDisplay.EXTERNAL_KEY;
	}
	else if (keyPresentation === oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND || keyPresentation === oFF.PresentationType.KEY_NOT_COMPOUND)
	{
		resultDisplay = oFF.FieldContainerKeyDisplay.NON_COMPOUNDED_KEY;
	}
	else if (keyPresentation === oFF.PresentationType.DISPLAY_KEY || keyPresentation === oFF.PresentationType.HIERARCHY_DISPLAY_KEY)
	{
		if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND) || this.m_keyViewsAvailable.contains(oFF.PresentationType.KEY_NOT_COMPOUND))
		{
			resultDisplay = oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY;
		}
		else
		{
			resultDisplay = oFF.FieldContainerKeyDisplay.EXTERNAL_KEY;
		}
	}
	else if (keyPresentation === oFF.PresentationType.KEY || keyPresentation === oFF.PresentationType.HIERARCHY_KEY)
	{
		if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY))
		{
			resultDisplay = oFF.FieldContainerKeyDisplay.INTERNAL_KEY;
		}
		else if (this.m_keyViewsAvailable.contains(oFF.PresentationType.KEY_NOT_COMPOUND))
		{
			resultDisplay = oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY;
		}
		else
		{
			resultDisplay = oFF.FieldContainerKeyDisplay.EXTERNAL_KEY;
		}
	}
	return resultDisplay;
};
oFF.FieldContainerPresentationHelper.prototype.getKeyDisplay = function()
{
	return this.mapKeyPresentation(this.m_keyView);
};
oFF.FieldContainerPresentationHelper.prototype.getKeyDisplayDefault = function()
{
	return this.mapKeyPresentation(this.m_keyViewDefault);
};
oFF.FieldContainerPresentationHelper.prototype.setKeyDisplay = function(keyDisplay)
{
	if (keyDisplay === oFF.FieldContainerKeyDisplay.INTERNAL_KEY)
	{
		this.m_keyView = oFF.PresentationType.KEY;
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.EXTERNAL_KEY)
	{
		if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT))
		{
			this.m_keyView = oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT;
		}
		else if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY))
		{
			this.m_keyView = oFF.PresentationType.DISPLAY_KEY;
		}
		else if (this.m_keyViewsAvailable.contains(oFF.PresentationType.KEY))
		{
			this.m_keyView = oFF.PresentationType.KEY;
		}
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY)
	{
		if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY))
		{
			this.m_keyView = oFF.PresentationType.DISPLAY_KEY;
		}
		else if (this.m_keyViewsAvailable.contains(oFF.PresentationType.KEY))
		{
			this.m_keyView = oFF.PresentationType.KEY;
		}
	}
	if (keyDisplay === oFF.FieldContainerKeyDisplay.NON_COMPOUNDED_KEY)
	{
		if (this.m_keyViewsAvailable.contains(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND))
		{
			this.m_keyView = oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND;
		}
		else if (this.m_keyViewsAvailable.contains(oFF.PresentationType.KEY_NOT_COMPOUND))
		{
			this.m_keyView = oFF.PresentationType.KEY_NOT_COMPOUND;
		}
	}
};
oFF.FieldContainerPresentationHelper.prototype.getAvailableDisplayAs = function()
{
	var displayAs = oFF.XList.create();
	displayAs.add(oFF.FieldContainerDisplay.NO_DISPLAY);
	if (this.isMayDisplayKey())
	{
		displayAs.add(oFF.FieldContainerDisplay.KEY);
	}
	if (this.isMayDisplayText())
	{
		displayAs.add(oFF.FieldContainerDisplay.TEXT);
	}
	if (this.isMayDisplayText() && this.isMayDisplayKey())
	{
		displayAs.add(oFF.FieldContainerDisplay.KEY_AND_TEXT);
		displayAs.add(oFF.FieldContainerDisplay.TEXT_AND_KEY);
	}
	return displayAs;
};
oFF.FieldContainerPresentationHelper.prototype.setDisplayText = function(displayText)
{
	this.m_displayText = displayText;
};
oFF.FieldContainerPresentationHelper.prototype.isDisplayKey = function()
{
	return this.m_displayKey;
};
oFF.FieldContainerPresentationHelper.prototype.setDisplayKey = function(displayKey)
{
	this.m_displayKey = displayKey;
};
oFF.FieldContainerPresentationHelper.prototype.isDisplayKeyBeforeText = function()
{
	return this.m_displayKeyBeforeText;
};
oFF.FieldContainerPresentationHelper.prototype.setDisplayKeyBeforeText = function(displayKeyBeforeText)
{
	this.m_displayKeyBeforeText = displayKeyBeforeText;
};
oFF.FieldContainerPresentationHelper.prototype.getDisplayAs = function()
{
	if (this.m_displayText && this.m_displayKey && this.m_displayKeyBeforeText)
	{
		return oFF.FieldContainerDisplay.KEY_AND_TEXT;
	}
	if (this.m_displayText && this.m_displayKey)
	{
		return oFF.FieldContainerDisplay.TEXT_AND_KEY;
	}
	if (this.m_displayText)
	{
		return oFF.FieldContainerDisplay.TEXT;
	}
	if (this.m_displayKey)
	{
		return oFF.FieldContainerDisplay.KEY;
	}
	return oFF.FieldContainerDisplay.NO_DISPLAY;
};
oFF.FieldContainerPresentationHelper.prototype.setDisplayAs = function(displayAs)
{
	if (oFF.notNull(displayAs))
	{
		this.m_displayKey = displayAs.isKey();
		this.m_displayText = displayAs.isText();
	}
	if (displayAs === oFF.FieldContainerDisplay.KEY_AND_TEXT)
	{
		this.m_displayKeyBeforeText = true;
	}
	else if (displayAs === oFF.FieldContainerDisplay.TEXT_AND_KEY)
	{
		this.m_displayKeyBeforeText = false;
	}
};
oFF.FieldContainerPresentationHelper.prototype.setupExtFromField = function(field)
{
	this.m_componentName = field.getName();
	this.m_componentText = field.getText();
	if (oFF.XStringUtils.isNullOrEmpty(this.m_componentText))
	{
		this.m_componentText = this.m_componentName;
	}
	this.m_fieldBased = true;
};
oFF.FieldContainerPresentationHelper.prototype.setupExt = function(fieldContainer)
{
	this.m_componentName = fieldContainer.getName();
	this.m_componentText = fieldContainer.getText();
	if (oFF.XStringUtils.isNullOrEmpty(this.m_componentText))
	{
		this.m_componentText = this.m_componentName;
	}
	this.m_fieldBased = false;
	this.reloadFieldContainerLayout(fieldContainer);
	this.m_mayDisplayKey = oFF.XCollectionUtils.hasElements(this.m_keyViewsAvailable);
	this.m_mayDisplayText = oFF.XCollectionUtils.hasElements(this.m_textViewsAvailable);
	if (this.m_mayDisplayText)
	{
		var defaultTextField = fieldContainer.getClientDefaultTextField();
		if (oFF.notNull(defaultTextField))
		{
			this.m_textView = defaultTextField.getPresentationType();
		}
		else
		{
			this.m_textView = this.m_textViewsAvailable.get(0);
		}
		this.m_textViewDefault = oFF.FieldContainerPresentationHelper.getFallbackTextField(fieldContainer).getPresentationType();
	}
	if (this.m_mayDisplayKey)
	{
		var defaultKeyField = fieldContainer.getClientDefaultKeyField();
		if (oFF.notNull(defaultKeyField))
		{
			this.m_keyView = oFF.FieldContainerPresentationHelper.flattenKeyView(defaultKeyField.getPresentationType());
		}
		else
		{
			this.m_keyView = oFF.FieldContainerPresentationHelper.flattenKeyView(this.m_keyViewsAvailable.get(0));
		}
		this.m_keyViewDefault = oFF.FieldContainerPresentationHelper.flattenKeyView(oFF.FieldContainerPresentationHelper.getFallbackKeyField(fieldContainer).getPresentationType());
	}
};
oFF.FieldContainerPresentationHelper.prototype.reloadFieldContainerLayout = function(fieldContainer)
{
	this.m_textViewsAvailable = oFF.XList.create();
	this.m_keyViewsAvailable = oFF.XList.create();
	var presentationType;
	var hierarchyActive = fieldContainer.getDimension().isHierarchyActive();
	var hasHierarchyKey = false;
	var hasHierarchyDisplayKey = false;
	var hasFlatKey = false;
	var hasFlatDisplayKey = false;
	var i;
	if (fieldContainer.getComponentType() === oFF.OlapComponentType.ATTRIBUTE)
	{
		var myFields = fieldContainer.getFields();
		for (i = 0; i < myFields.size(); i++)
		{
			var field = myFields.get(i);
			presentationType = field.getPresentationType();
			if (presentationType === oFF.PresentationType.HIERARCHY_KEY)
			{
				hasHierarchyKey = true;
			}
			else if (presentationType === oFF.PresentationType.KEY)
			{
				hasFlatKey = true;
			}
			else if (presentationType === oFF.PresentationType.HIERARCHY_DISPLAY_KEY)
			{
				hasHierarchyDisplayKey = true;
			}
			else if (presentationType === oFF.PresentationType.DISPLAY_KEY)
			{
				hasFlatDisplayKey = true;
			}
			if (presentationType.isTypeOf(oFF.PresentationType.TEXT) && presentationType !== oFF.PresentationType.TEXT && !this.m_textViewsAvailable.contains(presentationType))
			{
				this.m_textViewsAvailable.add(presentationType);
			}
			else if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_KEY) && !this.m_keyViewsAvailable.contains(presentationType))
			{
				if (presentationType === oFF.PresentationType.HIERARCHY_KEY && hierarchyActive)
				{
					this.m_keyViewsAvailable.removeElement(oFF.PresentationType.KEY);
					this.m_keyViewsAvailable.add(oFF.PresentationType.KEY);
				}
				else if (presentationType === oFF.PresentationType.HIERARCHY_DISPLAY_KEY && hierarchyActive)
				{
					this.m_keyViewsAvailable.removeElement(oFF.PresentationType.DISPLAY_KEY);
					this.m_keyViewsAvailable.add(oFF.PresentationType.DISPLAY_KEY);
				}
				else if (!this.m_keyViewsAvailable.contains(presentationType))
				{
					this.m_keyViewsAvailable.add(presentationType);
				}
			}
		}
	}
	else
	{
		var pts = oFF.XList.create();
		var adder =  function(fi){
			if (oFF.notNull(fi))
			{
				pts.add(fi.getPresentationType());
			}
		}.bind(this);
		adder(fieldContainer.getFlatKeyField());
		adder(fieldContainer.getFlatDisplayKeyField());
		adder(fieldContainer.getHierarchyKeyField());
		adder(fieldContainer.getHierarchyDisplayKeyField());
		for (i = 0; i < pts.size(); i++)
		{
			var pt = pts.get(i);
			if (pt === oFF.PresentationType.HIERARCHY_KEY)
			{
				hasHierarchyKey = true;
			}
			else if (pt === oFF.PresentationType.KEY)
			{
				hasFlatKey = true;
			}
			else if (pt === oFF.PresentationType.HIERARCHY_DISPLAY_KEY)
			{
				hasHierarchyDisplayKey = true;
			}
			else if (pt === oFF.PresentationType.DISPLAY_KEY)
			{
				hasFlatDisplayKey = true;
			}
		}
	}
	if (fieldContainer.getTextField() !== null)
	{
		presentationType = fieldContainer.getTextField().getPresentationType();
		this.m_textViewsAvailable.removeElement(presentationType);
		this.m_textViewsAvailable.insert(0, presentationType);
	}
	if (fieldContainer.getKeyField() !== null)
	{
		presentationType = fieldContainer.getKeyField().getPresentationType();
		this.m_keyViewsAvailable.removeElement(presentationType);
		this.m_keyViewsAvailable.insert(0, presentationType);
	}
	if (fieldContainer.getDisplayKeyField() !== null)
	{
		presentationType = fieldContainer.getDisplayKeyField().getPresentationType();
		this.m_keyViewsAvailable.removeElement(presentationType);
		this.m_keyViewsAvailable.insert(0, presentationType);
	}
	this.m_hierarchicalKeyPresentationAsymmetry = (hasHierarchyDisplayKey || hasHierarchyKey) && (hasHierarchyKey && !hasFlatKey || hasHierarchyDisplayKey && !hasFlatDisplayKey || hasFlatKey && !hasHierarchyKey || !hasFlatDisplayKey && !hasHierarchyDisplayKey);
};
oFF.FieldContainerPresentationHelper.prototype.getKeyView = function()
{
	return this.m_keyView;
};
oFF.FieldContainerPresentationHelper.prototype.setKeyView = function(keyView)
{
	this.m_keyView = keyView;
};
oFF.FieldContainerPresentationHelper.prototype.getTextView = function()
{
	return this.m_textView;
};
oFF.FieldContainerPresentationHelper.prototype.setTextView = function(textView)
{
	this.m_textView = textView;
};
oFF.FieldContainerPresentationHelper.prototype.isDisplayUseDimensionSetting = function()
{
	return this.m_displayUseDimensionSetting;
};
oFF.FieldContainerPresentationHelper.prototype.setDisplayUseDimensionSetting = function(displayUseDimensionSetting)
{
	this.m_displayUseDimensionSetting = displayUseDimensionSetting;
};
oFF.FieldContainerPresentationHelper.prototype.getKeyViewsAvailable = function()
{
	return this.m_keyViewsAvailable;
};
oFF.FieldContainerPresentationHelper.prototype.getTextViewsAvailable = function()
{
	return this.m_textViewsAvailable;
};
oFF.FieldContainerPresentationHelper.prototype.getComponentName = function()
{
	return this.m_componentName;
};
oFF.FieldContainerPresentationHelper.prototype.setComponentName = function(componentName)
{
	this.m_componentName = componentName;
};
oFF.FieldContainerPresentationHelper.prototype.setTextViewsAvailable = function(textViewsAvailable)
{
	this.m_textViewsAvailable = textViewsAvailable;
};
oFF.FieldContainerPresentationHelper.prototype.setKeyViewsAvailable = function(keyViewsAvailable)
{
	this.m_keyViewsAvailable = keyViewsAvailable;
};
oFF.FieldContainerPresentationHelper.prototype.applyMainAttributeForFieldLayout = function(dimension)
{
	var mainAttribute = dimension.getMainAttribute();
	if (oFF.notNull(mainAttribute))
	{
		dimension.setFieldLayoutType(oFF.FieldLayoutType.FIELD_BASED);
		var mainAttributeFields = mainAttribute.getResultSetFields();
		var nmarfs = oFF.FieldContainerPresentationHelper.getNonMainAttributeRsFields(dimension);
		var convenienceCommands = dimension.getQueryModel().getConvenienceCommands();
		convenienceCommands.clearAllResultSetFields(dimension.getName());
		var i;
		for (i = 0; i < mainAttributeFields.size(); i++)
		{
			convenienceCommands.addField(null, dimension.getName(), null, mainAttributeFields.get(i).getName(), oFF.QContextType.RESULT_SET);
		}
		for (i = 0; i < nmarfs.size(); i++)
		{
			convenienceCommands.addField(null, dimension.getName(), null, nmarfs.get(i).getName(), oFF.QContextType.RESULT_SET);
		}
	}
};
oFF.FieldContainerPresentationHelper.prototype.applyResultSetSettings = function(resultSetAttribute)
{
	var i;
	var rsf;
	this.m_displayKey = false;
	this.m_displayText = false;
	var dimension = resultSetAttribute.getDimension();
	var hierarchyDisplayKeyField = dimension.getHierarchyDisplayKeyField();
	var flatDisplayKeyField = dimension.getFlatDisplayKeyField();
	var hierarchyKeyField = dimension.getHierarchyKeyField();
	var flatKeyField = dimension.getFlatKeyField();
	var hierarchyActive = dimension.isHierarchyActive();
	var resultSetFields = resultSetAttribute.getResultSetFields();
	for (i = 0; i < resultSetFields.size(); i++)
	{
		rsf = resultSetFields.get(i);
		var presentationType = rsf.getPresentationType();
		var obtainability = rsf.getObtainability();
		if (oFF.notNull(obtainability) && obtainability !== oFF.ObtainabilityType.ALWAYS)
		{
			continue;
		}
		if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_TEXT))
		{
			if (this.m_displayKey)
			{
				this.m_displayKeyBeforeText = true;
				this.m_displayText = true;
				this.m_textView = presentationType;
				return;
			}
			if (!this.m_displayText)
			{
				this.m_displayText = true;
				this.m_textView = presentationType;
			}
		}
		else if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_KEY))
		{
			if (hierarchyActive && (rsf === flatKeyField && flatKeyField !== hierarchyKeyField || rsf === flatDisplayKeyField && hierarchyDisplayKeyField !== flatDisplayKeyField) || !hierarchyActive && (rsf === hierarchyDisplayKeyField && hierarchyDisplayKeyField !== flatDisplayKeyField || rsf === hierarchyKeyField && flatKeyField !== hierarchyKeyField))
			{
				this.m_hierarchyChanged = true;
			}
			if (this.m_displayText)
			{
				this.m_displayKeyBeforeText = false;
				this.m_displayKey = true;
				this.m_keyView = oFF.FieldContainerPresentationHelper.flattenKeyView(presentationType);
				return;
			}
			if (!this.m_displayKey)
			{
				this.m_displayKey = true;
				this.m_keyView = oFF.FieldContainerPresentationHelper.flattenKeyView(presentationType);
			}
		}
	}
	if (!oFF.XCollectionUtils.hasElements(resultSetFields) && !oFF.XCollectionUtils.hasElements(dimension.getResultSetAttributes()) && dimension.getMainAttribute() === resultSetAttribute)
	{
		resultSetFields = dimension.getResultSetFields();
		for (i = 0; i < resultSetFields.size(); i++)
		{
			rsf = resultSetFields.get(i);
			if (rsf === resultSetAttribute.getFlatTextField() || rsf === resultSetAttribute.getHierarchyTextField())
			{
				if (this.m_displayKey)
				{
					this.m_displayKeyBeforeText = true;
					this.m_displayText = true;
					return;
				}
				if (!this.m_displayText)
				{
					this.m_displayText = true;
					this.m_textView = rsf.getPresentationType();
				}
			}
			else if (rsf === resultSetAttribute.getFlatKeyField() || rsf === resultSetAttribute.getHierarchyKeyField() || rsf === resultSetAttribute.getFlatDisplayKeyField() || rsf === resultSetAttribute.getHierarchyDisplayKeyField())
			{
				if (this.m_displayText)
				{
					this.m_displayKeyBeforeText = false;
					this.m_displayKey = true;
					return;
				}
				if (!this.m_displayKey)
				{
					this.m_displayKey = true;
					this.m_keyView = rsf.getPresentationType();
				}
			}
		}
	}
};
oFF.FieldContainerPresentationHelper.prototype.applyToQueryModel = function(queryModel, dimensionName)
{
	var convenienceCommands = queryModel.getConvenienceCommands();
	if (this.m_displayKey || this.m_displayText)
	{
		if (!oFF.XStream.of(queryModel.getDimensionByName(dimensionName).getResultSetAttributes()).anyMatch( function(rsa){
			return oFF.XString.isEqual(rsa.getName(), this.getComponentName());
		}.bind(this)))
		{
			convenienceCommands.addAttributeToResultSet(dimensionName, this.getComponentName());
		}
		convenienceCommands.clearAllAttributeFields(dimensionName, this.getComponentName(), oFF.QContextType.RESULT_SET);
	}
	var presentationType1 = null;
	var presentationType2 = null;
	if (this.m_displayKey && this.m_displayText && !this.m_displayKeyBeforeText)
	{
		presentationType1 = this.getTextViewCorrected();
		presentationType2 = this.getKeyViewCorrected();
	}
	else if (this.m_displayKey && this.m_displayText)
	{
		presentationType1 = this.getKeyViewCorrected();
		presentationType2 = this.getTextViewCorrected();
	}
	else if (this.m_displayKey)
	{
		presentationType1 = this.getKeyViewCorrected();
	}
	else if (this.m_displayText)
	{
		presentationType1 = this.getTextViewCorrected();
	}
	if (oFF.notNull(presentationType1))
	{
		var field1 = convenienceCommands.addAttributeField(null, dimensionName, this.getComponentName(), presentationType1, null, oFF.QContextType.RESULT_SET);
		if (oFF.isNull(field1) && oFF.isNull(presentationType2) && this.m_displayText)
		{
			presentationType1 = this.getKeyViewCorrected();
			field1 = convenienceCommands.addAttributeField(null, dimensionName, this.getComponentName(), presentationType1, null, oFF.QContextType.RESULT_SET);
		}
		if (oFF.notNull(field1))
		{
			field1.setObtainability(oFF.ObtainabilityType.ALWAYS);
			this.submitDefaultPresentation(field1, presentationType1);
		}
	}
	if (oFF.notNull(presentationType2))
	{
		var field2 = convenienceCommands.addAttributeField(null, dimensionName, this.getComponentName(), presentationType2, null, oFF.QContextType.RESULT_SET);
		if (oFF.notNull(field2))
		{
			field2.setObtainability(oFF.ObtainabilityType.ALWAYS);
			this.submitDefaultPresentation(field2, presentationType2);
		}
	}
	if (!this.m_displayKey || this.getKeyViewCorrected() !== oFF.PresentationType.ACTIVE_DISPLAY_KEY && this.m_keyView !== oFF.PresentationType.DISPLAY_KEY && this.m_keyView !== oFF.PresentationType.HIERARCHY_DISPLAY_KEY && this.m_keyView !== oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND && this.m_keyView !== oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT)
	{
		this.ensureDisplayKeyField(queryModel, dimensionName);
	}
};
oFF.FieldContainerPresentationHelper.prototype.ensureDisplayKeyField = function(queryModel, dimensionName)
{
	var dimension = queryModel.getDimensionByName(dimensionName);
	if (oFF.notNull(dimension))
	{
		var fieldContainer;
		if (this.getComponentName() !== null)
		{
			fieldContainer = dimension.getAttributeByName(this.getComponentName());
		}
		else
		{
			fieldContainer = dimension;
		}
		var newField = fieldContainer.getFieldByPresentationType(oFF.PresentationType.ACTIVE_DISPLAY_KEY);
		if (oFF.notNull(newField) && !fieldContainer.getResultSetFields().contains(newField))
		{
			var newRsField = queryModel.getConvenienceCommands().addAttributeField(null, dimensionName, this.getComponentName(), oFF.PresentationType.ACTIVE_DISPLAY_KEY, newField.getName(), oFF.QContextType.RESULT_SET);
			if (oFF.notNull(newRsField))
			{
				newRsField.setObtainability(oFF.ObtainabilityType.USER_INTERFACE);
			}
		}
	}
};
oFF.FieldContainerPresentationHelper.prototype.submitDefaultPresentation = function(field, presentationType)
{
	var attribute = field.getAttribute();
	this.submitDefaultPresentationToFieldContainer(attribute, field, presentationType);
	var dimension = attribute.getDimension();
	if (dimension.getMainAttribute() === attribute)
	{
		this.submitDefaultPresentationToFieldContainer(dimension, field, presentationType);
	}
};
oFF.FieldContainerPresentationHelper.prototype.submitDefaultPresentationToFieldContainer = function(attribute, field, presentationType)
{
	if (oFF.notNull(attribute))
	{
		if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_TEXT) && presentationType !== oFF.PresentationType.ACTIVE_TEXT)
		{
			attribute.setClientDefaultTextField(field);
		}
		else if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_KEY) && attribute.getClientDefaultKeyField() !== field)
		{
			attribute.setClientDefaultKeyField(field);
		}
	}
};
oFF.FieldContainerPresentationHelper.prototype.getTextViewCorrected = function()
{
	if (this.m_textView === oFF.PresentationType.HIERARCHY_TEXT || this.m_textView === oFF.PresentationType.TEXT)
	{
		return oFF.PresentationType.ACTIVE_TEXT;
	}
	return this.m_textView;
};
oFF.FieldContainerPresentationHelper.prototype.getKeyViewCorrected = function()
{
	var newKeyView = this.m_keyView;
	if (this.m_hierarchyChanged && this.m_hierarchicalKeyPresentationAsymmetry)
	{
		newKeyView = this.m_keyViewDefault;
	}
	if (!this.m_keyViewsAvailable.contains(newKeyView))
	{
		newKeyView = this.m_keyViewDefault;
	}
	if (newKeyView === oFF.PresentationType.HIERARCHY_KEY || newKeyView === oFF.PresentationType.KEY)
	{
		newKeyView = oFF.PresentationType.ACTIVE_KEY;
	}
	else if (newKeyView === oFF.PresentationType.HIERARCHY_DISPLAY_KEY || newKeyView === oFF.PresentationType.DISPLAY_KEY)
	{
		newKeyView = oFF.PresentationType.ACTIVE_DISPLAY_KEY;
	}
	return newKeyView;
};
oFF.FieldContainerPresentationHelper.prototype.isFieldBased = function()
{
	return this.m_fieldBased;
};
oFF.FieldContainerPresentationHelper.prototype.getComponentText = function()
{
	return this.m_componentText;
};
oFF.FieldContainerPresentationHelper.prototype.getTextViewDefault = function()
{
	return this.m_textViewDefault;
};
oFF.FieldContainerPresentationHelper.prototype.getKeyViewDefault = function()
{
	return this.m_keyViewDefault;
};

oFF.DialogGridParser = {

	NEW_LINE_SYMBOL:"\n",
	TAB_SYMBOL:"\t",
	DEFAULT_SEPARATOR_SYMBOLS:null,
	staticSetup:function()
	{
			oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS = oFF.XListOfString.create();
		oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS.add(oFF.DialogGridFormat.COMMA.getSeparatorSymbol());
		oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS.add(oFF.DialogGridFormat.SEMICOLON.getSeparatorSymbol());
		oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS.add(oFF.DialogGridFormat.EXCEL.getSeparatorSymbol());
	},
	deserialize:function(separatorSymbols, input)
	{
			var rows = oFF.XList.create();
		if (oFF.XStringUtils.isNullOrEmpty(input))
		{
			return rows;
		}
		var cursor = 0;
		var textEnd = oFF.XString.size(input);
		while (cursor < textEnd)
		{
			var lineEnd = textEnd;
			var breakLineIndex = oFF.XString.indexOfFrom(input, oFF.DialogGridParser.NEW_LINE_SYMBOL, cursor);
			if (breakLineIndex !== -1)
			{
				lineEnd = breakLineIndex;
			}
			var row = oFF.XListOfString.create();
			while (cursor < lineEnd)
			{
				var wordEnd = lineEnd;
				for (var i = 0; i < separatorSymbols.size(); i++)
				{
					var index = oFF.XString.indexOfFrom(input, separatorSymbols.get(i), cursor);
					if (index !== -1)
					{
						wordEnd = oFF.XMath.min(wordEnd, index);
					}
				}
				var word = oFF.XString.trim(oFF.XString.substring(input, cursor, wordEnd));
				if (oFF.XStringUtils.isNotNullAndNotEmpty(word))
				{
					row.add(word);
				}
				cursor = wordEnd + 1;
			}
			rows.add(row);
			cursor = lineEnd + 1;
		}
		return rows;
	},
	deserializeWithDefault:function(input)
	{
			return oFF.DialogGridParser.deserialize(oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS, input);
	},
	serialize:function(separatorSymbol, decoratorSymbol, rows)
	{
			var buffer = oFF.XStringBuffer.create();
		var rowCount = rows.size();
		for (var r = 0; r < rowCount; r++)
		{
			var row = rows.get(r);
			var wordCount = row.size();
			for (var w = 0; w < wordCount; w++)
			{
				buffer.append(row.get(w));
				if (w + 1 < wordCount)
				{
					buffer.append(separatorSymbol).append(decoratorSymbol);
				}
			}
			if (r + 1 < rowCount)
			{
				buffer.append(oFF.DialogGridParser.NEW_LINE_SYMBOL);
			}
		}
		return buffer.toString();
	},
	serializeWithFormat:function(format, rows)
	{
			return oFF.DialogGridParser.serialize(format.getSeparatorSymbol(), format.getDecoratorSymbol(), rows);
	},
	convertFromExcel:function(excelString)
	{
			var separatorStr = oFF.XStringUtils.concatenate2(oFF.DialogGridFormat.SEMICOLON.getSeparatorSymbol(), oFF.DialogGridFormat.SEMICOLON.getDecoratorSymbol());
		return oFF.XString.replace(excelString, oFF.DialogGridParser.TAB_SYMBOL, separatorStr);
	},
	convertToExcel:function(gridString)
	{
			var parsedString = oFF.XString.replace(oFF.DialogGridParser.removeSeparatorSpaces(gridString), oFF.DialogGridFormat.SEMICOLON.getSeparatorSymbol(), oFF.DialogGridParser.TAB_SYMBOL);
		parsedString = oFF.XString.replace(parsedString, oFF.DialogGridFormat.COMMA.getSeparatorSymbol(), oFF.DialogGridParser.TAB_SYMBOL);
		return parsedString;
	},
	removeSeparatorSpaces:function(inputStr)
	{
			if (oFF.XStringUtils.isNullOrEmpty(inputStr))
		{
			return "";
		}
		var parsedStringBuf = oFF.XStringBuffer.create();
		parsedStringBuf.append(inputStr);
		var separatorSymbols = oFF.DialogGridParser.DEFAULT_SEPARATOR_SYMBOLS;
		for (var i = 0; i < separatorSymbols.size(); i++)
		{
			var separatorSymbol = separatorSymbols.get(i);
			var tmpInputString = parsedStringBuf.toString();
			var cursor = 0;
			var textEnd = oFF.XString.size(tmpInputString);
			parsedStringBuf.clear();
			while (cursor < textEnd)
			{
				var index = oFF.XString.indexOfFrom(tmpInputString, separatorSymbol, cursor);
				if (index !== -1)
				{
					var tmpString = oFF.XString.trim(oFF.XString.substring(tmpInputString, cursor, index));
					parsedStringBuf.append(tmpString);
					parsedStringBuf.append(separatorSymbol);
					cursor = index + 1;
				}
				else
				{
					parsedStringBuf.append(oFF.XString.trim(oFF.XString.substring(tmpInputString, cursor, textEnd)));
					cursor = textEnd;
				}
			}
		}
		return parsedStringBuf.toString();
	}
};

oFF.DialogMBFParser = {

	getMemberName:function(filterMeasureBased)
	{
			return oFF.DialogMBFParser.getMemberNameFromFormula(oFF.DialogMBFParser.asFormulaFunction(filterMeasureBased.getFormula()));
	},
	getMemberNameFromFormula:function(ifFunction)
	{
			if (oFF.notNull(ifFunction) && oFF.XString.isEqual(ifFunction.getFunctionName(), oFF.FormulaOperator.IF.getName()) && ifFunction.hasElements())
		{
			var condition = oFF.DialogMBFParser.asFormulaFunction(ifFunction.get(0));
			var operator = oFF.notNull(condition) ? oFF.FdComparisonOperator.getByFormulaOperator(condition.getFunctionName()) : null;
			if (operator === oFF.FdComparisonOperator.BETWEEN || operator === oFF.FdComparisonOperator.NOT_BETWEEN)
			{
				condition = oFF.DialogMBFParser.asFormulaFunction(condition.get(0));
			}
			if (oFF.notNull(condition) && condition.hasElements())
			{
				var formulaMember = condition.get(0).getOlapComponentType() === oFF.OlapComponentType.FORMULA_ITEM_MEMBER ? condition.get(0) : null;
				if (oFF.notNull(formulaMember) && oFF.XStringUtils.isNotNullAndNotEmpty(formulaMember.getMemberName()))
				{
					return formulaMember.getMemberName();
				}
			}
			return oFF.DialogMBFParser.getMemberNameFromFormula(oFF.DialogMBFParser.asFormulaFunction(ifFunction.get(2)));
		}
		return null;
	},
	getFilterRangesByMemberName:function(filterMeasureBased, memberName)
	{
			var result = oFF.XList.create();
		oFF.DialogMBFParser.addFormulaFunctionToSelection(oFF.DialogMBFParser.asFormulaFunction(filterMeasureBased.getFormula()), memberName, result);
		return result;
	},
	getFilterRanges:function(filterMeasureBased)
	{
			var result = oFF.XList.create();
		var memberName = oFF.DialogMBFParser.getMemberName(filterMeasureBased);
		if (oFF.notNull(memberName))
		{
			oFF.DialogMBFParser.addFormulaFunctionToSelection(oFF.DialogMBFParser.asFormulaFunction(filterMeasureBased.getFormula()), memberName, result);
		}
		return result;
	},
	addFormulaFunctionToSelection:function(ifFunction, memberName, result)
	{
			if (oFF.notNull(ifFunction) && oFF.XString.isEqual(ifFunction.getFunctionName(), oFF.FormulaOperator.IF.getName()) && ifFunction.size() === 3)
		{
			var ifCondition = oFF.DialogMBFParser.asFormulaFunction(ifFunction.get(0));
			if (oFF.notNull(ifCondition))
			{
				var operator = oFF.FdComparisonOperator.getByFormulaOperator(ifCondition.getFunctionName());
				if (operator === oFF.FdComparisonOperator.BETWEEN || operator === oFF.FdComparisonOperator.NOT_BETWEEN)
				{
					if (ifCondition.size() === 2)
					{
						var itemLow = oFF.DialogMBFParser.createItemFromFormulaFunction(oFF.DialogMBFParser.asFormulaFunction(ifCondition.get(0)), memberName, oFF.FdComparisonOperator.EQUAL);
						var itemHigh = oFF.DialogMBFParser.createItemFromFormulaFunction(oFF.DialogMBFParser.asFormulaFunction(ifCondition.get(1)), memberName, oFF.FdComparisonOperator.EQUAL);
						if (oFF.notNull(itemLow) && oFF.notNull(itemHigh))
						{
							result.add(oFF.FdItemFactory.createRange(itemLow, itemHigh, operator === oFF.FdComparisonOperator.NOT_BETWEEN));
						}
					}
				}
				else if (oFF.notNull(operator))
				{
					oFF.XCollectionUtils.addIfNotNull(result, oFF.DialogMBFParser.createItemFromFormulaFunction(ifCondition, memberName, operator));
				}
			}
			var elsePart = oFF.DialogMBFParser.asFormulaFunction(ifFunction.get(2));
			oFF.DialogMBFParser.addFormulaFunctionToSelection(elsePart, memberName, result);
		}
	},
	createItemFromFormulaFunction:function(fif, memberName, operator)
	{
			if (oFF.notNull(fif) && fif.size() === 2)
		{
			var formulaMember = fif.get(0).getOlapComponentType() === oFF.OlapComponentType.FORMULA_ITEM_MEMBER ? fif.get(0) : null;
			var formulaConstant = oFF.DialogMBFParser.asFormulaFunction(fif.get(1));
			if (oFF.notNull(formulaMember) && oFF.XString.isEqual(formulaMember.getMemberName(), memberName) && oFF.notNull(formulaConstant) && formulaConstant.hasElements())
			{
				var formulaConstantValue = formulaConstant.get(0);
				if (formulaConstantValue.getOlapComponentType() === oFF.OlapComponentType.FORMULA_CONSTANT)
				{
					var item = oFF.FdItemFactory.createItemByKey(formulaConstantValue.getString(), null, null);
					item.setComparisonOperator(operator);
					return item;
				}
			}
		}
		return null;
	},
	asFormulaFunction:function(formulaItem)
	{
			return oFF.notNull(formulaItem) && formulaItem.getOlapComponentType() === oFF.OlapComponentType.FORMULA_FUNCTION ? formulaItem : null;
	}
};

oFF.OlapUiContext = function() {};
oFF.OlapUiContext.prototype = new oFF.XObject();
oFF.OlapUiContext.prototype._ff_c = "OlapUiContext";

oFF.OlapUiContext.createContext = function(uiManager, displayFactory)
{
	var obj = new oFF.OlapUiContext();
	obj.setupContext(uiManager, displayFactory);
	return obj;
};
oFF.OlapUiContext.createWithOtherContext = function(otherContext, displayFactory)
{
	var obj = new oFF.OlapUiContext();
	obj.setupWithOtherContext(otherContext, displayFactory);
	return obj;
};
oFF.OlapUiContext.prototype.m_uiManager = null;
oFF.OlapUiContext.prototype.m_displayFactory = null;
oFF.OlapUiContext.prototype.m_fdFactory = null;
oFF.OlapUiContext.prototype.m_fdItemFactory = null;
oFF.OlapUiContext.prototype.m_cbFactory = null;
oFF.OlapUiContext.prototype.m_cbController = null;
oFF.OlapUiContext.prototype.m_cmtFactory = null;
oFF.OlapUiContext.prototype.m_cmtController = null;
oFF.OlapUiContext.prototype.m_vpFactory = null;
oFF.OlapUiContext.prototype.m_vpController = null;
oFF.OlapUiContext.prototype.m_messagePoster = null;
oFF.OlapUiContext.prototype.m_featureToggle = null;
oFF.OlapUiContext.prototype.m_configurationChecker = null;
oFF.OlapUiContext.prototype.setupContext = function(uiManager, displayFactory)
{
	this.m_uiManager = uiManager;
	this.m_displayFactory = displayFactory;
	this.m_featureToggle = oFF.UiFeatureToggleCenter.getCenter();
	this.m_configurationChecker = oFF.UiConfigurationCenter.getCenter();
	this.m_messagePoster = oFF.UiMessageCenter.createMessageCenter(uiManager);
	this.setupFactories();
};
oFF.OlapUiContext.prototype.setupWithOtherContext = function(otherContext, displayFactory)
{
	this.m_uiManager = otherContext.getUiManager();
	this.m_displayFactory = displayFactory;
	this.m_featureToggle = oFF.UiFeatureToggleCenter.getCenter();
	this.m_configurationChecker = oFF.UiConfigurationCenter.getCenter();
	this.m_messagePoster = oFF.UiMessageCenter.createMessageCenter(otherContext.getUiManager());
	this.setupFactories();
};
oFF.OlapUiContext.prototype.setupFactories = function()
{
	this.m_fdFactory = oFF.FdFactory.createFactory(this);
	this.m_fdItemFactory = oFF.FdItemFactory.createFactory();
	this.m_cbFactory = oFF.CbFactory.createFactory(this);
	this.m_cmtFactory = oFF.CmtFactory.createFactory(this);
	this.m_vpFactory = oFF.VdVariantManagerFactory.createFactory(this);
};
oFF.OlapUiContext.prototype.getUiManager = function()
{
	return this.m_uiManager;
};
oFF.OlapUiContext.prototype.getDeviceInfo = function()
{
	return this.m_uiManager.getDeviceInfo();
};
oFF.OlapUiContext.prototype.getDisplayFactory = function()
{
	return this.m_displayFactory;
};
oFF.OlapUiContext.prototype.getLocalization = function()
{
	return this.m_uiManager.getLocalization();
};
oFF.OlapUiContext.prototype.getFeatureToggle = function()
{
	return this.m_featureToggle;
};
oFF.OlapUiContext.prototype.getConfigurationChecker = function()
{
	return this.m_configurationChecker;
};
oFF.OlapUiContext.prototype.getFilterDialogFactory = function()
{
	return this.m_fdFactory;
};
oFF.OlapUiContext.prototype.getFilterDialogItemFactory = function()
{
	return this.m_fdItemFactory;
};
oFF.OlapUiContext.prototype.setFilterDialogFactory = function(factory)
{
	this.m_fdFactory = factory;
};
oFF.OlapUiContext.prototype.getClipboardDialogFactory = function()
{
	return this.m_cbFactory;
};
oFF.OlapUiContext.prototype.setClipboardDialogFactory = function(factory)
{
	this.m_cbFactory = factory;
};
oFF.OlapUiContext.prototype.getClipboardController = function()
{
	if (oFF.isNull(this.m_cbController))
	{
		this.m_cbController = this.m_cbFactory.newClipboardDialogInstance();
	}
	return this.m_cbController;
};
oFF.OlapUiContext.prototype.getCommentingDialogFactory = function()
{
	return this.m_cmtFactory;
};
oFF.OlapUiContext.prototype.setCommentingDialogFactory = function(factory)
{
	this.m_cmtFactory = factory;
};
oFF.OlapUiContext.prototype.getCommentingController = function()
{
	if (oFF.isNull(this.m_cmtController))
	{
		this.m_cmtController = this.m_cmtFactory.newCommentingDialogInstance();
	}
	return this.m_cmtController;
};
oFF.OlapUiContext.prototype.setVariantPopupFactory = function(factory)
{
	this.m_vpFactory = factory;
};
oFF.OlapUiContext.prototype.getVariantController = function()
{
	if (oFF.isNull(this.m_vpController))
	{
		this.m_vpController = this.m_vpFactory.newVariantPopupInstance();
	}
	return this.m_vpController;
};
oFF.OlapUiContext.prototype.getMessageCenter = function()
{
	return this.m_messagePoster;
};
oFF.OlapUiContext.prototype.releaseObject = function()
{
	this.m_uiManager = null;
	this.m_displayFactory = null;
	this.m_fdFactory = oFF.XObjectExt.release(this.m_fdFactory);
	this.m_fdItemFactory = oFF.XObjectExt.release(this.m_fdItemFactory);
	this.m_cbFactory = oFF.XObjectExt.release(this.m_cbFactory);
	this.m_cmtFactory = oFF.XObjectExt.release(this.m_cmtFactory);
	this.m_vpFactory = oFF.XObjectExt.release(this.m_vpFactory);
	this.m_cbController = oFF.XObjectExt.release(this.m_cbController);
	this.m_vpController = oFF.XObjectExt.release(this.m_vpController);
	this.m_messagePoster = oFF.XObjectExt.release(this.m_messagePoster);
	this.m_featureToggle = oFF.XObjectExt.release(this.m_featureToggle);
	this.m_configurationChecker = oFF.XObjectExt.release(this.m_configurationChecker);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapUiFeatureToggle = {

	MEMBERSELECTOR_READMODE_SWITCH:"ABSTRACTION_API_MEMBERSELECTOR_READMODE_SWITCH",
	MEMBERSELECTOR_STORY_FILTER_OPTIMIZATION_FOR_DESKTOP:"ABSTRACTION_API_MEMBERSELECTOR_STORY_FILTER_OPTIMIZATION_FOR_DESKTOP",
	ENABLE_PUBLICATION_EXIT_VARIABLE_CHECK:"ENABLE_PUBLICATION_EXIT_VARIABLE_CHECK"
};

oFF.OlapUiMultiRequestHelper = function() {};
oFF.OlapUiMultiRequestHelper.prototype = new oFF.XObject();
oFF.OlapUiMultiRequestHelper.prototype._ff_c = "OlapUiMultiRequestHelper";

oFF.OlapUiMultiRequestHelper.createRequestHelper = function(originalListener, originalObject)
{
	var obj = new oFF.OlapUiMultiRequestHelper();
	obj.setupHelper(originalListener, originalObject);
	return obj;
};
oFF.OlapUiMultiRequestHelper.prototype.m_originalListener = null;
oFF.OlapUiMultiRequestHelper.prototype.m_originalObject = null;
oFF.OlapUiMultiRequestHelper.prototype.m_inStartup = false;
oFF.OlapUiMultiRequestHelper.prototype.m_requestCount = 0;
oFF.OlapUiMultiRequestHelper.prototype.m_callbackCount = 0;
oFF.OlapUiMultiRequestHelper.prototype.m_errorResult = null;
oFF.OlapUiMultiRequestHelper.prototype.setupHelper = function(listener, customIdentifier)
{
	this.m_originalListener = listener;
	this.m_originalObject = customIdentifier;
	this.m_inStartup = true;
};
oFF.OlapUiMultiRequestHelper.prototype.releaseObject = function()
{
	this.m_originalListener = null;
	this.m_originalObject = null;
	this.m_errorResult = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapUiMultiRequestHelper.prototype.getOriginalListener = function()
{
	return this.m_originalListener;
};
oFF.OlapUiMultiRequestHelper.prototype.getOriginalObject = function()
{
	return this.m_originalObject;
};
oFF.OlapUiMultiRequestHelper.prototype.getRequestCount = function()
{
	return this.m_requestCount;
};
oFF.OlapUiMultiRequestHelper.prototype.increaseRequestCount = function()
{
	this.m_requestCount = this.m_requestCount + 1;
};
oFF.OlapUiMultiRequestHelper.prototype.increaseCallbackCount = function()
{
	this.m_callbackCount = this.m_callbackCount + 1;
};
oFF.OlapUiMultiRequestHelper.prototype.isDone = function()
{
	return !this.isInStartup() && this.m_callbackCount >= this.m_requestCount;
};
oFF.OlapUiMultiRequestHelper.prototype.isInStartup = function()
{
	return this.m_inStartup;
};
oFF.OlapUiMultiRequestHelper.prototype.finishProgress = function()
{
	this.m_inStartup = false;
};
oFF.OlapUiMultiRequestHelper.prototype.getErrorResult = function()
{
	return this.m_errorResult;
};
oFF.OlapUiMultiRequestHelper.prototype.setErrorResult = function(errorResult)
{
	this.m_errorResult = errorResult;
};

oFF.OlapUiValueHelpNodeComparator = function() {};
oFF.OlapUiValueHelpNodeComparator.prototype = new oFF.XObject();
oFF.OlapUiValueHelpNodeComparator.prototype._ff_c = "OlapUiValueHelpNodeComparator";

oFF.OlapUiValueHelpNodeComparator.create = function(isHierarchy)
{
	var obj = new oFF.OlapUiValueHelpNodeComparator();
	obj.m_isHierarchy = isHierarchy;
	return obj;
};
oFF.OlapUiValueHelpNodeComparator.prototype.m_isHierarchy = false;
oFF.OlapUiValueHelpNodeComparator.prototype.compare = function(o1, o2)
{
	var fieldValue1 = this.getKeyFieldValue(o1).getValue();
	var fieldValue2 = this.getKeyFieldValue(o2).getValue();
	if (fieldValue1.getValueType().isNumber())
	{
		var comparison = oFF.XConverterUtils.getDouble(fieldValue1) - oFF.XConverterUtils.getDouble(fieldValue2);
		return comparison < 0 ? -1 : comparison > 0 ? 1 : 0;
	}
	return oFF.XString.compare(fieldValue1.getStringRepresentation(), fieldValue2.getStringRepresentation());
};
oFF.OlapUiValueHelpNodeComparator.prototype.getKeyFieldValue = function(node)
{
	var keyField = this.m_isHierarchy ? node.getDimension().getHierarchyKeyField() : node.getDimension().getFlatKeyField();
	return node.getDimensionMember().getFieldValue(keyField);
};

oFF.OlapUiMessageCenter = {

	getInaErrorMessage:function(messages, defaultMessage)
	{
			if (oFF.notNull(messages) && messages.getServerStatusCode() === oFF.HttpStatusCode.SC_OK)
		{
			var firstError = messages.getFirstError();
			if (oFF.notNull(firstError) && oFF.XStringUtils.isNotNullAndNotEmpty(firstError.getText()))
			{
				return firstError.getText();
			}
		}
		return defaultMessage;
	},
	getInaErrorCode:function(messages)
	{
			if (oFF.notNull(messages))
		{
			var firstError = messages.getFirstError();
			if (oFF.notNull(firstError))
			{
				return firstError.getCode();
			}
		}
		return 0;
	}
};

oFF.OlapUiDisplayFactory = function() {};
oFF.OlapUiDisplayFactory.prototype = new oFF.XObject();
oFF.OlapUiDisplayFactory.prototype._ff_c = "OlapUiDisplayFactory";

oFF.OlapUiDisplayFactory.createFactoryForDialog = function(uiManager)
{
	var obj = new oFF.OlapUiDisplayFactory();
	obj.setupFactory(oFF.DialogDisplayMode.DIALOG, uiManager, null, null);
	return obj;
};
oFF.OlapUiDisplayFactory.createFactoryForNavigation = function(uiManager, root)
{
	var obj = new oFF.OlapUiDisplayFactory();
	obj.setupFactory(oFF.DialogDisplayMode.NAVIGATION, uiManager, root, null);
	return obj;
};
oFF.OlapUiDisplayFactory.createFactoryForPage = function(page)
{
	var obj = new oFF.OlapUiDisplayFactory();
	obj.setupFactory(oFF.DialogDisplayMode.PAGE, null, null, page);
	return obj;
};
oFF.OlapUiDisplayFactory.prototype.m_mode = null;
oFF.OlapUiDisplayFactory.prototype.m_uiManager = null;
oFF.OlapUiDisplayFactory.prototype.m_container = null;
oFF.OlapUiDisplayFactory.prototype.m_page = null;
oFF.OlapUiDisplayFactory.prototype.setupFactory = function(mode, uiManager, genesis, customPage)
{
	this.m_mode = mode;
	this.m_uiManager = uiManager;
	if (mode === oFF.DialogDisplayMode.NAVIGATION)
	{
		this.m_container = this.m_uiManager.newControl(oFF.UiType.NAVIGATION_CONTAINER);
		this.m_container.useMaxSpace();
		genesis.setRoot(this.m_container);
	}
	if (mode === oFF.DialogDisplayMode.PAGE)
	{
		this.m_page = customPage;
	}
};
oFF.OlapUiDisplayFactory.prototype.getInstance = function()
{
	if (this.m_mode === oFF.DialogDisplayMode.NAVIGATION)
	{
		var page = this.m_container.pushNewPage();
		return oFF.OlapUiNavigationHandle.createNavigationHandle(this.m_container, page);
	}
	if (this.m_mode === oFF.DialogDisplayMode.PAGE)
	{
		return oFF.OlapUiPageHandle.createPageHandle(this.m_page);
	}
	return oFF.OlapUiDialogHandle.createDialogHandle(this.m_uiManager.newControl(oFF.UiType.DIALOG));
};
oFF.OlapUiDisplayFactory.prototype.releaseObject = function()
{
	this.m_mode = null;
	this.m_uiManager = null;
	this.m_container = oFF.XObjectExt.release(this.m_container);
	this.m_page = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.MemberFilterApplicationUtil = {

	isMemberFilterable:function(queryModel, member, setSign)
	{
			var dimension = member.getDimension();
		var cartesianList;
		if (oFF.notNull(dimension) && !dimension.isHierarchyActive() && setSign === oFF.SetSign.EXCLUDING)
		{
			cartesianList = queryModel.getFilter().getDynamicFilter().getCartesianProductWithDefault().getCartesianList(dimension);
			if (oFF.XCollectionUtils.hasElements(cartesianList))
			{
				if (oFF.XStream.of(cartesianList).find( function(el){
					return el.getSetSign() === oFF.SetSign.INCLUDING && oFF.XString.isEqual(el.getLow().getString(), member.getName());
				}.bind(this)).isPresent())
				{
					return true;
				}
			}
		}
		var filterCapabilities = oFF.isNull(dimension) ? null : dimension.getFilterCapabilities();
		var filterCapabilityByField = oFF.isNull(filterCapabilities) ? null : filterCapabilities.getFilterCapabilitiesByField(dimension.getKeyField());
		var supportedCompOperators = oFF.isNull(filterCapabilityByField) ? null : filterCapabilityByField.getSupportedComparisonOperators(setSign);
		return !dimension.isUniversalDisplayHierarchyDimension() && oFF.notNull(supportedCompOperators) && supportedCompOperators.contains(oFF.ComparisonOperator.EQUAL);
	},
	filterOnSelection:function(queryModel, dimensionMembers, setSign, drill, exchangeDimension)
	{
			var i;
		var cmd = queryModel.getConvenienceCommands();
		var cartesianList;
		var dimension;
		var axisType = null;
		var dynamicFilter = queryModel.getFilter().getDynamicFilter();
		dynamicFilter.queueEventing();
		var filterLambda =  function(fe){
			return fe.getSetSign() === oFF.SetSign.INCLUDING;
		}.bind(this);
		for (i = 0; i < dimensionMembers.size(); i++)
		{
			dimension = dimensionMembers.get(i).getDimension();
			if (oFF.MemberFilterApplicationUtil.checkDimensionFilterCapabilityForSignAndOperator(dimension, setSign, oFF.ComparisonOperator.EQUAL))
			{
				axisType = dimension.getAxisType();
				cartesianList = dynamicFilter.getCartesianProductWithDefault().getCartesianListWithDefault(dimension);
				if (setSign === oFF.SetSign.INCLUDING)
				{
					oFF.XCollectionUtils.removeIf(cartesianList, filterLambda);
				}
			}
		}
		var index = -1;
		for (i = 0; i < dimensionMembers.size(); i++)
		{
			var member = dimensionMembers.get(i);
			dimension = member.getDimension();
			cartesianList = dynamicFilter.getCartesianProduct().getCartesianList(dimension);
			cartesianList.setHierarchyInfo(dimension.getHierarchyName(), dimension.getHierarchyDueDate(), dimension.getHierarchyVersion());
			var presentElement = setSign === oFF.SetSign.EXCLUDING && oFF.XCollectionUtils.hasElements(cartesianList) ? oFF.XStream.of(cartesianList).find( function(fce){
				return fce.getSetSign() === oFF.SetSign.INCLUDING && oFF.XString.isEqual(fce.getLow().getString(), member.getName());
			}.bind(this)) : oFF.XOptional.empty();
			if (presentElement.isPresent())
			{
				cartesianList.removeElement(presentElement.get());
			}
			if (!oFF.MemberFilterApplicationUtil.checkDimensionFilterCapabilityForSignAndOperator(dimension, setSign, oFF.ComparisonOperator.EQUAL))
			{
				continue;
			}
			var cartesianElement = cartesianList.addNewCartesianElement();
			var isNullValue = member.getDimensionMemberNameValueException() === oFF.ValueException.NULL_VALUE;
			cartesianElement.setComparisonOperator(isNullValue ? oFF.ComparisonOperator.IS_NULL : oFF.ComparisonOperator.EQUAL);
			var textField = dimension.getTextField();
			var displayKeyField = dimension.getDisplayKeyField();
			cartesianElement.setSetSign(setSign);
			var fieldValue;
			if (oFF.notNull(textField))
			{
				fieldValue = member.getFieldValue(textField);
				if (oFF.notNull(fieldValue) && fieldValue.hasValue())
				{
					cartesianElement.getLow().addSupplementValue(textField.getName(), fieldValue.getValue().getStringRepresentation());
				}
			}
			if (oFF.notNull(displayKeyField))
			{
				fieldValue = member.getFieldValue(displayKeyField);
				if (oFF.notNull(fieldValue) && fieldValue.hasValue())
				{
					cartesianElement.getLow().addSupplementValue(displayKeyField.getName(), fieldValue.getValue().getStringRepresentation());
				}
			}
			cartesianElement.getLow().setDimensionMember(member);
			if (drill)
			{
				if (index === -1)
				{
					index = dimension.getAxis().getIndex(dimension);
				}
				else
				{
					index = oFF.XMath.min(index, dimension.getAxis().getIndex(dimension));
				}
				if ((dimension.getAxisType() === oFF.AxisType.ROWS || dimension.getAxisType() === oFF.AxisType.COLUMNS) && dimension.supportsAxis(oFF.AxisType.FREE))
				{
					oFF.FieldContainerPresentationHelper.removeDisplayAttributesFromDimension(dimension);
					cmd.moveDimensionToAxis(dimension.getName(), oFF.AxisType.FREE);
				}
			}
		}
		if (drill && oFF.notNull(exchangeDimension) && dimensionMembers.size() > 0 && oFF.notNull(axisType))
		{
			cmd.moveDimensionOnAxisTo(exchangeDimension.getName(), axisType, index);
		}
		dynamicFilter.resumeEventing();
	},
	checkDimensionFilterCapabilityForSignAndOperator:function(dimension, setSign, operator)
	{
			var capabilities = oFF.isNull(dimension) ? null : dimension.getFilterCapabilities();
		var fieldCapabilities = oFF.isNull(capabilities) ? null : capabilities.getFilterCapabilitiesByField(dimension.getKeyField());
		var supportedOperators = oFF.isNull(fieldCapabilities) ? null : fieldCapabilities.getSupportedComparisonOperators(setSign);
		return oFF.notNull(supportedOperators) && supportedOperators.contains(operator);
	}
};

oFF.TupleFilterApplicationUtil = {

	TUPLE_FILTER_LAYER_INCLUDE:"Tuple.Filter.Layer.Include",
	TUPLE_FILTER_LAYER_EXCLUDE:"Tuple.Filter.Layer.Exclude",
	clearTupleFilters:function(queryModel)
	{
			var filter = queryModel.getFilter();
		var dataTupleFilters = oFF.TupleFilterApplicationUtil.getTupleFilters(queryModel, false, true);
		var keysIterator = dataTupleFilters.getKeysAsIteratorOfString();
		while (keysIterator.hasNext())
		{
			filter.linkFilter(keysIterator.next(), null);
		}
		if (queryModel.getModelCapabilities().supportsVisibilityFilter())
		{
			var visibilityTupleFilters = oFF.TupleFilterApplicationUtil.getTupleFilters(queryModel, true, true);
			keysIterator = visibilityTupleFilters.getKeysAsIteratorOfString();
			while (keysIterator.hasNext())
			{
				filter.linkVisibilityFilter(keysIterator.next(), null);
			}
		}
	},
	clearTupleFilter:function(queryModel, dimensions, setSign, validateTupleFilter)
	{
			var filter = queryModel.getFilter();
		var dataTupleFilters = oFF.TupleFilterApplicationUtil.getTupleFilters(queryModel, false, true);
		var keysIterator = dataTupleFilters.getKeysAsIteratorOfString();
		var unlinkFilter =  function(s){
			filter.linkFilter(s, null);
		}.bind(this);
		var unlinkVisibilityFilter =  function(v){
			filter.linkVisibilityFilter(v, null);
		}.bind(this);
		var key;
		while (keysIterator.hasNext())
		{
			key = keysIterator.next();
			oFF.TupleFilterApplicationUtil.unlinkTupleFilterForDimension(unlinkFilter, dimensions, setSign, validateTupleFilter, key, dataTupleFilters.getByKey(key));
		}
		var visibleTupleFilters = oFF.TupleFilterApplicationUtil.getTupleFilters(queryModel, true, true);
		keysIterator = dataTupleFilters.getKeysAsIteratorOfString();
		while (keysIterator.hasNext())
		{
			key = keysIterator.next();
			oFF.TupleFilterApplicationUtil.unlinkTupleFilterForDimension(unlinkVisibilityFilter, dimensions, setSign, validateTupleFilter, key, visibleTupleFilters.getByKey(key));
		}
	},
	unlinkTupleFilterForDimension:function(unlinkAction, dimensions, setSign, validateTupleFilter, key, expression)
	{
			if (oFF.TupleFilterApplicationUtil.getSetSignForTupleFilterExpression(expression, false) === setSign && oFF.TupleFilterApplicationUtil.isTupleFilterForDimensions(expression, dimensions, setSign, validateTupleFilter))
		{
			unlinkAction(key);
		}
	},
	getTupleFilters:function(queryModel, visibilityFilter, validate)
	{
			var result = oFF.XHashMapByString.create();
		var filter = queryModel.getFilter();
		var linkedFilters = visibilityFilter ? filter.getLinkedVisibilityFilters() : filter.getLinkedFilters();
		var keyIterator = linkedFilters.getKeysAsIteratorOfString();
		while (keyIterator.hasNext())
		{
			var key = keyIterator.next();
			var filterExpression = linkedFilters.getByKey(key);
			if (oFF.XString.startsWith(key, oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_INCLUDE))
			{
				if (!validate || oFF.XCollectionUtils.hasElements(oFF.TupleFilterApplicationUtil.getDimensionsForTupleFilterExpressionAndSetSign(filterExpression, oFF.SetSign.INCLUDING, true)))
				{
					result.put(key, filterExpression);
				}
			}
			else if (oFF.XString.startsWith(key, oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_EXCLUDE))
			{
				if (!validate || oFF.XCollectionUtils.hasElements(oFF.TupleFilterApplicationUtil.getDimensionsForTupleFilterExpressionAndSetSign(filterExpression, oFF.SetSign.EXCLUDING, true)))
				{
					result.put(key, filterExpression);
				}
			}
		}
		return result;
	},
	getSetSignForTupleFilterExpression:function(filterExpression, validateTupleFilter)
	{
			var setSign = null;
		if (oFF.notNull(filterExpression))
		{
			var rootElement = filterExpression.getFilterRootElement();
			if (oFF.notNull(rootElement))
			{
				var componentType = rootElement.getOlapComponentType();
				if (componentType === oFF.FilterComponentType.NOT)
				{
					setSign = oFF.SetSign.EXCLUDING;
				}
				else if (componentType === oFF.FilterComponentType.OR)
				{
					setSign = oFF.SetSign.INCLUDING;
				}
				if (oFF.notNull(setSign) && validateTupleFilter && !oFF.XCollectionUtils.hasElements(oFF.TupleFilterApplicationUtil.getDimensionsForTupleFilterExpressionAndSetSign(filterExpression, setSign, true)))
				{
					setSign = null;
				}
			}
		}
		return setSign;
	},
	getDimensionsForTupleFilterExpression:function(filterExpression, validateTupleFilter)
	{
			var setSign = oFF.TupleFilterApplicationUtil.getSetSignForTupleFilterExpression(filterExpression, false);
		return oFF.isNull(setSign) ? null : oFF.TupleFilterApplicationUtil.getDimensionsForTupleFilterExpressionAndSetSign(filterExpression, setSign, validateTupleFilter);
	},
	getDimensionsForTupleFilterExpressionAndSetSign:function(filterExpression, setSign, strict)
	{
			var result = null;
		var rootElement = filterExpression.getFilterRootElement();
		if (oFF.notNull(rootElement))
		{
			if (setSign === oFF.SetSign.EXCLUDING)
			{
				var componentType = rootElement.getOlapComponentType();
				if (componentType === oFF.FilterComponentType.NOT)
				{
					result = oFF.TupleFilterApplicationUtil.getTupleDimensions(rootElement.getChild(), strict);
				}
			}
			else
			{
				result = oFF.TupleFilterApplicationUtil.getTupleDimensions(rootElement, strict);
			}
		}
		return result;
	},
	getTupleDimensions:function(filterElement, strict)
	{
			var componentType = filterElement.getOlapComponentType();
		var dimensions = null;
		if (componentType === oFF.FilterComponentType.OR)
		{
			var orFilter = filterElement;
			if (oFF.XCollectionUtils.hasElements(orFilter))
			{
				var firstChild = orFilter.get(0);
				if (firstChild.getOlapComponentType() === oFF.FilterComponentType.AND)
				{
					var andFilter = firstChild;
					if (oFF.XStream.of(andFilter).allMatch( function(fo){
						return fo.getOlapComponentType() === oFF.FilterComponentType.OPERATION;
					}.bind(this)))
					{
						dimensions = oFF.XStream.of(andFilter).map( function(fop){
							return fop.getDimension();
						}.bind(this)).collect(oFF.XStreamCollector.toList());
						if (strict)
						{
							oFF.TupleFilterApplicationUtil.isTupleFilterElementListForDimensions(orFilter, dimensions, true);
						}
					}
				}
			}
		}
		return dimensions;
	},
	setTupleFilter:function(queryModel, tuples, dimensions, setSign, enforceFlat, excludeStructureMembers, defineAsVisibilityFilter)
	{
			var hasDimensionsRestriction = oFF.XCollectionUtils.hasElements(dimensions);
		var relevantTuples = oFF.XStream.of(tuples).filter( function(tu){
			return oFF.TupleFilterApplicationUtil.isValidFilterTuple(tu, dimensions, excludeStructureMembers, false);
		}.bind(this)).collect(oFF.XStreamCollector.toList());
		if (oFF.XCollectionUtils.hasElements(relevantTuples))
		{
			var orFilter = oFF.TupleFilterApplicationUtil.getOrCreateTupleFilter(queryModel, dimensions, setSign, defineAsVisibilityFilter, true);
			for (var i = 0; i < relevantTuples.size(); i++)
			{
				var tuple = relevantTuples.get(i);
				var andFilter = oFF.QFactory.createFilterAnd(queryModel.getContext());
				for (var j = 0; j < tuple.size(); j++)
				{
					var tupleElement = tuple.get(j);
					var tupleDimension = tupleElement.getDimension();
					if ((!excludeStructureMembers || !tupleDimension.isStructure()) && (!hasDimensionsRestriction || dimensions.contains(tupleDimension)))
					{
						var operation = oFF.QFactory.createFilterOperation(queryModel.getContext(), tupleDimension.getKeyField());
						if (enforceFlat)
						{
							operation.setConvertToFlatFilter(true);
						}
						operation.setHierarchyInfo(tupleDimension.getHierarchyName(), tupleDimension.getHierarchyDueDate(), tupleDimension.getHierarchyVersion());
						var member = tupleElement.getDimensionMember();
						operation.getLow().setDimensionMember(member);
						var isNullValue = member.getDimensionMemberNameValueException() === oFF.ValueException.NULL_VALUE;
						operation.setComparisonOperator(isNullValue ? oFF.ComparisonOperator.IS_NULL : oFF.ComparisonOperator.EQUAL);
						andFilter.add(operation);
					}
				}
				if (andFilter.size() > 0)
				{
					orFilter.add(andFilter);
				}
			}
		}
	},
	getTupleFilter:function(queryModel, dimensions, setSign, visibilityFilter, validate)
	{
			var filter = queryModel.getFilter();
		var linkedFilters = visibilityFilter ? filter.getLinkedVisibilityFilters() : filter.getLinkedFilters();
		var layerPrefix = setSign === oFF.SetSign.EXCLUDING ? oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_EXCLUDE : oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_INCLUDE;
		var keyIterator = linkedFilters.getKeysAsIteratorOfString();
		var result = null;
		while (keyIterator.hasNext())
		{
			var key = keyIterator.next();
			var filterExpression = linkedFilters.getByKey(key);
			if (oFF.XString.startsWith(key, layerPrefix))
			{
				if (oFF.TupleFilterApplicationUtil.isTupleFilterForDimensions(filterExpression, dimensions, setSign, validate))
				{
					result = filterExpression;
					break;
				}
			}
		}
		return result;
	},
	getOrCreateTupleFilter:function(queryModel, dimensions, setSign, visibilityFilter, createIfNotExists)
	{
			var filter = queryModel.getFilter();
		var linkedFilters = visibilityFilter ? filter.getLinkedVisibilityFilters() : filter.getLinkedFilters();
		var layerPrefix = setSign === oFF.SetSign.EXCLUDING ? oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_EXCLUDE : oFF.TupleFilterApplicationUtil.TUPLE_FILTER_LAYER_INCLUDE;
		var keyIterator = linkedFilters.getKeysAsIteratorOfString();
		var result = null;
		var suffixes = oFF.XHashSetOfString.create();
		var filterExpression;
		while (keyIterator.hasNext())
		{
			var key = keyIterator.next();
			filterExpression = linkedFilters.getByKey(key);
			if (oFF.XString.startsWith(key, layerPrefix))
			{
				if (oFF.TupleFilterApplicationUtil.isTupleFilterForDimensions(filterExpression, dimensions, setSign, false))
				{
					if (setSign === oFF.SetSign.EXCLUDING)
					{
						var not = filterExpression.getFilterRootElement();
						result = not.getChild();
					}
					else
					{
						result = filterExpression.getFilterRootElement();
					}
					break;
				}
				else
				{
					suffixes.add(oFF.XString.substring(key, oFF.XString.size(layerPrefix) + 1, oFF.XString.size(key)));
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExists)
		{
			var newSuffix = 0;
			while (suffixes.contains(oFF.XInteger.convertToString(newSuffix)))
			{
				newSuffix = newSuffix + 1;
			}
			var newRootFilter;
			var newFilterOr = oFF.QFactory.createFilterOr(queryModel);
			if (setSign === oFF.SetSign.EXCLUDING)
			{
				var filterNot = oFF.QFactory.createFilterNot(queryModel);
				filterNot.setChild(newFilterOr);
				newRootFilter = filterNot;
			}
			else
			{
				newRootFilter = newFilterOr;
			}
			var filterName = oFF.XStringUtils.concatenate3(layerPrefix, "_", oFF.XInteger.convertToString(newSuffix));
			filterExpression = oFF.QFactory.createFilterExpression(queryModel, filter);
			filterExpression.setPreserveOnRepoSerialization(true);
			filterExpression.setComplexRoot(newRootFilter);
			if (visibilityFilter)
			{
				filter.linkVisibilityFilter(filterName, filterExpression);
			}
			else
			{
				filter.linkFilter(filterName, filterExpression);
			}
			result = newFilterOr;
		}
		return result;
	},
	isTupleFilterForDimensions:function(filterExpression, dimensions, setSign, strict)
	{
			var rootExpression = filterExpression.getFilterRootElement();
		var result = false;
		if (oFF.notNull(rootExpression))
		{
			var componentType = rootExpression.getOlapComponentType();
			if (setSign === oFF.SetSign.EXCLUDING)
			{
				result = componentType === oFF.FilterComponentType.NOT && oFF.TupleFilterApplicationUtil.isTupleFilterElementListForDimensions(rootExpression.getChild(), dimensions, strict);
			}
			else
			{
				result = oFF.TupleFilterApplicationUtil.isTupleFilterElementListForDimensions(rootExpression, dimensions, strict);
			}
		}
		return result;
	},
	isTupleFilterElementListForDimensions:function(filterElement, dimensions, strict)
	{
			var result = false;
		var componentType = filterElement.getOlapComponentType();
		if (componentType === oFF.FilterComponentType.OR)
		{
			result = oFF.XCollectionUtils.hasElements(filterElement) && strict ? oFF.XStream.of(filterElement).allMatch( function(sfe){
				return oFF.TupleFilterApplicationUtil.isTupleFilterElementForDimension(sfe, dimensions);
			}.bind(this)) : oFF.TupleFilterApplicationUtil.isTupleFilterElementForDimension(filterElement.get(0), dimensions);
		}
		return result;
	},
	isTupleFilterElementForDimension:function(filterElement, dimensions)
	{
			var result = false;
		var componentType = filterElement.getOlapComponentType();
		if (componentType === oFF.FilterComponentType.AND)
		{
			var filterAnd = filterElement;
			var filterDimensions = oFF.XStream.of(filterAnd).filter( function(fo){
				return fo.getOlapComponentType() === oFF.FilterComponentType.OPERATION;
			}.bind(this)).map( function(fop){
				return fop.getDimension();
			}.bind(this)).collect(oFF.XStreamCollector.toSetOfNameObject());
			result = filterDimensions.size() === dimensions.size() && oFF.XStream.of(filterDimensions).allMatch( function(fd){
				return dimensions.contains(fd);
			}.bind(this));
		}
		return result;
	},
	isValidFilterTuple:function(tuple, dimensions, excludeStructures, enforceRealTuple)
	{
			var result = false;
		var counter = 0;
		for (var i = 0; i < tuple.size(); i++)
		{
			var element = tuple.getTupleElementAt(i);
			if (oFF.XCollectionUtils.hasElements(dimensions) && !dimensions.contains(element.getDimension()) || excludeStructures && element.getDimension().isStructure())
			{
				continue;
			}
			if (element.getDimensionMember().getMemberType().isTypeOf(oFF.MemberType.RESULT))
			{
				result = false;
				break;
			}
			counter++;
			result = !enforceRealTuple || counter > 1;
		}
		return result;
	},
	hasRelevantTuples:function(tuples, dimensions, excludeStructureMember, enforceRealTuple)
	{
			return oFF.XCollectionUtils.hasElements(oFF.TupleFilterApplicationUtil.getRelevantTuples(tuples, dimensions, excludeStructureMember, enforceRealTuple));
	},
	getRelevantTuples:function(tuples, dimensions, excludeStructureMembers, enforceRealTuple)
	{
			var relevantTuples = oFF.XStream.of(tuples).filter( function(tu){
			return oFF.TupleFilterApplicationUtil.isValidFilterTuple(tu, dimensions, excludeStructureMembers, enforceRealTuple);
		}.bind(this)).collect(oFF.XStreamCollector.toList());
		return relevantTuples;
	}
};

oFF.OlapUiValueHelpAbstract = function() {};
oFF.OlapUiValueHelpAbstract.prototype = new oFF.XObject();
oFF.OlapUiValueHelpAbstract.prototype._ff_c = "OlapUiValueHelpAbstract";

oFF.OlapUiValueHelpAbstract.s_syncType = null;
oFF.OlapUiValueHelpAbstract.prototype.m_valueRequestObject = null;
oFF.OlapUiValueHelpAbstract.prototype.m_defaultDrillEnabled = false;
oFF.OlapUiValueHelpAbstract.prototype.setupExt = function(valueRequestObject)
{
	this.m_valueRequestObject = valueRequestObject;
	if (oFF.isNull(oFF.OlapUiValueHelpAbstract.s_syncType))
	{
		oFF.OlapUiValueHelpAbstract.s_syncType = oFF.SyncType.NON_BLOCKING;
	}
};
oFF.OlapUiValueHelpAbstract.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_valueRequestObject = null;
};
oFF.OlapUiValueHelpAbstract.prototype.supportsAdditionalPresentations = function()
{
	return true;
};
oFF.OlapUiValueHelpAbstract.prototype.getContextType = function()
{
	return oFF.QContextType.SELECTOR;
};
oFF.OlapUiValueHelpAbstract.prototype.cleanUpSelectorSettings = function(dimension)
{
	dimension.clearSelectorHierarchyNode();
	dimension.setSelectorHierarchyNodeByName(null);
	dimension.clearSelectorFilter();
	dimension.setSelectorHierarchyActive(this.isHierarchicalValueHelp());
	dimension.setSelectorHierarchyName(this.getHierarchyName());
	dimension.setSelectorInitialDrillLevel(0);
	dimension.setSelectorSortType(oFF.SortType.MEMBER_KEY);
};
oFF.OlapUiValueHelpAbstract.prototype.configureValueHelpInternal = function(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill, addDefaultFields)
{
	this.cleanUpSelectorSettings(dimension);
	dimension.setReadModeGraceful(this.getContextType(), readMode);
	if (this.m_defaultDrillEnabled && defaultDrill)
	{
		dimension.setSelectorInitialDrillLevel(dimension.getDefaultInitialDrillLevel());
	}
	var start = startPage * pageSize;
	var end = endPage === -1 ? endPage : start + (endPage - startPage + 1) * pageSize;
	dimension.setSelectorPaging(start, end);
	this.addSelectorFields(dimension, fields, addDefaultFields);
};
oFF.OlapUiValueHelpAbstract.prototype.configureValueHelp = function(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill)
{
	this.configureValueHelpInternal(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill, true);
};
oFF.OlapUiValueHelpAbstract.prototype.addSelectorFields = function(dimension, fields, addDefaultFields)
{
	var fieldList = oFF.notNull(fields) ? fields : oFF.XList.create();
	if (addDefaultFields || !oFF.XCollectionUtils.hasElements(fieldList))
	{
		oFF.XCollectionUtils.addObjIfNotPresent(fieldList, dimension.getSelectorKeyField());
		oFF.XCollectionUtils.addObjIfNotPresent(fieldList, dimension.isCompound() && !this.isHierarchicalValueHelp() ? dimension.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND) : null);
		oFF.XCollectionUtils.addObjIfNotPresent(fieldList, dimension.getSelectorDisplayKeyField());
		oFF.XCollectionUtils.addObjIfNotPresent(fieldList, dimension.getSelectorTextField());
	}
	dimension.setSelectorFieldLayoutType(oFF.FieldLayoutType.FIELD_BASED);
	var selectorFields = dimension.getSelectorFields();
	selectorFields.clear();
	var size = fieldList.size();
	for (var i = 0; i < size; i++)
	{
		var field = fieldList.get(i);
		if (!selectorFields.isFixed() && oFF.notNull(field))
		{
			selectorFields.add(field);
		}
	}
};
oFF.OlapUiValueHelpAbstract.prototype.setSelectorFilter = function(dimension, searchPattern, fields, loadParentNodes)
{
	var isHanaTreeView = dimension.isSelectorHierarchyActive() && this.getSystemType(dimension).isTypeOf(oFF.SystemType.HANA) && loadParentNodes;
	var useVisibilityFilter = isHanaTreeView && dimension.getLeveledHierarchy(this.getHierarchyName()) !== null;
	dimension.setSelectorInitialDrillLevel(isHanaTreeView ? -1 : 0);
	dimension.setSelectorFilterUsage(oFF.QueryFilterUsage.SELECTOR_FILTER);
	dimension.setSelectorUseVisibilityFilter(!useVisibilityFilter);
	dimension.clearSelectorFilter();
	dimension.setSelectorUseVisibilityFilter(useVisibilityFilter);
	dimension.clearSelectorFilter();
	var filterAdded = false;
	if (oFF.XCollectionUtils.hasElements(fields))
	{
		for (var i = 0; i < fields.size(); i++)
		{
			filterAdded = this.addFilter(fields.get(i), searchPattern) || filterAdded;
		}
	}
	if (!filterAdded)
	{
		filterAdded = this.addFilter(dimension.getSelectorDisplayKeyField(), searchPattern);
		filterAdded = this.addFilter(dimension.getSelectorTextField(), searchPattern) || filterAdded;
	}
	if (filterAdded && dimension.isSelectorHierarchyActive())
	{
		var convertToFlat = loadParentNodes;
		if (dimension.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
		{
			convertToFlat = !convertToFlat;
		}
		this.updateFilterOperations(dimension.getSelectorContainer(), convertToFlat, isHanaTreeView);
	}
	return filterAdded;
};
oFF.OlapUiValueHelpAbstract.prototype.addFilter = function(field, searchValue)
{
	if (oFF.notNull(field) && field.isFilterable())
	{
		var dimension = field.getDimension();
		var capabilities = dimension.getFilterCapabilities().getFilterCapabilitiesByField(field);
		if (this.supportsOperator(capabilities, oFF.ComparisonOperator.MATCH))
		{
			return this.addFilterValueForField(dimension, field, searchValue, oFF.ComparisonOperator.MATCH, true) !== null;
		}
		else if (this.supportsOperator(capabilities, oFF.ComparisonOperator.EQUAL))
		{
			return this.addFilterValueForField(dimension, field, searchValue, oFF.ComparisonOperator.EQUAL, false) !== null;
		}
	}
	return false;
};
oFF.OlapUiValueHelpAbstract.prototype.updateFilterOperations = function(filter, convertToFlat, updateDepth)
{
	if (filter.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION))
	{
		var filterOp = filter;
		filterOp.setConvertToFlatFilter(convertToFlat);
		if (updateDepth)
		{
			filterOp.setDepth(0);
		}
	}
	else
	{
		var children = filter.getChildren();
		while (children.hasNext())
		{
			this.updateFilterOperations(children.next(), convertToFlat, updateDepth);
		}
		oFF.XObjectExt.release(children);
	}
};
oFF.OlapUiValueHelpAbstract.prototype.addFilterValueForField = function(dimension, field, filterValue, comparisonOperator, wildcardSearch)
{
	try
	{
		var valueType = field.getValueType();
		if (valueType.isString())
		{
			var value = wildcardSearch ? oFF.XStringUtils.concatenate3("*", filterValue, "*") : filterValue;
			return dimension.addSelectorFilter(oFF.XStringValue.create(value), field, comparisonOperator);
		}
		if (valueType.isNumber())
		{
			if (valueType === oFF.XValueType.INTEGER)
			{
				return dimension.addSelectorFilter(oFF.XIntegerValue.create(oFF.XInteger.convertFromString(filterValue)), field, comparisonOperator);
			}
			if (valueType === oFF.XValueType.LONG)
			{
				return dimension.addSelectorFilter(oFF.XLongValue.create(oFF.XLong.convertFromString(filterValue)), field, comparisonOperator);
			}
			return dimension.addSelectorFilter(oFF.XDoubleValue.create(oFF.XDouble.convertFromString(filterValue)), field, comparisonOperator);
		}
		if (valueType.isBoolean())
		{
			return dimension.addSelectorFilter(oFF.XBooleanValue.create(oFF.XBoolean.convertFromString(filterValue)), field, comparisonOperator);
		}
		if (valueType.isDateTime() && wildcardSearch)
		{
			return dimension.addSelectorFilter(oFF.XStringValue.create(oFF.XStringUtils.concatenate3("*", filterValue, "*")), field, comparisonOperator);
		}
		if (valueType === oFF.XValueType.TIME)
		{
			return dimension.addSelectorFilter(oFF.XTime.createTimeSafe(filterValue), field, oFF.ComparisonOperator.EQUAL);
		}
		if (valueType === oFF.XValueType.DATE)
		{
			return dimension.addSelectorFilter(oFF.XDate.createDateSafe(filterValue), field, oFF.ComparisonOperator.EQUAL);
		}
		if (valueType === oFF.XValueType.DATE_TIME)
		{
			return dimension.addSelectorFilter(oFF.XDateTime.createDateTimeSafe(filterValue), field, oFF.ComparisonOperator.EQUAL);
		}
		if (valueType === oFF.XValueType.TIMESPAN)
		{
			return dimension.addSelectorFilter(oFF.XTimeSpan.create(oFF.XLong.convertFromString(filterValue)), field, oFF.ComparisonOperator.EQUAL);
		}
		return null;
	}
	catch (e)
	{
		return null;
	}
};
oFF.OlapUiValueHelpAbstract.prototype.configureFetchItems = function(dimension, readMode, items, fields)
{
	this.configureValueHelp(dimension, readMode, 0, -1, 0, fields, false);
	dimension.setSelectorFilterUsage(oFF.QueryFilterUsage.SELECTOR_FILTER);
	var filterCapabilities = dimension.getFilterCapabilities();
	var keyField = this.getKeyField();
	var displayKeyField = this.getDisplayKeyField();
	var systemType = this.getSystemType(dimension);
	var isHana = oFF.notNull(systemType) && systemType.isTypeOf(oFF.SystemType.HANA);
	var useMatchForKey = (isHana || dimension.isCompound()) && this.isMatchSupportedForValueType(keyField.getValueType());
	var useMatchForDisplayKey = isHana && this.isMatchSupportedForValueType(displayKeyField.getValueType());
	var filterCapabilitiesKey = filterCapabilities.getFilterCapabilitiesByField(keyField);
	var comparisonOperatorKey = useMatchForKey && this.supportsOperator(filterCapabilitiesKey, oFF.ComparisonOperator.MATCH) ? oFF.ComparisonOperator.MATCH : oFF.ComparisonOperator.EQUAL;
	var filterCapabilitiesDisplayKey = filterCapabilities.getFilterCapabilitiesByField(displayKeyField);
	var comparisonOperatorDisplayKey = useMatchForDisplayKey && this.supportsOperator(filterCapabilitiesDisplayKey, oFF.ComparisonOperator.EQUAL) ? oFF.ComparisonOperator.MATCH : oFF.ComparisonOperator.EQUAL;
	for (var i = 0; i < items.size(); i++)
	{
		var item = items.get(i);
		if (item.isNull())
		{
			if (this.addFilterValueForField(dimension, keyField, item.getKey(), oFF.ComparisonOperator.IS_NULL, false) !== null)
			{
				continue;
			}
		}
		if (item.getKey() !== null)
		{
			if (this.addFilterValueForField(dimension, keyField, item.getKey(), comparisonOperatorKey, false) !== null)
			{
				continue;
			}
		}
		if (item.getDisplayKey() !== null)
		{
			this.addFilterValueForField(dimension, displayKeyField, item.getDisplayKey(), comparisonOperatorDisplayKey, false);
		}
	}
};
oFF.OlapUiValueHelpAbstract.prototype.processFetchValueHelpFunctions = function(listener, customIdentifier)
{
	this.getDimension().getFunctionalValueHelpSelectFunctions(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.OlapUiValueHelpAbstract.prototype.isMatchSupportedForValueType = function(valueType)
{
	return !valueType.isDateTime() && !valueType.isNumber();
};
oFF.OlapUiValueHelpAbstract.prototype.supportsOperator = function(filterCapabilities, operator)
{
	return oFF.notNull(filterCapabilities) && filterCapabilities.getSupportedComparisonOperators(oFF.SetSign.INCLUDING).contains(operator);
};
oFF.OlapUiValueHelpAbstract.prototype.getSystemType = function(dimension)
{
	return dimension.getApplication().getSystemLandscape().getSystemDescription(dimension.getDataSource().getSystemName()).getSystemType();
};
oFF.OlapUiValueHelpAbstract.prototype.setDefaultDrillLevelEnabled = function(defaultEnabled)
{
	this.m_defaultDrillEnabled = defaultEnabled;
};

oFF.OlapUiValueHelpKeyObject = function() {};
oFF.OlapUiValueHelpKeyObject.prototype = new oFF.XObject();
oFF.OlapUiValueHelpKeyObject.prototype._ff_c = "OlapUiValueHelpKeyObject";

oFF.OlapUiValueHelpKeyObject.create = function(key, displayKey, isNull)
{
	var object = new oFF.OlapUiValueHelpKeyObject();
	object.m_key = key;
	object.m_displayKey = displayKey;
	object.m_isNull = isNull;
	return object;
};
oFF.OlapUiValueHelpKeyObject.prototype.m_key = null;
oFF.OlapUiValueHelpKeyObject.prototype.m_displayKey = null;
oFF.OlapUiValueHelpKeyObject.prototype.m_isNull = false;
oFF.OlapUiValueHelpKeyObject.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_key = null;
	this.m_displayKey = null;
};
oFF.OlapUiValueHelpKeyObject.prototype.getKey = function()
{
	return this.m_key;
};
oFF.OlapUiValueHelpKeyObject.prototype.getDisplayKey = function()
{
	return this.m_displayKey;
};
oFF.OlapUiValueHelpKeyObject.prototype.hasDisplayKey = function()
{
	return oFF.notNull(this.m_displayKey);
};
oFF.OlapUiValueHelpKeyObject.prototype.isNull = function()
{
	return this.m_isNull;
};

oFF.OuEntryPoint = function() {};
oFF.OuEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.OuEntryPoint.prototype._ff_c = "OuEntryPoint";

oFF.OuEntryPoint.sCreateDialogEntryPoint = function(oEntryPoint, oApplication, oDialog)
{
	return oFF.OuEntryPoint.sCreateEntryPoint(oEntryPoint, oFF.COuEntryPointType.DIALOG, oApplication, null, oDialog);
};
oFF.OuEntryPoint.sCreateViewEntryPoint = function(oEntryPoint, oEnvironmentProvider, oView)
{
	return oFF.OuEntryPoint.sCreateEntryPoint(oEntryPoint, oFF.COuEntryPointType.VIEW, null, oEnvironmentProvider, oView);
};
oFF.OuEntryPoint.sCreateEntryPoint = function(oEntryPoint, entryPointType, oApplication, oEnvironmentProvider, oRenderingObject)
{
	if (oFF.notNull(oEntryPoint))
	{
		oEntryPoint.setupEntryPointRenderingObject(entryPointType, oApplication, oEnvironmentProvider, oRenderingObject);
	}
	return oEntryPoint;
};
oFF.OuEntryPoint.prototype.m_entryPointType = null;
oFF.OuEntryPoint.prototype.m_oApplication = null;
oFF.OuEntryPoint.prototype.m_oEnvironment = null;
oFF.OuEntryPoint.prototype.m_oRenderingObject = null;
oFF.OuEntryPoint.prototype.setupEntryPointRenderingObject = function(entryPointType, oApplication, oEnvironmentProvider, oRenderingObject)
{
	oFF.DialogEntryPoint.prototype.setup.call( this );
	this.m_entryPointType = entryPointType;
	this.m_oApplication = oApplication;
	this.m_oEnvironment = oFF.OuEnvironment.sCreateEnvironmentUsingProvider(oEnvironmentProvider);
	this.m_oRenderingObject = oRenderingObject;
	if (this.m_entryPointType === oFF.COuEntryPointType.DIALOG)
	{
		this.setupEntryPoint(this.m_oApplication);
		this.m_oEnvironment.setApplication(this.m_oApplication);
		this.m_oEnvironment.setUiContext(this.getUiContext());
		this.m_oEnvironment.setDisplayHandler(this.getUiContext().getDisplayFactory().getInstance());
		this.m_oEnvironment.setGenesis(this.m_oEnvironment.getDisplayHandler().getGenesis());
		this.m_oEnvironment.setLocalization(this.m_oEnvironment.getGenesis().getUiManager().getLocalization());
	}
};
oFF.OuEntryPoint.prototype.setup = function()
{
	this.setupEntryPointRenderingObject(null, null, null, null);
};
oFF.OuEntryPoint.prototype.getEntryPointType = function()
{
	return this.m_entryPointType;
};
oFF.OuEntryPoint.prototype.open = function(oProperties)
{
	this.m_oEnvironment.setProperties(oProperties);
	this.m_oRenderingObject = oFF.OuRenderingObject.sCreateRenderingObject(this.m_oRenderingObject, this.m_oEnvironment);
	if (this.m_entryPointType === oFF.COuEntryPointType.DIALOG)
	{
		var loManifest = this.m_oApplication.getProcess().getKernel().getProgramManifest(this.m_oRenderingObject.getName());
		var loProcess = this.m_oApplication.getProcess();
		var loProgramConfiguration = oFF.ProgramStartCfg.create(loProcess, loManifest.getName(), this.m_oRenderingObject.getTitleDescription(), null);
		var loProgramArguments = loProgramConfiguration.getArguments();
		loProgramArguments.putXObject("properties", oProperties);
		loProgramConfiguration.setIsCreatingChildProcess(true);
		var loProgramExecution = loProgramConfiguration.processExecution(oFF.SyncType.NON_BLOCKING, null, null);
		var loProgram = loProgramExecution.getData();
		if (loProgram !== this.m_oRenderingObject)
		{
			this.m_oRenderingObject.releaseObject();
			this.m_oRenderingObject = loProgram;
		}
	}
	else
	{
		this.m_oRenderingObject.open();
	}
	return this.m_oRenderingObject;
};
oFF.OuEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
	this.m_entryPointType = null;
	this.m_oApplication = null;
	this.m_oEnvironment = oFF.XObjectExt.release(this.m_oEnvironment);
	if (oFF.notNull(this.m_oRenderingObject))
	{
		this.m_oRenderingObject.releaseObject();
		this.m_oRenderingObject = null;
	}
};

oFF.OuProperties = function() {};
oFF.OuProperties.prototype = new oFF.OuListenerAccess();
oFF.OuProperties.prototype._ff_c = "OuProperties";

oFF.OuProperties.sCreateProperties = function()
{
	var loInstance = new oFF.OuProperties();
	loInstance.setupProperties();
	return loInstance;
};
oFF.OuProperties.prototype.m_tProperties = null;
oFF.OuProperties.prototype.setupProperties = function()
{
	oFF.OuListenerAccess.prototype.setup.call( this );
	this.m_tProperties = oFF.XSimpleMap.create();
};
oFF.OuProperties.prototype.containsProperty = function(property)
{
	return this.m_tProperties.containsKey(property);
};
oFF.OuProperties.prototype.clearProperties = function()
{
	var ltProperties = this.getProperties();
	var loPropertyIterator = ltProperties.getKeysAsIterator();
	while (loPropertyIterator.hasNext())
	{
		var lProperty = loPropertyIterator.next();
		if (oFF.isNull(lProperty))
		{
			continue;
		}
		this.removeProperty(lProperty);
	}
	this.m_tProperties.clear();
};
oFF.OuProperties.prototype.removeProperty = function(property)
{
	var loPropertyValue = this.getProperty(property);
	this.m_tProperties.remove(property);
	var loProperty = oFF.OuProperty.sCreateProperty(property, null, loPropertyValue);
	this.handlePropertyChanged(loProperty);
};
oFF.OuProperties.prototype.setProperties = function(tProperties)
{
	if (oFF.isNull(tProperties))
	{
		return;
	}
	var loPropertyIterator = tProperties.getKeysAsIterator();
	while (loPropertyIterator.hasNext())
	{
		var lProperty = loPropertyIterator.next();
		if (oFF.isNull(lProperty))
		{
			continue;
		}
		var loProperty = tProperties.getByKey(lProperty);
		this.setProperty(lProperty, loProperty);
	}
};
oFF.OuProperties.prototype.setProperty = function(property, oPropertyValue)
{
	var loPropertyValue = this.getProperty(property);
	if (this.containsProperty(property) && loPropertyValue === oPropertyValue || oFF.notNull(loPropertyValue) && loPropertyValue.isEqualTo(oPropertyValue))
	{
		return;
	}
	this.m_tProperties.put(property, oPropertyValue);
	var loProperty = oFF.OuProperty.sCreateProperty(property, oPropertyValue, loPropertyValue);
	this.handlePropertyChanged(loProperty);
};
oFF.OuProperties.prototype.getProperties = function()
{
	return this.m_tProperties;
};
oFF.OuProperties.prototype.getProperty = function(property)
{
	return this.m_tProperties.getByKey(property);
};
oFF.OuProperties.prototype.getPropertiesOfType = function(oType)
{
	var ltTypeProperties = oFF.XSimpleMap.create();
	var ltProperties = this.getProperties();
	var loPropertyIterator = ltProperties.getKeysAsIterator();
	while (loPropertyIterator.hasNext())
	{
		var lProperty = loPropertyIterator.next();
		if (oFF.isNull(lProperty))
		{
			continue;
		}
		if (lProperty.getType() === oType)
		{
			ltTypeProperties.put(lProperty, ltProperties.getByKey(lProperty));
		}
	}
	return ltTypeProperties;
};
oFF.OuProperties.prototype.handlePropertyChanged = function(oProperty)
{
	var ltListeners = this.getListeners();
	var loListenerIterator = ltListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onPropertyChanged(oProperty);
	}
};
oFF.OuProperties.prototype.copyFrom = function(other, flags)
{
	if (oFF.isNull(other))
	{
		return;
	}
	var loSource = other;
	var ltProperties = loSource.getProperties();
	this.clearProperties();
	this.setProperties(ltProperties);
};
oFF.OuProperties.prototype.cloneExt = function(flags)
{
	var loClone = oFF.OuProperties.sCreateProperties();
	loClone.copyFrom(this, flags);
	return loClone;
};
oFF.OuProperties.prototype.releaseObject = function()
{
	oFF.OuListenerAccess.prototype.releaseObject.call( this );
	this.m_tProperties = oFF.XObjectExt.release(this.m_tProperties);
};

oFF.OuRoot = function() {};
oFF.OuRoot.prototype = new oFF.XObject();
oFF.OuRoot.prototype._ff_c = "OuRoot";

oFF.OuRoot.UIE_ID_ROOT = "Root";
oFF.OuRoot.sCreateRoot = function(oRenderingInfo)
{
	var loInstance = new oFF.OuRoot();
	loInstance.setupRoot(oRenderingInfo);
	return loInstance;
};
oFF.OuRoot.prototype.m_oRenderingInfo = null;
oFF.OuRoot.prototype.m_oUIERoot = null;
oFF.OuRoot.prototype.setupRoot = function(oRenderingInfo)
{
	this.setup();
	this.m_oRenderingInfo = oRenderingInfo;
	if (oFF.isNull(this.m_oUIERoot))
	{
		this.m_oUIERoot = oFF.OuRenderingUtil.sCreateLayoutColumn(this.m_oRenderingInfo, null, oFF.OuRoot.UIE_ID_ROOT);
		this.m_oUIERoot.setWidth(oFF.UiCssLength.create("100%"));
		this.m_oUIERoot.setHeight(oFF.UiCssLength.create("100%"));
	}
};
oFF.OuRoot.prototype.setup = function()
{
	oFF.XObject.prototype.setup.call( this );
};
oFF.OuRoot.prototype.getControl = function()
{
	return this.m_oUIERoot;
};
oFF.OuRoot.prototype.setContent = function(oControl)
{
	var loControl = oControl;
	if (loControl === this.m_oUIERoot)
	{
		loControl = this.m_oUIERoot.getItem(0);
	}
	if (loControl === this.getContent())
	{
		return;
	}
	this.m_oUIERoot.clearItems();
	this.m_oUIERoot.addItem(loControl);
};
oFF.OuRoot.prototype.getContent = function()
{
	return this.m_oUIERoot.getItem(0);
};
oFF.OuRoot.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oUIERoot = oFF.XObjectExt.release(this.m_oUIERoot);
};

oFF.OuSourceObject = function() {};
oFF.OuSourceObject.prototype = new oFF.XObject();
oFF.OuSourceObject.prototype._ff_c = "OuSourceObject";

oFF.OuSourceObject.prototype.m_oInternalObject = null;
oFF.OuSourceObject.prototype.setupModelObject = function(oInternalObject)
{
	this.setup();
	this.setInternalObject(oInternalObject);
};
oFF.OuSourceObject.prototype.setup = function()
{
	oFF.XObject.prototype.setup.call( this );
};
oFF.OuSourceObject.prototype.setInternalObject = function(oInternalObject)
{
	var loProvided = oInternalObject;
	var loContained = this.m_oInternalObject;
	if (loProvided !== loContained)
	{
		this.m_oInternalObject = oInternalObject;
		this.reset();
	}
};
oFF.OuSourceObject.prototype.getInternalObject = function()
{
	return this.m_oInternalObject;
};
oFF.OuSourceObject.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oInternalObject = null;
};

oFF.AldAxisLayoutDialogLayout = function() {};
oFF.AldAxisLayoutDialogLayout.prototype = new oFF.DdLayoutAbstract();
oFF.AldAxisLayoutDialogLayout.prototype._ff_c = "AldAxisLayoutDialogLayout";

oFF.AldAxisLayoutDialogLayout.createWithGenesis = function(genesis)
{
	var instance = new oFF.AldAxisLayoutDialogLayout();
	instance.setupExt(genesis);
	return instance;
};
oFF.AldAxisLayoutDialogLayout.prototype.m_content = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_valueDisplayColumns = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_valueDisplayRows = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_valueDisplayGrid = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_dimensionInventory = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_columnDimensionControls = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_hideFreeAxisControl = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_showFreeAxisControl = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_columnDimensions = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_columnDimensionOrder = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_rowDimensionControls = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_rowDimensions = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_rowDimensionOrder = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_freeAxisLayout = null;
oFF.AldAxisLayoutDialogLayout.prototype.m_technicalLayout = null;
oFF.AldAxisLayoutDialogLayout.prototype.setupExt = function(genesis)
{
	this.m_technicalLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_hideFreeAxisControl = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_showFreeAxisControl = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_valueDisplayRows = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_valueDisplayColumns = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_valueDisplayGrid = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_dimensionInventory = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("100%"));
	this.m_columnDimensionControls = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_columnDimensions = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_columnDimensionOrder = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_rowDimensionControls = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
	this.m_rowDimensions = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_rowDimensionOrder = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("2em"));
};
oFF.AldAxisLayoutDialogLayout.prototype.buildTree = function(genesis)
{
	var localization = genesis.getUiManager().getLocalization();
	this.m_content = genesis.newRoot(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
	this.m_content.setName("DisplayVerticalLayout");
	this.m_freeAxisLayout = this.m_content.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("50%"));
	var panelLayout = this.m_freeAxisLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("100%"));
	panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("17px")).setHeight(oFF.UiCssLength.create("2em")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_FREE_AXIS));
	panelLayout.addItem(this.m_dimensionInventory);
	this.setFreeAxisVisible(false);
	var subVertical = this.m_content.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
	var subHorizontal = subVertical.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("35%")).setWidth(oFF.UiCssLength.create("100%"));
	var vertiFlex = subHorizontal.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("3em"));
	vertiFlex.addItem(this.m_technicalLayout.setHeight(oFF.UiCssLength.create("3em")));
	vertiFlex.addItem(this.m_columnDimensionControls);
	panelLayout = subHorizontal.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("100%"));
	var subFlex = genesis.newRoot(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("100%"));
	panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setHeight(oFF.UiCssLength.create("2em")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_COLUMNS));
	panelLayout.addItem(subFlex);
	var sub1 = subFlex.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("50%"));
	var sub2 = sub1.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("90%"));
	sub2.addItem(this.m_columnDimensions);
	sub1.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em")).setHeight(oFF.UiCssLength.create("1em"));
	sub2 = sub1.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("3em"));
	sub2.addItem(this.m_columnDimensionOrder);
	sub2 = subFlex.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("50%"));
	sub2.addItem(this.m_valueDisplayColumns);
	subHorizontal = subVertical.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("65%")).setWidth(oFF.UiCssLength.create("100%"));
	vertiFlex = subHorizontal.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("3em"));
	vertiFlex.addItem(this.m_hideFreeAxisControl.setHeight(oFF.UiCssLength.create("3em")).setWidth(oFF.UiCssLength.create("2em")));
	vertiFlex.addItem(this.m_showFreeAxisControl.setHeight(oFF.UiCssLength.create("3em")).setWidth(oFF.UiCssLength.create("2em")));
	vertiFlex.addItem(this.m_rowDimensionControls);
	panelLayout = subHorizontal.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("100%"));
	subFlex = genesis.newRoot(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
	panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setHeight(oFF.UiCssLength.create("2em")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ROWS));
	panelLayout.addItem(subFlex);
	sub1 = subFlex.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("50%"));
	sub2 = sub1.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("90%"));
	sub2.addItem(this.m_rowDimensions);
	sub1.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em")).setHeight(oFF.UiCssLength.create("1em"));
	sub2 = sub1.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("3em"));
	sub2.addItem(this.m_rowDimensionOrder);
	sub2 = subFlex.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("50%"));
	sub2.addItem(this.m_valueDisplayRows);
	return this.m_content;
};
oFF.AldAxisLayoutDialogLayout.prototype.getContent = function()
{
	return this.m_content;
};
oFF.AldAxisLayoutDialogLayout.prototype.getValueDisplayColumns = function()
{
	return this.m_valueDisplayColumns;
};
oFF.AldAxisLayoutDialogLayout.prototype.getValueDisplayRows = function()
{
	return this.m_valueDisplayRows;
};
oFF.AldAxisLayoutDialogLayout.prototype.getValueDisplayGrid = function()
{
	return this.m_valueDisplayGrid;
};
oFF.AldAxisLayoutDialogLayout.prototype.getDimensionInventory = function()
{
	return this.m_dimensionInventory;
};
oFF.AldAxisLayoutDialogLayout.prototype.getColumnDimensionControls = function()
{
	return this.m_columnDimensionControls;
};
oFF.AldAxisLayoutDialogLayout.prototype.getColumnDimensions = function()
{
	return this.m_columnDimensions;
};
oFF.AldAxisLayoutDialogLayout.prototype.getColumnDimensionOrder = function()
{
	return this.m_columnDimensionOrder;
};
oFF.AldAxisLayoutDialogLayout.prototype.getRowDimensionControls = function()
{
	return this.m_rowDimensionControls;
};
oFF.AldAxisLayoutDialogLayout.prototype.getRowDimensions = function()
{
	return this.m_rowDimensions;
};
oFF.AldAxisLayoutDialogLayout.prototype.getRowDimensionOrder = function()
{
	return this.m_rowDimensionOrder;
};
oFF.AldAxisLayoutDialogLayout.prototype.getHideFreeAxisControl = function()
{
	return this.m_hideFreeAxisControl;
};
oFF.AldAxisLayoutDialogLayout.prototype.getShowFreeAxisControl = function()
{
	return this.m_showFreeAxisControl;
};
oFF.AldAxisLayoutDialogLayout.prototype.getFreeAxisLayout = function()
{
	return this.m_freeAxisLayout;
};
oFF.AldAxisLayoutDialogLayout.prototype.getTechnicalLayout = function()
{
	return this.m_technicalLayout;
};
oFF.AldAxisLayoutDialogLayout.prototype.setFreeAxisVisible = function(visible)
{
	this.m_showFreeAxisControl.setVisible(!visible);
	this.m_hideFreeAxisControl.setVisible(visible);
	this.m_freeAxisLayout.setVisible(visible);
	this.m_rowDimensionControls.setVisible(visible);
	this.m_columnDimensionControls.setVisible(visible);
};

oFF.AldModel = function() {};
oFF.AldModel.prototype = new oFF.DdObservableModel();
oFF.AldModel.prototype._ff_c = "AldModel";

oFF.AldModel.createFrom = function(queryModel)
{
	var instance = new oFF.AldModel();
	instance.setupExt(queryModel);
	instance.setupListeners();
	return instance;
};
oFF.AldModel.prototype.m_dimensionsOnRows = null;
oFF.AldModel.prototype.m_dimensionsOnColumns = null;
oFF.AldModel.prototype.m_dimensionsOnFree = null;
oFF.AldModel.prototype.m_dimensionOrderedOnRows = null;
oFF.AldModel.prototype.m_dimensionOrderedOnColumns = null;
oFF.AldModel.prototype.m_dimensionOrderedOnFree = null;
oFF.AldModel.prototype.m_dimensionOrderedOnRowsSelected = null;
oFF.AldModel.prototype.m_dimensionOrderedOnColumnsSelected = null;
oFF.AldModel.prototype.m_dimensionOrderedOnFreeSelected = null;
oFF.AldModel.prototype.m_aldModelTotalsRows = null;
oFF.AldModel.prototype.m_aldModelZeroSuppressionRows = null;
oFF.AldModel.prototype.m_aldModelTotalsColumns = null;
oFF.AldModel.prototype.m_aldModelZeroSuppressionColumns = null;
oFF.AldModel.prototype.m_rowLimit = 0;
oFF.AldModel.prototype.m_columnLimit = 0;
oFF.AldModel.prototype.m_allowInput = false;
oFF.AldModel.prototype.m_displayRowsHierarchically = false;
oFF.AldModel.prototype.m_displayColumnsHierarchically = false;
oFF.AldModel.prototype.m_supportsUniversalDisplayHierarchy = false;
oFF.AldModel.prototype.isShowTechnical = function()
{
	return this.m_showTechnical;
};
oFF.AldModel.prototype.setShowTechnical = function(showTechnical)
{
	this.m_showTechnical = showTechnical;
	this.callListeners();
};
oFF.AldModel.prototype.m_showTechnical = false;
oFF.AldModel.prototype.setupExt = function(queryModel)
{
	var rows = queryModel.getRowsAxis();
	var columns = queryModel.getColumnsAxis();
	this.m_supportsUniversalDisplayHierarchy = queryModel.getModelCapabilities().supportsUniversalDisplayHierarchies();
	this.m_dimensionsOnColumns = oFF.XHashMapByString.create();
	this.m_dimensionsOnRows = oFF.XHashMapByString.create();
	this.m_dimensionsOnFree = oFF.XHashMapByString.create();
	this.m_dimensionOrderedOnColumns = oFF.XList.create();
	this.m_dimensionOrderedOnRows = oFF.XList.create();
	this.m_dimensionOrderedOnFree = oFF.XList.create();
	this.m_dimensionOrderedOnColumnsSelected = oFF.XList.create();
	this.m_dimensionOrderedOnRowsSelected = oFF.XList.create();
	this.m_dimensionOrderedOnFreeSelected = oFF.XList.create();
	if (queryModel.getModelCapabilities().supportsUniversalDisplayHierarchies() && queryModel.getUniversalDisplayHierarchies() !== null)
	{
		if (queryModel.getUniversalDisplayHierarchies().getByAxisType(oFF.AxisType.COLUMNS) !== null)
		{
			this.m_displayColumnsHierarchically = queryModel.getUniversalDisplayHierarchies().getByAxisType(oFF.AxisType.COLUMNS).isActive();
		}
		if (queryModel.getUniversalDisplayHierarchies().getByAxisType(oFF.AxisType.ROWS) !== null)
		{
			this.m_displayRowsHierarchically = queryModel.getUniversalDisplayHierarchies().getByAxisType(oFF.AxisType.ROWS).isActive();
		}
	}
	var i;
	var visibleDimension;
	var rowDimensions = rows.getDimensions();
	var newDimensionModel;
	for (i = 0; i < rowDimensions.size(); i++)
	{
		visibleDimension = rowDimensions.getDimensionAt(i);
		newDimensionModel = oFF.DdModelDimension.createFrom(visibleDimension, true, this.m_dimensionOrderedOnRows, this);
		this.m_dimensionsOnRows.put(newDimensionModel.getComponentName(), newDimensionModel);
	}
	var columnDimensions = columns.getDimensions();
	for (i = 0; i < columnDimensions.size(); i++)
	{
		visibleDimension = columnDimensions.getDimensionAt(i);
		newDimensionModel = oFF.DdModelDimension.createFrom(visibleDimension, true, this.m_dimensionOrderedOnColumns, this);
		this.m_dimensionsOnColumns.put(newDimensionModel.getComponentName(), newDimensionModel);
	}
	var allDimensions = queryModel.getDimensions();
	for (i = 0; i < allDimensions.size(); i++)
	{
		var dimension = allDimensions.getDimensionAt(i);
		var dimensionName = dimension.getName();
		if (!this.m_dimensionsOnColumns.containsKey(dimensionName) && !this.m_dimensionsOnRows.containsKey(dimensionName) && !dimension.isUniversalDisplayHierarchyDimension())
		{
			var newDimensionModelHidden = oFF.DdModelDimension.createFrom(dimension, true, this.m_dimensionOrderedOnFree, this);
			this.m_dimensionsOnFree.put(dimensionName, newDimensionModelHidden);
		}
		this.initializeTotals(queryModel);
		this.initializeZeroSuppression(queryModel);
	}
};
oFF.AldModel.prototype.initializeTotals = function(queryModel)
{
	var axis;
	axis = queryModel.getRowsAxis();
	var capabilities = axis.getModelCapabilities();
	if (axis.supportsTotals())
	{
		this.m_aldModelTotalsRows = oFF.AldModelTotals.createFrom(capabilities, axis, true, null, null);
	}
	axis = queryModel.getColumnsAxis();
	if (axis.supportsTotals())
	{
		this.m_aldModelTotalsColumns = oFF.AldModelTotals.createFrom(capabilities, axis, true, null, null);
	}
};
oFF.AldModel.prototype.initializeZeroSuppression = function(queryModel)
{
	var axis;
	axis = queryModel.getRowsAxis();
	if (axis.supportsZeroSuppression())
	{
		this.m_aldModelZeroSuppressionRows = oFF.AldModelZeroSuppression.createFrom(axis, true);
	}
	axis = queryModel.getColumnsAxis();
	if (axis.supportsZeroSuppression())
	{
		this.m_aldModelZeroSuppressionColumns = oFF.AldModelZeroSuppression.createFrom(axis, true);
	}
};
oFF.AldModel.prototype.applyToQueryModel = function(queryModel)
{
	var convenienceCommands = queryModel.getConvenienceCommands();
	var rowsDimensions = oFF.XListOfString.create();
	var columnsDimensions = oFF.XListOfString.create();
	convenienceCommands.clearAxis(oFF.AxisType.ROWS);
	convenienceCommands.clearAxis(oFF.AxisType.COLUMNS);
	var current;
	var i;
	for (i = 0; i < this.m_dimensionOrderedOnRows.size(); i++)
	{
		current = this.m_dimensionOrderedOnRows.get(i);
		if (current.isVisible())
		{
			rowsDimensions.add(current.getComponentName());
			convenienceCommands.moveDimensionToRows(current.getComponentName());
		}
	}
	if (this.m_supportsUniversalDisplayHierarchy && oFF.XCollectionUtils.hasElements(rowsDimensions))
	{
		convenienceCommands.setUniversalDisplayHierarchy(rowsDimensions, -1, this.m_displayRowsHierarchically);
	}
	for (i = 0; i < this.m_dimensionOrderedOnColumns.size(); i++)
	{
		current = this.m_dimensionOrderedOnColumns.get(i);
		if (current.isVisible())
		{
			columnsDimensions.add(current.getComponentName());
			convenienceCommands.moveDimensionToColumns(current.getComponentName());
		}
	}
	if (this.m_supportsUniversalDisplayHierarchy && oFF.XCollectionUtils.hasElements(columnsDimensions))
	{
		convenienceCommands.setUniversalDisplayHierarchy(columnsDimensions, -1, this.m_displayColumnsHierarchically);
	}
	var axis;
	axis = queryModel.getRowsAxis();
	axis.clearResultVisibilitySettings();
	if (oFF.notNull(this.m_aldModelTotalsRows) && this.m_aldModelTotalsRows.isActive())
	{
		this.m_aldModelTotalsRows.applyToModel(queryModel, axis, oFF.QModelLevel.AXES);
	}
	if (oFF.notNull(this.m_aldModelZeroSuppressionRows))
	{
		this.m_aldModelZeroSuppressionRows.applyToModel(queryModel, axis);
	}
	axis = queryModel.getColumnsAxis();
	axis.clearResultVisibilitySettings();
	if (oFF.notNull(this.m_aldModelTotalsColumns) && this.m_aldModelTotalsColumns.isActive())
	{
		this.m_aldModelTotalsColumns.applyToModel(queryModel, axis, oFF.QModelLevel.AXES);
	}
	if (oFF.notNull(this.m_aldModelZeroSuppressionColumns))
	{
		this.m_aldModelZeroSuppressionColumns.applyToModel(queryModel, axis);
	}
};
oFF.AldModel.prototype.setDimensionsOnRows = function(dimensionsOnRows)
{
	this.m_dimensionsOnRows = dimensionsOnRows;
};
oFF.AldModel.prototype.setDimensionsOnColumns = function(dimensionsOnColumns)
{
	this.m_dimensionsOnColumns = dimensionsOnColumns;
};
oFF.AldModel.prototype.setDimensionsOnFree = function(dimensionsOnFree)
{
	this.m_dimensionsOnFree = dimensionsOnFree;
};
oFF.AldModel.prototype.setDimensionOrderedOnRows = function(dimensionOrderedOnRows)
{
	this.m_dimensionOrderedOnRows = dimensionOrderedOnRows;
};
oFF.AldModel.prototype.setDimensionOrderedOnColumns = function(dimensionOrderedOnColumns)
{
	this.m_dimensionOrderedOnColumns = dimensionOrderedOnColumns;
};
oFF.AldModel.prototype.setAldModelTotalsRows = function(aldModelTotalsRows)
{
	this.m_aldModelTotalsRows = aldModelTotalsRows;
};
oFF.AldModel.prototype.setAldModelZeroSuppressionRows = function(aldModelZeroSuppressionRows)
{
	this.m_aldModelZeroSuppressionRows = aldModelZeroSuppressionRows;
};
oFF.AldModel.prototype.setAldModelTotalsColumns = function(aldModelTotalsColumns)
{
	this.m_aldModelTotalsColumns = aldModelTotalsColumns;
};
oFF.AldModel.prototype.setAldModelZeroSuppressionColumns = function(aldModelZeroSuppressionColumns)
{
	this.m_aldModelZeroSuppressionColumns = aldModelZeroSuppressionColumns;
};
oFF.AldModel.prototype.setRowLimit = function(rowLimit)
{
	this.m_rowLimit = rowLimit;
};
oFF.AldModel.prototype.setColumnLimit = function(columnLimit)
{
	this.m_columnLimit = columnLimit;
};
oFF.AldModel.prototype.setAllowInput = function(allowInput)
{
	this.m_allowInput = allowInput;
};
oFF.AldModel.prototype.setDisplayRowsHierarchically = function(displayRowsHierarchically)
{
	this.m_displayRowsHierarchically = displayRowsHierarchically;
};
oFF.AldModel.prototype.setDisplayColumnsHierarchically = function(displayColumnsHierarchically)
{
	this.m_displayColumnsHierarchically = displayColumnsHierarchically;
};
oFF.AldModel.prototype.getDimensionsOnRows = function()
{
	return this.m_dimensionsOnRows;
};
oFF.AldModel.prototype.getDimensionsOnColumns = function()
{
	return this.m_dimensionsOnColumns;
};
oFF.AldModel.prototype.getDimensionsOnFree = function()
{
	return this.m_dimensionsOnFree;
};
oFF.AldModel.prototype.getDimensionOrderedOnRows = function()
{
	return this.m_dimensionOrderedOnRows;
};
oFF.AldModel.prototype.getDimensionOrderedOnColumns = function()
{
	return this.m_dimensionOrderedOnColumns;
};
oFF.AldModel.prototype.getAldModelTotalsRows = function()
{
	return this.m_aldModelTotalsRows;
};
oFF.AldModel.prototype.getAldModelZeroSuppressionRows = function()
{
	return this.m_aldModelZeroSuppressionRows;
};
oFF.AldModel.prototype.getAldModelTotalsColumns = function()
{
	return this.m_aldModelTotalsColumns;
};
oFF.AldModel.prototype.getAldModelZeroSuppressionColumns = function()
{
	return this.m_aldModelZeroSuppressionColumns;
};
oFF.AldModel.prototype.getRowLimit = function()
{
	return this.m_rowLimit;
};
oFF.AldModel.prototype.getColumnLimit = function()
{
	return this.m_columnLimit;
};
oFF.AldModel.prototype.isAllowInput = function()
{
	return this.m_allowInput;
};
oFF.AldModel.prototype.isDisplayRowsHierarchically = function()
{
	return this.m_displayRowsHierarchically;
};
oFF.AldModel.prototype.isDisplayColumnsHierarchically = function()
{
	return this.m_displayColumnsHierarchically;
};
oFF.AldModel.prototype.getDimensionOrderedOnFree = function()
{
	return this.m_dimensionOrderedOnFree;
};
oFF.AldModel.prototype.getDimensionOrderedOnRowsSelected = function()
{
	return this.m_dimensionOrderedOnRowsSelected;
};
oFF.AldModel.prototype.getDimensionOrderedOnColumnsSelected = function()
{
	return this.m_dimensionOrderedOnColumnsSelected;
};
oFF.AldModel.prototype.getDimensionOrderedOnFreeSelected = function()
{
	return this.m_dimensionOrderedOnFreeSelected;
};
oFF.AldModel.prototype.moveElement = function(elementsToMove, listToRemoveFrom, list1ToAddTo, list2ToAddTo)
{
	list1ToAddTo.addAll(elementsToMove);
	list2ToAddTo.addAll(elementsToMove);
	var size = elementsToMove.size();
	for (var i = 0; i < size; i++)
	{
		listToRemoveFrom.removeElement(elementsToMove.get(i));
	}
	elementsToMove.clear();
	this.callListeners();
};
oFF.AldModel.prototype.deActivateColumnSelection = function()
{
	this.moveElement(this.m_dimensionOrderedOnColumnsSelected, this.m_dimensionOrderedOnColumns, this.m_dimensionOrderedOnFreeSelected, this.m_dimensionOrderedOnFree);
};
oFF.AldModel.prototype.deActivateRowSelection = function()
{
	this.moveElement(this.m_dimensionOrderedOnRowsSelected, this.m_dimensionOrderedOnRows, this.m_dimensionOrderedOnFreeSelected, this.m_dimensionOrderedOnFree);
};
oFF.AldModel.prototype.activateColumnSelection = function()
{
	this.moveElement(this.m_dimensionOrderedOnFreeSelected, this.m_dimensionOrderedOnFree, this.m_dimensionOrderedOnColumnsSelected, this.m_dimensionOrderedOnColumns);
};
oFF.AldModel.prototype.activateRowsSelection = function()
{
	this.moveElement(this.m_dimensionOrderedOnFreeSelected, this.m_dimensionOrderedOnFree, this.m_dimensionOrderedOnRowsSelected, this.m_dimensionOrderedOnRows);
};
oFF.AldModel.prototype.moveUpColumnDimension = function()
{
	this.moveUpDimension(this.m_dimensionOrderedOnColumnsSelected);
};
oFF.AldModel.prototype.moveUpRowDimension = function()
{
	this.moveUpDimension(this.m_dimensionOrderedOnRowsSelected);
};
oFF.AldModel.prototype.moveDownColumnDimension = function()
{
	this.moveDownDimension(this.m_dimensionOrderedOnColumnsSelected);
};
oFF.AldModel.prototype.moveDownRowDimension = function()
{
	this.moveDownDimension(this.m_dimensionOrderedOnRowsSelected);
};
oFF.AldModel.prototype.moveUpDimension = function(activeList)
{
	if (activeList.size() === 1)
	{
		activeList.get(0).moveUp();
		this.callListeners();
	}
};
oFF.AldModel.prototype.moveDownDimension = function(activeList)
{
	if (activeList.size() === 1)
	{
		activeList.get(0).moveDown();
		this.callListeners();
	}
};
oFF.AldModel.prototype.setDimensionOrderedOnFree = function(dimensionOrderedOnFree)
{
	this.m_dimensionOrderedOnFree = dimensionOrderedOnFree;
};
oFF.AldModel.prototype.setDimensionOrderedOnRowsSelected = function(dimensionOrderedOnRowsSelected)
{
	this.m_dimensionOrderedOnRowsSelected = dimensionOrderedOnRowsSelected;
	this.callListeners();
};
oFF.AldModel.prototype.setDimensionOrderedOnColumnsSelected = function(dimensionOrderedOnColumnsSelected)
{
	this.m_dimensionOrderedOnColumnsSelected = dimensionOrderedOnColumnsSelected;
	this.callListeners();
};
oFF.AldModel.prototype.setDimensionOrderedOnFreeSelected = function(dimensionOrderedOnFreeSelected)
{
	this.m_dimensionOrderedOnFreeSelected = dimensionOrderedOnFreeSelected;
	this.callListeners();
};
oFF.AldModel.prototype.isSupportsUniversalDisplayHierarchy = function()
{
	return this.m_supportsUniversalDisplayHierarchy;
};

oFF.AldModelTotals = function() {};
oFF.AldModelTotals.prototype = new oFF.DdObservableModel();
oFF.AldModelTotals.prototype._ff_c = "AldModelTotals";

oFF.AldModelTotals.createFrom = function(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment)
{
	var instance = new oFF.AldModelTotals();
	instance.setupExt(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment);
	instance.setupListeners();
	return instance;
};
oFF.AldModelTotals.prototype.m_active = false;
oFF.AldModelTotals.prototype.m_supportsResultAlignment = false;
oFF.AldModelTotals.prototype.m_resultAlignment = null;
oFF.AldModelTotals.prototype.m_resultStructureElement = null;
oFF.AldModelTotals.prototype.m_supportedResultAlignments = null;
oFF.AldModelTotals.prototype.m_supportsConditionalResultVisibility = false;
oFF.AldModelTotals.prototype.setupExt = function(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment)
{
	this.m_resultStructureElement = resultStructureElement;
	this.m_active = active;
	this.m_supportsResultAlignment = resultVisibilityController.supportsResultAlignment();
	this.m_supportedResultAlignments = modelCapabilities.getSupportedResultAlignments();
	this.m_supportsConditionalResultVisibility = modelCapabilities.supportsConditionalResultVisibility();
	if (oFF.isNull(resultStructureElement))
	{
		this.m_resultAlignment = resultVisibilityController.getResultAlignment();
	}
	else
	{
		this.m_resultAlignment = resultAlignment;
	}
};
oFF.AldModelTotals.prototype.setResultAlignment = function(resultAlignment)
{
	this.m_resultAlignment = resultAlignment;
	this.callListeners();
};
oFF.AldModelTotals.prototype.applyToModel = function(queryModel, resultVisibilityController, modelLevel)
{
	if (this.m_active)
	{
		var convenienceCommands = queryModel.getConvenienceCommands();
		var dimensionName = resultVisibilityController.getName();
		if (oFF.isNull(this.m_resultStructureElement))
		{
			convenienceCommands.alignTotals(modelLevel, dimensionName, this.m_resultAlignment);
		}
	}
};
oFF.AldModelTotals.prototype.isActive = function()
{
	return this.m_active;
};
oFF.AldModelTotals.prototype.setActive = function(active)
{
	this.m_active = active;
	this.callListeners();
};
oFF.AldModelTotals.prototype.isSupportsResultAlignment = function()
{
	return this.m_supportsResultAlignment;
};
oFF.AldModelTotals.prototype.getResultAlignment = function()
{
	return this.m_resultAlignment;
};
oFF.AldModelTotals.prototype.getResultStructureElement = function()
{
	return this.m_resultStructureElement;
};
oFF.AldModelTotals.prototype.getSupportedResultAlignments = function()
{
	return this.m_supportedResultAlignments;
};
oFF.AldModelTotals.prototype.isSupportsConditionalResultVisibility = function()
{
	return this.m_supportsConditionalResultVisibility;
};

oFF.AldModelZeroSuppression = function() {};
oFF.AldModelZeroSuppression.prototype = new oFF.DdObservableModel();
oFF.AldModelZeroSuppression.prototype._ff_c = "AldModelZeroSuppression";

oFF.AldModelZeroSuppression.createFrom = function(axis, useDefault)
{
	var instance = new oFF.AldModelZeroSuppression();
	instance.setupExt(axis, useDefault);
	instance.setupListeners();
	return instance;
};
oFF.AldModelZeroSuppression.prototype.m_supportsZeroSuppression = false;
oFF.AldModelZeroSuppression.prototype.m_zeroSuppressionType = null;
oFF.AldModelZeroSuppression.prototype.m_defaultZeroSuppressionType = null;
oFF.AldModelZeroSuppression.prototype.setupExt = function(axis, useDefault)
{
	this.m_supportsZeroSuppression = axis.supportsZeroSuppression();
	this.m_zeroSuppressionType = axis.getZeroSuppressionType();
	this.m_defaultZeroSuppressionType = axis.getDefaultZeroSuppressionType();
};
oFF.AldModelZeroSuppression.prototype.applyToModel = function(queryModel, axis)
{
	if (this.m_supportsZeroSuppression)
	{
		axis.setZeroSuppressionType(this.m_zeroSuppressionType);
	}
};
oFF.AldModelZeroSuppression.prototype.isSupportsZeroSuppression = function()
{
	return this.m_supportsZeroSuppression;
};
oFF.AldModelZeroSuppression.prototype.setSupportsZeroSuppression = function(supportsZeroSuppression)
{
	this.m_supportsZeroSuppression = supportsZeroSuppression;
};
oFF.AldModelZeroSuppression.prototype.getZeroSuppressionType = function()
{
	return this.m_zeroSuppressionType;
};
oFF.AldModelZeroSuppression.prototype.setZeroSuppressionType = function(zeroSuppressionType)
{
	this.m_zeroSuppressionType = zeroSuppressionType;
};
oFF.AldModelZeroSuppression.prototype.getDefaultZeroSuppressionType = function()
{
	return this.m_defaultZeroSuppressionType;
};
oFF.AldModelZeroSuppression.prototype.setDefaultZeroSuppressionType = function(defaultZeroSuppressionType)
{
	this.m_defaultZeroSuppressionType = defaultZeroSuppressionType;
};

oFF.OlapUiCatalogOlap = function() {};
oFF.OlapUiCatalogOlap.prototype = new oFF.OlapUiCatalogAbstract();
oFF.OlapUiCatalogOlap.prototype._ff_c = "OlapUiCatalogOlap";

oFF.OlapUiCatalogOlap.create = function(valueRequestObject)
{
	var obj = new oFF.OlapUiCatalogOlap();
	obj.setupExt(valueRequestObject);
	return obj;
};
oFF.OlapUiCatalogOlap.prototype.getOlapCatalogService = function()
{
	return this.m_valueRequestObject;
};
oFF.OlapUiCatalogOlap.prototype.processValueHelp = function(listener, customIdentifier)
{
	var catalogManager = this.m_valueRequestObject;
	catalogManager.processGetResult(oFF.OlapUiCatalogAbstract.s_syncType, listener, customIdentifier);
};
oFF.OlapUiCatalogOlap.prototype.processSearch = function(searchPattern, searchOnName, searchOnText, searchOnSchema, listener, customIdentifier)
{
	var catalogManager = this.m_valueRequestObject;
	catalogManager.setSearchOnSchema(searchOnSchema);
	catalogManager.setSearchOnName(searchOnName);
	catalogManager.setSearchOnText(searchOnText);
	catalogManager.setSearchFilter(searchPattern);
	var filterAdded = (searchOnName || searchOnText || searchOnSchema) && oFF.XStringUtils.isNotNullAndNotEmpty(searchPattern);
	if (!filterAdded)
	{
		listener.onOlapCatalogResult(oFF.ExtResult.create(null, null), null, customIdentifier);
		return;
	}
	catalogManager.processGetResult(oFF.OlapUiCatalogAbstract.s_syncType, listener, customIdentifier);
};

oFF.OlapUiHierarchyCatalog = function() {};
oFF.OlapUiHierarchyCatalog.prototype = new oFF.OlapUiHierarchyCatalogAbstract();
oFF.OlapUiHierarchyCatalog.prototype._ff_c = "OlapUiHierarchyCatalog";

oFF.OlapUiHierarchyCatalog.create = function(valueRequestObject)
{
	var obj = new oFF.OlapUiHierarchyCatalog();
	obj.setupExt(valueRequestObject);
	return obj;
};
oFF.OlapUiHierarchyCatalog.prototype.getHierarchyCatalogService = function()
{
	return this.m_valueRequestObject;
};
oFF.OlapUiHierarchyCatalog.prototype.processValueHelp = function(listener, customIdentifier)
{
	var catalogManager = this.m_valueRequestObject;
	catalogManager.setIncludeCustomHierarchies(true);
	catalogManager.processGetResult(oFF.OlapUiCatalogAbstract.s_syncType, listener, customIdentifier);
};
oFF.OlapUiHierarchyCatalog.prototype.processSearch = function(searchPattern, searchVersion, searchObjectVersion, searchDate, listener, customIdentifier)
{
	var catalogManager = this.m_valueRequestObject;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(searchPattern))
	{
		catalogManager.setFilterHierarchyNameWithOperator(oFF.XStringUtils.concatenate3("*", searchPattern, "*"), oFF.ComparisonOperator.MATCH);
	}
	else
	{
		catalogManager.setFilterHierarchyName(null, false);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(searchVersion))
	{
		catalogManager.setFilterVersionNameWithOperator(oFF.XStringUtils.concatenate3("*", searchVersion, "*"), oFF.ComparisonOperator.MATCH);
	}
	else
	{
		catalogManager.setFilterVersionName(null, false);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(searchObjectVersion))
	{
		catalogManager.setFilterHierarchyObjectVersionWithOperator(searchObjectVersion, oFF.ComparisonOperator.MATCH);
	}
	else
	{
		catalogManager.setFilterHierarchyObjectVersion(null, false);
	}
	if (oFF.notNull(searchDate))
	{
		catalogManager.setFilterHierarchyDate(searchDate, true);
	}
	else
	{
		catalogManager.setFilterHierarchyDate(null, false);
	}
	catalogManager.setIncludeCustomHierarchies(true);
	catalogManager.processGetResult(oFF.OlapUiCatalogAbstract.s_syncType, listener, customIdentifier);
};

oFF.DdCatalogLayout = function() {};
oFF.DdCatalogLayout.prototype = new oFF.DdLayoutAbstract();
oFF.DdCatalogLayout.prototype._ff_c = "DdCatalogLayout";

oFF.DdCatalogLayout.createWithGenesis = function(genesis)
{
	var instance = new oFF.DdCatalogLayout();
	instance.setupExt(genesis);
	return instance;
};
oFF.DdCatalogLayout.prototype.m_content = null;
oFF.DdCatalogLayout.prototype.m_filterArea = null;
oFF.DdCatalogLayout.prototype.m_selectionArea = null;
oFF.DdCatalogLayout.prototype.setupExt = function(genesis)
{
	this.m_filterArea = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT).setHeight(oFF.UiCssLength.create("8em"));
	this.m_selectionArea = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
};
oFF.DdCatalogLayout.prototype.buildTree = function(genesis)
{
	this.m_content = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_content.setName("DisplayVerticalLayout");
	this.m_content.addItem(this.m_filterArea);
	this.m_content.addItem(this.m_selectionArea);
	return this.m_content;
};
oFF.DdCatalogLayout.prototype.getContent = function()
{
	return this.m_content;
};
oFF.DdCatalogLayout.prototype.getFilterArea = function()
{
	return this.m_filterArea;
};
oFF.DdCatalogLayout.prototype.getSelectionArea = function()
{
	return this.m_selectionArea;
};

oFF.DataCellDialogDragonflyEntryPoint = function() {};
oFF.DataCellDialogDragonflyEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.DataCellDialogDragonflyEntryPoint.prototype._ff_c = "DataCellDialogDragonflyEntryPoint";

oFF.DataCellDialogDragonflyEntryPoint.createEntryPoint = function(queryManager)
{
	var entryPoint = new oFF.DataCellDialogDragonflyEntryPoint();
	entryPoint.setupEntryPoint(queryManager.getApplication());
	entryPoint.m_dcController = oFF.DataCellController.create(entryPoint.getUiContext());
	return entryPoint;
};
oFF.DataCellDialogDragonflyEntryPoint.prototype.m_dcController = null;
oFF.DataCellDialogDragonflyEntryPoint.prototype.openDataCellPropertiesDialog = function(listener, queryManager, measure1, measure2, propsForSecondStructure)
{
	this.m_dcController.openDataCellPropertiesDialog(listener, queryManager, measure1, measure2, propsForSecondStructure);
};
oFF.DataCellDialogDragonflyEntryPoint.prototype.close = function()
{
	this.m_dcController.close();
};
oFF.DataCellDialogDragonflyEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
	this.m_dcController = oFF.XObjectExt.release(this.m_dcController);
};

oFF.DdControllerFlexible = function() {};
oFF.DdControllerFlexible.prototype = new oFF.DdControllerAbstract();
oFF.DdControllerFlexible.prototype._ff_c = "DdControllerFlexible";

oFF.DdControllerFlexible.prototype.m_model = null;
oFF.DdControllerFlexible.prototype.m_context = null;
oFF.DdControllerFlexible.prototype.m_application = null;
oFF.DdControllerFlexible.prototype.setupExt = function(application, context, model, genesis)
{
	this.m_context = context;
	this.setupGenesis(genesis);
	this.m_model = model;
	this.m_application = application;
};
oFF.DdControllerFlexible.prototype.getModel = function()
{
	return this.m_model;
};
oFF.DdControllerFlexible.prototype.getContext = function()
{
	return this.m_context;
};
oFF.DdControllerFlexible.prototype.getApplication = function()
{
	return this.m_application;
};

oFF.DdEntryPoint = function() {};
oFF.DdEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.DdEntryPoint.prototype._ff_c = "DdEntryPoint";

oFF.DdEntryPoint.createEntryPoint = function(application)
{
	var entryPoint = new oFF.DdEntryPoint();
	entryPoint.setupEntryPoint(application);
	entryPoint.setApplication(application);
	return entryPoint;
};
oFF.DdEntryPoint.prototype.m_application = null;
oFF.DdEntryPoint.prototype.setApplication = function(application)
{
	this.m_application = application;
};
oFF.DdEntryPoint.prototype.openDimensionDialog = function(title, dimension, listener)
{
	var manifest = this.m_application.getProcess().getKernel().getProgramManifest(oFF.OuDimensionDialog.DEFAULT_PROGRAM_NAME);
	var process = this.m_application.getProcess();
	var startCfg = oFF.ProgramStartCfg.create(process, manifest.getName(), title, null);
	var tmpArgs = startCfg.getArguments();
	tmpArgs.putXObject("dimension", dimension);
	tmpArgs.putXObject("listener", listener);
	startCfg.setIsCreatingChildProcess(true);
	startCfg.processExecution(oFF.SyncType.NON_BLOCKING, null, null);
};
oFF.DdEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
};

oFF.DdExhaustiveEntryPoint = function() {};
oFF.DdExhaustiveEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.DdExhaustiveEntryPoint.prototype._ff_c = "DdExhaustiveEntryPoint";

oFF.DdExhaustiveEntryPoint.createEntryPoint = function(application)
{
	var entryPoint = new oFF.DdExhaustiveEntryPoint();
	entryPoint.setupEntryPoint(application);
	entryPoint.setApplication(application);
	return entryPoint;
};
oFF.DdExhaustiveEntryPoint.prototype.m_application = null;
oFF.DdExhaustiveEntryPoint.prototype.setApplication = function(application)
{
	this.m_application = application;
};
oFF.DdExhaustiveEntryPoint.prototype.openDimensionDialog = function(title, dimension, listener)
{
	var manifest = this.m_application.getProcess().getKernel().getProgramManifest(oFF.OuDimensionDialogExt.DEFAULT_PROGRAM_NAME);
	var process = this.m_application.getProcess();
	var startCfg = oFF.ProgramStartCfg.create(process, manifest.getName(), title, null);
	var tmpArgs = startCfg.getArguments();
	tmpArgs.putXObject("dimension", dimension);
	tmpArgs.putXObject("listener", listener);
	startCfg.setIsCreatingChildProcess(true);
	startCfg.processExecution(oFF.SyncType.NON_BLOCKING, null, null);
};
oFF.DdExhaustiveEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
};

oFF.DdDimensionDisplayLayoutCompact = function() {};
oFF.DdDimensionDisplayLayoutCompact.prototype = new oFF.DdLayoutAbstract();
oFF.DdDimensionDisplayLayoutCompact.prototype._ff_c = "DdDimensionDisplayLayoutCompact";

oFF.DdDimensionDisplayLayoutCompact.createWithGenesis = function(genesis)
{
	var instance = new oFF.DdDimensionDisplayLayoutCompact();
	instance.setupExt(genesis);
	return instance;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.m_content = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_valueDisplayPrefix = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_valueDisplayContent = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_valueDisplaySuffix = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_sortDisplayContent = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.getZeroSuppressionDisplayContent = function()
{
	return this.m_zeroSuppressionDisplayContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.setZeroSuppressionDisplayContent = function(zeroSuppressionDisplayContent)
{
	this.m_zeroSuppressionDisplayContent = zeroSuppressionDisplayContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.m_zeroSuppressionDisplayContent = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.getTotalsDisplayContent = function()
{
	return this.m_totalsDisplayContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.m_totalsDisplayContent = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_hierarchyDisplayContent = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.m_detailsTable = null;
oFF.DdDimensionDisplayLayoutCompact.prototype.setupExt = function(genesis)
{
	this.m_valueDisplayPrefix = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_valueDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_valueDisplaySuffix = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_detailsTable = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_sortDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_totalsDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_hierarchyDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_zeroSuppressionDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
};
oFF.DdDimensionDisplayLayoutCompact.prototype.buildTree = function(genesis)
{
	var localization = genesis.getUiManager().getLocalization();
	this.m_content = genesis.newControl(oFF.UiType.ICON_TAB_BAR).setHeight(oFF.UiCssLength.create("100%"));
	this.m_content.setName("DisplayVerticalLayout");
	var panelLayout;
	var item;
	var subLayout;
	var flexLayout;
	var vl;
	if (this.m_valueDisplayContent.hasItems() || this.m_valueDisplaySuffix.hasItems() || this.m_totalsDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_DISPLAY);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY));
		flexLayout = genesis.newRoot(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		flexLayout.setWrap(oFF.UiFlexWrap.WRAP);
		item.setContent(flexLayout);
		item.setIcon(null);
		subLayout = flexLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("35%"));
		subLayout.setFlex("1 0 200px");
		if (this.m_valueDisplayContent.hasItems())
		{
			panelLayout = subLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
			panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_VALUE_DISPLAY)).setHeight(oFF.UiCssLength.create("2em"));
			vl = panelLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto"));
			vl.addItem(this.m_valueDisplayContent);
			if (this.m_totalsDisplayContent.hasItems())
			{
				panelLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em"));
				panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS)).setHeight(oFF.UiCssLength.create("2em"));
				vl = panelLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto"));
				vl.addItem(this.m_totalsDisplayContent);
			}
		}
		else if (this.m_totalsDisplayContent.hasItems())
		{
			panelLayout = subLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
			panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS)).setHeight(oFF.UiCssLength.create("2em"));
			vl = panelLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%"));
			vl.addItem(this.m_totalsDisplayContent);
		}
	}
	if (this.m_sortDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_SORTING);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORTING));
		subLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
		item.setContent(subLayout);
		item.setIcon(null);
		subLayout.addItem(this.m_sortDisplayContent);
	}
	if (this.m_hierarchyDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY));
		subLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
		item.setContent(subLayout);
		item.setIcon(null);
		subLayout.addItem(this.m_hierarchyDisplayContent);
	}
	if (this.m_valueDisplayPrefix.hasItems() || this.m_detailsTable.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_ATTRIBUTES);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ATTRIBUTES));
		subLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
		item.setContent(subLayout);
		item.setIcon(null);
		subLayout.addItem(this.m_valueDisplayPrefix);
		panelLayout = subLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		panelLayout.addItem(this.m_detailsTable);
	}
	var wrappedContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
	wrappedContent.addItem(this.m_content.setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")));
	return wrappedContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getContent = function()
{
	return this.m_content;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getValueDisplayContent = function()
{
	return this.m_valueDisplayContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getDetailsTable = function()
{
	return this.m_detailsTable;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getValueDisplayPrefix = function()
{
	return this.m_valueDisplayPrefix;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getValueDisplaySuffix = function()
{
	return this.m_valueDisplaySuffix;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getSortDisplayContent = function()
{
	return this.m_sortDisplayContent;
};
oFF.DdDimensionDisplayLayoutCompact.prototype.getHierarchyDisplayContent = function()
{
	return this.m_hierarchyDisplayContent;
};

oFF.DdDimensionDisplayLayoutExhaustive = function() {};
oFF.DdDimensionDisplayLayoutExhaustive.prototype = new oFF.DdLayoutAbstract();
oFF.DdDimensionDisplayLayoutExhaustive.prototype._ff_c = "DdDimensionDisplayLayoutExhaustive";

oFF.DdDimensionDisplayLayoutExhaustive.createWithGenesis = function(genesis)
{
	var instance = new oFF.DdDimensionDisplayLayoutExhaustive();
	instance.setupExt(genesis);
	return instance;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.m_content = null;
oFF.DdDimensionDisplayLayoutExhaustive.prototype.m_valueDisplayContent = null;
oFF.DdDimensionDisplayLayoutExhaustive.prototype.m_sortDisplayContent = null;
oFF.DdDimensionDisplayLayoutExhaustive.prototype.m_hierarchyDisplayContent = null;
oFF.DdDimensionDisplayLayoutExhaustive.prototype.m_detailsTable = null;
oFF.DdDimensionDisplayLayoutExhaustive.prototype.setupExt = function(genesis)
{
	this.m_valueDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_detailsTable = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_sortDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_hierarchyDisplayContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.buildTree = function(genesis)
{
	var localization = genesis.getUiManager().getLocalization();
	this.m_content = genesis.newControl(oFF.UiType.ICON_TAB_BAR).setHeight(oFF.UiCssLength.create("100%"));
	this.m_content.setName("DisplayVerticalLayout");
	var panelLayout;
	var item;
	var subLayout;
	var flexLayout;
	var vl;
	if (this.m_valueDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_SETTINGS);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_SETTINGS));
		flexLayout = genesis.newRoot(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		flexLayout.setWrap(oFF.UiFlexWrap.WRAP);
		item.setContent(flexLayout);
		item.setIcon(null);
		subLayout = flexLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("35%"));
		subLayout.setFlex("1 0 200px");
		if (this.m_valueDisplayContent.hasItems())
		{
			panelLayout = subLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
			vl = panelLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("auto"));
			vl.addItem(this.m_valueDisplayContent);
		}
	}
	if (this.m_sortDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_SORTING);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORTING));
		subLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
		item.setContent(subLayout);
		item.setIcon(null);
		subLayout.addItem(this.m_sortDisplayContent);
	}
	if (this.m_hierarchyDisplayContent.hasItems())
	{
		item = this.m_content.addNewItem().setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
		item.setName(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY);
		item.setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY));
		subLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN);
		item.setContent(subLayout);
		item.setIcon(null);
		subLayout.addItem(this.m_hierarchyDisplayContent);
	}
	var wrappedContent = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
	wrappedContent.addItem(this.m_content.setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")));
	return wrappedContent;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.getContent = function()
{
	return this.m_content;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.getValueDisplayContent = function()
{
	return this.m_valueDisplayContent;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.getDetailsTable = function()
{
	return this.m_detailsTable;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.getSortDisplayContent = function()
{
	return this.m_sortDisplayContent;
};
oFF.DdDimensionDisplayLayoutExhaustive.prototype.getHierarchyDisplayContent = function()
{
	return this.m_hierarchyDisplayContent;
};

oFF.DdModelAxis = function() {};
oFF.DdModelAxis.prototype = new oFF.DdObservableModel();
oFF.DdModelAxis.prototype._ff_c = "DdModelAxis";

oFF.DdModelAxis.createFrom = function(axis)
{
	var instance = new oFF.DdModelAxis();
	instance.setupExt(axis);
	instance.setupListeners();
	return instance;
};
oFF.DdModelAxis.prototype.m_dimensionModels = null;
oFF.DdModelAxis.prototype.getDimensionOrdered = function()
{
	return this.m_dimensionOrdered;
};
oFF.DdModelAxis.prototype.m_dimensionOrdered = null;
oFF.DdModelAxis.prototype.m_axis = null;
oFF.DdModelAxis.prototype.m_ddModelTotals = null;
oFF.DdModelAxis.prototype.m_ddModelTotalsIncluded = null;
oFF.DdModelAxis.prototype.m_ddModelTotalsRemaining = null;
oFF.DdModelAxis.prototype.m_ddModelZeroSuppression = null;
oFF.DdModelAxis.prototype.setupExt = function(axis)
{
	var visibleDimensions = axis.getDimensions();
	this.m_axis = axis;
	this.m_dimensionModels = oFF.XHashMapByString.create();
	this.m_dimensionOrdered = oFF.XList.create();
	var i;
	for (i = 0; i < visibleDimensions.size(); i++)
	{
		var visibleDimension = visibleDimensions.getDimensionAt(i);
		var newDimensionModel = oFF.DdModelDimension.createFrom(visibleDimension, true, this.m_dimensionOrdered, this);
		this.m_dimensionModels.put(newDimensionModel.getComponentName(), newDimensionModel);
	}
	var allDimensions = axis.getQueryModel().getDimensions();
	for (i = 0; i < allDimensions.size(); i++)
	{
		var dimension = allDimensions.getDimensionAt(i);
		var dimensionName = dimension.getName();
		if (!this.m_dimensionModels.containsKey(dimensionName))
		{
			var newDimensionModelHidden = oFF.DdModelDimension.createFrom(dimension, false, this.m_dimensionOrdered, this);
			this.m_dimensionModels.put(dimensionName, newDimensionModelHidden);
		}
		this.initializeTotals(axis);
		this.initializeZeroSuppression(axis);
	}
};
oFF.DdModelAxis.prototype.initializeTotals = function(axis)
{
	if (axis.supportsTotals())
	{
		var capabilities = axis.getModelCapabilities();
		this.m_ddModelTotals = oFF.DdModelTotals.createFrom(capabilities, axis, true, null, null);
		if (capabilities.supportsConditionalResults())
		{
			this.m_ddModelTotalsIncluded = oFF.DdModelTotals.createFrom(capabilities, axis, true, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, null);
			this.m_ddModelTotalsRemaining = oFF.DdModelTotals.createFrom(capabilities, axis, true, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, null);
		}
	}
};
oFF.DdModelAxis.prototype.initializeZeroSuppression = function(axis)
{
	if (axis.supportsZeroSuppression())
	{
		this.m_ddModelZeroSuppression = oFF.AldModelZeroSuppression.createFrom(axis, true);
	}
};
oFF.DdModelAxis.prototype.getDdModelZeroSuppression = function()
{
	return this.m_ddModelZeroSuppression;
};
oFF.DdModelAxis.prototype.setDdModelZeroSuppression = function(ddModelZeroSuppression)
{
	this.m_ddModelZeroSuppression = ddModelZeroSuppression;
};
oFF.DdModelAxis.prototype.applyToQueryModel = function(queryModel)
{
	var convenienceCommands = queryModel.getConvenienceCommands();
	convenienceCommands.clearAxis(this.m_axis.getType());
	for (var i = 0; i < this.m_dimensionOrdered.size(); i++)
	{
		var current = this.m_dimensionOrdered.get(i);
		if (current.isVisible())
		{
			convenienceCommands.moveDimensionToRows(current.getComponentName());
		}
	}
	this.m_axis.clearResultVisibilitySettings();
	if (oFF.notNull(this.m_ddModelTotals) && this.m_ddModelTotals.isActive())
	{
		this.m_ddModelTotals.applyToModel(queryModel, this.m_axis, oFF.QModelLevel.AXES);
	}
	if (oFF.notNull(this.m_ddModelTotalsIncluded) && oFF.notNull(this.m_ddModelTotalsIncluded) && this.m_ddModelTotalsIncluded.isActive())
	{
		this.m_ddModelTotalsIncluded.applyToModel(queryModel, this.m_axis, oFF.QModelLevel.AXES);
	}
	if (oFF.notNull(this.m_ddModelTotalsRemaining) && oFF.notNull(this.m_ddModelTotalsRemaining) && this.m_ddModelTotalsRemaining.isActive())
	{
		this.m_ddModelTotalsRemaining.applyToModel(queryModel, this.m_axis, oFF.QModelLevel.AXES);
	}
	if (oFF.notNull(this.m_ddModelZeroSuppression))
	{
		this.m_ddModelZeroSuppression.applyToModel(queryModel, this.m_axis);
	}
};
oFF.DdModelAxis.prototype.getDdModelTotals = function()
{
	return this.m_ddModelTotals;
};
oFF.DdModelAxis.prototype.setDdModelTotals = function(ddModelTotals)
{
	this.m_ddModelTotals = ddModelTotals;
};
oFF.DdModelAxis.prototype.getDdModelTotalsIncluded = function()
{
	return this.m_ddModelTotalsIncluded;
};
oFF.DdModelAxis.prototype.setDdModelTotalsIncluded = function(ddModelTotalsIncluded)
{
	this.m_ddModelTotalsIncluded = ddModelTotalsIncluded;
};
oFF.DdModelAxis.prototype.getDdModelTotalsRemaining = function()
{
	return this.m_ddModelTotalsRemaining;
};
oFF.DdModelAxis.prototype.setDdModelTotalsRemaining = function(ddModelTotalsRemaining)
{
	this.m_ddModelTotalsRemaining = ddModelTotalsRemaining;
};

oFF.DdModelHierarchySelection = function() {};
oFF.DdModelHierarchySelection.prototype = new oFF.DdObservableModel();
oFF.DdModelHierarchySelection.prototype._ff_c = "DdModelHierarchySelection";

oFF.DdModelHierarchySelection.createFrom = function(dimension)
{
	var instance = new oFF.DdModelHierarchySelection();
	instance.setupExt(dimension);
	instance.setupListeners();
	return instance;
};
oFF.DdModelHierarchySelection.prototype.m_active = false;
oFF.DdModelHierarchySelection.prototype.m_drillLevel = 0;
oFF.DdModelHierarchySelection.prototype.m_maximumDrillLevel = 0;
oFF.DdModelHierarchySelection.prototype.m_nodeAlignment = null;
oFF.DdModelHierarchySelection.prototype.m_activable = false;
oFF.DdModelHierarchySelection.prototype.m_selectable = false;
oFF.DdModelHierarchySelection.prototype.m_hierarchy = null;
oFF.DdModelHierarchySelection.prototype.m_hierarchyText = null;
oFF.DdModelHierarchySelection.prototype.m_availableHierarchies = null;
oFF.DdModelHierarchySelection.prototype.m_memberOfPostedNodeVisibility = null;
oFF.DdModelHierarchySelection.prototype.m_supportsLevels = false;
oFF.DdModelHierarchySelection.prototype.m_supportsBottomUp = false;
oFF.DdModelHierarchySelection.prototype.m_levelMap = null;
oFF.DdModelHierarchySelection.prototype.m_nodeCondensation = false;
oFF.DdModelHierarchySelection.prototype.setupExt = function(hierarchyManager)
{
	this.m_active = hierarchyManager.isHierarchyActive();
	this.m_hierarchy = hierarchyManager.getHierarchyName();
	var hierarchyObject = hierarchyManager.getHierarchy();
	if (oFF.notNull(hierarchyObject))
	{
		this.m_hierarchyText = hierarchyObject.getText();
		if (oFF.isNull(this.m_hierarchyText))
		{
			this.m_hierarchyText = hierarchyObject.getHierarchyDescription();
		}
		if (oFF.isNull(this.m_hierarchyText))
		{
			this.m_hierarchyText = hierarchyObject.getName();
		}
	}
	if (oFF.isNull(this.m_hierarchyText))
	{
		this.m_hierarchyText = this.m_hierarchy;
	}
	this.m_availableHierarchies = oFF.XHashMapOfStringByString.create();
	this.m_levelMap = oFF.XHashMapByString.create();
	var localHierarchyName;
	var localHierarchyText;
	if (hierarchyManager.supportsHierarchy())
	{
		var hierarchyCatalogResult = hierarchyManager.getHierarchies();
		if (oFF.notNull(hierarchyCatalogResult))
		{
			var hierarchies = hierarchyCatalogResult.getObjects();
			if (oFF.XCollectionUtils.hasElements(hierarchies))
			{
				for (var i = 0; i < hierarchies.size(); i++)
				{
					var curHierarchy = hierarchies.get(i);
					localHierarchyName = curHierarchy.getHierarchyName();
					localHierarchyText = curHierarchy.getHierarchyDescription();
					if (oFF.XStringUtils.isNullOrEmpty(localHierarchyText))
					{
						localHierarchyText = localHierarchyName;
					}
					this.m_availableHierarchies.put(localHierarchyName, localHierarchyText);
					this.m_levelMap.put(localHierarchyName, oFF.XIntegerValue.create(oFF.XCollectionUtils.hasElements(curHierarchy.getHierarchyLevels()) ? curHierarchy.getHierarchyLevels().size() : -1));
				}
			}
		}
		var customHierarchies = hierarchyManager.getCustomHierarchies();
		if (oFF.XCollectionUtils.hasElements(customHierarchies))
		{
			for (var j = 0; j < customHierarchies.size(); j++)
			{
				var customHierarchy = customHierarchies.get(j);
				localHierarchyName = customHierarchy.getHierarchyName();
				localHierarchyText = customHierarchy.getHierarchyDescription();
				if (oFF.XStringUtils.isNullOrEmpty(localHierarchyText))
				{
					localHierarchyText = localHierarchyName;
				}
				this.m_availableHierarchies.put(localHierarchyName, localHierarchyText);
			}
		}
	}
	this.m_activable = hierarchyManager.supportsHierarchy();
	this.m_selectable = hierarchyManager.supportsHierarchy() && !hierarchyManager.isDisplayHierarchyFixInFilter();
	this.m_memberOfPostedNodeVisibility = hierarchyManager.getMemberOfPostedNodeVisibility();
	this.m_supportsLevels = hierarchyManager.getModelCapabilities().supportsHierarchyLevelMetadata();
	this.m_drillLevel = hierarchyManager.getInitialDrillLevel();
	this.m_supportsBottomUp = hierarchyManager.getModelCapabilities().supportsExpandBottomUp();
	this.m_nodeAlignment = hierarchyManager.getLowerLevelNodeAlignment();
	if (oFF.XStringUtils.isNullOrEmpty(this.m_hierarchy))
	{
		this.m_hierarchy = hierarchyManager.getDefaultHierarchyName();
	}
	if (oFF.XStringUtils.isNullOrEmpty(this.m_hierarchy) && oFF.XCollectionUtils.hasElements(this.m_availableHierarchies))
	{
		this.m_hierarchy = this.m_availableHierarchies.getKeysAsReadOnlyListOfString().get(0);
	}
	this.m_nodeCondensation = hierarchyManager.hasNodeCondensation();
};
oFF.DdModelHierarchySelection.prototype.isActive = function()
{
	return this.m_activable && this.m_active;
};
oFF.DdModelHierarchySelection.prototype.setActive = function(active)
{
	this.m_active = active;
	this.callListeners();
};
oFF.DdModelHierarchySelection.prototype.getDrillLevel = function()
{
	return this.m_drillLevel;
};
oFF.DdModelHierarchySelection.prototype.setDrillLevel = function(drillLevel)
{
	this.m_drillLevel = drillLevel;
};
oFF.DdModelHierarchySelection.prototype.getNodeAlignment = function()
{
	return this.m_nodeAlignment;
};
oFF.DdModelHierarchySelection.prototype.setNodeAlignment = function(nodeAlignment)
{
	this.m_nodeAlignment = nodeAlignment;
};
oFF.DdModelHierarchySelection.prototype.getHierarchy = function()
{
	return this.m_hierarchy;
};
oFF.DdModelHierarchySelection.prototype.setHierarchy = function(hierarchy)
{
	this.m_hierarchy = hierarchy;
	if (this.m_levelMap.containsKey(hierarchy))
	{
		this.m_maximumDrillLevel = this.m_levelMap.getByKey(hierarchy).getInteger();
	}
	else
	{
		this.m_maximumDrillLevel = -1;
	}
	this.callListeners();
};
oFF.DdModelHierarchySelection.prototype.getMemberOfPostedNodeVisibility = function()
{
	return this.m_memberOfPostedNodeVisibility;
};
oFF.DdModelHierarchySelection.prototype.setMemberOfPostedNodeVisibility = function(memberOfPostedNodeVisibility)
{
	this.m_memberOfPostedNodeVisibility = memberOfPostedNodeVisibility;
};
oFF.DdModelHierarchySelection.prototype.getMaximumDrillLevel = function()
{
	return this.m_maximumDrillLevel;
};
oFF.DdModelHierarchySelection.prototype.isActivable = function()
{
	return this.m_selectable && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_hierarchy);
};
oFF.DdModelHierarchySelection.prototype.isSelectable = function()
{
	return this.m_selectable;
};
oFF.DdModelHierarchySelection.prototype.getAvailableHierarchies = function()
{
	return this.m_availableHierarchies;
};
oFF.DdModelHierarchySelection.prototype.isSupportsLevels = function()
{
	return this.m_supportsLevels;
};
oFF.DdModelHierarchySelection.prototype.isSupportsBottomUp = function()
{
	return this.m_supportsBottomUp;
};
oFF.DdModelHierarchySelection.prototype.isNodeCondensation = function()
{
	return this.m_nodeCondensation;
};
oFF.DdModelHierarchySelection.prototype.setNodeCondensation = function(nodeCondensation)
{
	this.m_nodeCondensation = nodeCondensation;
};
oFF.DdModelHierarchySelection.prototype.getHierarchyText = function()
{
	return this.m_hierarchyText;
};
oFF.DdModelHierarchySelection.prototype.setHierarchyText = function(hierarchyText)
{
	this.m_hierarchyText = hierarchyText;
};

oFF.DdModelReadMode = function() {};
oFF.DdModelReadMode.prototype = new oFF.DdObservableModel();
oFF.DdModelReadMode.prototype._ff_c = "DdModelReadMode";

oFF.DdModelReadMode.createFrom = function(dimension, contextType)
{
	var instance = new oFF.DdModelReadMode();
	instance.setupExt(dimension, contextType);
	instance.setupListeners();
	return instance;
};
oFF.DdModelReadMode.prototype.m_availableReadModes = null;
oFF.DdModelReadMode.prototype.m_readMode = null;
oFF.DdModelReadMode.prototype.setupExt = function(dimension, contextType)
{
	this.m_availableReadModes = dimension.getSupportedReadModes(contextType);
	this.m_readMode = dimension.getReadMode(contextType);
};
oFF.DdModelReadMode.prototype.getReadMode = function()
{
	return this.m_readMode;
};
oFF.DdModelReadMode.prototype.setReadMode = function(readMode)
{
	this.m_readMode = readMode;
};
oFF.DdModelReadMode.prototype.getAvailableReadModes = function()
{
	return this.m_availableReadModes;
};

oFF.DdModelSorting = function() {};
oFF.DdModelSorting.prototype = new oFF.DdObservableModel();
oFF.DdModelSorting.prototype._ff_c = "DdModelSorting";

oFF.DdModelSorting.createFrom = function(dimension)
{
	var instance = new oFF.DdModelSorting();
	instance.setupExt(dimension);
	instance.setupListeners();
	return instance;
};
oFF.DdModelSorting.prototype.m_active = false;
oFF.DdModelSorting.prototype.m_sortType = null;
oFF.DdModelSorting.prototype.m_sortTypeNonHierarchical = null;
oFF.DdModelSorting.prototype.m_explicitlyNonHierarchical = false;
oFF.DdModelSorting.prototype.m_locale = null;
oFF.DdModelSorting.prototype.m_caseSensitive = false;
oFF.DdModelSorting.prototype.m_supportsLocale = false;
oFF.DdModelSorting.prototype.m_sortDirection = null;
oFF.DdModelSorting.prototype.m_breakGrouping = false;
oFF.DdModelSorting.prototype.m_availableSortTypes = null;
oFF.DdModelSorting.prototype.m_field = null;
oFF.DdModelSorting.prototype.m_availableFields = null;
oFF.DdModelSorting.prototype.m_sortingManger = null;
oFF.DdModelSorting.prototype.m_textField = null;
oFF.DdModelSorting.prototype.m_keyField = null;
oFF.DdModelSorting.prototype.m_inHierarchy = false;
oFF.DdModelSorting.prototype.m_hierarchySortEnabled = false;
oFF.DdModelSorting.prototype.setupExt = function(dimension)
{
	var rsSorting = dimension.getResultSetSorting();
	var queryModel = dimension.getQueryModel();
	var sortingManager = queryModel.getSortingManager();
	this.m_sortingManger = sortingManager;
	this.m_active = false;
	this.m_breakGrouping = false;
	this.m_sortDirection = oFF.XSortDirection.DEFAULT_VALUE;
	this.m_availableSortTypes = oFF.XList.create();
	this.m_availableFields = oFF.XListOfString.create();
	this.m_hierarchySortEnabled = dimension.isHierarchyActive();
	if (dimension.getTextField() !== null)
	{
		this.m_textField = dimension.getTextField().getName();
	}
	if (dimension.getKeyField() !== null)
	{
		this.m_keyField = dimension.getKeyField().getName();
	}
	if (oFF.notNull(sortingManager))
	{
		var modelCapabilities = queryModel.getModelCapabilities();
		if (modelCapabilities.supportsSortType(oFF.SortType.MEMBER_KEY))
		{
			this.m_availableSortTypes.add(oFF.SortType.MEMBER_KEY);
		}
		if (modelCapabilities.supportsSortType(oFF.SortType.MEMBER_TEXT))
		{
			this.m_availableSortTypes.add(oFF.SortType.MEMBER_TEXT);
		}
		if (modelCapabilities.supportsSortType(oFF.SortType.FILTER))
		{
			this.m_availableSortTypes.add(oFF.SortType.FILTER);
		}
		if (modelCapabilities.supportsSortType(oFF.SortType.FIELD))
		{
			this.m_availableSortTypes.add(oFF.SortType.FIELD);
		}
		if (modelCapabilities.supportsSortType(oFF.SortType.HIERARCHY))
		{
			this.m_availableSortTypes.add(oFF.SortType.HIERARCHY);
		}
		this.m_supportsLocale = modelCapabilities.supportsLocaleSorting();
		if (oFF.notNull(rsSorting))
		{
			this.setSortTypeExt(rsSorting.getSortingType(), false);
			this.m_sortDirection = rsSorting.getDirection();
			this.m_active = this.m_sortDirection === oFF.XSortDirection.ASCENDING || this.m_sortDirection === oFF.XSortDirection.DESCENDING;
			this.m_breakGrouping = rsSorting.isBreakGroupingEnabled();
			this.m_caseSensitive = rsSorting.isCaseSensitive();
			this.m_locale = rsSorting.getLocale();
		}
		var fields = dimension.getFields();
		if (oFF.XCollectionUtils.hasElements(fields))
		{
			for (var i = 0; i < fields.size(); i++)
			{
				var currentField = fields.getFieldAt(i);
				this.m_availableFields.add(currentField.getName());
				if (!this.m_active || oFF.isNull(rsSorting) || this.m_sortType === oFF.SortType.FIELD && oFF.isNull(this.m_field))
				{
					var fieldSort = sortingManager.getFieldSorting(currentField, false);
					if (oFF.notNull(fieldSort))
					{
						this.m_field = currentField.getName();
						this.setSortTypeExt(oFF.SortType.FIELD, false);
						this.m_sortDirection = fieldSort.getDirection();
						this.m_active = true;
						this.m_breakGrouping = fieldSort.isBreakGroupingEnabled();
						this.m_caseSensitive = fieldSort.isCaseSensitive();
						this.m_locale = fieldSort.getLocale();
					}
				}
			}
			if (oFF.isNull(this.m_field))
			{
				this.m_field = fields.getFieldAt(0).getName();
			}
		}
		if (oFF.isNull(this.m_sortType) && oFF.XCollectionUtils.hasElements(this.m_availableSortTypes))
		{
			this.setSortTypeExt(this.m_availableSortTypes.get(0), false);
		}
		this.m_sortTypeNonHierarchical = this.m_sortType;
		if (this.m_sortTypeNonHierarchical === oFF.SortType.HIERARCHY && oFF.XCollectionUtils.hasElements(this.m_availableSortTypes))
		{
			this.m_sortTypeNonHierarchical = this.m_availableSortTypes.get(0);
		}
	}
};
oFF.DdModelSorting.prototype.isActive = function()
{
	return this.m_active;
};
oFF.DdModelSorting.prototype.setActive = function(active)
{
	this.m_active = active;
	this.callListeners();
};
oFF.DdModelSorting.prototype.getSortType = function()
{
	return this.m_sortType;
};
oFF.DdModelSorting.prototype.setSortType = function(sortType)
{
	this.setSortTypeExt(sortType, true);
};
oFF.DdModelSorting.prototype.setSortTypeExt = function(sortType, notifyObservers)
{
	if (sortType === this.m_sortType)
	{
		return;
	}
	if (sortType === oFF.SortType.MEMBER_KEY && oFF.notNull(this.m_keyField))
	{
		this.m_field = this.m_keyField;
	}
	else if (sortType === oFF.SortType.MEMBER_TEXT && oFF.notNull(this.m_textField))
	{
		this.m_field = this.m_textField;
	}
	else if (sortType === oFF.SortType.HIERARCHY)
	{
		this.m_sortTypeNonHierarchical = this.m_sortType;
	}
	this.m_sortType = sortType;
	this.m_explicitlyNonHierarchical = this.m_hierarchySortEnabled && sortType !== oFF.SortType.HIERARCHY;
	if (notifyObservers)
	{
		this.callListeners();
	}
};
oFF.DdModelSorting.prototype.tryResetHierarchicalSort = function()
{
	this.m_hierarchySortEnabled = false;
	if (this.m_inHierarchy && oFF.notNull(this.m_sortTypeNonHierarchical) && this.m_sortType === oFF.SortType.HIERARCHY)
	{
		this.m_inHierarchy = false;
		this.setSortTypeExt(this.m_sortTypeNonHierarchical, false);
		return true;
	}
	this.m_inHierarchy = false;
	return false;
};
oFF.DdModelSorting.prototype.tryApplyHierarchicalSort = function()
{
	this.m_hierarchySortEnabled = true;
	if (!this.m_inHierarchy && this.m_sortType !== oFF.SortType.HIERARCHY && !this.m_explicitlyNonHierarchical)
	{
		this.m_inHierarchy = true;
		this.setSortTypeExt(oFF.SortType.HIERARCHY, false);
		return true;
	}
	this.m_inHierarchy = true;
	return false;
};
oFF.DdModelSorting.prototype.getSortDirection = function()
{
	return this.m_active ? this.m_sortDirection : oFF.XSortDirection.DISABLED;
};
oFF.DdModelSorting.prototype.setSortDirection = function(sortDirection)
{
	if (sortDirection === oFF.XSortDirection.DISABLED)
	{
		this.m_active = false;
	}
	else
	{
		this.m_active = true;
		this.m_sortDirection = sortDirection;
	}
	this.callListeners();
};
oFF.DdModelSorting.prototype.isBreakGrouping = function()
{
	return this.m_breakGrouping;
};
oFF.DdModelSorting.prototype.setBreakGrouping = function(breakGrouping)
{
	this.m_breakGrouping = breakGrouping;
};
oFF.DdModelSorting.prototype.isBreakGroupingSupported = function()
{
	var modelCapabilities = this.m_sortingManger.getQueryModel().getModelCapabilities();
	if (oFF.notNull(this.m_sortingManger) && oFF.notNull(this.m_sortType))
	{
		return modelCapabilities.supportsBreakGrouping(this.m_sortType) && modelCapabilities.supportsPreserveGrouping(this.m_sortType);
	}
	return false;
};
oFF.DdModelSorting.prototype.getAvailableSortTypes = function()
{
	return this.m_availableSortTypes;
};
oFF.DdModelSorting.prototype.setAvailableSortTypes = function(availableSortTypes)
{
	this.m_availableSortTypes = availableSortTypes;
};
oFF.DdModelSorting.prototype.isHierarchySortEnabled = function()
{
	return this.m_hierarchySortEnabled;
};
oFF.DdModelSorting.prototype.getField = function()
{
	return this.m_field;
};
oFF.DdModelSorting.prototype.setField = function(field)
{
	this.m_field = field;
};
oFF.DdModelSorting.prototype.getAvailableFields = function()
{
	return this.m_availableFields;
};
oFF.DdModelSorting.prototype.getLocale = function()
{
	return this.m_locale;
};
oFF.DdModelSorting.prototype.setLocale = function(locale)
{
	this.m_locale = locale;
};
oFF.DdModelSorting.prototype.isCaseSensitive = function()
{
	return this.m_caseSensitive;
};
oFF.DdModelSorting.prototype.setCaseSensitive = function(caseSensitive)
{
	this.m_caseSensitive = caseSensitive;
};
oFF.DdModelSorting.prototype.supportsLocaleSorting = function()
{
	return this.m_supportsLocale;
};

oFF.DdModelTotals = function() {};
oFF.DdModelTotals.prototype = new oFF.DdObservableModel();
oFF.DdModelTotals.prototype._ff_c = "DdModelTotals";

oFF.DdModelTotals.createFrom = function(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment)
{
	var instance = new oFF.DdModelTotals();
	instance.setupExt(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment);
	instance.setupListeners();
	return instance;
};
oFF.DdModelTotals.prototype.m_active = false;
oFF.DdModelTotals.prototype.m_supportsResultAlignment = false;
oFF.DdModelTotals.prototype.m_resultAlignment = null;
oFF.DdModelTotals.prototype.m_resultStructureElement = null;
oFF.DdModelTotals.prototype.m_resultVisibility = null;
oFF.DdModelTotals.prototype.m_supportedResultAlignments = null;
oFF.DdModelTotals.prototype.m_supportsConditionalResultVisibility = false;
oFF.DdModelTotals.prototype.setupExt = function(modelCapabilities, resultVisibilityController, active, resultStructureElement, resultAlignment)
{
	this.m_resultStructureElement = resultStructureElement;
	this.m_active = active;
	this.m_supportsResultAlignment = resultVisibilityController.supportsResultAlignment();
	this.m_supportedResultAlignments = modelCapabilities.getSupportedResultAlignments();
	this.m_supportsConditionalResultVisibility = modelCapabilities.supportsConditionalResultVisibility();
	if (oFF.isNull(resultStructureElement))
	{
		this.m_resultAlignment = resultVisibilityController.getResultAlignment();
		this.m_resultVisibility = resultVisibilityController.getResultVisibility();
	}
	else
	{
		this.m_resultAlignment = resultAlignment;
		if (this.m_supportsResultAlignment && oFF.notNull(resultAlignment))
		{
			this.m_resultVisibility = resultVisibilityController.getResultVisibilityByElementAndAlignment(resultAlignment, resultStructureElement);
		}
		else
		{
			this.m_resultVisibility = resultVisibilityController.getResultVisibilityByElement(resultStructureElement);
		}
	}
};
oFF.DdModelTotals.prototype.setResultAlignment = function(resultAlignment)
{
	this.m_resultAlignment = resultAlignment;
	this.callListeners();
};
oFF.DdModelTotals.prototype.setResultVisibility = function(resultVisibility)
{
	this.m_resultVisibility = resultVisibility;
	this.callListeners();
};
oFF.DdModelTotals.prototype.applyToModel = function(queryModel, resultVisibilityController, modelLevel)
{
	if (this.m_active)
	{
		var convenienceCommands = queryModel.getConvenienceCommands();
		var dimensionName = resultVisibilityController.getName();
		if (oFF.isNull(this.m_resultStructureElement))
		{
			convenienceCommands.setTotalsVisible(modelLevel, dimensionName, this.m_resultVisibility);
			convenienceCommands.alignTotals(modelLevel, dimensionName, this.m_resultAlignment);
		}
		else
		{
			if (oFF.isNull(this.m_resultAlignment))
			{
				resultVisibilityController.setResultVisibilityByElement(this.m_resultStructureElement, this.m_resultVisibility);
			}
			else
			{
				resultVisibilityController.setResultVisibilityByElementAndAlignment(this.m_resultAlignment, this.m_resultStructureElement, this.m_resultVisibility);
			}
		}
	}
};
oFF.DdModelTotals.prototype.isActive = function()
{
	return this.m_active;
};
oFF.DdModelTotals.prototype.setActive = function(active)
{
	this.m_active = active;
	this.callListeners();
};
oFF.DdModelTotals.prototype.isSupportsResultAlignment = function()
{
	return this.m_supportsResultAlignment;
};
oFF.DdModelTotals.prototype.getResultAlignment = function()
{
	return this.m_resultAlignment;
};
oFF.DdModelTotals.prototype.getResultStructureElement = function()
{
	return this.m_resultStructureElement;
};
oFF.DdModelTotals.prototype.getResultVisibility = function()
{
	return this.m_resultVisibility;
};
oFF.DdModelTotals.prototype.getSupportedResultAlignments = function()
{
	return this.m_supportedResultAlignments;
};
oFF.DdModelTotals.prototype.isSupportsConditionalResultVisibility = function()
{
	return this.m_supportsConditionalResultVisibility;
};

oFF.DdModelOrderable = function() {};
oFF.DdModelOrderable.prototype = new oFF.DdObservableModel();
oFF.DdModelOrderable.prototype._ff_c = "DdModelOrderable";

oFF.DdModelOrderable.adoptList = function(list)
{
	var size = list.size();
	for (var i = 0; i < size; i++)
	{
		var curElement = list.get(i);
		curElement.m_containingList = oFF.XWeakReferenceUtil.getWeakRef(list);
		curElement.m_position = i;
	}
};
oFF.DdModelOrderable.prototype.m_parentModel = null;
oFF.DdModelOrderable.prototype.m_containingList = null;
oFF.DdModelOrderable.prototype.m_position = 0;
oFF.DdModelOrderable.prototype.isPossibleMoveUp = function()
{
	return oFF.notNull(this.m_containingList) && this.m_position > 0;
};
oFF.DdModelOrderable.prototype.isPossibleMoveDown = function()
{
	return oFF.notNull(this.m_containingList) && this.m_position + 1 < oFF.XWeakReferenceUtil.getHardRef(this.m_containingList).size();
};
oFF.DdModelOrderable.prototype.moveDown = function()
{
	this.swapTo(this.m_position + 1);
};
oFF.DdModelOrderable.prototype.moveUp = function()
{
	this.swapTo(this.m_position - 1);
};
oFF.DdModelOrderable.prototype.moveBottom = function()
{
	this.swapTo(oFF.XWeakReferenceUtil.getHardRef(this.m_containingList).size() - 1);
};
oFF.DdModelOrderable.prototype.moveTop = function()
{
	this.swapTo(0);
};
oFF.DdModelOrderable.prototype.swapTo = function(targetPosition)
{
	var containingList = oFF.XWeakReferenceUtil.getHardRef(this.m_containingList);
	containingList.removeAt(this.m_position);
	containingList.insert(targetPosition, this);
	for (var i = 0; i < containingList.size(); i++)
	{
		containingList.get(i).m_position = i;
	}
	if (oFF.notNull(this.m_parentModel))
	{
		oFF.XWeakReferenceUtil.getHardRef(this.m_parentModel).callListeners();
	}
};
oFF.DdModelOrderable.prototype.setupContainer = function(containingList, parentModel)
{
	if (oFF.notNull(containingList))
	{
		this.m_position = containingList.size();
		containingList.add(this);
		this.m_containingList = oFF.XWeakReferenceUtil.getWeakRef(containingList);
	}
	if (oFF.notNull(parentModel))
	{
		this.m_parentModel = oFF.XWeakReferenceUtil.getWeakRef(parentModel);
	}
	this.setupListeners();
};

oFF.OuDd2DisplayTab = function() {};
oFF.OuDd2DisplayTab.prototype = new oFF.OuDd2AbstractTab();
oFF.OuDd2DisplayTab.prototype._ff_c = "OuDd2DisplayTab";

oFF.OuDd2DisplayTab.createTab = function(dimension, i18n)
{
	var obj = new oFF.OuDd2DisplayTab();
	obj.setupTab(dimension, i18n);
	return obj;
};
oFF.OuDd2DisplayTab.prototype.m_displayTab = null;
oFF.OuDd2DisplayTab.prototype.releaseObject = function()
{
	this.m_displayTab = null;
	oFF.OuDd2AbstractTab.prototype.releaseObject.call( this );
};
oFF.OuDd2DisplayTab.prototype.buildUi = function(genesis, parent)
{
	this.m_displayTab = parent.addNewItem();
	this.m_displayTab.setText(this.m_i18n.getText(oFF.OuDimensionDialog2I18n.DISPLAY));
	this.m_form = oFF.UiForm.create(genesis);
	var presentationItems = this.getSupportedPresentations();
	var presentationDd = this.m_form.addDropdown(oFF.OuDimensionDialog2I18n.CONTENT, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.CONTENT), presentationItems, false);
	presentationDd.setVisible(presentationItems.size() > 1);
	var typeItems = this.getSupportedTextTypes();
	var typeBtn = this.m_form.addSegmentedButton(oFF.OuDimensionDialog2I18n.TEXT_TYPE, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_TYPE), typeItems);
	typeBtn.setVisible(typeItems.size() > 1);
	var totalsItems = oFF.XLinkedHashMapOfStringByString.create();
	totalsItems.put(oFF.ResultVisibility.ALWAYS.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_VISIBLE));
	totalsItems.put(oFF.ResultVisibility.HIDDEN.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_HIDDEN));
	totalsItems.put(oFF.ResultVisibility.CONDITIONAL.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_MORE_THAN_ONE));
	var totalsDd = this.m_form.addDropdown(oFF.OuDimensionDialog2I18n.TOTALS, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS), totalsItems, false);
	totalsDd.setVisible(this.m_dimension.supportsTotals() && this.m_dimension.supportsResultVisibility());
	var totalsPositionItems = oFF.XLinkedHashMapOfStringByString.create();
	totalsPositionItems.put(oFF.ResultAlignment.BOTTOM.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_BOT));
	totalsPositionItems.put(oFF.ResultAlignment.TOP.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_TOP));
	var totalsPosDd = this.m_form.addSegmentedButton(oFF.OuDimensionDialog2I18n.TOTALS_POSITION, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION), totalsPositionItems);
	totalsPosDd.setVisible(this.m_dimension.supportsTotals() && this.m_dimension.supportsResultAlignment());
	var masterCb = this.m_form.addCheckbox(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED, false, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED));
	masterCb.setVisible(this.supportsMasterReadmode());
	var view = this.m_form.getView();
	view.setPadding(oFF.UiCssBoxEdges.create("1rem"));
	this.m_displayTab.setContent(view);
};
oFF.OuDd2DisplayTab.prototype.loadState = function()
{
	var currentDisplayAs = this.m_mainAttributeModel.getDisplayAs();
	var currentTextType = this.m_mainAttributeModel.getTextView();
	var resultVisibility = this.m_dimension.getResultVisibility();
	if (resultVisibility === oFF.ResultVisibility.VISIBLE)
	{
		resultVisibility = oFF.ResultVisibility.ALWAYS;
	}
	var resultAlignment = this.m_dimension.getResultAlignment();
	var readMode = this.m_dimension.getReadMode(oFF.QContextType.RESULT_SET);
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.CONTENT).setValue(this.getNameValueOrNull(currentDisplayAs));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.TEXT_TYPE).setValue(this.getNameValueOrNull(currentTextType));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.TOTALS).setValue(this.getNameValueOrNull(resultVisibility));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.TOTALS_POSITION).setValue(this.getNameValueOrNull(resultAlignment));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED).setValue(oFF.XBooleanValue.create(readMode.isTypeOf(oFF.QMemberReadMode.MASTER)));
	this.m_startValues = oFF.PrUtils.createDeepCopy(this.m_form.getJsonModel()).asStructure();
};
oFF.OuDd2DisplayTab.prototype.saveState = function()
{
	var jsonModel = this.m_form.getJsonModel();
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.TEXT_TYPE))
	{
		var typeSelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.TEXT_TYPE);
		var textPresentation = oFF.PresentationType.lookup(typeSelection);
		if (oFF.notNull(textPresentation))
		{
			this.m_mainAttributeModel.setTextView(textPresentation);
			this.m_mainAttributeModel.applyToQueryModel(this.m_dimension.getQueryModel(), this.m_dimension.getName());
		}
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.CONTENT))
	{
		var contentSelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.CONTENT);
		var containerDisplay = oFF.FieldContainerDisplay.lookup(contentSelection);
		this.m_mainAttributeModel.setDisplayAs(containerDisplay);
		this.m_dimension.getQueryModel().getConvenienceCommands().clearAllAttributeFields(this.m_dimension.getName(), this.m_mainAttributeModel.getComponentName(), oFF.QContextType.RESULT_SET);
		this.m_mainAttributeModel.applyToQueryModel(this.m_dimension.getQueryModel(), this.m_dimension.getName());
		if (this.m_dimension.getFieldLayoutType() === oFF.FieldLayoutType.FIELD_BASED)
		{
			this.m_mainAttributeModel.applyMainAttributeForFieldLayout(this.m_dimension);
		}
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.TOTALS))
	{
		var totalsSelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.TOTALS);
		var totalsVisibility = oFF.ResultVisibility.lookup(totalsSelection);
		this.m_dimension.setResultVisibility(totalsVisibility);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.TOTALS_POSITION))
	{
		var totalsPosSelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.TOTALS_POSITION);
		var totalsPosition = oFF.ResultAlignment.lookup(totalsPosSelection);
		this.m_dimension.setResultAlignment(totalsPosition);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED))
	{
		var masterReadMode = jsonModel.getBooleanByKey(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED);
		this.m_dimension.setReadModeGraceful(oFF.QContextType.RESULT_SET, masterReadMode ? oFF.QMemberReadMode.MASTER : oFF.QMemberReadMode.BOOKED);
	}
};
oFF.OuDd2DisplayTab.prototype.getNameValueOrNull = function(nameObject)
{
	if (oFF.isNull(nameObject))
	{
		return null;
	}
	return oFF.XStringValue.create(nameObject.getName());
};
oFF.OuDd2DisplayTab.prototype.getTabBarItem = function()
{
	return this.m_displayTab;
};
oFF.OuDd2DisplayTab.prototype.getSupportedPresentations = function()
{
	var contentItems = oFF.XLinkedHashMapOfStringByString.create();
	if (this.m_mainAttributeModel.isMayDisplayText())
	{
		contentItems.put(oFF.FieldContainerDisplay.TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT));
	}
	contentItems.put(oFF.FieldContainerDisplay.KEY.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.KEY));
	if (this.m_mainAttributeModel.isMayDisplayText())
	{
		contentItems.put(oFF.FieldContainerDisplay.TEXT_AND_KEY.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_AND_KEY));
		contentItems.put(oFF.FieldContainerDisplay.KEY_AND_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.KEY_AND_TEXT));
	}
	return contentItems;
};
oFF.OuDd2DisplayTab.prototype.supportsMasterReadmode = function()
{
	var supportedReadModes = this.m_dimension.getSupportedReadModes(oFF.QContextType.RESULT_SET);
	if (oFF.notNull(supportedReadModes))
	{
		var readModes = supportedReadModes.getValuesAsReadOnlyList();
		for (var i = 0; i < readModes.size(); i++)
		{
			if (readModes.get(i).isTypeOf(oFF.QMemberReadMode.MASTER))
			{
				return true;
			}
		}
	}
	return false;
};
oFF.OuDd2DisplayTab.prototype.getSupportedTextTypes = function()
{
	var typeItems = oFF.XLinkedHashMapOfStringByString.create();
	if (!this.m_mainAttributeModel.isMayDisplayText())
	{
		return typeItems;
	}
	if (this.m_dimension.getFieldByPresentationType(oFF.PresentationType.SHORT_TEXT) !== null)
	{
		typeItems.put(oFF.PresentationType.SHORT_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_SHORT));
	}
	if (this.m_dimension.getFieldByPresentationType(oFF.PresentationType.MEDIUM_TEXT) !== null)
	{
		typeItems.put(oFF.PresentationType.MEDIUM_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_MEDIUM));
	}
	if (this.m_dimension.getFieldByPresentationType(oFF.PresentationType.LONG_TEXT) !== null)
	{
		typeItems.put(oFF.PresentationType.LONG_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_LONG));
	}
	if (this.m_dimension.getFieldByPresentationType(oFF.PresentationType.XL_LONG_TEXT) !== null)
	{
		typeItems.put(oFF.PresentationType.XL_LONG_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_XXL));
	}
	return typeItems;
};

oFF.OuDd2HierarchyTab = function() {};
oFF.OuDd2HierarchyTab.prototype = new oFF.OuDd2AbstractTab();
oFF.OuDd2HierarchyTab.prototype._ff_c = "OuDd2HierarchyTab";

oFF.OuDd2HierarchyTab.createTab = function(dimension, i18n)
{
	var obj = new oFF.OuDd2HierarchyTab();
	obj.setupTab(dimension, i18n);
	return obj;
};
oFF.OuDd2HierarchyTab.prototype.m_hierarchyTab = null;
oFF.OuDd2HierarchyTab.prototype.releaseObject = function()
{
	this.m_hierarchyTab = null;
	oFF.OuDd2AbstractTab.prototype.releaseObject.call( this );
};
oFF.OuDd2HierarchyTab.prototype.buildUi = function(genesis, parent)
{
	if (!this.m_dimension.supportsHierarchy())
	{
		return;
	}
	this.m_hierarchyTab = parent.addNewItem();
	this.m_hierarchyTab.setText(this.m_i18n.getText(oFF.OuDimensionDialog2I18n.HIERARCHIES));
	this.m_form = oFF.UiForm.create(genesis);
	var displayHierarchically = this.m_form.addCheckbox(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY, false, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY));
	displayHierarchically.setEditable(!this.m_dimension.isDisplayHierarchyFixInFilter());
	var valueHelp =  function(){
		var context = oFF.OlapUiContext.createContext(genesis.getUiManager(), oFF.OlapUiDisplayFactory.createFactoryForDialog(genesis.getUiManager()));
		var entryPoint = oFF.FdEntryPoint.createEntryPointForUiContext(context, "Select Hierarchy");
		var currentValue = this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.HIERARCHY).getValue().getStringRepresentation();
		entryPoint.getConfiguration().addSelectedItem(oFF.FdSimpleItem.create(currentValue, null, null));
		entryPoint.openWithDimensionHierarchies(this.m_dimension, this);
	}.bind(this);
	var hierarchyInput = this.m_form.addInput(oFF.OuDimensionDialog2I18n.HIERARCHY, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.HIERARCHY), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.ENTER_HIERARCHY_NAME), oFF.UiInputType.TEXT, valueHelp);
	hierarchyInput.setEditable(!this.m_dimension.isDisplayHierarchyFixInFilter());
	var nodeItems = oFF.XLinkedHashMapOfStringByString.create();
	nodeItems.put(oFF.XInteger.convertToString(-1), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.ALL_NODES));
	nodeItems.put(oFF.XInteger.convertToString(0), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.ONLY_ROOT_NODES));
	for (var i = 1; i < 10; i++)
	{
		var indexString = oFF.XInteger.convertToString(i);
		nodeItems.put(indexString, this.m_i18n.getTextWithPlaceholder(oFF.OuDimensionDialog2I18n.ROOT_AND_X_CHILD_LEVEL, indexString));
	}
	this.m_form.addDropdown(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW), nodeItems, false);
	var positionItems = oFF.XLinkedHashMapOfStringByString.create();
	positionItems.put(oFF.Alignment.CHILDREN_ABOVE_PARENT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.NODE_POSITION_ABOVE));
	positionItems.put(oFF.Alignment.CHILDREN_BELOW_PARENT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.NODE_POSITION_BELOW));
	this.m_form.addSegmentedButton(oFF.OuDimensionDialog2I18n.NODE_POSITION, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.NODE_POSITION), positionItems);
	this.m_form.addCheckbox(oFF.OuDimensionDialog2I18n.CONDENSE_NODES, false, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.CONDENSE_NODES));
	var view = this.m_form.getView();
	view.setPadding(oFF.UiCssBoxEdges.create("1rem"));
	this.m_hierarchyTab.setContent(view);
};
oFF.OuDd2HierarchyTab.prototype.loadState = function()
{
	if (oFF.isNull(this.m_form))
	{
		return;
	}
	var hierarchyActive = this.m_dimension.isHierarchyActive();
	var hierarchyName = this.m_dimension.getHierarchyName();
	var initialDrillLevel = this.m_dimension.getInitialDrillLevel();
	var lowerLevelNodeAlignment = this.m_dimension.getHierarchyManager().getLowerLevelNodeAlignment();
	var nodeCondensation = this.m_dimension.getHierarchyManager().hasNodeCondensation();
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY).setValue(oFF.XBooleanValue.create(hierarchyActive));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.HIERARCHY).setValue(oFF.XStringValue.create(hierarchyName));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW).setValue(oFF.XStringValue.create(oFF.XInteger.convertToString(initialDrillLevel)));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.NODE_POSITION).setValue(oFF.XStringValue.create(lowerLevelNodeAlignment.getName()));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.CONDENSE_NODES).setValue(oFF.XBooleanValue.create(nodeCondensation));
	this.m_startValues = oFF.PrUtils.createDeepCopy(this.m_form.getJsonModel()).asStructure();
};
oFF.OuDd2HierarchyTab.prototype.saveState = function()
{
	if (oFF.isNull(this.m_form))
	{
		return;
	}
	var jsonModel = this.m_form.getJsonModel();
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.HIERARCHY))
	{
		var hierarchyName = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.HIERARCHY);
		this.m_dimension.setHierarchyName(hierarchyName);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.NODES_TO_SHOW))
	{
		var drillLevel = oFF.XInteger.convertFromString(jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW));
		this.m_dimension.setInitialDrillLevel(drillLevel);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.NODE_POSITION))
	{
		var childPosition = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.NODE_POSITION);
		var alignment = oFF.Alignment.lookup(childPosition);
		this.m_dimension.getHierarchyManager().setLowerLevelNodeAlignment(alignment);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.CONDENSE_NODES))
	{
		var nodeCondensation = jsonModel.getBooleanByKey(oFF.OuDimensionDialog2I18n.CONDENSE_NODES);
		this.m_dimension.getHierarchyManager().setHasNodeCondensation(nodeCondensation);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY))
	{
		var hierarchyActive = jsonModel.getBooleanByKey(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY);
		this.m_dimension.setHierarchyActive(hierarchyActive);
	}
};
oFF.OuDd2HierarchyTab.prototype.getTabBarItem = function()
{
	return this.m_hierarchyTab;
};
oFF.OuDd2HierarchyTab.prototype.onFilterDialogOk = function(selection)
{
	var newValue = null;
	if (oFF.XCollectionUtils.hasElements(selection))
	{
		var hierarchy = selection.get(0);
		newValue = oFF.XStringValue.create(hierarchy.getName());
	}
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.HIERARCHY).setValue(newValue);
};
oFF.OuDd2HierarchyTab.prototype.onFilterDialogCancel = function() {};

oFF.OuDd2SortingTab = function() {};
oFF.OuDd2SortingTab.prototype = new oFF.OuDd2AbstractTab();
oFF.OuDd2SortingTab.prototype._ff_c = "OuDd2SortingTab";

oFF.OuDd2SortingTab.createTab = function(dimension, i18n)
{
	var obj = new oFF.OuDd2SortingTab();
	obj.setupTab(dimension, i18n);
	return obj;
};
oFF.OuDd2SortingTab.lookupDirection = function(name)
{
	if (oFF.XString.isEqual(name, oFF.XSortDirection.NONE.getName()))
	{
		return oFF.XSortDirection.NONE;
	}
	if (oFF.XString.isEqual(name, oFF.XSortDirection.ASCENDING.getName()))
	{
		return oFF.XSortDirection.ASCENDING;
	}
	if (oFF.XString.isEqual(name, oFF.XSortDirection.DESCENDING.getName()))
	{
		return oFF.XSortDirection.DESCENDING;
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Unknown sort direction ", name));
};
oFF.OuDd2SortingTab.prototype.m_sortingTab = null;
oFF.OuDd2SortingTab.prototype.releaseObject = function()
{
	this.m_sortingTab = null;
	oFF.OuDd2AbstractTab.prototype.releaseObject.call( this );
};
oFF.OuDd2SortingTab.prototype.buildUi = function(genesis, parent)
{
	var sortTypes = this.getSupportedSortTypes();
	if (sortTypes.isEmpty())
	{
		return;
	}
	this.m_sortingTab = parent.addNewItem();
	this.m_sortingTab.setText(this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORTING));
	this.m_form = oFF.UiForm.create(genesis);
	var directionItems = oFF.XLinkedHashMapOfStringByString.create();
	directionItems.put(oFF.XSortDirection.NONE.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_NONE));
	directionItems.put(oFF.XSortDirection.ASCENDING.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_ASCENDING));
	directionItems.put(oFF.XSortDirection.DESCENDING.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_DESCENDING));
	this.m_form.addDropdown(oFF.OuDimensionDialog2I18n.SORT_DIRECTION, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION), directionItems, false);
	this.m_form.addDropdown(oFF.OuDimensionDialog2I18n.SORT_BY, null, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_BY), sortTypes, false);
	var breakCb = this.m_form.addCheckbox(oFF.OuDimensionDialog2I18n.BREAK_GROUPING, false, this.m_i18n.getText(oFF.OuDimensionDialog2I18n.BREAK_GROUPING));
	breakCb.setVisible(this.m_dimension.getResultSetSorting().supportsBreakGrouping() && this.m_dimension.getResultSetSorting().supportsPreserveGrouping());
	var view = this.m_form.getView();
	view.setPadding(oFF.UiCssBoxEdges.create("1rem"));
	this.m_sortingTab.setContent(view);
};
oFF.OuDd2SortingTab.prototype.loadState = function()
{
	if (oFF.isNull(this.m_form))
	{
		return;
	}
	var sorting = this.m_dimension.getResultSetSorting();
	var direction = sorting.getDirection();
	var sortingType = sorting.getSortingType();
	var breakGroupingEnabled = sorting.isBreakGroupingEnabled();
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.SORT_DIRECTION).setValue(oFF.XStringValue.create(direction.getName()));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.SORT_BY).setValue(oFF.XStringValue.create(sortingType.getName()));
	this.m_form.getFormItemByKey(oFF.OuDimensionDialog2I18n.BREAK_GROUPING).setValue(oFF.XBooleanValue.create(breakGroupingEnabled));
	this.m_startValues = oFF.PrUtils.createDeepCopy(this.m_form.getJsonModel()).asStructure();
};
oFF.OuDd2SortingTab.prototype.saveState = function()
{
	if (oFF.isNull(this.m_form))
	{
		return;
	}
	var jsonModel = this.m_form.getJsonModel();
	var sorting = this.m_dimension.getResultSetSorting();
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.SORT_DIRECTION))
	{
		var directionSelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.SORT_DIRECTION);
		var sortDirection = oFF.OuDd2SortingTab.lookupDirection(directionSelection);
		sorting.setDirection(sortDirection);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.SORT_BY))
	{
		var sortBySelection = jsonModel.getStringByKey(oFF.OuDimensionDialog2I18n.SORT_BY);
		var sortType = oFF.SortType.lookup(sortBySelection);
		sorting.setSortType(sortType);
	}
	if (this.hasChanged(jsonModel, oFF.OuDimensionDialog2I18n.BREAK_GROUPING))
	{
		var breakGrouping = jsonModel.getBooleanByKey(oFF.OuDimensionDialog2I18n.BREAK_GROUPING);
		sorting.setBreakGrouping(breakGrouping);
	}
};
oFF.OuDd2SortingTab.prototype.getTabBarItem = function()
{
	return this.m_sortingTab;
};
oFF.OuDd2SortingTab.prototype.getSupportedSortTypes = function()
{
	var sortItems = oFF.XLinkedHashMapOfStringByString.create();
	if (this.m_dimension.supportsSorting(oFF.SortType.MEMBER_TEXT) && this.m_mainAttributeModel.isMayDisplayText())
	{
		sortItems.put(oFF.SortType.MEMBER_TEXT.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.TEXT));
	}
	if (this.m_dimension.supportsSorting(oFF.SortType.MEMBER_KEY))
	{
		sortItems.put(oFF.SortType.MEMBER_KEY.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.KEY));
	}
	if (this.m_dimension.supportsSorting(oFF.SortType.HIERARCHY))
	{
		sortItems.put(oFF.SortType.HIERARCHY.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_BY_HIERARCHY));
	}
	if (this.m_dimension.supportsSorting(oFF.SortType.FILTER))
	{
		sortItems.put(oFF.SortType.FILTER.getName(), this.m_i18n.getText(oFF.OuDimensionDialog2I18n.SORT_BY_FILTER));
	}
	return sortItems;
};

oFF.FdEvents = function() {};
oFF.FdEvents.prototype = new oFF.XObject();
oFF.FdEvents.prototype._ff_c = "FdEvents";

oFF.FdEvents.create = function()
{
	return new oFF.FdEvents();
};
oFF.FdEvents.prototype.m_selectionChangeListeners = null;
oFF.FdEvents.prototype.m_displayChangeListeners = null;
oFF.FdEvents.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_selectionChangeListeners = oFF.XObjectExt.release(this.m_selectionChangeListeners);
};
oFF.FdEvents.prototype.registerOnSelectionChange = function(listener)
{
	if (oFF.isNull(listener) || oFF.notNull(this.m_selectionChangeListeners) && this.m_selectionChangeListeners.contains(listener))
	{
		return;
	}
	if (oFF.isNull(this.m_selectionChangeListeners))
	{
		this.m_selectionChangeListeners = oFF.XList.create();
	}
	this.m_selectionChangeListeners.add(listener);
};
oFF.FdEvents.prototype.triggerOnSelectionChange = function(model)
{
	oFF.XCollectionUtils.forEach(this.m_selectionChangeListeners,  function(listener){
		listener.onSelectionChange(model.getSelectedItems());
	}.bind(this));
};
oFF.FdEvents.prototype.registerOnDisplayChange = function(listener)
{
	if (oFF.isNull(listener) || oFF.notNull(this.m_displayChangeListeners) && this.m_displayChangeListeners.contains(listener))
	{
		return;
	}
	if (oFF.isNull(this.m_displayChangeListeners))
	{
		this.m_displayChangeListeners = oFF.XList.create();
	}
	this.m_displayChangeListeners.add(listener);
};
oFF.FdEvents.prototype.triggerOnDisplayChange = function(requestObjectName, model)
{
	if (oFF.XCollectionUtils.hasElements(this.m_displayChangeListeners))
	{
		var mainPresentation = model.getSelectedMainPresentation();
		var showKey = mainPresentation.getKeyPresentation() !== null;
		var showText = mainPresentation.getTextPresentation() !== null;
		var displayInfo = showKey && showText ? oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION : (showKey ? oFF.FdDimensionDisplayInfo.ID : oFF.FdDimensionDisplayInfo.DESCRIPTION);
		var additionalAttributes = oFF.XCollectionUtils.createListOfNames(model.getSelectedAdditionalPresentations());
		oFF.XCollectionUtils.forEach(this.m_displayChangeListeners,  function(listener){
			listener.onDisplayChange(requestObjectName, displayInfo, additionalAttributes);
		}.bind(this));
	}
};

oFF.FdContentProviderHierarchyCatalog = function() {};
oFF.FdContentProviderHierarchyCatalog.prototype = new oFF.XObject();
oFF.FdContentProviderHierarchyCatalog.prototype._ff_c = "FdContentProviderHierarchyCatalog";

oFF.FdContentProviderHierarchyCatalog.VERSION = "version";
oFF.FdContentProviderHierarchyCatalog.OBJECT_VERSION = "objectVersion";
oFF.FdContentProviderHierarchyCatalog.DATE_FROM = "dateFrom";
oFF.FdContentProviderHierarchyCatalog.DATE_TO = "dateTo";
oFF.FdContentProviderHierarchyCatalog.createForHierarchy = function(dimension)
{
	var obj = new oFF.FdContentProviderHierarchyCatalog();
	obj.setupExt(dimension);
	return obj;
};
oFF.FdContentProviderHierarchyCatalog.prototype.m_dimension = null;
oFF.FdContentProviderHierarchyCatalog.prototype.m_catalogManager = null;
oFF.FdContentProviderHierarchyCatalog.prototype.m_allItems = null;
oFF.FdContentProviderHierarchyCatalog.prototype.m_searchPattern = null;
oFF.FdContentProviderHierarchyCatalog.prototype.m_searchPresentations = null;
oFF.FdContentProviderHierarchyCatalog.prototype.setupExt = function(dimension)
{
	this.m_dimension = dimension;
	this.m_searchPresentations = oFF.XList.create();
};
oFF.FdContentProviderHierarchyCatalog.prototype.releaseObject = function()
{
	this.m_catalogManager = oFF.XObjectExt.release(this.m_catalogManager);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.FdContentProviderHierarchyCatalog.prototype.setupModel = function(model) {};
oFF.FdContentProviderHierarchyCatalog.prototype.closeWithSelectedContent = function(selection, model, listener)
{
	if (oFF.notNull(listener))
	{
		listener.onFilterDialogOk(selection);
	}
};
oFF.FdContentProviderHierarchyCatalog.prototype.changeHierarchy = function(hierarchyName) {};
oFF.FdContentProviderHierarchyCatalog.prototype.processData = function(startPage, endPage, presentations, listener, customIdentifier)
{
	this.m_searchPattern = null;
	this.m_searchPresentations.clear();
	this.getCatalogResult(oFF.OlapUiValueHelpAbstract.s_syncType,  function(result){
		this.m_allItems = this.mapValueHelpResult(result.getObjects());
		listener.onProcessFinished(this.m_allItems, 0, customIdentifier);
	}.bind(this),  function(errorResult){
		listener.onError(errorResult, customIdentifier);
	}.bind(this));
};
oFF.FdContentProviderHierarchyCatalog.prototype.processDataRange = function(listener, customIdentifier)
{
	listener.onProcessFinished(null, 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.processFetchHierarchyNames = function(listener, fetchNonBlocking, sessionData, contentType)
{
	if (contentType === oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP && this.m_dimension.getHierarchyKeyField() !== null && !this.m_dimension.getHierarchyKeyField().isFilterable())
	{
		listener(oFF.XListOfString.create());
	}
	var hierarchiesInSession = sessionData.getHierarchies();
	if (oFF.notNull(hierarchiesInSession) && oFF.XObjectExt.areEqual(sessionData.getHierarchiesDueDate(), this.getHierarchyDate()))
	{
		listener(hierarchiesInSession);
		return;
	}
	this.m_searchPattern = null;
	this.m_searchPresentations.clear();
	var syncType = fetchNonBlocking ? oFF.SyncType.NON_BLOCKING : oFF.OlapUiValueHelpAbstract.s_syncType;
	this.getCatalogResult(syncType,  function(result){
		var hierarchies = this.mapValueHelpResultToHierarchyNames(result);
		sessionData.setHierarchies(hierarchies, this.m_catalogManager.getFilterHierarchyDate());
		listener(hierarchies);
	}.bind(this),  function(errorResult){
		listener(oFF.XListOfString.create());
	}.bind(this));
};
oFF.FdContentProviderHierarchyCatalog.prototype.mapValueHelpResultToHierarchyNames = function(result)
{
	return oFF.XStream.of(result.getObjects()).filter( function(catalogItem1){
		return oFF.notNull(catalogItem1) && oFF.XStringUtils.isNotNullAndNotEmpty(catalogItem1.getHierarchyName());
	}.bind(this)).collect(oFF.XStreamCollector.toListOfString( function(catalogItem2){
		return catalogItem2.getHierarchyName();
	}.bind(this)));
};
oFF.FdContentProviderHierarchyCatalog.prototype.search = function(searchPattern, searchPresentations, presentations, loadParentNodes, listener, customIdentifier)
{
	this.m_searchPattern = searchPattern;
	this.m_searchPresentations.addAll(searchPresentations);
	this.getCatalogResult(oFF.OlapUiValueHelpAbstract.s_syncType,  function(result){
		var found = this.mapValueHelpResult(result.getObjects());
		listener.onProcessFinished(found, 0, customIdentifier);
	}.bind(this),  function(errorResult){
		listener.onError(errorResult, customIdentifier);
	}.bind(this));
};
oFF.FdContentProviderHierarchyCatalog.prototype.fetchChildren = function(node, offset, amount, presentations, listener, customIdentifier)
{
	listener.onProcessFinished(oFF.XList.create(), 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.loadMissingPresentations = function(items, missingPresentations, listener, customIdentifier)
{
	listener.onProcessFinished(items, 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.getPresentationByDisplayInfo = function(presentations, displayInfo)
{
	return oFF.FdPresentationUtils.mapDisplayInfoToPresentation(displayInfo, this.m_dimension, presentations);
};
oFF.FdContentProviderHierarchyCatalog.prototype.fetchValueHelpFunctions = function(listener, customIdentifier)
{
	listener.onProcessFinished(oFF.XList.create(), 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.preloadNextPages = function(startPage, presentations, listener, customIdentifier)
{
	listener.onProcessFinished(this.m_allItems, 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.syncSelectionListWithKnownItems = function(selectionList, knownItems, presentations, removeUnknownValues, populateErrors, listener, customIdentifier)
{
	if (oFF.isNull(selectionList))
	{
		listener.onProcessFinished(selectionList, 0, customIdentifier);
		return;
	}
	for (var i = 0; i < selectionList.size(); i++)
	{
		var selected = selectionList.get(i);
		var optional = oFF.XStream.of(this.m_allItems).find( function(known){
			return oFF.XString.isEqual(known.getKey(), selected.getKey());
		}.bind(this));
		if (optional.isPresent())
		{
			selectionList.set(i, optional.get());
		}
	}
	listener.onProcessFinished(selectionList, 0, customIdentifier);
};
oFF.FdContentProviderHierarchyCatalog.prototype.getReadMode = function()
{
	return null;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getQueryDefaultReadMode = function()
{
	return null;
};
oFF.FdContentProviderHierarchyCatalog.prototype.setReadMode = function(readMode) {};
oFF.FdContentProviderHierarchyCatalog.prototype.isHierarchical = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getHierarchyName = function()
{
	return null;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getMainPresentations = function(localization)
{
	var descText = localization.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION);
	var idText = localization.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID);
	var presentations = oFF.XList.create();
	presentations.add(oFF.FdPresentation.create(descText).addTextPresentation(descText, null, false));
	presentations.add(oFF.FdPresentation.create(localization.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID_AND_DESCRIPTION)).addKeyPresentation(idText, null, true).addTextPresentation(descText, null, false));
	presentations.add(oFF.FdPresentation.create(idText).addKeyPresentation(idText, null, true));
	return presentations;
};
oFF.FdContentProviderHierarchyCatalog.prototype.supportsAdditionalPresentations = function()
{
	return true;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getAdditionalPresentations = function(localization)
{
	var textId = localization.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID);
	var textDescription = localization.getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION);
	var presentations = oFF.XList.create();
	var versionIdentifier = oFF.XStringValue.create(oFF.FdContentProviderHierarchyCatalog.VERSION);
	var versionText = localization.getText(oFF.FilterDialogI18n.I18N_FD_HIER_VERSION);
	var versionPresentation = oFF.FdPresentation.create(versionText);
	versionPresentation.addKeyPresentation(oFF.XStringUtils.concatenate4(versionText, " (", textId, ")"), versionIdentifier, true);
	versionPresentation.addTextPresentation(oFF.XStringUtils.concatenate4(versionText, " (", textDescription, ")"), versionIdentifier, false);
	presentations.add(versionPresentation);
	var objectVersionIdentifier = oFF.XStringValue.create(oFF.FdContentProviderHierarchyCatalog.OBJECT_VERSION);
	var objectVersionText = localization.getText(oFF.FilterDialogI18n.I18N_FD_HIER_OBJECT_VERSION);
	var objectVersionPresentation = oFF.FdPresentation.create(objectVersionText);
	objectVersionPresentation.addKeyPresentation(oFF.XStringUtils.concatenate4(objectVersionText, " (", textId, ")"), objectVersionIdentifier, true);
	presentations.add(objectVersionPresentation);
	var dateFromIdentifier = oFF.XStringValue.create(oFF.FdContentProviderHierarchyCatalog.DATE_FROM);
	var dateFromText = localization.getText(oFF.FilterDialogI18n.I18N_FD_HIER_DATE_FROM);
	var dateFromPresentation = oFF.FdPresentation.create(dateFromText);
	dateFromPresentation.addKeyPresentation(dateFromText, dateFromIdentifier, false);
	presentations.add(dateFromPresentation);
	var dateToIdentifier = oFF.XStringValue.create(oFF.FdContentProviderHierarchyCatalog.DATE_FROM);
	var dateToText = localization.getText(oFF.FilterDialogI18n.I18N_FD_HIER_DATE_TO);
	var dateToPresentation = oFF.FdPresentation.create(dateToText);
	dateToPresentation.addKeyPresentation(dateToText, dateToIdentifier, false);
	presentations.add(dateToPresentation);
	return presentations;
};
oFF.FdContentProviderHierarchyCatalog.prototype.supportsFunctionalValueHelp = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getMissingPresentations = function(items, presentations)
{
	return null;
};
oFF.FdContentProviderHierarchyCatalog.prototype.supportsReadModeSwitch = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.supportsMasterAndBookedReadModes = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.supportsQueryDefaultReadMode = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.isSystemTypeHana = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.isSystemTypeBw = function()
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getSessionData = function()
{
	return null;
};
oFF.FdContentProviderHierarchyCatalog.prototype.isMissingValueForMandatoryVariableError = function(errorCode)
{
	return false;
};
oFF.FdContentProviderHierarchyCatalog.prototype.setDefaultDrillLevelEnabled = function(defaultEnabled) {};
oFF.FdContentProviderHierarchyCatalog.prototype.getCatalogResult = function(syncType, callback, onError)
{
	if (!oFF.HierarchyCatalogUtil.supportsHierarchyCatalog2(this.m_dimension.getApplication(), this.m_dimension.getQueryModel().getSystemDescription()))
	{
		callback(this.m_dimension.getHierarchies());
		return;
	}
	if (oFF.isNull(this.m_catalogManager))
	{
		var serviceConfig = oFF.OlapApiModule.SERVICE_TYPE_HIERARCHY_CATALOG.createServiceConfig(this.m_dimension.getApplication());
		serviceConfig.setSystemName(this.m_dimension.getQueryModel().getSystemName());
		var dataSource = this.m_dimension.getQueryModel().getDataSource().getFullQualifiedName();
		serviceConfig.setDataSourceName(dataSource);
		serviceConfig.setDimension(this.m_dimension);
		serviceConfig.processHierarchyCatalogManagerCreation(syncType, oFF.HierarchyCatalogCallbackLambda.createForCreation( function(createResult){
			if (createResult.hasErrors() || createResult.getData() === null)
			{
				onError(createResult);
				return;
			}
			this.m_catalogManager = createResult.getData();
			this.getCatalogResult(syncType, callback, onError);
		}.bind(this)), null);
	}
	else
	{
		this.resetManager();
		this.configureSearch();
		var hierarchyDate = this.getHierarchyDate();
		this.m_catalogManager.setFilterHierarchyDate(hierarchyDate, oFF.notNull(hierarchyDate));
		this.m_catalogManager.processGetResult(syncType, oFF.HierarchyCatalogCallbackLambda.createForResult( function(result){
			if (result.hasErrors())
			{
				onError(result);
			}
			callback(result.getData());
		}.bind(this)), null);
	}
};
oFF.FdContentProviderHierarchyCatalog.prototype.resetManager = function()
{
	this.m_catalogManager.setFilterHierarchyName(null, false);
	this.m_catalogManager.setFilterHierarchyObjectVersion(null, false);
	this.m_catalogManager.setFilterVersionName(null, false);
};
oFF.FdContentProviderHierarchyCatalog.prototype.configureSearch = function()
{
	var wildcard = oFF.XStringUtils.concatenate3("*", this.m_searchPattern, "*");
	for (var i = 0; i < this.m_searchPresentations.size(); i++)
	{
		var presentation = this.m_searchPresentations.get(i);
		if (presentation.getCustomObject() !== null)
		{
			var additional = presentation.getCustomObject().toString();
			switch (additional)
			{
				case oFF.FdContentProviderHierarchyCatalog.VERSION:
					this.m_catalogManager.setFilterVersionNameWithOperator(wildcard, oFF.ComparisonOperator.MATCH);
					break;

				case oFF.FdContentProviderHierarchyCatalog.OBJECT_VERSION:
					this.m_catalogManager.setFilterHierarchyObjectVersionWithOperator(wildcard, oFF.ComparisonOperator.MATCH);
					break;
			}
		}
		else if (presentation.isKey())
		{
			this.m_catalogManager.setFilterHierarchyNameWithOperator(wildcard, oFF.ComparisonOperator.MATCH);
		}
	}
};
oFF.FdContentProviderHierarchyCatalog.prototype.getHierarchyDate = function()
{
	var hierarchy = this.m_dimension.getHierarchy();
	var hierarchyDate = oFF.notNull(hierarchy) ? hierarchy.getHierarchyDueDate() : null;
	if (oFF.isNull(hierarchyDate))
	{
		var dateTime = this.m_dimension.getQueryModel().getCubeInfo().getDueDate();
		hierarchyDate = oFF.notNull(dateTime) ? dateTime.getDate() : null;
	}
	return hierarchyDate;
};
oFF.FdContentProviderHierarchyCatalog.prototype.mapValueHelpResult = function(items)
{
	var result = oFF.XList.create();
	for (var i = 0; i < items.size(); i++)
	{
		var item = items.get(i);
		result.add(oFF.FdHierarchyCatalogItem.createHierarchyCatalogItem(item));
	}
	return result;
};
oFF.FdContentProviderHierarchyCatalog.prototype.getSupportedFilterTypes = function(filterTypes)
{
	return oFF.XCollectionUtils.singletonList(oFF.FdFilterType.LIST);
};
oFF.FdContentProviderHierarchyCatalog.prototype.getSupportedComparisonOperators = function()
{
	return oFF.XCollectionUtils.singletonList(oFF.FdComparisonOperator.EQUAL);
};
oFF.FdContentProviderHierarchyCatalog.prototype.getInputValueType = function()
{
	return oFF.XValueType.STRING;
};

oFF.FdContentProviderMeasureBasedFilter = function() {};
oFF.FdContentProviderMeasureBasedFilter.prototype = new oFF.XObject();
oFF.FdContentProviderMeasureBasedFilter.prototype._ff_c = "FdContentProviderMeasureBasedFilter";

oFF.FdContentProviderMeasureBasedFilter.s_enforceCrossCalculationMeasureSelection = false;
oFF.FdContentProviderMeasureBasedFilter.create = function(measureBasedFilter, member)
{
	var contentProvider = new oFF.FdContentProviderMeasureBasedFilter();
	contentProvider.setupContentProvider(measureBasedFilter, member);
	return contentProvider;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.m_measureBasedFilter = null;
oFF.FdContentProviderMeasureBasedFilter.prototype.m_memberName = null;
oFF.FdContentProviderMeasureBasedFilter.prototype.m_model = null;
oFF.FdContentProviderMeasureBasedFilter.prototype.setupContentProvider = function(measureBasedFilter, member)
{
	this.m_measureBasedFilter = measureBasedFilter;
	this.m_memberName = oFF.notNull(member) ? member.getName() : oFF.DialogMBFParser.getMemberName(measureBasedFilter);
};
oFF.FdContentProviderMeasureBasedFilter.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_measureBasedFilter = null;
	this.m_memberName = null;
	this.m_model = null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.setupModel = function(model)
{
	this.m_model = model;
	var rangeModel = model.getRangeModel();
	model.changeSelection(oFF.DialogMBFParser.getFilterRangesByMemberName(this.m_measureBasedFilter, this.m_memberName), model.getSelectedItems());
	var queryModel = this.m_measureBasedFilter.getQueryModel();
	var dimensions = queryModel.getDimensions();
	rangeModel.setAvailableDimContextValues(oFF.XStream.of(dimensions).filter( function(dimension){
		return dimension.getDimensionType() === oFF.DimensionType.DIMENSION && !dimension.isUniversalDisplayHierarchyDimension();
	}.bind(this)).sorted(oFF.FdDimensionsByTextComparator.create()).collect(oFF.XStreamCollectorImpl.create( function(){
		return oFF.XList.create();
	}.bind(this),  function(dimList, dim){
		dimList.add(oFF.XNameValuePair.create(dim.getName(), dim.getText()));
		return dimList;
	}.bind(this))));
	rangeModel.setDimContext(this.m_measureBasedFilter.getDimensionContext().createListOfStringCopy());
	if (this.needsMeasureSelection(queryModel))
	{
		var measureMembers = queryModel.getMeasureDimension().getAllStructureMembers();
		if (oFF.XCollectionUtils.hasElements(measureMembers))
		{
			rangeModel.setAvailableMeasureContextValues(oFF.XStream.of(measureMembers).collect(oFF.XStreamCollectorImpl.create( function(){
				return oFF.XList.create();
			}.bind(this),  function(measureList, measureMember){
				measureList.add(oFF.XNameValuePair.create(measureMember.getName(), measureMember.getText()));
				return measureList;
			}.bind(this))));
			rangeModel.setMeasureContext(this.m_measureBasedFilter.getCrossCalculationMeasure() !== null ? this.m_measureBasedFilter.getCrossCalculationMeasure() : measureMembers.get(0).getName());
		}
	}
};
oFF.FdContentProviderMeasureBasedFilter.prototype.needsMeasureSelection = function(queryModel)
{
	if (queryModel.isUniversalAccountModel() || oFF.FdContentProviderMeasureBasedFilter.s_enforceCrossCalculationMeasureSelection)
	{
		return true;
	}
	var accountDimension = queryModel.getAccountDimension();
	return oFF.notNull(accountDimension) && accountDimension.getDimensionMember(this.m_memberName) !== null && queryModel.getMeasureDimension().getAllStructureMembers().size() > 1;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.closeWithSelectedContent = function(selection, model, listener)
{
	this.m_measureBasedFilter.queueEventing();
	this.m_measureBasedFilter.clearDimensionContext();
	var rangeModel = model.getRangeModel();
	oFF.XCollectionUtils.forEachString(rangeModel.getDimContext(),  function(dimContext){
		this.m_measureBasedFilter.addDimensionContext(dimContext);
	}.bind(this));
	var measureContext = rangeModel.getMeasureContext();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(measureContext))
	{
		this.m_measureBasedFilter.setCrossCalculationMeasure(measureContext);
	}
	this.m_measureBasedFilter.setFormula(this.createFormula(selection));
	this.m_measureBasedFilter.resumeEventing();
	if (oFF.notNull(listener))
	{
		listener.onMeasureBasedFilterOk(this.m_measureBasedFilter, this.m_memberName);
	}
};
oFF.FdContentProviderMeasureBasedFilter.prototype.createFormula = function(selection)
{
	if (!oFF.XCollectionUtils.hasElements(selection))
	{
		return null;
	}
	var functionIf = oFF.QFactory.createFormulaFunctionWithName(this.m_measureBasedFilter, oFF.FormulaOperator.IF.getName());
	var prevFuntionIf = null;
	var root = functionIf;
	for (var i = 0; i < selection.size(); i++)
	{
		var item = selection.get(i);
		if (item.isNull() || item.getLow().getKey() === null)
		{
			continue;
		}
		var operator = item.getComparisonOperator();
		var formulaOperator = operator.getFormulaOperator();
		var isBetweenOperator = operator === oFF.FdComparisonOperator.BETWEEN;
		var functionCondition;
		if (isBetweenOperator || operator === oFF.FdComparisonOperator.NOT_BETWEEN)
		{
			if (item.getHigh().getKey() === null)
			{
				continue;
			}
			functionCondition = oFF.QFactory.createFormulaFunctionWithName(this.m_measureBasedFilter, formulaOperator.getName());
			functionCondition.add(this.createFormulaItemFunction(isBetweenOperator ? oFF.FormulaOperator.GE : oFF.FormulaOperator.LT, item.getLow().getKey()));
			functionCondition.add(this.createFormulaItemFunction(isBetweenOperator ? oFF.FormulaOperator.LE : oFF.FormulaOperator.GT, item.getHigh().getKey()));
		}
		else
		{
			functionCondition = this.createFormulaItemFunction(formulaOperator, item.getLow().getKey());
		}
		functionIf.add(functionCondition);
		functionIf.add(oFF.QFactory.createFormulaConstantWithIntValue(this.m_measureBasedFilter, 1));
		if (i === selection.size() - 1)
		{
			functionIf.add(oFF.QFactory.createFormulaConstantWithIntValue(this.m_measureBasedFilter, 0));
		}
		else
		{
			prevFuntionIf = functionIf;
			functionIf = oFF.QFactory.createFormulaFunctionWithName(this.m_measureBasedFilter, oFF.FormulaOperator.IF.getName());
			prevFuntionIf.add(functionIf);
		}
	}
	if (functionIf.isEmpty())
	{
		if (functionIf === root)
		{
			return null;
		}
		prevFuntionIf.removeAt(2);
		prevFuntionIf.add(oFF.QFactory.createFormulaConstantWithIntValue(this.m_measureBasedFilter, 0));
	}
	return root;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.createFormulaItemFunction = function(operator, constantValue)
{
	var fif = oFF.QFactory.createFormulaFunctionWithName(this.m_measureBasedFilter, operator.getName());
	fif.add(oFF.QFactory.createFormulaMemberWithName(this.m_measureBasedFilter, this.m_memberName));
	var value = oFF.QFactory.createFormulaFunctionWithName(this.m_measureBasedFilter, oFF.FormulaOperator.DECFLOAT.getName());
	value.add(oFF.QFactory.createFormulaConstantWithStringValue(this.m_measureBasedFilter, constantValue));
	fif.add(value);
	return fif;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getSupportedFilterTypes = function(filterTypes)
{
	return oFF.XCollectionUtils.singletonList(oFF.FdFilterType.MEASURE_BASED_FILTER);
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getSupportedComparisonOperators = function()
{
	return oFF.FdComparisonOperator.getAllOperators(false, oFF.notNull(this.m_model) && this.m_model.isFeatureEnabled(oFF.FdFeature.EQUAL_IN_RANGE_VIEW));
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getInputValueType = function()
{
	return oFF.XValueType.DECIMAL_FLOAT;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.fetchChildren = function(node, offset, amount, presentations, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.processData = function(startPage, endPage, presentations, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.processDataRange = function(listener, customIdentifier)
{
	listener.onProcessFinished(null, 0, customIdentifier);
};
oFF.FdContentProviderMeasureBasedFilter.prototype.search = function(searchPattern, searchPresentations, presentations, loadParentNodes, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.preloadNextPages = function(startPage, presentations, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.syncSelectionListWithKnownItems = function(selectionList, knownItems, presentations, removeUnknownValues, populateErrors, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.supportsAdditionalPresentations = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getMainPresentations = function(localization)
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getAdditionalPresentations = function(localization)
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getMissingPresentations = function(items, presentations)
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.loadMissingPresentations = function(items, missingPresentations, listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.getPresentationByDisplayInfo = function(presentations, displayInfo)
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.supportsFunctionalValueHelp = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.fetchValueHelpFunctions = function(listener, customIdentifier) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.isHierarchical = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getHierarchyName = function()
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.changeHierarchy = function(hierarchyName) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.supportsMasterAndBookedReadModes = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.isSystemTypeHana = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.isSystemTypeBw = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.isMissingValueForMandatoryVariableError = function(errorCode)
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getSessionData = function()
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.setDefaultDrillLevelEnabled = function(defaultEnabled) {};
oFF.FdContentProviderMeasureBasedFilter.prototype.supportsReadModeSwitch = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.supportsQueryDefaultReadMode = function()
{
	return false;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getQueryDefaultReadMode = function()
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.getReadMode = function()
{
	return null;
};
oFF.FdContentProviderMeasureBasedFilter.prototype.setReadMode = function(readMode) {};

oFF.FdContentProviderValueHelp = function() {};
oFF.FdContentProviderValueHelp.prototype = new oFF.XObject();
oFF.FdContentProviderValueHelp.prototype._ff_c = "FdContentProviderValueHelp";

oFF.FdContentProviderValueHelp.VALUE_HELP = "ValueHelp";
oFF.FdContentProviderValueHelp.VALUE_HELP_RANGE = "ValueHelpRange";
oFF.FdContentProviderValueHelp.VALUE_HELP_SEARCH = "ValueHelpSearch";
oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_CHILDREN = "ValueHelpLoadChildren";
oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_UNKNOWN_SELECTED_ITEMS = "ValueHelpLoadUnknownSelectedItems";
oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_ATTRIBUTES = "ValueHelpLoadPresentations";
oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_FUNCTIONS = "ValueHelpLoadFunctions";
oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_REMOVE_UNKNOWN = "ParamValueHelpRemoveUnknown";
oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_SHOW_ERRORS = "ParamValueHelpShowErrors";
oFF.FdContentProviderValueHelp.create = function(requestObject, contentType, configuration, readModeSwitchVisible)
{
	var contentProviderValueHelp = new oFF.FdContentProviderValueHelp();
	contentProviderValueHelp.setupValueHelp(requestObject, contentType, configuration, readModeSwitchVisible);
	return contentProviderValueHelp;
};
oFF.FdContentProviderValueHelp.prototype.m_model = null;
oFF.FdContentProviderValueHelp.prototype.m_requestObject = null;
oFF.FdContentProviderValueHelp.prototype.m_contentType = null;
oFF.FdContentProviderValueHelp.prototype.m_configuration = null;
oFF.FdContentProviderValueHelp.prototype.m_valueHelpProcessor = null;
oFF.FdContentProviderValueHelp.prototype.m_sessionData = null;
oFF.FdContentProviderValueHelp.prototype.m_allDataLoaded = false;
oFF.FdContentProviderValueHelp.prototype.m_readMode = null;
oFF.FdContentProviderValueHelp.prototype.m_queryDefaultReadMode = null;
oFF.FdContentProviderValueHelp.prototype.m_supportsQueryDefaultReadMode = false;
oFF.FdContentProviderValueHelp.prototype.m_isPreloading = false;
oFF.FdContentProviderValueHelp.prototype.m_supportsReadModeSwitch = false;
oFF.FdContentProviderValueHelp.prototype.releaseObject = function()
{
	this.m_model = null;
	this.m_requestObject = null;
	this.m_contentType = null;
	this.m_valueHelpProcessor = this.m_configuration.getExternalValueHelpProcess() !== this.m_valueHelpProcessor ? oFF.XObjectExt.release(this.m_valueHelpProcessor) : null;
	this.m_configuration = null;
	this.m_sessionData = oFF.XObjectExt.release(this.m_sessionData);
	this.m_readMode = null;
	this.m_queryDefaultReadMode = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.FdContentProviderValueHelp.prototype.setupValueHelp = function(requestObject, contentType, configuration, readModeSwitchVisible)
{
	this.m_requestObject = requestObject;
	this.m_contentType = contentType;
	this.m_configuration = configuration;
	this.m_sessionData = oFF.FdSessionBasedSettings.createByQuery(this.getDimension().getQueryManager(), contentType, requestObject);
	this.m_valueHelpProcessor = configuration.getExternalValueHelpProcess();
	if (oFF.isNull(this.m_valueHelpProcessor))
	{
		this.m_valueHelpProcessor = this.createValueHelpProcessor(requestObject);
	}
	if (contentType === oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP && oFF.XCollectionUtils.hasElements(configuration.getSelection()))
	{
		this.changeHierarchy(configuration.getSelection().get(0).getHierarchyName());
	}
	this.m_readMode = oFF.OlapUiReadMode.BOOKED;
	this.m_queryDefaultReadMode = oFF.OlapUiReadMode.BOOKED;
	var dimension = this.getDimension();
	var systemType = this.getSystemType(dimension);
	if (oFF.notNull(systemType))
	{
		var contextType = this.getContextType(systemType);
		var dfReadMode = dimension.getReadModeDefault(contextType);
		this.m_queryDefaultReadMode = oFF.notNull(dfReadMode) && dfReadMode.isTypeOf(oFF.QMemberReadMode.MASTER) ? oFF.OlapUiReadMode.MASTER : oFF.OlapUiReadMode.BOOKED;
		this.m_supportsQueryDefaultReadMode = oFF.notNull(dfReadMode) && this.m_contentType.isDimensionMemberValueHelp() && systemType.isTypeOf(oFF.SystemType.ABAP);
		var isHierarchyNameVar = this.m_contentType.isVariableValueHelp() && this.m_requestObject.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NAME_VARIABLE);
		this.m_supportsReadModeSwitch = readModeSwitchVisible && !isHierarchyNameVar && !systemType.isTypeOf(oFF.SystemType.UNV) && !systemType.isTypeOf(oFF.SystemType.UQAS);
		var preferredReadMode = this.m_supportsReadModeSwitch ? this.m_sessionData.getReadMode() !== null ? this.m_sessionData.getReadMode() : oFF.OlapUiReadMode.QUERY_DEFAULT : null;
		if (preferredReadMode !== oFF.OlapUiReadMode.BOOKED || !this.supportsReadMode(contextType, oFF.QMemberReadMode.BOOKED))
		{
			if (this.supportsReadMode(contextType, oFF.QMemberReadMode.MASTER))
			{
				if (preferredReadMode === oFF.OlapUiReadMode.MASTER || (systemType.isTypeOf(oFF.SystemType.HANA) && this.m_contentType.isVariableValueHelp()))
				{
					this.m_readMode = oFF.OlapUiReadMode.MASTER;
				}
				else if (preferredReadMode === oFF.OlapUiReadMode.QUERY_DEFAULT && this.m_supportsQueryDefaultReadMode)
				{
					this.m_readMode = oFF.OlapUiReadMode.QUERY_DEFAULT;
				}
				else if (preferredReadMode === oFF.OlapUiReadMode.QUERY_DEFAULT && (oFF.notNull(dfReadMode) && dfReadMode.isTypeOf(oFF.QMemberReadMode.MASTER) || !this.supportsReadMode(contextType, oFF.QMemberReadMode.BOOKED)))
				{
					this.m_readMode = oFF.OlapUiReadMode.MASTER;
				}
			}
		}
		this.updateIgnoreQueryDynamicFilterInValueHelp();
	}
};
oFF.FdContentProviderValueHelp.prototype.setupModel = function(model)
{
	this.m_model = model;
};
oFF.FdContentProviderValueHelp.prototype.closeWithSelectedContent = function(selection, model, listener)
{
	if (oFF.notNull(listener))
	{
		listener.onFilterDialogOk(selection);
	}
};
oFF.FdContentProviderValueHelp.prototype.getReadMode = function()
{
	return this.m_readMode;
};
oFF.FdContentProviderValueHelp.prototype.getQueryDefaultReadMode = function()
{
	return this.m_queryDefaultReadMode;
};
oFF.FdContentProviderValueHelp.prototype.setReadMode = function(readMode)
{
	if (this.m_readMode !== readMode)
	{
		this.m_readMode = readMode;
		this.m_sessionData.setReadMode(readMode);
		this.updateIgnoreQueryDynamicFilterInValueHelp();
	}
};
oFF.FdContentProviderValueHelp.prototype.supportsQueryDefaultReadMode = function()
{
	return this.m_supportsQueryDefaultReadMode;
};
oFF.FdContentProviderValueHelp.prototype.updateIgnoreQueryDynamicFilterInValueHelp = function()
{
	var dimension = this.getDimension();
	var systemType = this.getSystemType(dimension);
	if (this.m_contentType.isDimensionMemberValueHelp() && oFF.notNull(systemType) && systemType.isTypeOf(oFF.SystemType.ABAP))
	{
		dimension.getQueryModel().setIgnoreQueryDynamicFilterInValueHelp(this.m_readMode !== oFF.OlapUiReadMode.QUERY_DEFAULT);
	}
};
oFF.FdContentProviderValueHelp.prototype.getDimension = function()
{
	return this.m_contentType.isVariableValueHelp() ? this.m_requestObject.getDimension() : this.m_requestObject;
};
oFF.FdContentProviderValueHelp.prototype.changeHierarchy = function(hierarchyName)
{
	this.m_valueHelpProcessor.setHierarchyName(hierarchyName);
};
oFF.FdContentProviderValueHelp.prototype.isHierarchical = function()
{
	return this.m_valueHelpProcessor.isHierarchicalValueHelp();
};
oFF.FdContentProviderValueHelp.prototype.getHierarchyName = function()
{
	return this.m_valueHelpProcessor.getHierarchyName();
};
oFF.FdContentProviderValueHelp.prototype.createValueHelpProcessor = function(requestObject)
{
	if (this.m_contentType.isDimensionMemberValueHelp())
	{
		return oFF.OlapUiValueHelpDimension.create(requestObject);
	}
	else if (this.m_contentType.isVariableValueHelp())
	{
		return oFF.OlapUiValueHelpVariable.create(requestObject);
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Unsupported value help type: ", this.m_contentType.toString()));
};
oFF.FdContentProviderValueHelp.prototype.processData = function(startPage, endPage, presentations, listener, customIdentifier)
{
	var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP);
	listenerProxy.setStartPage(startPage);
	this.m_valueHelpProcessor.processValueHelp(startPage, endPage, this.m_configuration.getPageSize(), oFF.FdPresentationUtils.getFieldsFromPresentationValues(presentations), this.m_readMode, this, listenerProxy);
};
oFF.FdContentProviderValueHelp.prototype.processDataRange = function(listener, customIdentifier)
{
	if (this.m_contentType.isDimensionMemberValueHelp())
	{
		var dimension = this.getDimension();
		if (oFF.FdFilterType.RANGE.isSupportedByDim(dimension) && (dimension.getModelCapabilities().supportsResultSetInterval() || this.getInputValueType().isDateTime()))
		{
			dimension.setSelectorGettingInterval(true);
			var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_RANGE);
			this.m_valueHelpProcessor.processValueHelp(0, -1, this.m_configuration.getPageSize(), oFF.XList.create(), oFF.OlapUiReadMode.BOOKED, this, listenerProxy);
			dimension.setSelectorGettingInterval(false);
			return;
		}
	}
	listener.onProcessFinished(oFF.XList.create(), 0, customIdentifier);
};
oFF.FdContentProviderValueHelp.prototype.loadMissingPresentations = function(items, missingPresentations, listener, customIdentifier)
{
	var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_ATTRIBUTES);
	listenerProxy.setItems(items);
	var fields = oFF.FdPresentationUtils.getFieldsFromPresentationValues(missingPresentations);
	if (this.isHierarchical())
	{
		var parentNode = items.get(0).getNode().getParentNode();
		if (oFF.notNull(parentNode))
		{
			this.m_valueHelpProcessor.processChildFetch(parentNode, 0, items.size(), fields, this.m_readMode, this, listenerProxy);
		}
		else
		{
			this.m_valueHelpProcessor.processValueHelp(0, -1, 0, fields, this.m_readMode, this, listenerProxy);
		}
	}
	else
	{
		var pageSize = this.m_configuration.getPageSize();
		var endPage = items.size() / pageSize;
		if (oFF.XMath.mod(items.size(), pageSize) === 0)
		{
			endPage--;
		}
		this.m_valueHelpProcessor.processValueHelp(0, endPage, pageSize, fields, this.m_readMode, this, listenerProxy);
	}
};
oFF.FdContentProviderValueHelp.prototype.getPresentationByDisplayInfo = function(presentations, displayInfo)
{
	return oFF.FdPresentationUtils.mapDisplayInfoToPresentation(displayInfo, this.getDimension(), presentations);
};
oFF.FdContentProviderValueHelp.prototype.fetchChildren = function(node, offset, amount, presentations, listener, customIdentifier)
{
	var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_CHILDREN);
	this.m_valueHelpProcessor.processChildFetch(node.getNode(), offset, amount, oFF.FdPresentationUtils.getFieldsFromPresentationValues(presentations), this.m_readMode, this, listenerProxy);
};
oFF.FdContentProviderValueHelp.prototype.fetchValueHelpFunctions = function(listener, customIdentifier)
{
	var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_FUNCTIONS);
	this.m_valueHelpProcessor.processFetchValueHelpFunctions(this, listenerProxy);
};
oFF.FdContentProviderValueHelp.prototype.preloadNextPages = function(startPage, presentations, listener, customIdentifier)
{
	if (startPage !== -1 && !this.m_allDataLoaded && !this.m_isPreloading)
	{
		this.m_isPreloading = true;
		var endPage = startPage + this.m_configuration.getPreloadedPages() - 1;
		this.processData(startPage, endPage, presentations, listener, customIdentifier);
	}
};
oFF.FdContentProviderValueHelp.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	if (!this.isReleased())
	{
		var listenerProxy = customIdentifier;
		if (extResult.hasErrors())
		{
			if (!oFF.XString.isEqual(listenerProxy.getValueHelpType(), oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_UNKNOWN_SELECTED_ITEMS))
			{
				this.m_sessionData.setReadMode(null);
				this.m_isPreloading = false;
				listenerProxy.onError(extResult, null);
			}
			else if (listenerProxy.getProperties().getBooleanByKeyExt(oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_SHOW_ERRORS, false))
			{
				listenerProxy.onError(extResult, null);
			}
			return;
		}
		var items = this.mapValueHelpResult(extResult);
		if (oFF.notNull(this.m_model))
		{
			this.m_model.updateExcludeState(items);
		}
		switch (listenerProxy.getValueHelpType())
		{
			case oFF.FdContentProviderValueHelp.VALUE_HELP:
				this.m_allDataLoaded = !this.isHierarchical() && (!items.hasElements() || oFF.XMath.mod(items.size(), this.m_configuration.getPageSize()) !== 0);
				listenerProxy.onProcessFinished(items, 0, null);
				this.m_isPreloading = false;
				break;

			case oFF.FdContentProviderValueHelp.VALUE_HELP_RANGE:
				listenerProxy.onProcessFinished(items, 0, null);
				break;

			case oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_ATTRIBUTES:
				this.addAttributesToExistingValueHelpNodes(listenerProxy.getItems(), extResult.getData());
				listenerProxy.onProcessFinished(listenerProxy.getItems(), 0, null);
				break;

			case oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_CHILDREN:
				listenerProxy.onProcessFinished(items, 0, null);
				break;

			case oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_UNKNOWN_SELECTED_ITEMS:
				var unknownItems = this.syncSelectionList(listenerProxy.getItems(), items, true);
				if (listenerProxy.getProperties().getBooleanByKeyExt(oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_REMOVE_UNKNOWN, false))
				{
					oFF.XCollectionUtils.removeIf(listenerProxy.getItems(),  function(item1){
						return unknownItems.contains(item1);
					}.bind(this));
				}
				listenerProxy.onProcessFinished(listenerProxy.getItems(), 0, null);
				break;

			case oFF.FdContentProviderValueHelp.VALUE_HELP_SEARCH:
				listenerProxy.onProcessFinished(items, 0, null);
				break;
		}
	}
};
oFF.FdContentProviderValueHelp.prototype.mapValueHelpResult = function(extResult)
{
	var isHierarchicalValueHelp = this.isHierarchical();
	var hierarchyName = isHierarchicalValueHelp ? this.m_valueHelpProcessor.getHierarchyName() : null;
	return oFF.XCollectionUtils.map(extResult.getData(),  function(node){
		return oFF.FdItemFactory.createValueHelpItem(node, hierarchyName);
	}.bind(this));
};
oFF.FdContentProviderValueHelp.prototype.addAttributesToExistingValueHelpNodes = function(items, loadedNodes)
{
	var size = items.size();
	for (var i = 0; i < size; i++)
	{
		var node = items.get(i).getNode();
		var loadedNode = this.getNodeByKey(loadedNodes, this.getKeyFieldValue(node).getValue(), i);
		if (oFF.notNull(loadedNode))
		{
			node.getDimensionMember().copyAttributesFromDimensionMember(loadedNode.getDimensionMember());
		}
	}
};
oFF.FdContentProviderValueHelp.prototype.getNodeByKey = function(nodes, keyValue, expectedIndex)
{
	var size = nodes.size();
	if (size > expectedIndex)
	{
		var node = nodes.get(expectedIndex);
		var keyFieldValue = this.getKeyFieldValue(node);
		if (oFF.notNull(keyFieldValue) && keyFieldValue.getValue().isEqualTo(keyValue))
		{
			return node;
		}
	}
	for (var i = 0; i < size; i++)
	{
		var key = this.getKeyFieldValue(nodes.get(i));
		if (oFF.notNull(key) && key.getValue().isEqualTo(keyValue))
		{
			return nodes.get(i);
		}
	}
	return null;
};
oFF.FdContentProviderValueHelp.prototype.getKeyFieldValue = function(node)
{
	var dimensionMember = node.getDimensionMember();
	return dimensionMember.getFieldValue(dimensionMember.getDimension().getSelectorKeyField());
};
oFF.FdContentProviderValueHelp.prototype.getRequestObject = function()
{
	return this.m_requestObject;
};
oFF.FdContentProviderValueHelp.prototype.search = function(searchPattern, searchPresentations, presentations, loadParentNodes, listener, customIdentifier)
{
	var searchFields = oFF.FdPresentationUtils.getFieldsFromPresentationValues(searchPresentations);
	var fields = oFF.FdPresentationUtils.getFieldsFromPresentationValues(presentations);
	var identifier = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_SEARCH);
	this.m_valueHelpProcessor.processSearch(searchPattern, searchFields, fields, this.m_configuration.getSearchSize(), loadParentNodes, this.m_readMode, this, identifier);
};
oFF.FdContentProviderValueHelp.prototype.syncSelectionListWithKnownItems = function(selectionList, knownItems, presentations, removeUnknownValues, populateErrors, listener, customIdentifier)
{
	var unknownItems = this.syncSelectionList(selectionList, knownItems, false);
	if (oFF.notNull(listener))
	{
		if (unknownItems.isEmpty())
		{
			listener.onProcessFinished(selectionList, -1, customIdentifier);
		}
		else
		{
			var listenerProxy = oFF.FdValueHelpListenerProxy.create(listener, customIdentifier, oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_UNKNOWN_SELECTED_ITEMS);
			listenerProxy.setItems(selectionList);
			listenerProxy.getProperties().putBoolean(oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_REMOVE_UNKNOWN, removeUnknownValues);
			listenerProxy.getProperties().putBoolean(oFF.FdContentProviderValueHelp.PARAM_VALUE_HELP_SHOW_ERRORS, populateErrors);
			this.m_valueHelpProcessor.processFetchItems(unknownItems, oFF.FdPresentationUtils.getFieldsFromPresentationValues(presentations), this, listenerProxy);
		}
	}
	else if (removeUnknownValues)
	{
		oFF.XCollectionUtils.removeIf(selectionList,  function(item1){
			return unknownItems.contains(item1);
		}.bind(this));
	}
};
oFF.FdContentProviderValueHelp.prototype.syncSelectionList = function(selectionList, knownItems, ignoreVhItemOperator)
{
	var unknownItems = oFF.XList.create();
	var size = oFF.notNull(selectionList) ? selectionList.size() : 0;
	for (var i = 0; i < size; i++)
	{
		var item = selectionList.get(i);
		if (item.getType() === oFF.FdItemType.BASIC)
		{
			var vhItem = this.getVhItemFromKnownItems(item, knownItems, unknownItems, ignoreVhItemOperator);
			selectionList.set(i, oFF.notNull(vhItem) ? vhItem : item);
		}
		else if (item.getType() === oFF.FdItemType.RANGE)
		{
			var rangeItem = item;
			var lowItem = rangeItem.getLow();
			if (lowItem.getType() === oFF.FdItemType.BASIC)
			{
				var lowVhItem = this.getVhItemFromKnownItems(lowItem, knownItems, unknownItems, ignoreVhItemOperator);
				rangeItem.setLow(oFF.notNull(lowVhItem) ? lowVhItem : lowItem);
			}
			var highItem = rangeItem.getHigh();
			if (highItem.getType() === oFF.FdItemType.BASIC)
			{
				var highVhItem = this.getVhItemFromKnownItems(highItem, knownItems, unknownItems, ignoreVhItemOperator);
				rangeItem.setHigh(oFF.notNull(highVhItem) ? highVhItem : highItem);
			}
		}
	}
	return unknownItems;
};
oFF.FdContentProviderValueHelp.prototype.getVhItemFromKnownItems = function(item, knownItems, unknownItems, ignoreVhItemOperator)
{
	var itemWithValueHelpNode = oFF.FdValueHelpItem.getByKey(knownItems, item, ignoreVhItemOperator);
	if (oFF.notNull(itemWithValueHelpNode))
	{
		if (ignoreVhItemOperator)
		{
			itemWithValueHelpNode.setComparisonOperator(item.getComparisonOperator());
		}
		return itemWithValueHelpNode;
	}
	else
	{
		unknownItems.add(item);
		return null;
	}
};
oFF.FdContentProviderValueHelp.prototype.getMainPresentations = function(localization)
{
	return oFF.FdPresentationUtils.getMainPresentationByDim(this.getDimension(), localization, this.isHierarchical());
};
oFF.FdContentProviderValueHelp.prototype.supportsAdditionalPresentations = function()
{
	var supportsAdditionalPresentations = this.m_valueHelpProcessor.supportsAdditionalPresentations();
	if (supportsAdditionalPresentations)
	{
		var modelCapabilities = this.getDimension().getModelCapabilities();
		return oFF.notNull(modelCapabilities) && modelCapabilities.supportsValueHelpWithAttributes();
	}
	return false;
};
oFF.FdContentProviderValueHelp.prototype.getAdditionalPresentations = function(localization)
{
	return oFF.FdPresentationUtils.getAdditionalPresentationsByDim(this.getDimension(), localization, this.isHierarchical());
};
oFF.FdContentProviderValueHelp.prototype.supportsFunctionalValueHelp = function()
{
	var modelCapabilities = this.getDimension().getModelCapabilities();
	return oFF.notNull(modelCapabilities) && modelCapabilities.supportsFunctionalValueHelp();
};
oFF.FdContentProviderValueHelp.prototype.getMissingPresentations = function(items, presentations)
{
	var missingPresentations = oFF.XList.create();
	if (oFF.XCollectionUtils.hasElements(items) && oFF.XCollectionUtils.hasElements(presentations) && this.supportsAdditionalPresentations())
	{
		var node = items.get(0).getNode();
		var allFieldValues = node.getDimensionMember().getAllFieldValues();
		for (var i = 0; i < presentations.size(); i++)
		{
			var presentation = presentations.get(i);
			if (!allFieldValues.containsKey(presentation.getCustomObject().getName()))
			{
				missingPresentations.add(presentation);
			}
		}
	}
	return missingPresentations;
};
oFF.FdContentProviderValueHelp.prototype.supportsReadModeSwitch = function()
{
	return this.m_supportsReadModeSwitch;
};
oFF.FdContentProviderValueHelp.prototype.supportsMasterAndBookedReadModes = function()
{
	var contextType = this.getContextType(this.getSystemType(this.getDimension()));
	return this.supportsReadMode(contextType, oFF.QMemberReadMode.BOOKED) && this.supportsReadMode(contextType, oFF.QMemberReadMode.MASTER);
};
oFF.FdContentProviderValueHelp.prototype.supportsReadMode = function(contextType, readMode)
{
	var supportedReadModes = this.getDimension().getSupportedReadModes(contextType);
	if (oFF.notNull(supportedReadModes))
	{
		var readModes = supportedReadModes.getValuesAsReadOnlyList();
		for (var i = 0; i < readModes.size(); i++)
		{
			if (readModes.get(i).isTypeOf(readMode))
			{
				return true;
			}
		}
	}
	return false;
};
oFF.FdContentProviderValueHelp.prototype.getContextType = function(systemType)
{
	return oFF.notNull(systemType) && systemType.isTypeOf(oFF.SystemType.ABAP) && this.m_contentType.isVariableValueHelp() ? oFF.QContextType.VARIABLE : oFF.QContextType.SELECTOR;
};
oFF.FdContentProviderValueHelp.prototype.getSystemType = function(dimension)
{
	var systemName = dimension.getDataSource().getSystemName();
	var systemDescription = dimension.getApplication().getSystemLandscape().getSystemDescription(systemName);
	return oFF.notNull(systemDescription) ? systemDescription.getSystemType() : null;
};
oFF.FdContentProviderValueHelp.prototype.isSystemTypeHana = function()
{
	var systemType = this.getSystemType(this.getDimension());
	return oFF.notNull(systemType) && systemType.isTypeOf(oFF.SystemType.HANA);
};
oFF.FdContentProviderValueHelp.prototype.isSystemTypeBw = function()
{
	var systemType = this.getSystemType(this.getDimension());
	return oFF.notNull(systemType) && systemType.isTypeOf(oFF.SystemType.ABAP);
};
oFF.FdContentProviderValueHelp.prototype.getSessionData = function()
{
	return this.m_sessionData;
};
oFF.FdContentProviderValueHelp.prototype.isMissingValueForMandatoryVariableError = function(errorCode)
{
	return this.isSystemTypeHana() && errorCode === 42522;
};
oFF.FdContentProviderValueHelp.prototype.onFunctionsLoaded = function(extResult, selectFunctions, customIdentifier)
{
	var listenerProxy = customIdentifier;
	if (extResult.hasErrors())
	{
		listenerProxy.onError(extResult, null);
		return;
	}
	if (oFF.XString.isEqual(listenerProxy.getValueHelpType(), oFF.FdContentProviderValueHelp.VALUE_HELP_LOAD_FUNCTIONS))
	{
		var result = oFF.XList.create();
		var data = extResult.getData();
		for (var i = 0; i < data.size(); i++)
		{
			result.add(oFF.FdVhFunctionItem.create(data.get(i)));
		}
		listenerProxy.onProcessFinished(result, 0, null);
	}
};
oFF.FdContentProviderValueHelp.prototype.setDefaultDrillLevelEnabled = function(defaultEnabled)
{
	this.m_valueHelpProcessor.setDefaultDrillLevelEnabled(defaultEnabled);
};
oFF.FdContentProviderValueHelp.prototype.getSupportedFilterTypes = function(filterTypes)
{
	if (this.m_contentType !== oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP)
	{
		return oFF.XCollectionUtils.singletonList(oFF.FdFilterType.LIST);
	}
	var supportedTypes = oFF.XCollectionUtils.hasElements(filterTypes) ? filterTypes.createListCopy() : oFF.XCollectionUtils.createListCopy(oFF.FdFilterType.getAllFilterTypes());
	supportedTypes.removeElement(oFF.FdFilterType.MEASURE_BASED_FILTER);
	var dimension = this.getDimension();
	oFF.XCollectionUtils.removeIf(supportedTypes,  function(filterType){
		return !filterType.isSupportedByDim(dimension);
	}.bind(this));
	return oFF.XCollectionUtils.hasElements(supportedTypes) ? supportedTypes : oFF.XCollectionUtils.singletonList(oFF.FdFilterType.LIST);
};
oFF.FdContentProviderValueHelp.prototype.getSupportedComparisonOperators = function()
{
	var operators = oFF.XList.create();
	var filterCapability;
	if (this.m_contentType.isVariableValueHelp())
	{
		filterCapability = this.m_requestObject.getFilterCapability();
	}
	else
	{
		var dimension = this.getDimension();
		filterCapability = dimension.getFilterCapabilities().getFilterCapabilitiesByField(dimension.getSelectorKeyField());
	}
	var includingOperators = oFF.notNull(filterCapability) ? filterCapability.getSupportedComparisonOperators(oFF.SetSign.INCLUDING) : null;
	oFF.XCollectionUtils.forEach(includingOperators,  function(operator){
		oFF.XCollectionUtils.addIfNotNull(operators, oFF.FdComparisonOperator.lookup(operator.getName()));
	}.bind(this));
	if (operators.isEmpty())
	{
		operators.add(oFF.FdComparisonOperator.EQUAL);
	}
	return operators;
};
oFF.FdContentProviderValueHelp.prototype.getInputValueType = function()
{
	return this.m_contentType.isVariableValueHelp() ? this.m_requestObject.getValueType() : this.getDimension().getKeyField().getValueType();
};

oFF.FdValueHelpListenerProxy = function() {};
oFF.FdValueHelpListenerProxy.prototype = new oFF.XObject();
oFF.FdValueHelpListenerProxy.prototype._ff_c = "FdValueHelpListenerProxy";

oFF.FdValueHelpListenerProxy.create = function(listener, customIdentifier, valueHelpType)
{
	var fdValueHelpListenerProxy = new oFF.FdValueHelpListenerProxy();
	fdValueHelpListenerProxy.m_listener = listener;
	fdValueHelpListenerProxy.m_customIdentifier = customIdentifier;
	fdValueHelpListenerProxy.m_valueHelpType = valueHelpType;
	fdValueHelpListenerProxy.m_properties = oFF.XProperties.create();
	return fdValueHelpListenerProxy;
};
oFF.FdValueHelpListenerProxy.prototype.m_listener = null;
oFF.FdValueHelpListenerProxy.prototype.m_customIdentifier = null;
oFF.FdValueHelpListenerProxy.prototype.m_valueHelpType = null;
oFF.FdValueHelpListenerProxy.prototype.m_startPage = 0;
oFF.FdValueHelpListenerProxy.prototype.m_items = null;
oFF.FdValueHelpListenerProxy.prototype.m_properties = null;
oFF.FdValueHelpListenerProxy.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_listener = null;
	this.m_customIdentifier = null;
	this.m_valueHelpType = null;
	this.m_items = null;
};
oFF.FdValueHelpListenerProxy.prototype.getListener = function()
{
	return this.m_listener;
};
oFF.FdValueHelpListenerProxy.prototype.getCustomIdentifier = function()
{
	return this.m_customIdentifier;
};
oFF.FdValueHelpListenerProxy.prototype.getStartPage = function()
{
	return this.m_startPage;
};
oFF.FdValueHelpListenerProxy.prototype.getItems = function()
{
	return this.m_items;
};
oFF.FdValueHelpListenerProxy.prototype.getValueHelpType = function()
{
	return this.m_valueHelpType;
};
oFF.FdValueHelpListenerProxy.prototype.setStartPage = function(startPage)
{
	this.m_startPage = startPage;
};
oFF.FdValueHelpListenerProxy.prototype.setItems = function(items)
{
	this.m_items = items;
};
oFF.FdValueHelpListenerProxy.prototype.getProperties = function()
{
	return this.m_properties;
};
oFF.FdValueHelpListenerProxy.prototype.onProcessFinished = function(items, startPage, customIdentifier)
{
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onProcessFinished(items, this.m_startPage, this.m_customIdentifier);
	}
};
oFF.FdValueHelpListenerProxy.prototype.onError = function(messages, customIdentifier)
{
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onError(messages, this.m_customIdentifier);
	}
};

oFF.FdModel = function() {};
oFF.FdModel.prototype = new oFF.XObject();
oFF.FdModel.prototype._ff_c = "FdModel";

oFF.FdModel.create = function(configuration, sessionData)
{
	var fd = new oFF.FdModel();
	fd.setupModel(configuration, sessionData);
	return fd;
};
oFF.FdModel.prototype.m_configuration = null;
oFF.FdModel.prototype.m_selectionMode = null;
oFF.FdModel.prototype.m_readModeChanged = false;
oFF.FdModel.prototype.m_items = null;
oFF.FdModel.prototype.m_currentPage = 0;
oFF.FdModel.prototype.m_pageCount = 0;
oFF.FdModel.prototype.m_pageSize = 0;
oFF.FdModel.prototype.m_childNodesPageSize = 0;
oFF.FdModel.prototype.m_defaultExpandLevel = 0;
oFF.FdModel.prototype.m_readModeSwitchOn = false;
oFF.FdModel.prototype.m_readModeSwitchDefaultOn = false;
oFF.FdModel.prototype.m_useReadModeDefault = false;
oFF.FdModel.prototype.m_excludeSwitchOn = false;
oFF.FdModel.prototype.m_sessionData = null;
oFF.FdModel.prototype.m_features = null;
oFF.FdModel.prototype.m_hierarchyModel = null;
oFF.FdModel.prototype.m_rangeModel = null;
oFF.FdModel.prototype.m_functionalValuesModel = null;
oFF.FdModel.prototype.m_selectedItems = null;
oFF.FdModel.prototype.m_presentations = null;
oFF.FdModel.prototype.m_selectedPresentation = null;
oFF.FdModel.prototype.m_additionalPresentations = null;
oFF.FdModel.prototype.m_selectedAdditionalPresentations = null;
oFF.FdModel.prototype.m_listenerOnItemsAdded = null;
oFF.FdModel.prototype.setupModel = function(configuration, sessionData)
{
	this.m_sessionData = sessionData;
	this.m_items = oFF.XLinkedHashMapByString.create();
	this.m_selectedItems = oFF.XList.create();
	this.m_currentPage = 0;
	this.m_pageCount = 0;
	this.m_pageSize = configuration.getPageSize();
	this.m_childNodesPageSize = configuration.getChildNodesPageSize();
	this.m_selectionMode = configuration.getSelectionMode();
	this.m_features = oFF.XSetOfNameObject.create();
	this.m_hierarchyModel = oFF.FdHierarchyModel.create();
	this.changeSelection(configuration.getSelection(), null);
	this.m_configuration = configuration;
};
oFF.FdModel.prototype.releaseObject = function()
{
	this.m_configuration = null;
	this.m_items = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_items);
	this.m_selectedItems = null;
	this.m_presentations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_presentations);
	this.m_additionalPresentations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_additionalPresentations);
	this.m_selectedAdditionalPresentations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_selectedAdditionalPresentations);
	this.m_selectedPresentation = oFF.XObjectExt.release(this.m_selectedPresentation);
	this.m_features = oFF.XObjectExt.release(this.m_features);
	this.m_hierarchyModel = oFF.XObjectExt.release(this.m_hierarchyModel);
	this.m_rangeModel = oFF.XObjectExt.release(this.m_rangeModel);
	this.m_functionalValuesModel = oFF.XObjectExt.release(this.m_functionalValuesModel);
	this.m_sessionData = null;
	this.m_listenerOnItemsAdded = null;
};
oFF.FdModel.prototype.getConfig = function()
{
	return this.m_configuration;
};
oFF.FdModel.prototype.setFeatureEnabled = function(feature, enabled)
{
	if (enabled)
	{
		this.m_features.add(feature);
	}
	else
	{
		this.m_features.removeElement(feature);
	}
};
oFF.FdModel.prototype.isFeatureEnabled = function(feature)
{
	return this.m_features.contains(feature);
};
oFF.FdModel.prototype.isInitial = function()
{
	return this.m_readModeChanged || this.m_hierarchyModel.isActiveHierarchyChanged() || !oFF.XCollectionUtils.hasElements(this.m_items);
};
oFF.FdModel.prototype.getItemsOnCurrentPage = function()
{
	var items = this.getItemsByPage(this.m_currentPage);
	return oFF.notNull(items) ? items : oFF.XList.create();
};
oFF.FdModel.prototype.getItems = function(fromPage, toPage)
{
	var allItems = oFF.XList.create();
	var pages = this.m_items.getValuesAsReadOnlyList();
	var pageCount = pages.size();
	var endPage = toPage === -1 ? pageCount : oFF.XMath.min(toPage + 1, pageCount);
	for (var i = fromPage; i < endPage; i++)
	{
		allItems.addAll(pages.get(i));
	}
	return allItems;
};
oFF.FdModel.prototype.getItemsByPage = function(page)
{
	return this.m_items.getByKey(oFF.XInteger.convertToString(page));
};
oFF.FdModel.prototype.addItems = function(items, startPage)
{
	if (this.m_readModeChanged || this.m_hierarchyModel.isActiveHierarchyChanged())
	{
		this.m_items = oFF.XObjectExt.release(this.m_items);
		this.m_items = oFF.XLinkedHashMapByString.create();
		this.m_currentPage = 0;
		this.m_pageCount = 0;
		this.m_readModeChanged = false;
		this.m_hierarchyModel.resetHierarchyChangedState();
	}
	if (oFF.XCollectionUtils.hasElements(items))
	{
		this.updateExcludeState(items);
		var pageSize = this.getPageSize();
		var size = items.size();
		if (size <= pageSize)
		{
			this.m_items.put(oFF.XInteger.convertToString(startPage), items);
			this.m_pageCount = startPage >= this.m_pageCount ? startPage + 1 : this.m_pageCount;
		}
		else
		{
			var page = startPage;
			var start = 0;
			var end = 0;
			while (size > end)
			{
				end = end + pageSize;
				this.m_items.put(oFF.XInteger.convertToString(page), items.sublist(start, oFF.XMath.min(end, size)).createListCopy());
				start = start + pageSize;
				page++;
			}
			this.m_pageCount = oFF.XMath.max(page, this.m_pageCount);
		}
		if (oFF.notNull(this.m_listenerOnItemsAdded))
		{
			this.m_listenerOnItemsAdded();
		}
	}
};
oFF.FdModel.prototype.registerOnItemsAdded = function(listener)
{
	this.m_listenerOnItemsAdded = listener;
};
oFF.FdModel.prototype.setPage = function(page)
{
	if (page >= 0)
	{
		this.m_currentPage = page;
	}
};
oFF.FdModel.prototype.getPage = function()
{
	return this.m_currentPage;
};
oFF.FdModel.prototype.hasNextPage = function()
{
	return this.m_currentPage + 1 < this.m_pageCount;
};
oFF.FdModel.prototype.getPageCount = function()
{
	return this.m_pageCount;
};
oFF.FdModel.prototype.getPageSize = function()
{
	return this.m_hierarchyModel.hasActiveHierarchy() ? this.m_childNodesPageSize : this.m_pageSize;
};
oFF.FdModel.prototype.getChildNodesPageSize = function()
{
	return this.m_childNodesPageSize;
};
oFF.FdModel.prototype.selectAll = function()
{
	this.m_selectedItems.clear();
	var size = this.m_items.size();
	for (var i = 0; i < size; i++)
	{
		this.m_selectedItems.addAll(this.m_items.getByKey(oFF.XInteger.convertToString(i)));
	}
	this.onSelectionChanged();
};
oFF.FdModel.prototype.getSelectedItems = function()
{
	return this.m_selectedItems;
};
oFF.FdModel.prototype.clearSelection = function()
{
	this.m_selectedItems.clear();
	this.onSelectionChanged();
};
oFF.FdModel.prototype.removeSelectedItem = function(item)
{
	this.m_selectedItems.removeElement(item);
	this.onSelectionChanged();
};
oFF.FdModel.prototype.removeSelectedItemAt = function(index)
{
	if (index >= 0 && this.m_selectedItems.size() > index)
	{
		this.m_selectedItems.removeAt(index);
	}
};
oFF.FdModel.prototype.addSelection = function(itemsToAdd)
{
	if (oFF.XCollectionUtils.hasElements(itemsToAdd))
	{
		this.m_selectedItems.addAll(itemsToAdd);
		this.onSelectionChanged();
	}
};
oFF.FdModel.prototype.changeSelection = function(itemsToAdd, itemsToRemove)
{
	if (oFF.notNull(itemsToRemove))
	{
		for (var k = itemsToRemove.size() - 1; k >= 0; k--)
		{
			var itemToRemove = itemsToRemove.get(k);
			if (oFF.isNull(itemsToAdd) || !itemsToAdd.contains(itemToRemove))
			{
				this.m_selectedItems.removeElement(itemToRemove);
			}
		}
	}
	if (oFF.notNull(itemsToAdd))
	{
		for (var i = 0; i < itemsToAdd.size(); i++)
		{
			var itemToAdd = itemsToAdd.get(i);
			if (!this.m_selectedItems.contains(itemToAdd))
			{
				this.m_selectedItems.add(itemToAdd);
			}
		}
	}
	this.onSelectionChanged();
};
oFF.FdModel.prototype.insertSelectedItem = function(index, item)
{
	if (oFF.notNull(item) && index >= 0 && this.m_selectedItems.size() >= index)
	{
		this.m_selectedItems.insert(index, item);
		this.onSelectionChanged();
	}
};
oFF.FdModel.prototype.onSelectionChanged = function()
{
	if (oFF.notNull(this.m_configuration))
	{
		this.m_configuration.getEvents().triggerOnSelectionChange(this);
	}
};
oFF.FdModel.prototype.getMainPresentations = function()
{
	return this.m_presentations;
};
oFF.FdModel.prototype.getAdditionalPresentations = function()
{
	return this.m_additionalPresentations;
};
oFF.FdModel.prototype.getSelectedMainPresentation = function()
{
	return this.m_selectedPresentation;
};
oFF.FdModel.prototype.getSelectedAdditionalPresentations = function()
{
	return oFF.notNull(this.m_selectedAdditionalPresentations) ? this.m_selectedAdditionalPresentations : oFF.XList.create();
};
oFF.FdModel.prototype.setPresentations = function(mainPresentations, additionalPresentations, selectedMP, selectedAP)
{
	this.m_presentations = mainPresentations;
	this.m_additionalPresentations = additionalPresentations;
	if (oFF.notNull(selectedMP))
	{
		this.m_selectedPresentation = selectedMP;
	}
	else if (oFF.notNull(this.m_selectedPresentation))
	{
		this.m_selectedPresentation = oFF.XStream.of(mainPresentations).filter( function(mp){
			return oFF.XString.isEqual(mp.getName(), this.m_selectedPresentation.getName());
		}.bind(this)).findAny().orElse(mainPresentations.get(0));
	}
	if (oFF.notNull(selectedAP))
	{
		this.m_selectedAdditionalPresentations = selectedAP;
	}
	else if (oFF.XCollectionUtils.hasElements(this.m_selectedAdditionalPresentations))
	{
		this.m_selectedAdditionalPresentations = oFF.FdPresentationUtils.getPresentationsByName(oFF.XStream.of(this.m_selectedAdditionalPresentations).collect(oFF.XStreamCollector.toListOfString( function(ap){
			return ap.getName();
		}.bind(this))), additionalPresentations);
	}
};
oFF.FdModel.prototype.setSelectedPresentations = function(mainPresentation, additionalPresentations)
{
	this.m_selectedPresentation = mainPresentation;
	this.m_selectedAdditionalPresentations = additionalPresentations;
	this.m_sessionData.setSelectedPresentations(mainPresentation, additionalPresentations);
};
oFF.FdModel.prototype.initReadMode = function(switchOn, switchOnByDefault, useDefault)
{
	this.m_readModeSwitchOn = useDefault ? switchOnByDefault : switchOn;
	this.m_readModeSwitchDefaultOn = switchOnByDefault;
	this.m_useReadModeDefault = useDefault;
};
oFF.FdModel.prototype.isReadModeSwitchOn = function()
{
	return this.m_readModeSwitchOn;
};
oFF.FdModel.prototype.setReadModeSwitchOn = function(readModeSwitchOn)
{
	if (this.m_readModeSwitchOn !== readModeSwitchOn)
	{
		this.m_readModeSwitchOn = readModeSwitchOn;
		this.m_useReadModeDefault = false;
		this.m_readModeChanged = true;
	}
};
oFF.FdModel.prototype.isUseReadModeDefault = function()
{
	return this.m_useReadModeDefault;
};
oFF.FdModel.prototype.setUseReadModeDefault = function(useReadModeDefault)
{
	if (this.m_useReadModeDefault !== useReadModeDefault && this.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT))
	{
		this.m_useReadModeDefault = useReadModeDefault;
		this.m_readModeChanged = true;
		if (this.m_useReadModeDefault)
		{
			this.m_readModeSwitchOn = this.m_readModeSwitchDefaultOn;
		}
	}
};
oFF.FdModel.prototype.setExcludeSwitchOn = function(excludeSwitchOn)
{
	this.m_excludeSwitchOn = excludeSwitchOn && this.isFeatureEnabled(oFF.FdFeature.EXCLUDE);
	oFF.XCollectionUtils.forEach(this.m_items.getValuesAsReadOnlyList(),  function(items){
		this.updateExcludeState(items);
	}.bind(this));
	this.updateExcludeState(this.m_selectedItems);
};
oFF.FdModel.prototype.isExcludeSwitchOn = function()
{
	return this.m_excludeSwitchOn;
};
oFF.FdModel.prototype.updateExcludeState = function(items)
{
	oFF.XCollectionUtils.forEach(items,  function(item){
		item.setExcluded(this.m_excludeSwitchOn);
		if (item.hasChildren())
		{
			this.updateExcludeState(item.getChildren());
		}
	}.bind(this));
};
oFF.FdModel.prototype.onError = function(messages, customIdentifier)
{
	if (this.m_readModeChanged)
	{
		this.m_readModeChanged = false;
		this.m_readModeSwitchOn = !this.m_readModeSwitchOn;
	}
};
oFF.FdModel.prototype.getSelectionMode = function()
{
	return this.m_selectionMode;
};
oFF.FdModel.prototype.getDefaultExpandLevel = function()
{
	return this.m_defaultExpandLevel;
};
oFF.FdModel.prototype.setDefaultExpandLevel = function(level)
{
	this.m_defaultExpandLevel = level;
};
oFF.FdModel.prototype.getHierarchyModel = function()
{
	return this.m_hierarchyModel;
};
oFF.FdModel.prototype.getRangeModel = function()
{
	if (oFF.isNull(this.m_rangeModel))
	{
		this.m_rangeModel = oFF.FdRangeModel.create();
	}
	return this.m_rangeModel;
};
oFF.FdModel.prototype.getFunctionalValuesModel = function()
{
	if (oFF.isNull(this.m_functionalValuesModel))
	{
		this.m_functionalValuesModel = oFF.FdFunctionalValuesModel.create();
	}
	return this.m_functionalValuesModel;
};

oFF.FdAbstractComponent = function() {};
oFF.FdAbstractComponent.prototype = new oFF.XObject();
oFF.FdAbstractComponent.prototype._ff_c = "FdAbstractComponent";

oFF.FdAbstractComponent.prototype.m_model = null;
oFF.FdAbstractComponent.prototype.m_layout = null;
oFF.FdAbstractComponent.prototype.m_context = null;
oFF.FdAbstractComponent.prototype.setupComponent = function(model, context, layout)
{
	this.m_model = model;
	this.m_layout = layout;
	this.m_context = context;
};
oFF.FdAbstractComponent.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_model = null;
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_context = null;
};
oFF.FdAbstractComponent.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdAbstractComponent.prototype.addDropdownItems = function(dropdown, presentations)
{
	var items = oFF.XList.create();
	var size = presentations.size();
	for (var i = 0; i < size; i++)
	{
		var presentation = presentations.get(i);
		var name = presentation.getName();
		items.add(oFF.FdLayoutUtils.addDropdownItem(dropdown, name, name, presentation));
	}
	return items;
};
oFF.FdAbstractComponent.prototype.addSimpleDropdownItems = function(dropdown, values)
{
	var size = values.size();
	for (var i = 0; i < size; i++)
	{
		var value = values.get(i);
		oFF.FdLayoutUtils.addDropdownItem(dropdown, value, value, null);
	}
};

oFF.OuLambdaFdCloseListener = function() {};
oFF.OuLambdaFdCloseListener.prototype = new oFF.XObject();
oFF.OuLambdaFdCloseListener.prototype._ff_c = "OuLambdaFdCloseListener";

oFF.OuLambdaFdCloseListener.create = function(onOk)
{
	var result = new oFF.OuLambdaFdCloseListener();
	result.m_okProcedure = onOk;
	return result;
};
oFF.OuLambdaFdCloseListener.prototype.m_okProcedure = null;
oFF.OuLambdaFdCloseListener.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(this.m_okProcedure))
	{
		this.m_okProcedure(selection);
	}
};
oFF.OuLambdaFdCloseListener.prototype.onFilterDialogCancel = function() {};
oFF.OuLambdaFdCloseListener.prototype.releaseObject = function()
{
	this.m_okProcedure = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.SubmitOnCloseListener = function() {};
oFF.SubmitOnCloseListener.prototype = new oFF.XObject();
oFF.SubmitOnCloseListener.prototype._ff_c = "SubmitOnCloseListener";

oFF.SubmitOnCloseListener.createListener = function(controller, variableController, additionalListener)
{
	var obj = new oFF.SubmitOnCloseListener();
	obj.m_controller = controller;
	obj.m_variableController = variableController;
	obj.m_additionalListener = additionalListener;
	return obj;
};
oFF.SubmitOnCloseListener.prototype.m_controller = null;
oFF.SubmitOnCloseListener.prototype.m_variableController = null;
oFF.SubmitOnCloseListener.prototype.m_additionalListener = null;
oFF.SubmitOnCloseListener.prototype.releaseObject = function()
{
	this.m_controller = null;
	this.m_variableController = null;
	this.m_additionalListener = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.SubmitOnCloseListener.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(selection))
	{
		this.m_variableController.onFilterDialogOk(selection);
	}
	this.m_controller.attemptSubmit();
	if (oFF.notNull(this.m_additionalListener))
	{
		this.m_additionalListener.onOk();
	}
	this.releaseObject();
};
oFF.SubmitOnCloseListener.prototype.onFilterDialogCancel = function()
{
	this.m_variableController.onFilterDialogCancel();
	this.m_controller.cancelReinit();
	if (oFF.notNull(this.m_additionalListener))
	{
		this.m_additionalListener.onCancel();
	}
	this.releaseObject();
};

oFF.VariableProcessorCallbackLambda = function() {};
oFF.VariableProcessorCallbackLambda.prototype = new oFF.XObject();
oFF.VariableProcessorCallbackLambda.prototype._ff_c = "VariableProcessorCallbackLambda";

oFF.VariableProcessorCallbackLambda.createSingleUse = function(callback)
{
	var obj = new oFF.VariableProcessorCallbackLambda();
	obj.setupExt(callback);
	return obj;
};
oFF.VariableProcessorCallbackLambda.prototype.m_callback = null;
oFF.VariableProcessorCallbackLambda.prototype.setupExt = function(callback)
{
	this.m_callback = callback;
};
oFF.VariableProcessorCallbackLambda.prototype.releaseObject = function()
{
	this.m_callback = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VariableProcessorCallbackLambda.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.m_callback(extResult);
	this.releaseObject();
};

oFF.VdModel = function() {};
oFF.VdModel.prototype = new oFF.XObject();
oFF.VdModel.prototype._ff_c = "VdModel";

oFF.VdModel.create = function(variableProcessor, startValues, context)
{
	var obj = new oFF.VdModel();
	obj.setupExt(variableProcessor, startValues, context);
	return obj;
};
oFF.VdModel.prototype.m_uiContext = null;
oFF.VdModel.prototype.m_varProcessor = null;
oFF.VdModel.prototype.m_variableModels = null;
oFF.VdModel.prototype.m_variableModelsByName = null;
oFF.VdModel.prototype.m_startValues = null;
oFF.VdModel.prototype.m_listener = null;
oFF.VdModel.prototype.m_hasExitVariables = false;
oFF.VdModel.prototype.m_hasDynamicVariables = false;
oFF.VdModel.prototype.setupExt = function(variableProcessor, startValues, context)
{
	this.m_varProcessor = variableProcessor;
	this.m_startValues = oFF.notNull(startValues) ? oFF.VdValue.cloneValueMap(startValues) : oFF.VdImportExport.getValuesFromProcessor(this.m_varProcessor);
	this.m_uiContext = context;
	this.m_variableModels = oFF.XList.create();
	this.m_variableModelsByName = oFF.XHashMapByString.create();
	this.m_listener = oFF.XList.create();
	this.prepare();
	var startValuesClone = oFF.VdValue.cloneValueMap(this.m_startValues);
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		var variableModel = this.m_variableModels.get(i);
		variableModel.setInitialValues(startValuesClone.getByKey(variableModel.getName()));
	}
};
oFF.VdModel.prototype.prepare = function()
{
	var variables = this.m_varProcessor.getInputEnabledAndNonTechnicalVariables();
	this.m_variableModels.clear();
	this.m_variableModelsByName.clear();
	this.m_hasExitVariables = false;
	this.m_hasDynamicVariables = false;
	var len = variables.size();
	for (var i = 0; i < len; i++)
	{
		var variable = variables.get(i);
		var variableModel = oFF.VdVariableModel.createVariableModel(variable, this.m_uiContext);
		this.m_variableModels.add(variableModel);
		this.m_variableModelsByName.put(variable.getName(), variableModel);
		if (variable.isEnforcedDynamicValue())
		{
			this.m_hasExitVariables = true;
		}
		if (variable.isDynamicVariable())
		{
			this.m_hasDynamicVariables = true;
		}
	}
	this.m_variableModels.sortByComparator(oFF.VdVariableOrderComparator.getComparator());
	for (var j = this.m_listener.size() - 1; j >= 0; j--)
	{
		this.m_listener.get(j).onVariableModelsChanged();
	}
};
oFF.VdModel.prototype.getVariableProcessor = function()
{
	return this.m_varProcessor;
};
oFF.VdModel.prototype.getCurrentValues = function()
{
	var result = oFF.XLinkedHashMapByString.create();
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		var variableModel = this.m_variableModels.get(i);
		result.put(variableModel.getName(), variableModel.getValues());
	}
	return result;
};
oFF.VdModel.prototype.getCleanedValues = function()
{
	var result = oFF.XLinkedHashMapByString.create();
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		var variableModel = this.m_variableModels.get(i);
		result.put(variableModel.getName(), variableModel.getCleanedValues());
	}
	return result;
};
oFF.VdModel.prototype.getStartValues = function()
{
	return this.m_startValues;
};
oFF.VdModel.prototype.setValues = function(allValues)
{
	this.setValuesInternal(oFF.VdValue.cloneValueMap(allValues));
};
oFF.VdModel.prototype.resetValues = function()
{
	this.setValues(this.m_startValues);
};
oFF.VdModel.prototype.setValuesFromProcessor = function()
{
	this.setValuesInternal(oFF.VdImportExport.getValuesFromProcessor(this.m_varProcessor));
};
oFF.VdModel.prototype.setValuesInternal = function(allValues)
{
	if (!oFF.XCollectionUtils.hasElements(allValues))
	{
		this.clearValues();
		return;
	}
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		var variableModel = this.m_variableModels.get(i);
		var values = allValues.getByKey(variableModel.getName());
		if (oFF.XCollectionUtils.hasElements(values))
		{
			variableModel.setValues(values);
		}
		else
		{
			variableModel.clearValues();
		}
	}
};
oFF.VdModel.prototype.getVariableModels = function()
{
	return this.m_variableModels;
};
oFF.VdModel.prototype.getVariableModelByName = function(varName)
{
	return this.m_variableModelsByName.getByKey(varName);
};
oFF.VdModel.prototype.validateValues = function()
{
	var valid = true;
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		if (!this.m_variableModels.get(i).validateValues())
		{
			valid = false;
		}
	}
	return valid;
};
oFF.VdModel.prototype.resolveAndSaveValues = function(listener, customIdentifier)
{
	listener.onValuesResolvedAndSave(customIdentifier);
};
oFF.VdModel.prototype.clearValues = function()
{
	for (var i = 0; i < this.m_variableModels.size(); i++)
	{
		this.m_variableModels.get(i).clearValues();
	}
};
oFF.VdModel.prototype.getVariants = function()
{
	return this.m_varProcessor.getVariableVariants();
};
oFF.VdModel.prototype.hasVariables = function()
{
	return oFF.XCollectionUtils.hasElements(this.m_variableModels);
};
oFF.VdModel.prototype.hasExitVariables = function()
{
	return this.m_hasExitVariables;
};
oFF.VdModel.prototype.hasDynamicVariables = function()
{
	return this.m_hasDynamicVariables;
};
oFF.VdModel.prototype.addListener = function(listener)
{
	this.m_listener.add(listener);
};
oFF.VdModel.prototype.removeListener = function(listener)
{
	this.m_listener.removeElement(listener);
};
oFF.VdModel.prototype.releaseObject = function()
{
	this.m_uiContext = null;
	this.m_varProcessor = null;
	this.m_variableModels = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_variableModels);
	this.m_variableModelsByName = oFF.XObjectExt.release(this.m_variableModelsByName);
	this.m_listener = oFF.XObjectExt.release(this.m_listener);
	this.m_startValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_startValues);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdResolveHelper = function() {};
oFF.VdResolveHelper.prototype = new oFF.OlapUiMultiRequestHelper();
oFF.VdResolveHelper.prototype._ff_c = "VdResolveHelper";

oFF.VdResolveHelper.createHelper = function(listener, customIdentifier)
{
	var obj = new oFF.VdResolveHelper();
	obj.setupExt(listener, customIdentifier);
	return obj;
};
oFF.VdResolveHelper.prototype.m_resolvedResult = null;
oFF.VdResolveHelper.prototype.m_handles = null;
oFF.VdResolveHelper.prototype.setupExt = function(listener, customIdentifier)
{
	this.setupHelper(listener, customIdentifier);
	this.m_resolvedResult = oFF.XHashMapByString.create();
	this.m_handles = oFF.XList.create();
};
oFF.VdResolveHelper.prototype.releaseObject = function()
{
	this.m_resolvedResult = oFF.XObjectExt.release(this.m_resolvedResult);
	this.m_handles = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_handles);
	oFF.OlapUiMultiRequestHelper.prototype.releaseObject.call( this );
};
oFF.VdResolveHelper.prototype.getHandle = function(variableName)
{
	var handle = oFF.VdResolveHelperHandle.createHandle(this, variableName);
	this.m_handles.add(handle);
	return handle;
};
oFF.VdResolveHelper.prototype.getResultsForVariable = function(variableName)
{
	var results = this.m_resolvedResult.getByKey(variableName);
	if (oFF.isNull(results))
	{
		results = oFF.XList.create();
		this.m_resolvedResult.put(variableName, results);
	}
	return results;
};
oFF.VdResolveHelper.prototype.addResults = function(variableName, values)
{
	this.getResultsForVariable(variableName).addAll(values);
};
oFF.VdResolveHelper.prototype.addResult = function(variableName, value)
{
	this.getResultsForVariable(variableName).add(value);
};
oFF.VdResolveHelper.prototype.getResolvedResults = function()
{
	return this.m_resolvedResult;
};

oFF.VdVariantManager = function() {};
oFF.VdVariantManager.prototype = new oFF.XObject();
oFF.VdVariantManager.prototype._ff_c = "VdVariantManager";

oFF.VdVariantManager.createManager = function(context)
{
	var obj = new oFF.VdVariantManager();
	obj.setupExt(context);
	return obj;
};
oFF.VdVariantManager.prototype.m_context = null;
oFF.VdVariantManager.prototype.setupExt = function(context)
{
	this.m_context = context;
};
oFF.VdVariantManager.prototype.releaseObject = function()
{
	this.m_context = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVariantManager.prototype.presentVariantSavePopup = function(variableProcessor, onSaved)
{
	var genesis = this.m_context.getUiManager().getFreeGenesis();
	oFF.VdVariantSavePopup.createSavePopup(this, genesis, variableProcessor, onSaved).open();
};
oFF.VdVariantManager.prototype.presentVariantsManagePopup = function(variableProcessor, onFinished)
{
	var genesis = this.m_context.getUiManager().getFreeGenesis();
	oFF.VdVariantManagePopup.createManagePopup(this, genesis, variableProcessor, onFinished).open();
};
oFF.VdVariantManager.prototype.getUiContext = function()
{
	return this.m_context;
};

oFF.VdUpdateDescriptionsResolveHandler = function() {};
oFF.VdUpdateDescriptionsResolveHandler.prototype = new oFF.OlapUiMultiRequestHelper();
oFF.VdUpdateDescriptionsResolveHandler.prototype._ff_c = "VdUpdateDescriptionsResolveHandler";

oFF.VdUpdateDescriptionsResolveHandler.createResolveHandler = function(listener)
{
	var obj = new oFF.VdUpdateDescriptionsResolveHandler();
	obj.setupHelper(listener, null);
	return obj;
};
oFF.VdUpdateDescriptionsResolveHandler.prototype.onFillFieldsDone = function(variable, result, customObject)
{
	this.increaseCallbackCount();
	this.checkDone();
};
oFF.VdUpdateDescriptionsResolveHandler.prototype.finishProgress = function()
{
	oFF.OlapUiMultiRequestHelper.prototype.finishProgress.call( this );
	this.checkDone();
};
oFF.VdUpdateDescriptionsResolveHandler.prototype.checkDone = function()
{
	if (!this.isInStartup() && this.isDone())
	{
		var originalListener = this.getOriginalListener();
		originalListener();
	}
};

oFF.VdValueHelp = function() {};
oFF.VdValueHelp.prototype = new oFF.XObject();
oFF.VdValueHelp.prototype._ff_c = "VdValueHelp";

oFF.VdValueHelp.KEY_NULL_VALUE = "(null_value_key)";
oFF.VdValueHelp.ERR_SERVER_ERROR = 1001;
oFF.VdValueHelp.WARN_VALUE_NOT_FOUND = 2001;
oFF.VdValueHelp.searchValues = function(variable, searchOnDisplayKey, searchNullValues, values, listener, customObject)
{
	var obj = new oFF.VdValueHelp();
	obj.setupValueHelp(variable, searchOnDisplayKey, searchNullValues, values, true, listener, customObject);
	obj.performSearch();
};
oFF.VdValueHelp.updateDescriptions = function(processor, values, listener)
{
	var requestHelper = null;
	var variableNames = values.getKeysAsReadOnlyListOfString();
	for (var i = 0; i < variableNames.size(); i++)
	{
		var variableName = variableNames.get(i);
		var variable = processor.getVariable(variableName);
		if (oFF.notNull(variable) && variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			var dimensionMember = variable.getDimensionMember();
			if (oFF.notNull(dimensionMember) && oFF.VdValueHelp.hasFieldsWithNonHumanReadableValues(dimensionMember, values.getByKey(variableName)))
			{
				if (oFF.isNull(requestHelper))
				{
					requestHelper = oFF.VdUpdateDescriptionsResolveHandler.createResolveHandler(listener);
				}
				requestHelper.increaseRequestCount();
				var vh = new oFF.VdValueHelp();
				vh.setupValueHelp(variable, true, false, values.getByKey(variableName), false, requestHelper, null);
				vh.performSearch();
			}
		}
	}
	if (oFF.notNull(requestHelper))
	{
		requestHelper.finishProgress();
	}
	else
	{
		listener();
	}
};
oFF.VdValueHelp.hasFieldsWithNonHumanReadableValues = function(dimensionMember, values)
{
	var allFieldValues = dimensionMember.getAllFieldValues();
	var keys = allFieldValues.getKeysAsReadOnlyListOfString();
	for (var i = 0; i < keys.size(); i++)
	{
		if (oFF.XString.containsString(keys.get(i), "HIEID_F4_HIEID"))
		{
			for (var k = 0; k < values.size(); k++)
			{
				var value = values.get(k);
				if (oFF.XStringUtils.isNullOrEmpty(value.getFirstOperand().getText()) || value.getOperator().getNumberOfParameters() > 1 && oFF.XStringUtils.isNullOrEmpty(value.getSecondOperand().getText()))
				{
					return true;
				}
			}
			return false;
		}
	}
	return false;
};
oFF.VdValueHelp.prototype.m_variable = null;
oFF.VdValueHelp.prototype.m_searchOnDisplayKey = false;
oFF.VdValueHelp.prototype.m_searchNullValues = false;
oFF.VdValueHelp.prototype.m_values = null;
oFF.VdValueHelp.prototype.m_listener = null;
oFF.VdValueHelp.prototype.m_customObject = null;
oFF.VdValueHelp.prototype.m_valueHelpProcessor = null;
oFF.VdValueHelp.prototype.m_removeInvalidValues = false;
oFF.VdValueHelp.prototype.m_searchEntries = null;
oFF.VdValueHelp.prototype.setupValueHelp = function(variable, searchOnDisplayKey, searchNullValues, values, removeInvalidValues, listener, customObject)
{
	this.m_variable = variable;
	this.m_valueHelpProcessor = oFF.OlapUiValueHelpVariable.create(this.m_variable);
	this.m_searchOnDisplayKey = searchOnDisplayKey;
	this.m_searchNullValues = searchNullValues;
	this.m_values = values;
	this.m_removeInvalidValues = removeInvalidValues;
	this.m_listener = listener;
	this.m_customObject = customObject;
	this.m_searchEntries = oFF.XLinkedHashMapByString.create();
};
oFF.VdValueHelp.prototype.performSearch = function()
{
	var searchField = this.m_searchOnDisplayKey ? this.m_valueHelpProcessor.getDisplayKeyField() : this.m_valueHelpProcessor.getKeyField();
	if (oFF.isNull(searchField) || !searchField.isFilterable())
	{
		var result1 = oFF.ExtResult.create(this.m_values, oFF.MessageManagerSimple.createMessageManager());
		this.m_listener.onFillFieldsDone(this.m_variable, result1, this.m_customObject);
		return;
	}
	for (var i = 0; i < this.m_values.size(); i++)
	{
		var value = this.m_values.get(i);
		var operator = value.getOperator();
		if (operator.isNullOperator())
		{
			if (this.m_searchNullValues && operator === oFF.VdComparisonOperator.IS_NULL)
			{
				this.addSearchEntry(searchField, oFF.VdValueHelp.KEY_NULL_VALUE, value, oFF.VdValue.FIRST);
			}
			continue;
		}
		var firstOperand = value.getFirstOperand();
		var first = firstOperand.getValueByField(searchField);
		if (oFF.notNull(first) && this.isSearchNeeded(firstOperand))
		{
			this.addSearchEntry(searchField, first, value, oFF.VdValue.FIRST);
		}
		var secondOperand = value.getSecondOperand();
		var second = secondOperand.getValueByField(searchField);
		if (oFF.notNull(second) && this.isSearchNeeded(secondOperand))
		{
			this.addSearchEntry(searchField, second, value, oFF.VdValue.SECOND);
		}
	}
	if (this.m_searchEntries.isEmpty())
	{
		var result2 = oFF.ExtResult.create(this.m_values, oFF.MessageManagerSimple.createMessageManager());
		this.m_listener.onFillFieldsDone(this.m_variable, result2, this.m_customObject);
		return;
	}
	var searchItems = oFF.XList.create();
	var iterator = this.m_searchEntries.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var key = iterator.next();
		if (oFF.XString.isEqual(key, oFF.VdValueHelp.KEY_NULL_VALUE))
		{
			searchItems.add(oFF.OlapUiValueHelpKeyObject.create("", "", true));
		}
		else
		{
			searchItems.add(oFF.OlapUiValueHelpKeyObject.create(this.m_searchOnDisplayKey ? null : key, this.m_searchOnDisplayKey ? key : null, false));
		}
	}
	oFF.XObjectExt.release(iterator);
	this.m_valueHelpProcessor.processFetchItems(searchItems, null, this, null);
	oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(searchItems);
};
oFF.VdValueHelp.prototype.isSearchNeeded = function(operand)
{
	var keyField = this.m_valueHelpProcessor.getKeyField();
	var displayKeyField = this.m_valueHelpProcessor.getDisplayKeyField();
	return operand.getKey() === null && oFF.notNull(keyField) || !operand.hasDisplayKey() && oFF.notNull(displayKeyField) && displayKeyField !== keyField || operand.getText() === null && this.m_valueHelpProcessor.getTextField() !== null;
};
oFF.VdValueHelp.prototype.addSearchEntry = function(searchField, key, value, operandIndex)
{
	var keyValue = key;
	if (searchField.getValueType().isDateBased())
	{
		var dateBasedValue = oFF.XValueAccess.createWithType(searchField.getValueType());
		if (dateBasedValue.parseString(keyValue).isValid())
		{
			keyValue = dateBasedValue.getValue().getStringRepresentation();
		}
	}
	var entries = this.getSearchEntriesByKey(keyValue, false);
	if (oFF.isNull(entries))
	{
		entries = oFF.XList.create();
		this.m_searchEntries.put(keyValue, entries);
	}
	entries.add(oFF.XPair.create(value, oFF.XIntegerValue.create(operandIndex)));
};
oFF.VdValueHelp.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.handleCallback(extResult);
	this.releaseObject();
};
oFF.VdValueHelp.prototype.handleCallback = function(extResult)
{
	if (oFF.isNull(this.m_listener))
	{
		return;
	}
	var msgManager = oFF.MessageManagerSimple.createMessageManager();
	if (extResult.hasErrors())
	{
		msgManager.addError(oFF.VdValueHelp.ERR_SERVER_ERROR, "");
		var result1 = oFF.ExtResult.create(this.m_values, msgManager);
		this.m_listener.onFillFieldsDone(this.m_variable, result1, this.m_customObject);
		return;
	}
	var searchField = this.m_searchOnDisplayKey ? this.m_valueHelpProcessor.getDisplayKeyField() : this.m_valueHelpProcessor.getKeyField();
	var nodes = extResult.getData();
	for (var i = 0; i < nodes.size(); i++)
	{
		var node = nodes.get(i);
		var dimensionMember = node.getDimensionMember();
		var fieldValue = dimensionMember.getFieldValue(searchField).getValue().getStringRepresentation();
		var isNullValue = oFF.XString.isEqual(fieldValue, "") && dimensionMember.getDimensionMemberNameValueException() === oFF.ValueException.NULL_VALUE;
		var searchEntries = isNullValue ? this.m_searchEntries.remove(oFF.VdValueHelp.KEY_NULL_VALUE) : this.getSearchEntriesByKey(fieldValue, true);
		if (oFF.notNull(searchEntries))
		{
			for (var j = 0; j < searchEntries.size(); j++)
			{
				var operand = oFF.FdItemFactory.createValueHelpItem(node, this.m_valueHelpProcessor.getHierarchyName());
				var pair = searchEntries.get(j);
				var vdValue = pair.getFirstObject();
				var operandIndex = pair.getSecondObject().getInteger();
				vdValue.setOperand(operandIndex, operand);
			}
		}
	}
	if (this.m_removeInvalidValues)
	{
		if (this.m_searchEntries.size() > 0)
		{
			msgManager.addWarning(oFF.VdValueHelp.WARN_VALUE_NOT_FOUND, "");
		}
		var remainingKeys = this.m_searchEntries.getKeysAsIteratorOfString();
		while (remainingKeys.hasNext())
		{
			var key = remainingKeys.next();
			var remainingValues = this.m_searchEntries.getByKey(key);
			for (var z = 0; z < remainingValues.size(); z++)
			{
				var pair1 = remainingValues.get(z);
				this.m_values.removeElement(pair1.getFirstObject());
			}
		}
	}
	var result2 = oFF.ExtResult.create(this.m_values, msgManager);
	this.m_listener.onFillFieldsDone(this.m_variable, result2, this.m_customObject);
};
oFF.VdValueHelp.prototype.getSearchEntriesByKey = function(key, remove)
{
	var lowerKey = oFF.XString.toLowerCase(key);
	var iterator = this.m_searchEntries.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var searchKey = iterator.next();
		if (oFF.XString.isEqual(oFF.XString.toLowerCase(searchKey), lowerKey))
		{
			oFF.XObjectExt.release(iterator);
			return remove ? this.m_searchEntries.remove(searchKey) : this.m_searchEntries.getByKey(searchKey);
		}
	}
	oFF.XObjectExt.release(iterator);
	return null;
};
oFF.VdValueHelp.prototype.releaseObject = function()
{
	this.m_variable = null;
	this.m_listener = null;
	this.m_customObject = null;
	this.m_values = null;
	this.m_searchEntries = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_searchEntries);
	this.m_valueHelpProcessor = oFF.XObjectExt.release(this.m_valueHelpProcessor);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVhMobileMemberSelector = function() {};
oFF.VdVhMobileMemberSelector.prototype = new oFF.XObject();
oFF.VdVhMobileMemberSelector.prototype._ff_c = "VdVhMobileMemberSelector";

oFF.VdVhMobileMemberSelector.VIEW_NAME = "vhMobileMemberSelector";
oFF.VdVhMobileMemberSelector.create = function(context, variable, vdConfiguration, selectedItem, listener)
{
	var obj = new oFF.VdVhMobileMemberSelector();
	obj.setupExt(context, vdConfiguration);
	obj.setSelectionFinishedListener(listener);
	obj.setVariable(variable, selectedItem);
	return obj;
};
oFF.VdVhMobileMemberSelector.prototype.m_listener = null;
oFF.VdVhMobileMemberSelector.prototype.m_context = null;
oFF.VdVhMobileMemberSelector.prototype.m_vdConfig = null;
oFF.VdVhMobileMemberSelector.prototype.m_page = null;
oFF.VdVhMobileMemberSelector.prototype.m_fdController = null;
oFF.VdVhMobileMemberSelector.prototype.m_selectedItem = null;
oFF.VdVhMobileMemberSelector.prototype.setupExt = function(context, vdConfiguration)
{
	this.m_vdConfig = vdConfiguration;
	var genesis = context.getUiManager().getFreeGenesis();
	this.m_page = genesis.newControl(oFF.UiType.PAGE);
	this.m_page.setName("VdVhMobileMemberSelectorView");
	this.m_page.addCssClass("ffVdVhMobileViewWrapperPage");
	this.m_page.setShowNavButton(false);
	this.m_page.setShowHeader(false);
	var noDimLbl = this.m_page.setNewContent(oFF.UiType.LABEL);
	noDimLbl.setText("No variable specified!");
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForPage(this.m_page);
	this.m_context = oFF.OlapUiContext.createWithOtherContext(context, displayFactory);
};
oFF.VdVhMobileMemberSelector.prototype.releaseObject = function()
{
	this.m_vdConfig = null;
	this.m_page = oFF.XObjectExt.release(this.m_page);
	this.m_fdController = oFF.XObjectExt.release(this.m_fdController);
	this.m_context = oFF.XObjectExt.release(this.m_context);
	this.m_selectedItem = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileMemberSelector.prototype.getPage = function()
{
	return this.m_page;
};
oFF.VdVhMobileMemberSelector.prototype.getViewName = function()
{
	return oFF.VdVhMobileMemberSelector.VIEW_NAME;
};
oFF.VdVhMobileMemberSelector.prototype.setSelectionFinishedListener = function(listener)
{
	this.m_listener = listener;
};
oFF.VdVhMobileMemberSelector.prototype.setVariable = function(variable, selectedItem)
{
	if (oFF.notNull(variable))
	{
		this.m_page.clearContent();
		var selectedItemsList = null;
		if (oFF.notNull(selectedItem))
		{
			this.m_selectedItem = selectedItem;
			selectedItemsList = oFF.XCollectionUtils.singletonList(selectedItem);
		}
		var fdConfig = oFF.FdConfiguration.create("", oFF.UiSelectionMode.SINGLE_SELECT_LEFT, selectedItemsList);
		fdConfig.setResizable(false);
		fdConfig.getEvents().registerOnSelectionChange(this);
		if (oFF.notNull(this.m_vdConfig))
		{
			fdConfig.setDimensionDisplayInfo(this.m_vdConfig.getDimensionDisplayInfo(variable.getDimension().getName()));
		}
		this.m_fdController = oFF.FdFactory.createFactory(this.m_context).newFilterDialogInstanceForVariable(variable, fdConfig, this);
		this.m_fdController.openDialog();
		this.m_page.clearPageButtons();
	}
};
oFF.VdVhMobileMemberSelector.prototype.triggerSelection = function()
{
	if (oFF.notNull(this.m_fdController))
	{
		this.m_fdController.confirmSelection();
	}
};
oFF.VdVhMobileMemberSelector.prototype.getSelectedItem = function()
{
	return this.m_selectedItem;
};
oFF.VdVhMobileMemberSelector.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(selection) && selection.hasElements())
	{
		this.m_selectedItem = selection.get(0);
	}
	else
	{
		this.m_selectedItem = null;
	}
	this.m_listener.onVhMobileValuesSelected(this);
};
oFF.VdVhMobileMemberSelector.prototype.onFilterDialogCancel = function()
{
	this.m_selectedItem = null;
};
oFF.VdVhMobileMemberSelector.prototype.onSelectionChange = function(selection)
{
	if (oFF.notNull(selection) && selection.hasElements())
	{
		this.m_selectedItem = selection.get(0);
	}
	else
	{
		this.m_selectedItem = null;
	}
	if (oFF.notNull(this.m_selectedItem))
	{
		this.m_listener.onVhMobileValuesSelected(this);
	}
};

oFF.VdDateMultiView = function() {};
oFF.VdDateMultiView.prototype = new oFF.VdAbstractValueView();
oFF.VdDateMultiView.prototype._ff_c = "VdDateMultiView";

oFF.VdDateMultiView.create = function(uiMgr)
{
	var obj = new oFF.VdDateMultiView();
	obj.setupExt(uiMgr);
	return obj;
};
oFF.VdDateMultiView.prototype.m_root = null;
oFF.VdDateMultiView.prototype.m_dropdown = null;
oFF.VdDateMultiView.prototype.m_datePicker1 = null;
oFF.VdDateMultiView.prototype.m_datePicker2 = null;
oFF.VdDateMultiView.prototype.m_deleteLineBtn = null;
oFF.VdDateMultiView.prototype.setupExt = function(uiMgr)
{
	this.m_root = uiMgr.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setName("VariableDialogVariableMember");
	this.m_root.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_root.setWidth(oFF.UiCssLength.create("100%"));
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	var inputContainer = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	inputContainer.addCssClass("ffVdVariableMemberInputContainer");
	inputContainer.setWidth(oFF.UiCssLength.create("100%"));
	var smartphoneView = uiMgr.getDeviceInfo().isSmartphone();
	if (smartphoneView)
	{
		inputContainer.setDirection(oFF.UiFlexDirection.COLUMN);
		inputContainer.setPadding(oFF.UiCssBoxEdges.create("0 0 10px 0"));
	}
	else
	{
		inputContainer.setDirection(oFF.UiFlexDirection.ROW);
		inputContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
		inputContainer.setGap(oFF.UiCssGap.create("5px"));
	}
	this.m_dropdown = inputContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_dropdown.setName("VariableDialogOperatorDd1");
	this.m_dropdown.setWidth(oFF.UiCssLength.create("100px"));
	this.m_dropdown.setFlex("0 0 auto");
	this.m_datePicker1 = inputContainer.addNewItemOfType(oFF.UiType.DATE_PICKER);
	this.m_datePicker1.setName("VariableDialogDatePicker1");
	this.m_datePicker1.setFlex("auto");
	this.m_datePicker2 = inputContainer.addNewItemOfType(oFF.UiType.DATE_PICKER);
	this.m_datePicker2.setName("VariableDialogDatePicker2");
	this.m_datePicker2.setFlex("auto");
	if (smartphoneView)
	{
		this.m_dropdown.setWidth(oFF.UiCssLength.create("100%"));
		this.m_datePicker1.setWidth(oFF.UiCssLength.create("100%"));
		this.m_datePicker2.setWidth(oFF.UiCssLength.create("100%"));
	}
	this.m_deleteLineBtn = this.m_root.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_deleteLineBtn.setName("VariableDialogDeleteLineBtn");
	this.m_deleteLineBtn.setIcon("sys-cancel");
	this.m_deleteLineBtn.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_deleteLineBtn.setPadding(oFF.UiCssBoxEdges.create("0 0 0 5px"));
	this.m_deleteLineBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
};
oFF.VdDateMultiView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdDateMultiView.prototype.getDropdown = function()
{
	return this.m_dropdown;
};
oFF.VdDateMultiView.prototype.setDropdownVisible = function(visible)
{
	return this.m_dropdown.setVisible(visible);
};
oFF.VdDateMultiView.prototype.getDatePicker1 = function()
{
	return this.m_datePicker1;
};
oFF.VdDateMultiView.prototype.getDatePicker2 = function()
{
	return this.m_datePicker2;
};
oFF.VdDateMultiView.prototype.setDateValueFormat = function(valueFormat)
{
	this.m_datePicker1.setValueFormat(valueFormat);
	this.m_datePicker2.setValueFormat(valueFormat);
};
oFF.VdDateMultiView.prototype.setDateDisplayFormat = function(displayFormat)
{
	this.m_datePicker1.setDisplayFormat(displayFormat);
	this.m_datePicker2.setDisplayFormat(displayFormat);
};
oFF.VdDateMultiView.prototype.setDatePicker1Visible = function(visible)
{
	return this.m_datePicker1.setVisible(visible);
};
oFF.VdDateMultiView.prototype.setDatePicker2Visible = function(visible)
{
	return this.m_datePicker2.setVisible(visible);
};
oFF.VdDateMultiView.prototype.getDeleteLineButton = function()
{
	return this.m_deleteLineBtn;
};
oFF.VdDateMultiView.prototype.setDeleteLineButtonVisible = function(visible, isFirst)
{
	this.m_root.setPadding(oFF.UiCssBoxEdges.create("0"));
	if (!visible && !isFirst)
	{
		if (this.m_root.getUiManager().getDeviceInfo().isMobile())
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 45px 0 0"));
		}
		else
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 37px 0 0"));
		}
	}
	return this.m_deleteLineBtn.setVisible(visible);
};
oFF.VdDateMultiView.prototype.releaseObject = function()
{
	this.m_dropdown = oFF.XObjectExt.release(this.m_dropdown);
	this.m_datePicker1 = oFF.XObjectExt.release(this.m_datePicker1);
	this.m_datePicker2 = oFF.XObjectExt.release(this.m_datePicker2);
	this.m_deleteLineBtn = oFF.XObjectExt.release(this.m_deleteLineBtn);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.VdAbstractValueView.prototype.releaseObject.call( this );
};

oFF.VdDateSingleView = function() {};
oFF.VdDateSingleView.prototype = new oFF.VdAbstractValueView();
oFF.VdDateSingleView.prototype._ff_c = "VdDateSingleView";

oFF.VdDateSingleView.create = function(uiMgr)
{
	var obj = new oFF.VdDateSingleView();
	obj.setupExt(uiMgr);
	return obj;
};
oFF.VdDateSingleView.prototype.m_root = null;
oFF.VdDateSingleView.prototype.m_datePicker = null;
oFF.VdDateSingleView.prototype.m_deleteLineBtn = null;
oFF.VdDateSingleView.prototype.setupExt = function(uiMgr)
{
	this.m_root = uiMgr.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setName("VariableDialogVariableMember");
	this.m_root.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_root.setWidth(oFF.UiCssLength.create("100%"));
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setGap(oFF.UiCssGap.create("5px"));
	this.m_datePicker = this.m_root.addNewItemOfType(oFF.UiType.DATE_PICKER);
	this.m_datePicker.setName("VariableDialogDatePicker1");
	this.m_datePicker.setWidth(oFF.UiCssLength.create("100%"));
	this.m_deleteLineBtn = this.m_root.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_deleteLineBtn.setName("VariableDialogDeleteLineBtn");
	this.m_deleteLineBtn.setIcon("sys-cancel");
	this.m_deleteLineBtn.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_deleteLineBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
};
oFF.VdDateSingleView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdDateSingleView.prototype.getDatePicker1 = function()
{
	return this.m_datePicker;
};
oFF.VdDateSingleView.prototype.setDateValueFormat = function(valueFormat)
{
	this.m_datePicker.setValueFormat(valueFormat);
};
oFF.VdDateSingleView.prototype.setDateDisplayFormat = function(displayFormat)
{
	this.m_datePicker.setDisplayFormat(displayFormat);
};
oFF.VdDateSingleView.prototype.setDatePicker1Visible = function(visible)
{
	return this.m_datePicker.setVisible(visible);
};
oFF.VdDateSingleView.prototype.getDeleteLineButton = function()
{
	return this.m_deleteLineBtn;
};
oFF.VdDateSingleView.prototype.setDeleteLineButtonVisible = function(visible, isFirst)
{
	this.m_root.setPadding(oFF.UiCssBoxEdges.create("0"));
	if (!visible && !isFirst)
	{
		if (this.m_root.getUiManager().getDeviceInfo().isMobile())
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 45px 0 0"));
		}
		else
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 37px 0 0"));
		}
	}
	return this.m_deleteLineBtn.setVisible(visible);
};
oFF.VdDateSingleView.prototype.releaseObject = function()
{
	this.m_deleteLineBtn = oFF.XObjectExt.release(this.m_deleteLineBtn);
	this.m_datePicker = oFF.XObjectExt.release(this.m_datePicker);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.VdAbstractValueView.prototype.releaseObject.call( this );
};

oFF.VdDropdownSingleView = function() {};
oFF.VdDropdownSingleView.prototype = new oFF.VdAbstractValueView();
oFF.VdDropdownSingleView.prototype._ff_c = "VdDropdownSingleView";

oFF.VdDropdownSingleView.create = function(uiMgr)
{
	var obj = new oFF.VdDropdownSingleView();
	obj.setupExt(uiMgr);
	return obj;
};
oFF.VdDropdownSingleView.prototype.m_dropdown = null;
oFF.VdDropdownSingleView.prototype.setupExt = function(uiMgr)
{
	this.m_dropdown = uiMgr.newControl(oFF.UiType.DROPDOWN);
	this.m_dropdown.setName("VariableDialogOperatorDd1");
	this.m_dropdown.setWidth(oFF.UiCssLength.create("100%"));
};
oFF.VdDropdownSingleView.prototype.getRoot = function()
{
	return this.m_dropdown;
};
oFF.VdDropdownSingleView.prototype.getDropdown = function()
{
	return this.m_dropdown;
};
oFF.VdDropdownSingleView.prototype.setDropdownVisible = function(visible)
{
	return this.m_dropdown.setVisible(visible);
};
oFF.VdDropdownSingleView.prototype.releaseObject = function()
{
	this.m_dropdown = oFF.XObjectExt.release(this.m_dropdown);
	oFF.VdAbstractValueView.prototype.releaseObject.call( this );
};

oFF.VdInputMultiView = function() {};
oFF.VdInputMultiView.prototype = new oFF.VdAbstractValueView();
oFF.VdInputMultiView.prototype._ff_c = "VdInputMultiView";

oFF.VdInputMultiView.create = function(uiMgr)
{
	var obj = new oFF.VdInputMultiView();
	obj.setupExt(uiMgr);
	return obj;
};
oFF.VdInputMultiView.prototype.m_root = null;
oFF.VdInputMultiView.prototype.m_dropdown = null;
oFF.VdInputMultiView.prototype.m_input1 = null;
oFF.VdInputMultiView.prototype.m_valueHelpIco1 = null;
oFF.VdInputMultiView.prototype.m_deleteIco1 = null;
oFF.VdInputMultiView.prototype.m_input2 = null;
oFF.VdInputMultiView.prototype.m_valueHelpIco2 = null;
oFF.VdInputMultiView.prototype.m_deleteIco2 = null;
oFF.VdInputMultiView.prototype.m_deleteLineBtn = null;
oFF.VdInputMultiView.prototype.setupExt = function(uiMgr)
{
	this.m_root = uiMgr.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setName("VariableDialogVariableMember");
	this.m_root.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_root.setWidth(oFF.UiCssLength.create("100%"));
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	var inputContainer = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	inputContainer.addCssClass("ffVdVariableMemberInputContainer");
	inputContainer.setWidth(oFF.UiCssLength.create("100%"));
	var smartphoneView = uiMgr.getDeviceInfo().isSmartphone();
	if (smartphoneView)
	{
		inputContainer.setDirection(oFF.UiFlexDirection.COLUMN);
		inputContainer.setPadding(oFF.UiCssBoxEdges.create("0 0 10px 0"));
	}
	else
	{
		inputContainer.setDirection(oFF.UiFlexDirection.ROW);
		inputContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
		inputContainer.setGap(oFF.UiCssGap.create("5px"));
	}
	this.m_dropdown = inputContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_dropdown.setName("VariableDialogOperatorDd1");
	this.m_dropdown.setWidth(oFF.UiCssLength.create("100px"));
	this.m_dropdown.setFlex("0 0 auto");
	this.m_input1 = inputContainer.addNewItemOfType(oFF.UiType.INPUT);
	this.m_input1.setName("VariableDialogValueIpt1");
	this.m_input1.setFlex("auto");
	this.m_valueHelpIco1 = uiMgr.newControl(oFF.UiType.ICON);
	this.m_valueHelpIco1.setName("VariableDialogValueHelpBtn1");
	this.m_valueHelpIco1.setIcon("value-help");
	this.m_valueHelpIco1.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VALUE_HELP));
	this.m_input1.addEndIcon(this.m_valueHelpIco1);
	this.m_deleteIco1 = uiMgr.newControl(oFF.UiType.ICON);
	this.m_deleteIco1.setName("VariableDialogDeleteBtn1");
	this.m_deleteIco1.setIcon("sys-cancel");
	this.m_deleteIco1.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_input1.addEndIcon(this.m_deleteIco1);
	this.m_input2 = inputContainer.addNewItemOfType(oFF.UiType.INPUT);
	this.m_input2.setName("VariableDialogValueIpt2");
	this.m_input2.setFlex("auto");
	this.m_valueHelpIco2 = uiMgr.newControl(oFF.UiType.ICON);
	this.m_valueHelpIco2.setName("VariableDialogValueHelpBtn2");
	this.m_valueHelpIco2.setIcon("value-help");
	this.m_valueHelpIco2.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VALUE_HELP));
	this.m_input2.addEndIcon(this.m_valueHelpIco2);
	this.m_deleteIco2 = uiMgr.newControl(oFF.UiType.ICON);
	this.m_deleteIco2.setName("VariableDialogDeleteBtn2");
	this.m_deleteIco2.setIcon("sys-cancel");
	this.m_deleteIco2.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_input2.addEndIcon(this.m_deleteIco2);
	if (smartphoneView)
	{
		this.m_dropdown.setWidth(oFF.UiCssLength.create("100%"));
		this.m_input1.setWidth(oFF.UiCssLength.create("100%"));
		this.m_input2.setWidth(oFF.UiCssLength.create("100%"));
	}
	this.m_deleteLineBtn = this.m_root.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_deleteLineBtn.setName("VariableDialogDeleteLineBtn");
	this.m_deleteLineBtn.setIcon("sys-cancel");
	this.m_deleteLineBtn.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_deleteLineBtn.setPadding(oFF.UiCssBoxEdges.create("0 0 0 5px"));
	this.m_deleteLineBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
};
oFF.VdInputMultiView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdInputMultiView.prototype.getDropdown = function()
{
	return this.m_dropdown;
};
oFF.VdInputMultiView.prototype.setDropdownVisible = function(visible)
{
	return this.m_dropdown.setVisible(visible);
};
oFF.VdInputMultiView.prototype.getInput1 = function()
{
	return this.m_input1;
};
oFF.VdInputMultiView.prototype.getInput2 = function()
{
	return this.m_input2;
};
oFF.VdInputMultiView.prototype.setInput1Visible = function(visible)
{
	return this.m_input1.setVisible(visible);
};
oFF.VdInputMultiView.prototype.setInput2Visible = function(visible)
{
	return this.m_input2.setVisible(visible);
};
oFF.VdInputMultiView.prototype.getValueHelpButton1 = function()
{
	return this.m_valueHelpIco1;
};
oFF.VdInputMultiView.prototype.getValueHelpButton2 = function()
{
	return this.m_valueHelpIco2;
};
oFF.VdInputMultiView.prototype.getDeleteButton1 = function()
{
	return this.m_deleteIco1;
};
oFF.VdInputMultiView.prototype.getDeleteButton2 = function()
{
	return this.m_deleteIco2;
};
oFF.VdInputMultiView.prototype.getDeleteLineButton = function()
{
	return this.m_deleteLineBtn;
};
oFF.VdInputMultiView.prototype.setDeleteLineButtonVisible = function(visible, isFirst)
{
	this.m_root.setPadding(oFF.UiCssBoxEdges.create("0"));
	if (!visible && !isFirst)
	{
		if (this.m_root.getUiManager().getDeviceInfo().isMobile())
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 45px 0 0"));
		}
		else
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 37px 0 0"));
		}
	}
	return this.m_deleteLineBtn.setVisible(visible);
};
oFF.VdInputMultiView.prototype.releaseObject = function()
{
	this.m_dropdown = oFF.XObjectExt.release(this.m_dropdown);
	this.m_input1 = oFF.XObjectExt.release(this.m_input1);
	this.m_deleteIco1 = oFF.XObjectExt.release(this.m_deleteIco1);
	this.m_valueHelpIco1 = oFF.XObjectExt.release(this.m_valueHelpIco1);
	this.m_input2 = oFF.XObjectExt.release(this.m_input2);
	this.m_deleteIco2 = oFF.XObjectExt.release(this.m_deleteIco2);
	this.m_valueHelpIco2 = oFF.XObjectExt.release(this.m_valueHelpIco2);
	this.m_deleteLineBtn = oFF.XObjectExt.release(this.m_deleteLineBtn);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.VdAbstractValueView.prototype.releaseObject.call( this );
};

oFF.VdInputSingleView = function() {};
oFF.VdInputSingleView.prototype = new oFF.VdAbstractValueView();
oFF.VdInputSingleView.prototype._ff_c = "VdInputSingleView";

oFF.VdInputSingleView.create = function(uiMgr)
{
	var obj = new oFF.VdInputSingleView();
	obj.setupExt(uiMgr);
	return obj;
};
oFF.VdInputSingleView.prototype.m_root = null;
oFF.VdInputSingleView.prototype.m_input = null;
oFF.VdInputSingleView.prototype.m_valueHelpIco = null;
oFF.VdInputSingleView.prototype.m_deleteLineBtn = null;
oFF.VdInputSingleView.prototype.setupExt = function(uiMgr)
{
	this.m_root = uiMgr.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setName("VariableDialogVariableMember");
	this.m_root.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_root.setWidth(oFF.UiCssLength.create("100%"));
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setGap(oFF.UiCssGap.create("5px"));
	this.m_input = uiMgr.newControl(oFF.UiType.INPUT);
	this.m_input.setName("VariableDialogValueIpt1");
	this.m_input.setFlex("auto");
	this.m_root.addItem(this.m_input);
	this.m_valueHelpIco = uiMgr.newControl(oFF.UiType.ICON);
	this.m_valueHelpIco.setName("VariableDialogValueHelpBtn1");
	this.m_valueHelpIco.setIcon("value-help");
	this.m_valueHelpIco.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VALUE_HELP));
	this.m_input.addEndIcon(this.m_valueHelpIco);
	this.m_deleteLineBtn = uiMgr.newControl(oFF.UiType.BUTTON);
	this.m_deleteLineBtn.setName("VariableDialogDeleteLineBtn");
	this.m_deleteLineBtn.setIcon("sys-cancel");
	this.m_deleteLineBtn.setTooltip(uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_DELETE));
	this.m_deleteLineBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_root.addItem(this.m_deleteLineBtn);
};
oFF.VdInputSingleView.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.VdInputSingleView.prototype.getInput1 = function()
{
	return this.m_input;
};
oFF.VdInputSingleView.prototype.setInput1Visible = function(visible)
{
	return this.m_input.setVisible(visible);
};
oFF.VdInputSingleView.prototype.getValueHelpButton1 = function()
{
	return this.m_valueHelpIco;
};
oFF.VdInputSingleView.prototype.getDeleteLineButton = function()
{
	return this.m_deleteLineBtn;
};
oFF.VdInputSingleView.prototype.setDeleteLineButtonVisible = function(visible, isFirst)
{
	this.m_root.setPadding(oFF.UiCssBoxEdges.create("0"));
	if (!visible && !isFirst)
	{
		if (this.m_root.getUiManager().getDeviceInfo().isMobile())
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 45px 0 0"));
		}
		else
		{
			this.m_root.setPadding(oFF.UiCssBoxEdges.create("0 37px 0 0"));
		}
	}
	return this.m_deleteLineBtn.setVisible(visible);
};
oFF.VdInputSingleView.prototype.releaseObject = function()
{
	this.m_deleteLineBtn = oFF.XObjectExt.release(this.m_deleteLineBtn);
	this.m_valueHelpIco = oFF.XObjectExt.release(this.m_valueHelpIco);
	this.m_input = oFF.XObjectExt.release(this.m_input);
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.VdAbstractValueView.prototype.releaseObject.call( this );
};

oFF.FdEntryPoint = function() {};
oFF.FdEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.FdEntryPoint.prototype._ff_c = "FdEntryPoint";

oFF.FdEntryPoint.createEntryPoint = function(application, title)
{
	var entryPoint = new oFF.FdEntryPoint();
	entryPoint.setupEntryPoint(application);
	entryPoint.setupFdEntryPoint(title);
	return entryPoint;
};
oFF.FdEntryPoint.createEntryPointForUiContext = function(uiContext, title)
{
	var entryPoint = new oFF.FdEntryPoint();
	entryPoint.setupEntryPointWithContext(uiContext);
	entryPoint.setupFdEntryPoint(title);
	return entryPoint;
};
oFF.FdEntryPoint.supportsFilterOnDimension = function(dimension)
{
	return oFF.notNull(dimension) && dimension.getKeyField().isFilterable();
};
oFF.FdEntryPoint.prototype.m_fdController = null;
oFF.FdEntryPoint.prototype.m_configuration = null;
oFF.FdEntryPoint.prototype.m_dimension = null;
oFF.FdEntryPoint.prototype.m_filterName = null;
oFF.FdEntryPoint.prototype.m_onBeforeFilterChange = null;
oFF.FdEntryPoint.prototype.m_onAfterFilterChange = null;
oFF.FdEntryPoint.prototype.m_onCancel = null;
oFF.FdEntryPoint.prototype.setupFdEntryPoint = function(title)
{
	var uiContext = this.getUiContext();
	this.m_configuration = oFF.FdConfiguration.createWithContext(title, oFF.UiSelectionMode.SINGLE_SELECT_LEFT, null, uiContext);
};
oFF.FdEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.clearTmpData();
};
oFF.FdEntryPoint.prototype.clearTmpData = function()
{
	this.m_fdController = null;
	this.m_dimension = null;
	this.m_filterName = null;
	this.m_onBeforeFilterChange = null;
	this.m_onAfterFilterChange = null;
	this.m_onCancel = null;
};
oFF.FdEntryPoint.prototype.getConfiguration = function()
{
	return this.m_configuration;
};
oFF.FdEntryPoint.prototype.getEvents = function()
{
	return this.m_configuration.getEvents();
};
oFF.FdEntryPoint.prototype.openWithVariable = function(variable, listener)
{
	if (!this.isOpen())
	{
		this.m_fdController = this.getUiContext().getFilterDialogFactory().newFilterDialogInstanceForVariable(variable, this.m_configuration, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdEntryPoint.prototype.openWithDimension = function(dimension, listener)
{
	if (!this.isOpen())
	{
		this.m_fdController = this.getUiContext().getFilterDialogFactory().newFilterDialogInstanceForDimension(dimension, this.m_configuration, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdEntryPoint.prototype.openWithMeasureBasedFilter = function(measureBasedFilter, member, listener)
{
	if (!this.isOpen() && oFF.notNull(measureBasedFilter) && measureBasedFilter.getQueryModel().getModelCapabilities().supportsFilterMeasureBased() && (oFF.notNull(member) || this.hasFormula(measureBasedFilter)))
	{
		this.m_fdController = this.getUiContext().getFilterDialogFactory().newFilterDialogInstanceForMeasureBasedFilter(measureBasedFilter, member, this.m_configuration, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdEntryPoint.prototype.hasFormula = function(measureBasedFilter)
{
	var formula = measureBasedFilter.getFormula();
	if (oFF.notNull(formula) && formula.getOlapComponentType() === oFF.OlapComponentType.FORMULA_FUNCTION)
	{
		var formulaFct = formula;
		return oFF.XString.isEqual(formulaFct.getFunctionName(), oFF.FormulaOperator.IF.getName());
	}
	return false;
};
oFF.FdEntryPoint.prototype.openWithLinkedMeasureBasedFilter = function(queryModel, member, linkedFilterName, onFilterChanged, onCancel)
{
	if (!this.isOpen() && oFF.notNull(queryModel) && oFF.notNull(member) && oFF.XStringUtils.isNotNullAndNotEmpty(linkedFilterName) && queryModel.getModelCapabilities().supportsFilterMeasureBased())
	{
		this.m_filterName = linkedFilterName;
		this.m_onAfterFilterChange = onFilterChanged;
		this.m_onCancel = onCancel;
		var mbf = null;
		var linkedFilter = queryModel.getFilter().getLinkedFilter(linkedFilterName);
		if (oFF.notNull(linkedFilter))
		{
			var filterRootElement = linkedFilter.getFilterRootElement();
			if (oFF.notNull(filterRootElement) && filterRootElement.getOlapComponentType() === oFF.FilterComponentType.FILTER_MEASURE_BASED)
			{
				mbf = filterRootElement;
			}
		}
		if (oFF.isNull(mbf))
		{
			mbf = oFF.QFactory.createFilterMeasureBased(queryModel, oFF.XStringUtils.concatenate3(linkedFilterName, "-", "MeasureBasedFilter"));
		}
		this.m_fdController = this.getUiContext().getFilterDialogFactory().newFilterDialogInstanceForMeasureBasedFilter(mbf, member, this.m_configuration, this);
		this.m_fdController.openDialog();
	}
};
oFF.FdEntryPoint.prototype.onMeasureBasedFilterOk = function(measureBasedFilter, memberName)
{
	var queryFilter = measureBasedFilter.getQueryModel().getFilter();
	queryFilter.queueEventing();
	if (measureBasedFilter.getFormula() === null)
	{
		queryFilter.linkFilter(this.m_filterName, null);
	}
	else
	{
		var linkedFilter = this.getFilterExpression(queryFilter, this.m_filterName);
		if (linkedFilter.getFilterRootElement() !== measureBasedFilter)
		{
			linkedFilter.setComplexRoot(measureBasedFilter);
		}
	}
	queryFilter.resumeEventing();
	if (oFF.notNull(this.m_onAfterFilterChange))
	{
		this.m_onAfterFilterChange();
	}
	this.clearTmpData();
};
oFF.FdEntryPoint.prototype.openWithDynamicFilter = function(dimension, onBeforeFilterChange, onAfterFilterChange, onCancel)
{
	if (this.prepareOpenWithFilter(dimension, dimension.getFilter(), null, onBeforeFilterChange, onAfterFilterChange, onCancel))
	{
		this.m_configuration.setOfferingHierarchyChange(false);
		this.openWithDimension(dimension, this);
	}
	else if (oFF.notNull(onCancel))
	{
		onCancel();
	}
};
oFF.FdEntryPoint.prototype.openWithLinkedFilter = function(dimension, linkedFilterName, onBeforeFilterChange, onAfterFilterChange, onCancel)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(linkedFilterName))
	{
		if (this.prepareOpenWithFilter(dimension, this.getFilter(dimension, linkedFilterName), linkedFilterName, onBeforeFilterChange, onAfterFilterChange, onCancel))
		{
			this.m_configuration.setOfferingHierarchyChange(true);
			this.openWithDimension(dimension, this);
			return;
		}
	}
	if (oFF.notNull(onCancel))
	{
		onCancel();
	}
};
oFF.FdEntryPoint.prototype.prepareOpenWithFilter = function(dimension, filter, filterName, onBeforeFilterChange, onAfterFilterChange, onCancel)
{
	if (!this.isOpen() && oFF.notNull(dimension))
	{
		var selection = this.m_configuration.getItemFactory().createSelectionFromFilter(dimension, filter);
		if (oFF.XCollectionUtils.hasElements(selection) || oFF.FdEntryPoint.supportsFilterOnDimension(dimension))
		{
			this.m_configuration.setSelection(selection);
			this.m_filterName = filterName;
			this.m_dimension = dimension;
			this.m_onBeforeFilterChange = onBeforeFilterChange;
			this.m_onAfterFilterChange = onAfterFilterChange;
			this.m_onCancel = onCancel;
			return true;
		}
	}
	return false;
};
oFF.FdEntryPoint.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(this.m_onBeforeFilterChange))
	{
		this.m_onBeforeFilterChange();
	}
	var hasSelection = oFF.XCollectionUtils.hasElements(selection);
	var filter = this.getFilter(this.m_dimension, this.m_filterName);
	if (hasSelection || oFF.notNull(filter))
	{
		var queryFilter = this.m_dimension.getQueryModel().getFilter();
		queryFilter.queueEventing();
		var filterExp = this.getFilterExpression(queryFilter, this.m_filterName);
		var isLinkedFilter = oFF.XStringUtils.isNotNullAndNotEmpty(this.m_filterName);
		if (hasSelection)
		{
			this.updateFilter(oFF.notNull(filter) ? filter : filterExp.getCartesianProductWithDefault().getCartesianListWithDefault(this.m_dimension), selection, isLinkedFilter);
		}
		else
		{
			filterExp.removeFilterById(filter.getUniqueId());
			if (isLinkedFilter && !filterExp.getFilterRootElement().getChildren().hasNext())
			{
				queryFilter.linkFilter(this.m_filterName, null);
			}
		}
		queryFilter.resumeEventing();
	}
	if (oFF.notNull(this.m_onAfterFilterChange))
	{
		this.m_onAfterFilterChange();
	}
	this.clearTmpData();
};
oFF.FdEntryPoint.prototype.getFilter = function(dimension, linkedFilterName)
{
	if (oFF.XStringUtils.isNullOrEmpty(linkedFilterName))
	{
		return dimension.getFilter();
	}
	var linkedFilter = dimension.getQueryModel().getFilter().getLinkedFilter(linkedFilterName);
	return oFF.notNull(linkedFilter) ? linkedFilter.getCartesianList(dimension) : null;
};
oFF.FdEntryPoint.prototype.getFilterExpression = function(queryFilter, linkedFilterName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(linkedFilterName))
	{
		var filterExp = queryFilter.getLinkedFilter(linkedFilterName);
		if (oFF.isNull(filterExp))
		{
			filterExp = oFF.QFactory.createFilterExpression(queryFilter, queryFilter);
			queryFilter.linkFilter(linkedFilterName, filterExp);
		}
		filterExp.setPreserveOnRepoSerialization(true);
		return filterExp;
	}
	return queryFilter.getDynamicFilter();
};
oFF.FdEntryPoint.prototype.updateFilter = function(filter, selection, convertToFlat)
{
	filter.clear();
	var hierarchyName = selection.get(0).getHierarchyName();
	var isHierarchical = oFF.XStringUtils.isNotNullAndNotEmpty(hierarchyName);
	var keyField = isHierarchical ? this.m_dimension.getHierarchyKeyField() : this.m_dimension.getFlatKeyField();
	var displayKeyField = isHierarchical ? this.m_dimension.getHierarchyDisplayKeyField() : this.m_dimension.getFlatDisplayKeyField();
	if (displayKeyField === keyField)
	{
		displayKeyField = null;
	}
	var textField = isHierarchical ? this.m_dimension.getHierarchyTextField() : this.m_dimension.getFlatTextField();
	var filterCapability = this.m_dimension.getFilterCapabilities().getFilterCapabilitiesByField(keyField);
	var supportedOperatorsExcluding = oFF.notNull(filterCapability) ? filterCapability.getSupportedComparisonOperators(oFF.SetSign.EXCLUDING) : null;
	filter.setHierarchyName(hierarchyName);
	filter.setField(keyField);
	filter.addSupplementField(displayKeyField);
	filter.addSupplementField(textField);
	filter.setConvertToFlatFilter(convertToFlat);
	for (var i = 0; i < selection.size(); i++)
	{
		var selectedItem = selection.get(i);
		var operator = selectedItem.getComparisonOperator().getOriginOperator();
		var filterElement = filter.addNewCartesianElement();
		filterElement.setHierarchyName(filter.getHierarchyName());
		filterElement.setComparisonOperator(operator);
		filterElement.setSetSign(oFF.SetSign.INCLUDING);
		if (selectedItem.isNull())
		{
			filterElement.setComparisonOperator(oFF.ComparisonOperator.IS_NULL);
			if (operator === oFF.ComparisonOperator.NOT_EQUAL && oFF.notNull(supportedOperatorsExcluding) && supportedOperatorsExcluding.contains(oFF.ComparisonOperator.IS_NULL))
			{
				filterElement.setSetSign(oFF.SetSign.EXCLUDING);
			}
		}
		else if (operator === oFF.ComparisonOperator.NOT_EQUAL && oFF.notNull(supportedOperatorsExcluding) && supportedOperatorsExcluding.contains(oFF.ComparisonOperator.EQUAL))
		{
			filterElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
			filterElement.setSetSign(oFF.SetSign.EXCLUDING);
		}
		else if (operator === oFF.ComparisonOperator.NOT_BETWEEN && oFF.notNull(supportedOperatorsExcluding) && supportedOperatorsExcluding.contains(oFF.ComparisonOperator.BETWEEN))
		{
			filterElement.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
			filterElement.setSetSign(oFF.SetSign.EXCLUDING);
		}
		else if (operator === oFF.ComparisonOperator.NOT_MATCH && oFF.notNull(supportedOperatorsExcluding) && supportedOperatorsExcluding.contains(oFF.ComparisonOperator.MATCH))
		{
			filterElement.setComparisonOperator(oFF.ComparisonOperator.MATCH);
			filterElement.setSetSign(oFF.SetSign.EXCLUDING);
		}
		if (selectedItem.getType() === oFF.FdItemType.RANGE)
		{
			this.setFilterValue(filterElement.getLow(), selectedItem.getLow(), keyField, displayKeyField, textField, filterElement);
			this.setFilterValue(filterElement.getHigh(), selectedItem.getHigh(), keyField, displayKeyField, textField, filterElement);
		}
		else if (!selectedItem.isNull())
		{
			this.setFilterValue(filterElement.getLow(), selectedItem, keyField, displayKeyField, textField, filterElement);
		}
	}
};
oFF.FdEntryPoint.prototype.setFilterValue = function(valueBag, item, keyField, displayKeyField, textField, filterElement)
{
	if (item.getType() === oFF.FdItemType.VALUEHELP)
	{
		valueBag.setDimensionMember(item.getNode().getDimensionMember());
	}
	else
	{
		var key = item.getKey();
		valueBag.setValue(oFF.XValueUtil.getValueFromString(oFF.notNull(key) ? key : "", keyField.getValueType()));
	}
	filterElement.setField(keyField);
	if (item.hasDisplayKey())
	{
		this.addSupplement(valueBag, displayKeyField, item.getDisplayKey());
	}
	this.addSupplement(valueBag, textField, item.getText());
};
oFF.FdEntryPoint.prototype.addSupplement = function(valueBag, field, value)
{
	if (oFF.notNull(field) && oFF.notNull(value))
	{
		valueBag.addSupplementValue(field.getName(), value);
	}
};
oFF.FdEntryPoint.prototype.openWithDimensionHierarchies = function(dimension, listener)
{
	if (!this.isOpen())
	{
		this.m_fdController = this.getUiContext().getFilterDialogFactory().newFilterDialogInstanceForHierarchyCatalog(dimension, this.m_configuration, listener);
		this.m_fdController.openDialog();
	}
};
oFF.FdEntryPoint.prototype.onFilterDialogCancel = function()
{
	if (oFF.notNull(this.m_onCancel))
	{
		this.m_onCancel();
	}
	this.clearTmpData();
};
oFF.FdEntryPoint.prototype.cancelDialog = function()
{
	if (this.isOpen())
	{
		this.m_fdController.cancelSelection();
	}
};
oFF.FdEntryPoint.prototype.isOpen = function()
{
	return oFF.notNull(this.m_fdController) && this.m_fdController.isOpen();
};

oFF.FdOrcaEntryPoint = function() {};
oFF.FdOrcaEntryPoint.prototype = new oFF.XObject();
oFF.FdOrcaEntryPoint.prototype._ff_c = "FdOrcaEntryPoint";

oFF.FdOrcaEntryPoint.create = function(application, localization)
{
	var entryPoint = new oFF.FdOrcaEntryPoint();
	entryPoint.setupEntryPoint(application, localization);
	return entryPoint;
};
oFF.FdOrcaEntryPoint.prototype.m_context = null;
oFF.FdOrcaEntryPoint.prototype.m_listener = null;
oFF.FdOrcaEntryPoint.prototype.m_reinitializedQm = null;
oFF.FdOrcaEntryPoint.prototype.m_fdController = null;
oFF.FdOrcaEntryPoint.prototype.setupEntryPoint = function(application, localization)
{
	var uiMgr = application.getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	this.m_context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_context.getLocalization().setExternalLocalization(oFF.OrcaI18nMapping.create(), localization);
};
oFF.FdOrcaEntryPoint.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_context = oFF.XObjectExt.release(this.m_context);
	this.m_fdController = oFF.XObjectExt.release(this.m_fdController);
	this.m_listener = null;
};
oFF.FdOrcaEntryPoint.prototype.prepareVariableProcessorState = function(variable, listener)
{
	this.m_reinitializedQm = null;
	var qm = oFF.notNull(variable) ? variable.getQueryManager() : null;
	if (oFF.notNull(qm) && qm.getVariableProcessorState().isReinitNeeded())
	{
		this.m_reinitializedQm = qm;
		qm.reInitVariablesAfterSubmit(oFF.SyncType.NON_BLOCKING, listener, null);
	}
	else if (oFF.notNull(qm) && !qm.supportsDirectVariableTransfer())
	{
		qm.transferVariables(oFF.SyncType.NON_BLOCKING, listener, null);
	}
	else if (oFF.notNull(listener))
	{
		listener.onVariableProcessorExecuted(oFF.ExtResult.createEmpty(), null, null);
	}
};
oFF.FdOrcaEntryPoint.prototype.openForVariable = function(variable, payload, listener)
{
	if ((oFF.isNull(this.m_fdController) || !this.m_fdController.isOpen()) && oFF.notNull(variable) && variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) && variable.supportsValueHelp())
	{
		var title = this.m_context.getLocalization().getTextWithPlaceholder(oFF.FilterDialogI18n.I18N_FD_SELECT_MEMBER_FOR, variable.getText());
		var selectionMode = this.getSelectionMode(variable, payload);
		var selection = this.deserializeOrcaSelectionData(payload);
		var displayInfo = variable.getQueryManager() !== null && variable.getQueryManager().getSystemType().isTypeOf(oFF.SystemType.HANA) ? oFF.FdDimensionDisplayInfo.DESCRIPTION : oFF.FdDimensionDisplayInfo.QUERY_DEFAULT;
		if (oFF.notNull(payload) && payload.containsKey(oFF.OrcaConstants.DIMENSION_DISPLAY_INFO))
		{
			displayInfo = oFF.OrcaConstants.mapOrcaDisplayInfo(payload.getStringByKey(oFF.OrcaConstants.DIMENSION_DISPLAY_INFO), displayInfo);
		}
		var config = oFF.FdConfiguration.createWithContext(title, selectionMode, selection, this.m_context);
		config.setResizable(false);
		config.setDimensionDisplayInfo(displayInfo);
		if (this.m_context.getDeviceInfo().isMobile())
		{
			config.setDialogWidth(100, oFF.UiCssSizeUnit.PERCENT);
			config.setDialogHeight(100, oFF.UiCssSizeUnit.PERCENT);
		}
		this.m_listener = listener;
		this.m_fdController = this.m_context.getFilterDialogFactory().newFilterDialogInstanceForVariable(variable, config, this);
		this.m_fdController.openDialog();
		return true;
	}
	return false;
};
oFF.FdOrcaEntryPoint.prototype.getSelectionMode = function(variable, payload)
{
	if (oFF.notNull(payload))
	{
		var selectionMode = payload.getStringByKey(oFF.OrcaConstants.SELECTION);
		if (oFF.XString.isEqual(selectionMode, oFF.OrcaConstants.SELECTION_SINGLE))
		{
			return oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
		}
		if (oFF.XString.isEqual(selectionMode, oFF.OrcaConstants.SELECTION_MULTI))
		{
			return oFF.UiSelectionMode.MULTI_SELECT;
		}
	}
	return variable.supportsMultipleValues() ? oFF.UiSelectionMode.MULTI_SELECT : oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
};
oFF.FdOrcaEntryPoint.prototype.isOpen = function()
{
	return oFF.notNull(this.m_fdController) && this.m_fdController.isOpen();
};
oFF.FdOrcaEntryPoint.prototype.close = function()
{
	if (this.isOpen())
	{
		this.m_fdController.cancelSelection();
	}
};
oFF.FdOrcaEntryPoint.prototype.onFilterDialogOk = function(selection)
{
	this.onFilterDialogClose(this.serializeOrcaSelectionData(selection));
};
oFF.FdOrcaEntryPoint.prototype.onFilterDialogCancel = function()
{
	this.onFilterDialogClose(null);
};
oFF.FdOrcaEntryPoint.prototype.onFilterDialogClose = function(selectedData)
{
	if (oFF.notNull(this.m_reinitializedQm) && !this.m_reinitializedQm.isReleased() && this.m_reinitializedQm.getVariableProcessorState().isCancelNeeded())
	{
		this.m_reinitializedQm.cancelReInitVariables(oFF.SyncType.NON_BLOCKING, this, oFF.XStringValue.create(selectedData));
		this.m_reinitializedQm = null;
		return;
	}
	this.m_reinitializedQm = null;
	if (oFF.notNull(selectedData))
	{
		this.m_listener.onOrcaFilterDialogOk(selectedData);
	}
	else
	{
		this.m_listener.onOrcaFilterDialogCancel();
	}
	this.m_fdController = null;
};
oFF.FdOrcaEntryPoint.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.onFilterDialogClose(customIdentifier.getString());
};
oFF.FdOrcaEntryPoint.prototype.deserializeOrcaSelectionData = function(selectedData)
{
	var items = oFF.XList.create();
	var selectedDataList = oFF.PrUtils.getListProperty(selectedData, oFF.OrcaConstants.SELECTED_DATA);
	if (oFF.notNull(selectedDataList))
	{
		var filterDialogItemFactory = this.m_context.getFilterDialogItemFactory();
		for (var i = 0; i < selectedDataList.size(); i++)
		{
			var item = selectedDataList.getStructureAt(i);
			var hasKey = item.containsKey(oFF.OrcaConstants.NAME);
			var hasDisplayKey = item.containsKey(oFF.OrcaConstants.DISPLAY_KEY);
			if (hasKey || hasDisplayKey)
			{
				var key = item.getStringByKey(oFF.OrcaConstants.NAME);
				var displayKey = item.getStringByKey(oFF.OrcaConstants.DISPLAY_KEY);
				var text = item.getStringByKey(oFF.OrcaConstants.DISPLAY_NAME);
				if ((!hasKey || oFF.isNull(key)) && (!hasDisplayKey || oFF.isNull(displayKey)))
				{
					items.add(filterDialogItemFactory.newNullItem());
				}
				else
				{
					items.add(filterDialogItemFactory.newItem(key, displayKey, text));
				}
			}
		}
	}
	return items;
};
oFF.FdOrcaEntryPoint.prototype.serializeOrcaSelectionData = function(selection)
{
	var result = oFF.PrFactory.createStructure();
	var selectedData = result.putNewList(oFF.OrcaConstants.SELECTED_DATA);
	for (var i = 0; i < selection.size(); i++)
	{
		var fdItem = selection.get(i);
		var item = selectedData.addNewStructure();
		if (fdItem.isNull())
		{
			item.putString(oFF.OrcaConstants.NAME, null);
			item.putString(oFF.OrcaConstants.DISPLAY_KEY, null);
			item.putString(oFF.OrcaConstants.DISPLAY_NAME, this.m_context.getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_NULL));
		}
		else
		{
			var key = fdItem.getKey();
			var displayKey = fdItem.getDisplayKey();
			var text = fdItem.getText();
			if (oFF.XString.isEqual(key, "") && oFF.XString.isEqual(displayKey, ""))
			{
				text = this.m_context.getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_NO_VALUE);
			}
			item.putStringNotNull(oFF.OrcaConstants.NAME, key);
			item.putStringNotNull(oFF.OrcaConstants.DISPLAY_KEY, displayKey);
			item.putStringNotNull(oFF.OrcaConstants.DISPLAY_NAME, text);
		}
	}
	return oFF.PrUtils.serialize(result, false, false, 0);
};

oFF.VdOrcaValueParser = function() {};
oFF.VdOrcaValueParser.prototype = new oFF.VdAbstractValueParser();
oFF.VdOrcaValueParser.prototype._ff_c = "VdOrcaValueParser";

oFF.VdOrcaValueParser.createParser = function()
{
	return new oFF.VdOrcaValueParser();
};
oFF.VdOrcaValueParser.parseJsonToStartValues = function(variablesStruct, variableProcessor, linkedVariables)
{
	if (!oFF.XCollectionUtils.hasElements(variablesStruct))
	{
		return null;
	}
	var map = oFF.XHashMapByString.create();
	var keys = variablesStruct.getKeysAsIteratorOfString();
	while (keys.hasNext())
	{
		var varName = keys.next();
		var linked = oFF.notNull(linkedVariables) && linkedVariables.contains(varName);
		var values = oFF.XList.create();
		var variable = variableProcessor.getVariable(varName);
		var valueList = variablesStruct.getStructureByKey(varName).getListByKey(oFF.OrcaConstants.VALUE_DETAILS);
		if (oFF.isNull(variable) || oFF.isNull(valueList))
		{
			continue;
		}
		var isSimpleTypeVar = variable.getVariableType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE);
		for (var i = 0; i < valueList.size(); i++)
		{
			var valueStruct = valueList.getStructureAt(i);
			var operator = oFF.VdComparisonOperator.lookupExt(valueStruct.getStringByKey(oFF.OrcaConstants.OPERATOR), false);
			if (oFF.notNull(operator) && operator.isNullOperator())
			{
				values.add(oFF.VdValue.createValue(operator, oFF.FdItemFactory.createNull(), null));
				continue;
			}
			var firstKey = oFF.PrUtils.getStringValueProperty(valueStruct, oFF.OrcaConstants.OPERAND_1, null);
			var firstText = isSimpleTypeVar ? null : valueStruct.getStringByKey(oFF.OrcaConstants.DESC_1);
			var first = oFF.VdOrcaValueParser.createItem(variable, firstKey, firstText, linked);
			if (!isSimpleTypeVar)
			{
				var secondKey = oFF.PrUtils.getStringValueProperty(valueStruct, oFF.OrcaConstants.OPERAND_2, null);
				var secondText = valueStruct.getStringByKey(oFF.OrcaConstants.DESC_2);
				var second = oFF.VdOrcaValueParser.createItem(variable, secondKey, secondText, linked);
				values.add(oFF.VdValue.createValue(operator, first, second));
			}
			else
			{
				values.add(oFF.VdValue.createValue(operator, first, null));
			}
		}
		map.put(varName, values);
	}
	return map;
};
oFF.VdOrcaValueParser.createItem = function(variable, key, text, isLinked)
{
	if (oFF.VdAbstractValueParser.useKeysAsDisplayKeys(variable, isLinked))
	{
		return oFF.FdSimpleItem.create(null, key, text);
	}
	return oFF.FdSimpleItem.create(key, null, text);
};
oFF.VdOrcaValueParser.exportVariables = function(varProcessor, allValues, linkedVariables)
{
	var variablesStruct = oFF.PrFactory.createStructure();
	var keys = allValues.getKeysAsIteratorOfString();
	while (keys.hasNext())
	{
		var varName = keys.next();
		var linked = oFF.notNull(linkedVariables) && linkedVariables.contains(varName);
		var variable = varProcessor.getVariable(varName);
		var variableStruct = variablesStruct.putNewStructure(varName);
		variableStruct.putString(oFF.OrcaConstants.DISPLAY_NAME, variable.getText());
		variableStruct.putString(oFF.OrcaConstants.NAME, varName);
		var isBw = oFF.VdAbstractValueParser.isBw(variable);
		var keyField = null;
		if (variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			var dimVar = variable;
			var dimension = dimVar.getDimension();
			variableStruct.putString(oFF.OrcaConstants.DIMENSION_ID, dimension.getName());
			variableStruct.putBoolean(oFF.OrcaConstants.IS_USED_IN_DYNAMIC_FILTER, dimVar.isUsedInDynamicFilter() && dimension.getAxisType() !== oFF.AxisType.REPOSITORY);
			if (isBw && dimension.isCompound() && !variable.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NODE_VARIABLE) && oFF.XStringUtils.isNullOrEmpty(variable.getHierarchyName()))
			{
				keyField = dimension.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND);
			}
		}
		variableStruct.putBoolean(oFF.OrcaConstants.IS_INPUT_ENABLED, true);
		variableStruct.putBoolean(oFF.OrcaConstants.IS_MANDATORY, variable.isMandatory());
		variableStruct.putString(oFF.OrcaConstants.VALUE_TYPE, variable.getValueType().getName());
		variableStruct.putString(oFF.OrcaConstants.VARIABLE_TYPE, variable.getVariableType().getName());
		variableStruct.putBoolean(oFF.OrcaConstants.SUPPORTS_MULTIPLE_VALUES, variable.supportsMultipleValues());
		variableStruct.putNewStructure(oFF.OrcaConstants.VARIABLE_OBJ);
		variableStruct.putNewList(oFF.OrcaConstants.OPERATORS);
		var valueList = variableStruct.putNewList(oFF.OrcaConstants.VALUE_DETAILS);
		var values = allValues.getByKey(varName);
		for (var j = 0; j < values.size(); j++)
		{
			var valueDetail = oFF.VdOrcaValueParser.createValueDetail(variable, values.get(j), isBw, keyField, linked);
			if (oFF.notNull(valueDetail))
			{
				valueList.add(valueDetail);
			}
		}
	}
	return variablesStruct;
};
oFF.VdOrcaValueParser.createValueDetail = function(variable, value, isBw, keyField, isLinked)
{
	var result = oFF.PrFactory.createStructure();
	var operator = value.getOperator();
	if (operator === oFF.VdComparisonOperator.UNDEFINED)
	{
		operator = oFF.VdComparisonOperator.EQUAL;
	}
	result.putString(oFF.OrcaConstants.OPERATOR, operator.getName());
	if (operator.getNumberOfParameters() < 1)
	{
		return result;
	}
	var key1 = oFF.VdOrcaValueParser.tryGetKey(variable, value.getFirstOperand(), keyField, isLinked);
	if (oFF.isNull(key1))
	{
		return null;
	}
	var variableType = variable.getVariableType();
	var valueType = variable.getValueType();
	if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE) && valueType.isTypeOf(oFF.XValueType.NUMBER) && oFF.XStringUtils.isNullOrEmpty(key1))
	{
		return null;
	}
	if (isBw && valueType.isDateBased())
	{
		result.putString(oFF.OrcaConstants.OPERAND_1, oFF.VdAbstractValueParser.getSAPFormat(valueType, key1));
	}
	else if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		result.putString(oFF.OrcaConstants.OPERAND_1, key1);
	}
	else
	{
		result.putString(oFF.OrcaConstants.OPERAND_1, key1);
		result.putStringNotNull(oFF.OrcaConstants.DESC_1, oFF.VdAbstractValueParser.getTextOrDisplayKey(value.getFirstOperand()));
	}
	if (operator.getNumberOfParameters() < 2)
	{
		return result;
	}
	var key2 = oFF.VdOrcaValueParser.tryGetKey(variable, value.getSecondOperand(), keyField, isLinked);
	if (oFF.isNull(key2))
	{
		return null;
	}
	if (isBw && valueType.isDateBased())
	{
		result.putString(oFF.OrcaConstants.OPERAND_2, oFF.VdAbstractValueParser.getSAPFormat(valueType, key2));
	}
	else if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		result.putString(oFF.OrcaConstants.OPERAND_2, key2);
	}
	else
	{
		result.putString(oFF.OrcaConstants.OPERAND_2, key2);
		result.putStringNotNull(oFF.OrcaConstants.DESC_2, oFF.VdAbstractValueParser.getTextOrDisplayKey(value.getSecondOperand()));
	}
	return result;
};
oFF.VdOrcaValueParser.tryGetKey = function(variable, item, keyField, isLinked)
{
	var keyValue = oFF.notNull(keyField) ? item.getValueByField(keyField) : null;
	if (oFF.isNull(keyValue))
	{
		keyValue = item.getKey();
		if (oFF.isNull(keyValue) && oFF.VdAbstractValueParser.useKeysAsDisplayKeys(variable, isLinked))
		{
			keyValue = item.getDisplayKey();
		}
	}
	return keyValue;
};
oFF.VdOrcaValueParser.mapOrcaDisplayInfo = function(dimName, dimensionDisplayInfo, defaultDisplayInfo)
{
	return oFF.notNull(dimensionDisplayInfo) ? oFF.OrcaConstants.mapOrcaDisplayInfo(dimensionDisplayInfo.getStringByKey(dimName), defaultDisplayInfo) : defaultDisplayInfo;
};
oFF.VdOrcaValueParser.prototype.serialize = function(varProcessor, allValues)
{
	return oFF.VdOrcaValueParser.exportVariables(varProcessor, allValues, null);
};
oFF.VdOrcaValueParser.prototype.deserialize = function(variableProcessor, jsonValues)
{
	return oFF.VdOrcaValueParser.parseJsonToStartValues(jsonValues.asStructure(), variableProcessor, null);
};

oFF.OrcaLinkVarManager = function() {};
oFF.OrcaLinkVarManager.prototype = new oFF.XObject();
oFF.OrcaLinkVarManager.prototype._ff_c = "OrcaLinkVarManager";

oFF.OrcaLinkVarManager.SUBMIT = "submit";
oFF.OrcaLinkVarManager.REINIT = "reinit";
oFF.OrcaLinkVarManager.TRANSFER = "transfer";
oFF.OrcaLinkVarManager.CANCEL = "cancel";
oFF.OrcaLinkVarManager.COMPONENT_NAME = "OrcaLinkVarManager";
oFF.OrcaLinkVarManager.create = function(context, model, originalHandler)
{
	var obj = new oFF.OrcaLinkVarManager();
	obj.setupExt(context, model, originalHandler);
	return obj;
};
oFF.OrcaLinkVarManager.createWithController = function(controller)
{
	var obj = new oFF.OrcaLinkVarManager();
	obj.setupExt(controller.getContext(), controller.getModel(), controller.getInternalStateHandler());
	return obj;
};
oFF.OrcaLinkVarManager.prototype.m_context = null;
oFF.OrcaLinkVarManager.prototype.m_vdModel = null;
oFF.OrcaLinkVarManager.prototype.m_originalHandler = null;
oFF.OrcaLinkVarManager.prototype.m_submitMode = null;
oFF.OrcaLinkVarManager.prototype.m_linkedProcessors = null;
oFF.OrcaLinkVarManager.prototype.m_linkedProcessorsSkipSubmit = null;
oFF.OrcaLinkVarManager.prototype.m_linkedDatasourceSkipSubmit = null;
oFF.OrcaLinkVarManager.prototype.m_linkedVarsByDatasource = null;
oFF.OrcaLinkVarManager.prototype.m_mainVarsByLinkedVar = null;
oFF.OrcaLinkVarManager.prototype.m_hasMissingLink = null;
oFF.OrcaLinkVarManager.prototype.m_linkage = null;
oFF.OrcaLinkVarManager.prototype.m_valueHelps = null;
oFF.OrcaLinkVarManager.prototype.m_linkVarHelper = null;
oFF.OrcaLinkVarManager.prototype.setupExt = function(context, model, originalHandler)
{
	this.m_context = context;
	this.m_vdModel = model;
	this.m_originalHandler = originalHandler;
	this.m_submitMode = oFF.OrcaLinkVarSubmitHandling.NONE;
	this.m_linkedProcessors = oFF.XList.create();
	this.m_linkedProcessorsSkipSubmit = oFF.XList.create();
	this.m_linkedDatasourceSkipSubmit = oFF.XListOfString.create();
	this.m_linkedVarsByDatasource = oFF.XHashMapByString.create();
	this.m_mainVarsByLinkedVar = oFF.XHashMapOfStringByString.create();
	this.m_linkage = oFF.XHashMapByString.create();
	this.m_valueHelps = oFF.XHashMapByString.create();
	this.m_hasMissingLink = oFF.XHashSetOfString.create();
};
oFF.OrcaLinkVarManager.prototype.releaseObject = function()
{
	this.m_context = null;
	this.m_vdModel = null;
	this.m_originalHandler = null;
	this.m_linkedProcessors = oFF.XObjectExt.release(this.m_linkedProcessors);
	this.m_linkedProcessorsSkipSubmit = oFF.XObjectExt.release(this.m_linkedProcessorsSkipSubmit);
	this.m_linkedDatasourceSkipSubmit = oFF.XObjectExt.release(this.m_linkedDatasourceSkipSubmit);
	this.m_linkedVarsByDatasource = oFF.XObjectExt.release(this.m_linkedVarsByDatasource);
	this.m_linkage = oFF.XObjectExt.release(this.m_linkage);
	this.m_valueHelps = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_valueHelps);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OrcaLinkVarManager.prototype.getSubmitProcessor = function()
{
	return this.m_originalHandler.getSubmitProcessor();
};
oFF.OrcaLinkVarManager.prototype.getValueHelpProcessorForVariable = function(varName)
{
	if (this.m_hasMissingLink.contains(varName))
	{
		var msg = this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_MISSING_LINK_WARNING);
		this.m_context.getMessageCenter().postMessage(oFF.UiMessageType.WARNING, msg, oFF.OrcaLinkVarManager.COMPONENT_NAME);
	}
	return this.m_valueHelps.getByKey(varName);
};
oFF.OrcaLinkVarManager.prototype.addLinks = function(mainVariable, linkedVariables, joinMode)
{
	if (oFF.isNull(mainVariable) || !mainVariable.isInputEnabled())
	{
		return;
	}
	var linkedVariablesFiltered = oFF.XList.create();
	var linkedDimVariables = oFF.XList.create();
	for (var i = 0; i < linkedVariables.size(); i++)
	{
		var linkedVariable = linkedVariables.get(i);
		var queryManager = linkedVariable.getQueryManager();
		if (!linkedVariable.isInputEnabled() || oFF.isNull(queryManager))
		{
			continue;
		}
		var variableProcessor = queryManager.getVariableProcessor();
		if (!this.m_linkedProcessors.contains(variableProcessor))
		{
			this.m_linkedProcessors.add(variableProcessor);
		}
		linkedVariablesFiltered.add(linkedVariable);
		this.addLinkedDatasource(mainVariable, linkedVariable);
		if (linkedVariable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			linkedDimVariables.add(linkedVariable);
		}
	}
	if (linkedVariablesFiltered.hasElements())
	{
		var mainVarName = mainVariable.getName();
		this.m_linkage.put(mainVarName, linkedVariablesFiltered);
		if (linkedDimVariables.hasElements())
		{
			var valueHelp = this.createLinkValueHelp(mainVariable, linkedDimVariables, joinMode);
			this.m_valueHelps.put(mainVarName, valueHelp);
		}
	}
};
oFF.OrcaLinkVarManager.prototype.setSkipSubmitOfLinkedQm = function(manager)
{
	if (oFF.isNull(manager) || manager.getVariableProcessor() === this.m_vdModel.getVariableProcessor())
	{
		return;
	}
	this.m_linkedProcessorsSkipSubmit.add(manager.getVariableProcessor());
	if (oFF.notNull(this.m_linkVarHelper))
	{
		this.m_linkedDatasourceSkipSubmit.add(this.m_linkVarHelper.getLinkGroupId(manager));
	}
};
oFF.OrcaLinkVarManager.prototype.addLinkedDatasource = function(mainVariable, linkedVariable)
{
	if (oFF.isNull(this.m_linkVarHelper))
	{
		return;
	}
	this.m_mainVarsByLinkedVar.put(this.getUniqueVarName(linkedVariable), mainVariable.getName());
	var datasourceName = this.m_linkVarHelper.getLinkGroupId(linkedVariable.getQueryManager());
	var varNames = this.m_linkedVarsByDatasource.getByKey(datasourceName);
	if (oFF.isNull(varNames))
	{
		varNames = oFF.XListOfString.create();
		this.m_linkedVarsByDatasource.put(datasourceName, varNames);
	}
	varNames.add(linkedVariable.getName());
};
oFF.OrcaLinkVarManager.prototype.setHasMissingLink = function(mainVariable)
{
	this.m_hasMissingLink.add(mainVariable.getName());
};
oFF.OrcaLinkVarManager.prototype.getLinkage = function()
{
	return this.m_linkage;
};
oFF.OrcaLinkVarManager.prototype.getLinkedVariableNames = function()
{
	return this.m_linkage.getKeysAsReadOnlyListOfString();
};
oFF.OrcaLinkVarManager.prototype.hasLinks = function()
{
	return this.m_linkage.hasElements();
};
oFF.OrcaLinkVarManager.prototype.createLinkValueHelp = function(main, linkedVariables, joinMode)
{
	if (joinMode === oFF.OrcaLinkVarJoinMode.INTERSECT)
	{
		return oFF.OrcaLinkVarValueHelpIntersect.createLink(main, linkedVariables);
	}
	else if (joinMode === oFF.OrcaLinkVarJoinMode.UNION)
	{
		return oFF.OrcaLinkVarValueHelpUnion.createLink(main, linkedVariables);
	}
	throw oFF.XException.createIllegalArgumentException("Unknown join type");
};
oFF.OrcaLinkVarManager.prototype.reinitVariables = function(listener, customIdentifier)
{
	var data = oFF.OrcaLinkVarProxyData.createData(oFF.OrcaLinkVarManager.REINIT, listener, customIdentifier);
	data.increaseRequestCount();
	this.m_originalHandler.reinitVariables(this, data);
	var toReinit = this.collectLinkedQueryManagers();
	oFF.XCollectionUtils.addAllIfNotPresent(toReinit, this.m_linkedProcessors);
	for (var i = 0; i < toReinit.size(); i++)
	{
		var processor = toReinit.get(i);
		if (!processor.isReinitNeeded())
		{
			continue;
		}
		data.increaseRequestCount();
		processor.reInitVariablesAfterSubmit(oFF.OlapUiValueHelpAbstract.s_syncType, this, data);
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarManager.prototype.activateVariant = function(variant, listener, customIdentifier)
{
	this.m_originalHandler.activateVariant(variant, listener, customIdentifier);
};
oFF.OrcaLinkVarManager.prototype.saveVariant = function(values, variant, listener, customIdentifier)
{
	this.m_originalHandler.saveVariant(values, variant, listener, customIdentifier);
};
oFF.OrcaLinkVarManager.prototype.cancelReinitVariables = function(startValues, listener, customIdentifier)
{
	var data = oFF.OrcaLinkVarProxyData.createData(oFF.OrcaLinkVarManager.CANCEL, listener, customIdentifier);
	data.increaseRequestCount();
	this.m_originalHandler.cancelReinitVariables(startValues, this, data);
	var toCancel = this.collectLinkedQueryManagers();
	oFF.XCollectionUtils.addAllIfNotPresent(toCancel, this.m_linkedProcessors);
	for (var i = 0; i < toCancel.size(); i++)
	{
		var processor = toCancel.get(i);
		if (!processor.isCancelNeeded())
		{
			continue;
		}
		data.increaseRequestCount();
		processor.cancelReInitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, this, data);
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarManager.prototype.collectLinkedQueryManagers = function()
{
	if (this.m_submitMode === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE)
	{
		return oFF.XStream.of(this.getAllLinkedQueryManagersRecursive()).map( function(qm){
			return qm.getVariableProcessor();
		}.bind(this)).collect(oFF.XStreamCollector.toList());
	}
	return oFF.XStream.of(this.m_linkedProcessors).filter( function(e){
		return !this.m_linkedProcessorsSkipSubmit.contains(e);
	}.bind(this)).collect(oFF.XStreamCollector.toList());
};
oFF.OrcaLinkVarManager.prototype.transferVariables = function(values, variable, listener, customIdentifier)
{
	var data = oFF.OrcaLinkVarProxyData.createData(oFF.OrcaLinkVarManager.TRANSFER, listener, customIdentifier);
	data.increaseRequestCount();
	this.m_originalHandler.transferVariables(values, variable, this, data);
	if (this.m_linkage.containsKey(variable.getName()))
	{
		var toBeTransferred = this.prepareVariableProcessorsToBeTransferred(variable, values);
		for (var i = 0; i < toBeTransferred.size(); i++)
		{
			var variableProcessor = toBeTransferred.get(i);
			if (variableProcessor.isDirectVariableTransferEnabled())
			{
				continue;
			}
			data.increaseRequestCount();
			variableProcessor.transferVariables(oFF.OlapUiValueHelpAbstract.s_syncType, this, data);
		}
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarManager.prototype.prepareVariableProcessorsToBeTransferred = function(variable, allValues)
{
	var toBeTransferred = oFF.XList.create();
	var mainVariableNames = this.m_linkage.getKeysAsIteratorOfString();
	while (mainVariableNames.hasNext())
	{
		var varName = mainVariableNames.next();
		var mainVariable = this.m_vdModel.getVariableModelByName(varName).getVariable();
		var linkedVariables = this.m_linkage.getByKey(varName);
		for (var i = 0; i < linkedVariables.size(); i++)
		{
			var linkedVariable = linkedVariables.get(i);
			var queryManager = linkedVariable.getQueryManager();
			if (oFF.isNull(queryManager) || !this.m_linkedProcessors.contains(queryManager.getVariableProcessor()))
			{
				continue;
			}
			var variableProcessor = queryManager.getVariableProcessor();
			if (!toBeTransferred.contains(variableProcessor))
			{
				toBeTransferred.add(variableProcessor);
			}
			if (mainVariable !== variable)
			{
				var values = allValues.getByKey(varName);
				oFF.VdImportExport.setValuesToVariable(linkedVariable, values);
			}
		}
	}
	oFF.XObjectExt.release(mainVariableNames);
	return toBeTransferred;
};
oFF.OrcaLinkVarManager.prototype.submitVariables = function(values, listener, customIdentifier)
{
	var data = oFF.OrcaLinkVarProxyData.createData(oFF.OrcaLinkVarManager.SUBMIT, listener, customIdentifier);
	data.increaseRequestCount();
	this.m_originalHandler.submitVariables(values, this, data);
	if (this.m_submitMode === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT)
	{
		this.submitLinkedVariableProcessors(values, data);
	}
	else if (this.m_submitMode === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE)
	{
		this.submitAllQueryManagersOfLinkedDatasources(values, data);
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarManager.prototype.submitLinkedVariableProcessors = function(values, data)
{
	var keys = this.m_linkage.getKeysAsIteratorOfString();
	while (keys.hasNext())
	{
		var varName = keys.next();
		var linkedVariables = this.m_linkage.getByKey(varName);
		for (var j = 0; j < linkedVariables.size(); j++)
		{
			var linkedVariable = linkedVariables.get(j);
			oFF.VdImportExport.setValuesToVariable(linkedVariable, values.getByKey(varName));
		}
	}
	oFF.XObjectExt.release(keys);
	var newValues = this.areValuesDifferentToStartValues(values);
	for (var i = 0; i < this.m_linkedProcessors.size(); i++)
	{
		data.increaseRequestCount();
		var variableProcessor = this.m_linkedProcessors.get(i);
		if (newValues && !this.m_linkedProcessorsSkipSubmit.contains(variableProcessor))
		{
			variableProcessor.submitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, this, data);
		}
		else
		{
			variableProcessor.cancelReInitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, this, data);
		}
	}
};
oFF.OrcaLinkVarManager.prototype.submitAllQueryManagersOfLinkedDatasources = function(values, data)
{
	var newValues = this.areValuesDifferentToStartValues(values);
	var allQueryManagers = this.getAllLinkedQueryManagersRecursive();
	for (var i = 0; i < allQueryManagers.size(); i++)
	{
		var queryManager = allQueryManagers.get(i);
		if (!this.isQueryManagerValidForSubmit(queryManager))
		{
			continue;
		}
		var datasourceName = this.m_linkVarHelper.getLinkGroupId(queryManager);
		var linkedVarNamesOfDatasource = this.m_linkedVarsByDatasource.getByKey(datasourceName);
		if (!newValues && !queryManager.getVariableProcessorState().isSubmitNeeded())
		{
			continue;
		}
		this.m_linkVarHelper.applySavedValues(queryManager);
		var variableProcessor = queryManager.getVariableProcessor();
		for (var j = 0; j < linkedVarNamesOfDatasource.size(); j++)
		{
			var variable = variableProcessor.getVariable(linkedVarNamesOfDatasource.get(j));
			if (oFF.notNull(variable))
			{
				var mainVarName = this.m_mainVarsByLinkedVar.getByKey(this.getUniqueVarName(variable));
				oFF.VdImportExport.setValuesToVariable(variable, values.getByKey(mainVarName));
			}
		}
		data.increaseRequestCount();
		variableProcessor.submitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, oFF.OrcaLinkVarSubmitCallback.createCallback(this, queryManager), data);
	}
};
oFF.OrcaLinkVarManager.prototype.getAllLinkedQueryManagersRecursive = function()
{
	var result = oFF.XList.create();
	var olapEnv = this.m_vdModel.getVariableProcessor().getOlapEnv();
	var allQueryManagers = olapEnv.getAllAreaQueryManager();
	for (var i = 0; i < allQueryManagers.size(); i++)
	{
		var queryManager = allQueryManagers.get(i);
		var datasourceName = this.m_linkVarHelper.getLinkGroupId(queryManager);
		var linkedVarNamesOfDatasource = this.m_linkedVarsByDatasource.getByKey(datasourceName);
		if (!oFF.XCollectionUtils.hasElements(linkedVarNamesOfDatasource) || this.m_linkedDatasourceSkipSubmit.contains(datasourceName) || !this.m_linkVarHelper.shouldBeSubmitted(queryManager))
		{
			continue;
		}
		result.add(queryManager);
	}
	return result;
};
oFF.OrcaLinkVarManager.prototype.isQueryManagerValidForSubmit = function(queryManager)
{
	if (oFF.isNull(queryManager) || queryManager.isReleased())
	{
		return false;
	}
	var queryModel = queryManager.getQueryModel();
	if (oFF.isNull(queryModel) || queryModel.isReleased())
	{
		return false;
	}
	var variableManager = queryModel.getVariableManager();
	if (oFF.isNull(variableManager) || variableManager.isReleased())
	{
		return false;
	}
	return variableManager.hasVariables();
};
oFF.OrcaLinkVarManager.prototype.areValuesDifferentToStartValues = function(values)
{
	var startValues = this.m_vdModel.getStartValues();
	var iterator = values.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var varName = iterator.next();
		if (!oFF.XListUtils.isListEquals(values.getByKey(varName), startValues.getByKey(varName)))
		{
			return true;
		}
	}
	return false;
};
oFF.OrcaLinkVarManager.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	var data = customIdentifier;
	if (this.handleErrors(extResult, result, data))
	{
		return;
	}
	data.increaseCallbackCount();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarManager.prototype.onQueryManagerSubmit = function(caller, queryManager, extResult, result, customIdentifier)
{
	var data = customIdentifier;
	if (this.handleErrors(extResult, result, data))
	{
		return;
	}
	this.m_linkVarHelper.onAfterVariableSubmit(queryManager);
	data.increaseCallbackCount();
	this.checkIfDone(data);
	oFF.XObjectExt.release(caller);
};
oFF.OrcaLinkVarManager.prototype.handleErrors = function(extResult, result, data)
{
	if (oFF.isNull(data) || data.isReleased())
	{
		return true;
	}
	if (extResult.hasErrors())
	{
		data.setErrorResult(extResult);
		data.increaseCallbackCount();
		this.checkIfDone(data);
		return true;
	}
	return false;
};
oFF.OrcaLinkVarManager.prototype.checkIfDone = function(data)
{
	if (!data.isReleased() && data.isDone())
	{
		var errorResult = data.getErrorResult();
		if (oFF.notNull(errorResult))
		{
			var allProcessors = this.m_linkedProcessors.createListCopy();
			allProcessors.add(this.m_originalHandler.getSubmitProcessor());
			oFF.XStream.of(allProcessors).filter( function(p1){
				return p1.isReinitNeeded() && !p1.isDirectVariableTransferEnabled();
			}.bind(this)).forEach( function(p2){
				p2.reInitVariablesAfterSubmit(oFF.SyncType.BLOCKING, null, null);
			}.bind(this));
		}
		var originalListener = data.getOriginalListener();
		if (oFF.notNull(originalListener))
		{
			originalListener.onVariableProcessorExecuted(oFF.notNull(errorResult) ? errorResult : oFF.ExtResult.createWithInfoMessage("ok"), null, data.getOriginalObject());
		}
		oFF.XObjectExt.release(data);
	}
};
oFF.OrcaLinkVarManager.prototype.getUniqueVarName = function(variable)
{
	if (oFF.isNull(this.m_linkVarHelper) || variable.getQueryManager() === null)
	{
		return variable.getName();
	}
	var datasourceName = this.m_linkVarHelper.getLinkGroupId(variable.getQueryManager());
	return oFF.XStringUtils.concatenate3(datasourceName, "~", variable.getName());
};
oFF.OrcaLinkVarManager.prototype.activateSubmitAll = function(linkVarHelper)
{
	if (oFF.isNull(linkVarHelper))
	{
		throw oFF.XException.createIllegalArgumentException("Cannot activate linked var helper with null object");
	}
	this.m_linkVarHelper = linkVarHelper;
	this.m_submitMode = oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE;
};
oFF.OrcaLinkVarManager.prototype.activateSubmitLinked = function()
{
	this.m_linkVarHelper = null;
	this.m_submitMode = oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT;
};
oFF.OrcaLinkVarManager.prototype.getSubmitMode = function()
{
	return this.m_submitMode;
};

oFF.OrcaLinkVarProxyData = function() {};
oFF.OrcaLinkVarProxyData.prototype = new oFF.OlapUiMultiRequestHelper();
oFF.OrcaLinkVarProxyData.prototype._ff_c = "OrcaLinkVarProxyData";

oFF.OrcaLinkVarProxyData.createData = function(proxyId, listener, customIdentifier)
{
	var obj = new oFF.OrcaLinkVarProxyData();
	obj.setupExt(proxyId, listener, customIdentifier);
	return obj;
};
oFF.OrcaLinkVarProxyData.prototype.m_proxyId = null;
oFF.OrcaLinkVarProxyData.prototype.setupExt = function(proxyId, listener, customIdentifier)
{
	this.setupHelper(listener, customIdentifier);
	this.m_proxyId = proxyId;
};
oFF.OrcaLinkVarProxyData.prototype.releaseObject = function()
{
	this.m_proxyId = null;
	oFF.OlapUiMultiRequestHelper.prototype.releaseObject.call( this );
};
oFF.OrcaLinkVarProxyData.prototype.getProxyId = function()
{
	return this.m_proxyId;
};
oFF.OrcaLinkVarProxyData.prototype.toString = function()
{
	return this.getProxyId();
};

oFF.VdUqmEntryPoint = function() {};
oFF.VdUqmEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.VdUqmEntryPoint.prototype._ff_c = "VdUqmEntryPoint";

oFF.VdUqmEntryPoint.createEntryPoint = function(title, variableProcessor, listener)
{
	var obj = new oFF.VdUqmEntryPoint();
	obj.setupVdUqmEntryPoint(title, variableProcessor, listener);
	return obj;
};
oFF.VdUqmEntryPoint.prototype.m_vdController = null;
oFF.VdUqmEntryPoint.prototype.setupVdUqmEntryPoint = function(title, variableProcessor, listener)
{
	this.setupEntryPoint(variableProcessor.getApplication());
	var config = oFF.VdConfiguration.createConfig(title, variableProcessor);
	this.m_vdController = oFF.VdVariableDialog.createAsDisplay(this.getUiContext(), config, listener);
};
oFF.VdUqmEntryPoint.prototype.open = function()
{
	this.m_vdController.open();
};
oFF.VdUqmEntryPoint.prototype.close = function()
{
	this.m_vdController.close();
};
oFF.VdUqmEntryPoint.prototype.releaseObject = function()
{
	this.m_vdController = oFF.XObjectExt.release(this.m_vdController);
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
};

oFF.VdUqmValueParser = function() {};
oFF.VdUqmValueParser.prototype = new oFF.VdAbstractValueParser();
oFF.VdUqmValueParser.prototype._ff_c = "VdUqmValueParser";

oFF.VdUqmValueParser.createParser = function()
{
	return new oFF.VdUqmValueParser();
};
oFF.VdUqmValueParser.serializeMembers = function(variableName, values)
{
	var result = oFF.PrFactory.createList();
	if (!oFF.XCollectionUtils.hasElements(values))
	{
		return result;
	}
	for (var i = 0; i < values.size(); i++)
	{
		var memberStruct = result.addNewStructure();
		var value = values.get(i);
		var operator = value.getOperator();
		memberStruct.putString(oFF.VdUqmConstants.OPERATOR, oFF.VdUqmValueParser.serializeOperator(operator));
		if (operator.getNumberOfParameters() <= 0)
		{
			continue;
		}
		if (operator.getNumberOfParameters() === 1)
		{
			var memberIdStruct = memberStruct.putNewStructure(oFF.VdUqmConstants.MEMBER_ID);
			memberIdStruct.putString(oFF.VdUqmConstants.NAME, value.getFirstOperand().getKey());
			memberIdStruct.putString(oFF.VdUqmConstants.DESCRIPTION, value.getFirstOperand().getText());
			memberIdStruct.putString(oFF.VdUqmConstants.VARIABLE_ID, variableName);
		}
		else
		{
			var memberIds = memberStruct.putNewList(oFF.VdUqmConstants.MEMBER_IDS);
			var first = value.getFirstOperand();
			var memberIdStruct1 = memberIds.addNewStructure();
			memberIdStruct1.putString(oFF.VdUqmConstants.NAME, first.getKey());
			memberIdStruct1.putString(oFF.VdUqmConstants.DESCRIPTION, first.getText());
			memberIdStruct1.putString(oFF.VdUqmConstants.VARIABLE_ID, variableName);
			var second = value.getSecondOperand();
			var memberIdStruct2 = memberIds.addNewStructure();
			memberIdStruct2.putString(oFF.VdUqmConstants.NAME, second.getKey());
			memberIdStruct2.putString(oFF.VdUqmConstants.DESCRIPTION, second.getText());
			memberIdStruct2.putString(oFF.VdUqmConstants.VARIABLE_ID, variableName);
		}
	}
	return result;
};
oFF.VdUqmValueParser.serializeSimple = function(values)
{
	var result = oFF.PrFactory.createList();
	if (!oFF.XCollectionUtils.hasElements(values))
	{
		return result;
	}
	for (var i = 0; i < values.size(); i++)
	{
		var key = values.get(i).getFirstOperand().getKey();
		if (oFF.notNull(key))
		{
			result.addString(key);
		}
	}
	return result;
};
oFF.VdUqmValueParser.serializeOption = function(variableName, values)
{
	var optionStruct = oFF.PrFactory.createStructure();
	optionStruct.putString(oFF.VdUqmConstants.VARIABLE_ID, variableName);
	if (oFF.XCollectionUtils.hasElements(values))
	{
		var option = values.get(0).getFirstOperand();
		optionStruct.putString(oFF.VdUqmConstants.NAME, option.getKey());
		optionStruct.putString(oFF.VdUqmConstants.DESCRIPTION, option.getText());
	}
	else
	{
		optionStruct.putString(oFF.VdUqmConstants.NAME, oFF.VdUqmConstants.EMPTY_OPTION_VALUE);
		optionStruct.putString(oFF.VdUqmConstants.DESCRIPTION, "");
	}
	return optionStruct;
};
oFF.VdUqmValueParser.serializeHierarchyName = function(variable, values, variableStruct)
{
	if (oFF.XCollectionUtils.hasElements(values))
	{
		var firstOperand = values.get(0).getFirstOperand();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(firstOperand.getKey()))
		{
			variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_NAME, firstOperand.getKey());
			var text = oFF.XStringUtils.isNotNullAndNotEmpty(firstOperand.getText()) ? firstOperand.getText() : "";
			variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_DESCRIPTION, text);
		}
	}
	else
	{
		variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_NAME, "");
		variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_DESCRIPTION, "");
	}
	var hierarchyDueDate = variable.getHierarchyNameDimension().getHierarchyDueDate();
	variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_DUE_DATE, oFF.notNull(hierarchyDueDate) ? hierarchyDueDate.getStringRepresentation() : "");
	variableStruct.putString(oFF.VdUqmConstants.HIERARCHY_NAME_DIMENSION, variable.getHierarchyNameDimension().getName());
};
oFF.VdUqmValueParser.getFirstKeySafe = function(values, defaultValue)
{
	if (oFF.XCollectionUtils.hasElements(values))
	{
		var key = values.get(0).getFirstOperand().getKey();
		if (oFF.notNull(key))
		{
			return key;
		}
	}
	return defaultValue;
};
oFF.VdUqmValueParser.deserializeMembers = function(members)
{
	var values = oFF.XList.create();
	for (var j = 0; j < members.size(); j++)
	{
		var memberStruct = members.getStructureAt(j);
		var operatorString = memberStruct.getStringByKey(oFF.VdUqmConstants.OPERATOR);
		var operator = oFF.VdUqmValueParser.deserializeOperator(operatorString);
		if (operator.getNumberOfParameters() === 0)
		{
			values.add(oFF.VdValue.createValue(operator, oFF.FdItemFactory.createNull(), null));
		}
		else if (operator.getNumberOfParameters() === 1)
		{
			var memberIdStruct = memberStruct.getStructureByKey(oFF.VdUqmConstants.MEMBER_ID);
			var key = memberIdStruct.getStringByKey(oFF.VdUqmConstants.NAME);
			var text = memberIdStruct.getStringByKey(oFF.VdUqmConstants.DESCRIPTION);
			var item = oFF.FdSimpleItem.create(key, null, text);
			values.add(oFF.VdValue.createValue(operator, item, null));
		}
		else
		{
			var memberIds = memberStruct.getListByKey(oFF.VdUqmConstants.MEMBER_IDS);
			var memberIdStruct1 = memberIds.getStructureAt(0);
			var key1 = memberIdStruct1.getStringByKey(oFF.VdUqmConstants.NAME);
			var text1 = memberIdStruct1.getStringByKey(oFF.VdUqmConstants.DESCRIPTION);
			var first = oFF.FdSimpleItem.create(key1, null, text1);
			var memberIdStruct2 = memberIds.getStructureAt(1);
			var key2 = memberIdStruct2.getStringByKey(oFF.VdUqmConstants.NAME);
			var text2 = memberIdStruct2.getStringByKey(oFF.VdUqmConstants.DESCRIPTION);
			var second = oFF.FdSimpleItem.create(key2, null, text2);
			values.add(oFF.VdValue.createValue(operator, first, second));
		}
	}
	return values;
};
oFF.VdUqmValueParser.deserializeHierarchyName = function(variableStruct)
{
	var hierarchyName = variableStruct.getStringByKey(oFF.VdUqmConstants.HIERARCHY_NAME);
	var hierarchyText = variableStruct.getStringByKey(oFF.VdUqmConstants.HIERARCHY_DESCRIPTION);
	if (oFF.XStringUtils.isNullOrEmpty(hierarchyName))
	{
		return oFF.XList.create();
	}
	var item = oFF.FdSimpleItem.create(hierarchyName, null, hierarchyText);
	var value = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, item, null);
	return oFF.XCollectionUtils.singletonList(value);
};
oFF.VdUqmValueParser.deserializeSimple = function(stringValues)
{
	var values = oFF.XList.create();
	for (var j = 0; j < stringValues.size(); j++)
	{
		var item = oFF.FdSimpleItem.create(stringValues.getStringAt(j), null, null);
		var value = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, item, null);
		values.add(value);
	}
	return values;
};
oFF.VdUqmValueParser.deserializeOption = function(optionStruct)
{
	var values = oFF.XList.create();
	var optionName = optionStruct.getStringByKey(oFF.VdUqmConstants.NAME);
	var optionText = optionStruct.getStringByKey(oFF.VdUqmConstants.DESCRIPTION);
	if (!oFF.XString.isEqual(optionName, oFF.VdUqmConstants.EMPTY_OPTION_VALUE))
	{
		var item = oFF.FdSimpleItem.create(optionName, null, optionText);
		var value = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, item, null);
		values.add(value);
	}
	return values;
};
oFF.VdUqmValueParser.serializeVariableType = function(variableType)
{
	if (variableType === oFF.VariableType.DIMENSION_MEMBER_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_DIMENSION_MEMBER;
	}
	if (variableType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_HIERARCHY_NAME;
	}
	if (variableType === oFF.VariableType.OPTION_LIST_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_OPTION_LIST;
	}
	if (variableType === oFF.VariableType.SIMPLE_TYPE_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_SIMPLE;
	}
	if (variableType === oFF.VariableType.TEXT_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_TEXT;
	}
	if (variableType === oFF.VariableType.FORMULA_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_FORMULA;
	}
	if (variableType === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
	{
		return oFF.VdUqmConstants.TYPE_HIERARCHY_NODE;
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("No uqm variable type for: ", variableType.getName()));
};
oFF.VdUqmValueParser.deserializeVariableType = function(variableType)
{
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_DIMENSION_MEMBER, variableType))
	{
		return oFF.VariableType.DIMENSION_MEMBER_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_HIERARCHY_NAME, variableType))
	{
		return oFF.VariableType.HIERARCHY_NAME_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_OPTION_LIST, variableType))
	{
		return oFF.VariableType.OPTION_LIST_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_SIMPLE, variableType))
	{
		return oFF.VariableType.SIMPLE_TYPE_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_TEXT, variableType))
	{
		return oFF.VariableType.TEXT_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_FORMULA, variableType))
	{
		return oFF.VariableType.FORMULA_VARIABLE;
	}
	if (oFF.XString.isEqual(oFF.VdUqmConstants.TYPE_HIERARCHY_NODE, variableType))
	{
		return oFF.VariableType.HIERARCHY_NODE_VARIABLE;
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("No variable type for: ", variableType));
};
oFF.VdUqmValueParser.getUqmPropertyNameByVariableType = function(variableType)
{
	if (variableType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
	{
		return oFF.VdUqmConstants.HIERARCHY_NAME;
	}
	if (variableType === oFF.VariableType.OPTION_LIST_VARIABLE)
	{
		return oFF.VdUqmConstants.OPTION_NAME;
	}
	if (variableType === oFF.VariableType.TEXT_VARIABLE)
	{
		return oFF.VdUqmConstants.TEXT_VALUE;
	}
	if (variableType === oFF.VariableType.FORMULA_VARIABLE)
	{
		return oFF.VdUqmConstants.FORMULA_VALUE;
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("No uqm property name for: ", variableType.getName()));
};
oFF.VdUqmValueParser.serializeValueType = function(valueType)
{
	if (valueType === oFF.XValueType.DATE)
	{
		return oFF.VdUqmConstants.VALUE_TYPE_DATE;
	}
	if (valueType === oFF.XValueType.TIME)
	{
		return oFF.VdUqmConstants.VALUE_TYPE_TIME;
	}
	if (valueType === oFF.XValueType.DATE_TIME)
	{
		return oFF.VdUqmConstants.VALUE_TYPE_DATETIME;
	}
	if (valueType === oFF.XValueType.STRING)
	{
		return oFF.VdUqmConstants.VALUE_TYPE_STRING;
	}
	return oFF.VdUqmConstants.VALUE_TYPE_UNKNOWN;
};
oFF.VdUqmValueParser.serializeOperator = function(operator)
{
	if (operator === oFF.VdComparisonOperator.GREATER_THAN)
	{
		return oFF.VdUqmConstants.OPERATOR_GREATER;
	}
	if (operator === oFF.VdComparisonOperator.LESS_THAN)
	{
		return oFF.VdUqmConstants.OPERATOR_LESS;
	}
	if (operator === oFF.VdComparisonOperator.MATCH)
	{
		return oFF.VdUqmConstants.OPERATOR_CONTAINS;
	}
	return operator.getName();
};
oFF.VdUqmValueParser.deserializeOperator = function(uqmString)
{
	if (oFF.XString.isEqual(uqmString, oFF.VdUqmConstants.OPERATOR_IN))
	{
		return oFF.VdComparisonOperator.EQUAL;
	}
	if (oFF.XString.isEqual(uqmString, oFF.VdUqmConstants.OPERATOR_NOT_IN))
	{
		return oFF.VdComparisonOperator.NOT_EQUAL;
	}
	if (oFF.XString.isEqual(uqmString, oFF.VdUqmConstants.OPERATOR_GREATER))
	{
		return oFF.VdComparisonOperator.GREATER_THAN;
	}
	if (oFF.XString.isEqual(uqmString, oFF.VdUqmConstants.OPERATOR_LESS))
	{
		return oFF.VdComparisonOperator.LESS_THAN;
	}
	if (oFF.XString.isEqual(uqmString, oFF.VdUqmConstants.OPERATOR_CONTAINS))
	{
		return oFF.VdComparisonOperator.MATCH;
	}
	return oFF.VdComparisonOperator.lookupExt(uqmString, false);
};
oFF.VdUqmValueParser.prototype.serialize = function(varProcessor, allValues)
{
	var variablesList = oFF.PrFactory.createList();
	var variables = varProcessor.getInputEnabledAndNonTechnicalVariables();
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		var varName = variable.getName();
		var values = allValues.getByKey(varName);
		var variableStruct = variablesList.addNewStructure();
		var idStruct = variableStruct.putNewStructure(oFF.VdUqmConstants.ID);
		idStruct.putString(oFF.VdUqmConstants.VARIABLE_ID, varName);
		var queryModel = variable.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var localId = queryModel.getTagging().getByKey(oFF.VdUqmConstants.LOCAL_ID);
			idStruct.putString(oFF.VdUqmConstants.MODEL_ID, oFF.XStringUtils.isNotNullAndNotEmpty(localId) ? localId : queryModel.getName());
		}
		var varType = variable.getVariableType();
		variableStruct.putString(oFF.VdUqmConstants.TYPE, oFF.VdUqmValueParser.serializeVariableType(varType));
		variableStruct.putString(oFF.VdUqmConstants.VALUE_TYPE, oFF.VdUqmValueParser.serializeValueType(variable.getValueType()));
		variableStruct.putString(oFF.VdUqmConstants.DESCRIPTION, variable.getText());
		variableStruct.putString(oFF.VdUqmConstants.IS_MANDATORY, oFF.XBoolean.convertToString(variable.isMandatory()));
		if (varType === oFF.VariableType.DIMENSION_MEMBER_VARIABLE || varType === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
		{
			variableStruct.put(oFF.VdUqmConstants.MEMBERS, oFF.VdUqmValueParser.serializeMembers(varName, values));
		}
		else if (varType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
		{
			oFF.VdUqmValueParser.serializeHierarchyName(variable, values, variableStruct);
		}
		else if (varType === oFF.VariableType.SIMPLE_TYPE_VARIABLE)
		{
			variableStruct.put(oFF.VdUqmConstants.SIMPLE_TYPE_VALUES, oFF.VdUqmValueParser.serializeSimple(values));
		}
		else if (varType === oFF.VariableType.OPTION_LIST_VARIABLE)
		{
			variableStruct.put(oFF.VdUqmConstants.OPTION_NAME, oFF.VdUqmValueParser.serializeOption(varName, values));
		}
		else
		{
			var value = oFF.VdUqmValueParser.getFirstKeySafe(values, "");
			var propertyName = oFF.VdUqmValueParser.getUqmPropertyNameByVariableType(varType);
			variableStruct.putString(propertyName, value);
		}
	}
	return variablesList;
};
oFF.VdUqmValueParser.prototype.deserialize = function(variableProcessor, jsonValues)
{
	if (oFF.isNull(jsonValues) || !jsonValues.isList())
	{
		return null;
	}
	var result = oFF.XHashMapByString.create();
	var valueList = jsonValues.asList();
	for (var i = 0; i < valueList.size(); i++)
	{
		var variableStruct = valueList.getStructureAt(i);
		var idStruct = variableStruct.getStructureByKey(oFF.VdUqmConstants.ID);
		var varName = idStruct.getStringByKey(oFF.VdUqmConstants.VARIABLE_ID);
		var values;
		var varType = oFF.VdUqmValueParser.deserializeVariableType(variableStruct.getStringByKey(oFF.VdUqmConstants.TYPE));
		if (varType === oFF.VariableType.DIMENSION_MEMBER_VARIABLE || varType === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
		{
			var members = variableStruct.getListByKey(oFF.VdUqmConstants.MEMBERS);
			values = oFF.VdUqmValueParser.deserializeMembers(members);
		}
		else if (varType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
		{
			values = oFF.VdUqmValueParser.deserializeHierarchyName(variableStruct);
		}
		else if (varType === oFF.VariableType.SIMPLE_TYPE_VARIABLE)
		{
			var stringValues = variableStruct.getListByKey(oFF.VdUqmConstants.SIMPLE_TYPE_VALUES);
			values = oFF.VdUqmValueParser.deserializeSimple(stringValues);
		}
		else if (varType === oFF.VariableType.OPTION_LIST_VARIABLE)
		{
			var optionStruct = variableStruct.getStructureByKey(oFF.VdUqmConstants.OPTION_NAME);
			values = oFF.VdUqmValueParser.deserializeOption(optionStruct);
		}
		else
		{
			var propertyName = oFF.VdUqmValueParser.getUqmPropertyNameByVariableType(varType);
			var propertyValue = variableStruct.getStringByKey(propertyName);
			var item = oFF.FdSimpleItem.create(propertyValue, null, null);
			var value = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, item, null);
			values = oFF.XCollectionUtils.singletonList(value);
		}
		if (oFF.XCollectionUtils.hasElements(values))
		{
			result.put(varName, values);
		}
	}
	return result;
};

oFF.CtEntryPoint = function() {};
oFF.CtEntryPoint.prototype = new oFF.DialogEntryPoint();
oFF.CtEntryPoint.prototype._ff_c = "CtEntryPoint";

oFF.CtEntryPoint.createEntryPoint = function(application)
{
	var entryPoint = new oFF.CtEntryPoint();
	entryPoint.setupEntryPoint(application);
	entryPoint.m_qccController = oFF.CtFactory.createFactory(entryPoint.getUiContext()).newQCTDialogInstance();
	return entryPoint;
};
oFF.CtEntryPoint.prototype.m_qccController = null;
oFF.CtEntryPoint.prototype.openQCTDialog = function(title, currencyTranslationManager, listener)
{
	this.m_qccController.openDialog(title, currencyTranslationManager, listener);
};
oFF.CtEntryPoint.prototype.closeQCTDialog = function()
{
	this.m_qccController.closeDialog();
};
oFF.CtEntryPoint.prototype.releaseObject = function()
{
	oFF.DialogEntryPoint.prototype.releaseObject.call( this );
	this.m_qccController = oFF.XObjectExt.release(this.m_qccController);
};

oFF.CtLayout = function() {};
oFF.CtLayout.prototype = new oFF.DdLayoutAbstract();
oFF.CtLayout.prototype._ff_c = "CtLayout";

oFF.CtLayout.createWithGenesis = function(genesis)
{
	var instance = new oFF.CtLayout();
	instance.setupExt(genesis);
	return instance;
};
oFF.CtLayout.prototype.m_content = null;
oFF.CtLayout.prototype.m_panel = null;
oFF.CtLayout.prototype.setupExt = function(genesis)
{
	this.m_content = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT).setHeight(oFF.UiCssLength.create("100%"));
};
oFF.CtLayout.prototype.buildTree = function(genesis)
{
	this.m_panel = genesis.newControl(oFF.UiType.PANEL).setHeight(oFF.UiCssLength.create("100%"));
	this.m_panel.setText(genesis.getUiManager().getLocalization().getText(oFF.CtDialogI18n.I18N_QCT_PROPERTIES));
	this.m_panel.setContent(this.m_content);
	return this.m_panel;
};
oFF.CtLayout.prototype.getContent = function()
{
	return this.m_content;
};

oFF.QctModel = function() {};
oFF.QctModel.prototype = new oFF.DdObservableModel();
oFF.QctModel.prototype._ff_c = "QctModel";

oFF.QctModel.DYNAMIC = "@@DYNAMIC@@";
oFF.QctModel.CUSTOM = "@@CUSTOM@@";
oFF.QctModel.DEFAULT_RATE_NAME = "EURX";
oFF.QctModel.createFrom = function(currencyTranslationManager)
{
	var instance = new oFF.QctModel();
	instance.setupExt(currencyTranslationManager);
	instance.setupListeners();
	return instance;
};
oFF.QctModel.prototype.m_queryCurrencyTranslation = null;
oFF.QctModel.prototype.m_category = null;
oFF.QctModel.prototype.m_rateVersion = null;
oFF.QctModel.prototype.m_referenceDateOffset = 0;
oFF.QctModel.prototype.m_fixedDate = false;
oFF.QctModel.prototype.m_referenceDate = null;
oFF.QctModel.prototype.m_referenceOffsetGranularity = null;
oFF.QctModel.prototype.m_offset = false;
oFF.QctModel.prototype.m_negativeOffset = false;
oFF.QctModel.prototype.m_rateType = null;
oFF.QctModel.prototype.m_targetCurrency = null;
oFF.QctModel.prototype.m_showTechnical = false;
oFF.QctModel.prototype.isShowTechnical = function()
{
	return this.m_showTechnical;
};
oFF.QctModel.prototype.setShowTechnical = function(showTechnical)
{
	this.m_showTechnical = showTechnical;
	this.callListeners();
};
oFF.QctModel.prototype.setOffset = function(offset)
{
	this.m_offset = offset;
};
oFF.QctModel.prototype.isOffset = function()
{
	return this.m_offset;
};
oFF.QctModel.prototype.isNegativeOffset = function()
{
	return this.m_negativeOffset;
};
oFF.QctModel.prototype.setNegativeOffset = function(m_negativeOffset)
{
	this.m_negativeOffset = m_negativeOffset;
};
oFF.QctModel.prototype.isFixedDate = function()
{
	return this.m_fixedDate;
};
oFF.QctModel.prototype.setFixedDate = function(fixedDate)
{
	this.m_fixedDate = fixedDate;
};
oFF.QctModel.prototype.getReferenceDate = function()
{
	return this.m_referenceDate;
};
oFF.QctModel.prototype.setReferenceDate = function(referenceDate)
{
	this.m_referenceDate = referenceDate;
};
oFF.QctModel.prototype.getCategory = function()
{
	return this.m_category;
};
oFF.QctModel.prototype.setCategory = function(category)
{
	this.m_category = category;
	if (oFF.CtCategory.isDefined(this.m_category))
	{
		this.m_rateVersion = null;
	}
};
oFF.QctModel.prototype.getRateVersion = function()
{
	return this.m_rateVersion;
};
oFF.QctModel.prototype.setRateVersion = function(rateVersion)
{
	if (oFF.XString.isEqual(rateVersion, oFF.QctModel.DYNAMIC) || oFF.XStringUtils.isNullOrEmpty(rateVersion))
	{
		this.m_rateVersion = null;
	}
	else
	{
		this.m_rateVersion = rateVersion;
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_rateVersion))
	{
		this.m_category = null;
	}
};
oFF.QctModel.prototype.checkApplyCatVersion = function()
{
	if (oFF.notNull(this.m_queryCurrencyTranslation))
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_rateVersion))
		{
			this.m_queryCurrencyTranslation.setFixedRateVersion(this.m_rateVersion);
		}
		else if (oFF.CtCategory.isDefined(this.m_category))
		{
			this.m_queryCurrencyTranslation.setFixedCategory(this.m_category);
		}
		else
		{
			this.m_queryCurrencyTranslation.setDynamicRateVersionAndCategory();
		}
	}
};
oFF.QctModel.prototype.getRateType = function()
{
	return this.m_rateType;
};
oFF.QctModel.prototype.setRateType = function(rateType)
{
	if (oFF.notNull(this.m_queryCurrencyTranslation))
	{
		this.m_rateType = rateType;
	}
};
oFF.QctModel.prototype.getReferenceDateOffset = function()
{
	return this.m_referenceDateOffset;
};
oFF.QctModel.prototype.setReferenceDateOffset = function(referenceDateOffset)
{
	this.m_referenceDateOffset = referenceDateOffset;
};
oFF.QctModel.prototype.getReferenceOffsetGranularity = function()
{
	return this.m_referenceOffsetGranularity;
};
oFF.QctModel.prototype.setReferenceOffsetGranularity = function(referenceOffsetGranularity)
{
	this.m_referenceOffsetGranularity = referenceOffsetGranularity;
};
oFF.QctModel.prototype.isMayConsiderOriginalCurrencyTranslation = function()
{
	return this.m_queryCurrencyTranslation.supportsPredefinedCurrencyTranslation();
};
oFF.QctModel.prototype.isDefineCurrencyTranslation = function()
{
	return this.m_queryCurrencyTranslation.isApplyDefinedCurrencyTranslation();
};
oFF.QctModel.prototype.setDefineCurrencyTranslation = function(defineCurrencyTranslation)
{
	this.m_queryCurrencyTranslation.setApplyDefinedCurrencyTranslation(defineCurrencyTranslation);
};
oFF.QctModel.prototype.isConsiderCurrencyTranslationFromQueryDefinition = function()
{
	return this.m_queryCurrencyTranslation.isApplyPredefinedCurrencyTranslation();
};
oFF.QctModel.prototype.setConsiderCurrencyTranslationFromQueryDefinition = function(considerCurrencyTranslationFromQueryDefinition)
{
	this.m_queryCurrencyTranslation.setApplyPredefinedCurrencyTranslation(considerCurrencyTranslationFromQueryDefinition);
};
oFF.QctModel.prototype.isMayDefineTargetCurrency = function()
{
	return this.isDefineCurrencyTranslation() && this.m_queryCurrencyTranslation.supportsTargetCurrency();
};
oFF.QctModel.prototype.isMayDefinePlanningParameters = function()
{
	return this.isDefineCurrencyTranslation() && this.m_queryCurrencyTranslation.supportsPlanningParameters();
};
oFF.QctModel.prototype.isMayDefineFixedDate = function()
{
	return this.isDefineCurrencyTranslation() && this.m_queryCurrencyTranslation.supportsReferenceDate();
};
oFF.QctModel.prototype.isMayDefineOffsetInMonths = function()
{
	return this.isDefineCurrencyTranslation() && !this.m_queryCurrencyTranslation.requiresReferenceDate() && this.m_queryCurrencyTranslation.supportsOffsetInMonths();
};
oFF.QctModel.prototype.isMayDefineOffsetInDays = function()
{
	return this.isDefineCurrencyTranslation() && !this.m_queryCurrencyTranslation.requiresReferenceDate() && this.m_queryCurrencyTranslation.supportsOffsetInDays();
};
oFF.QctModel.prototype.getCurrencyTranslationType = function()
{
	return this.m_queryCurrencyTranslation.getCurrencyTranslationObject();
};
oFF.QctModel.prototype.setCurrencyTranslationType = function(currencyTranslationType)
{
	this.m_queryCurrencyTranslation.setCurrencyTranslationObject(currencyTranslationType);
	if (oFF.notNull(currencyTranslationType))
	{
		if (oFF.XString.isEqual(currencyTranslationType.getName(), oFF.QctModel.CUSTOM))
		{
			currencyTranslationType.copyFrom(this.m_queryCurrencyTranslation.getCurrencyTranslationObject(), null);
		}
		this.m_queryCurrencyTranslation.setCurrencyTranslationObject(currencyTranslationType);
	}
	this.updateByCurrencyTranslationType();
};
oFF.QctModel.prototype.updateByCurrencyTranslationType = function()
{
	this.m_rateVersion = this.m_queryCurrencyTranslation.getFixedRateVersion();
	this.m_referenceDate = this.m_queryCurrencyTranslation.getFixedReferenceDate();
	this.m_referenceOffsetGranularity = this.m_queryCurrencyTranslation.getDateOffsetGranularity();
	this.m_rateType = this.m_queryCurrencyTranslation.getFixedRateType();
	this.m_category = this.m_queryCurrencyTranslation.getFixedCategory();
	if (this.m_queryCurrencyTranslation.supportsTargetCurrency())
	{
		this.m_targetCurrency = this.m_queryCurrencyTranslation.getFixedTargetCurrency();
	}
	if (oFF.isNull(this.m_referenceOffsetGranularity))
	{
		this.m_referenceOffsetGranularity = oFF.DateOffsetGranularity.MONTH;
	}
	this.m_negativeOffset = this.m_queryCurrencyTranslation.getDateOffset() < 0;
	this.m_referenceDateOffset = this.m_negativeOffset ? -this.m_queryCurrencyTranslation.getDateOffset() : this.m_queryCurrencyTranslation.getDateOffset();
	this.m_offset = this.m_referenceDateOffset !== 0 && oFF.notNull(this.m_referenceOffsetGranularity);
	this.m_fixedDate = this.m_queryCurrencyTranslation.isReferenceDateFixed() || this.m_queryCurrencyTranslation.requiresReferenceDate();
};
oFF.QctModel.prototype.getTargetCurrency = function()
{
	if (oFF.notNull(this.m_queryCurrencyTranslation) && !this.m_queryCurrencyTranslation.supportsTargetCurrency() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_queryCurrencyTranslation.getFixedTargetCurrency()))
	{
		return this.m_queryCurrencyTranslation.getFixedTargetCurrency();
	}
	return this.m_targetCurrency;
};
oFF.QctModel.prototype.setTargetCurrency = function(targetCurrency)
{
	this.m_targetCurrency = targetCurrency;
};
oFF.QctModel.prototype.setupExt = function(currencyTranslationManager)
{
	this.m_queryCurrencyTranslation = currencyTranslationManager.getQueryCurrencyTranslation();
	this.updateByCurrencyTranslationType();
};
oFF.QctModel.prototype.applyToQueryModel = function(queryModel)
{
	queryModel.queueEventing();
	var currencyTranslationManager = queryModel.getCurrencyTranslationManager();
	var queryCurrencyTranslation = currencyTranslationManager.getQueryCurrencyTranslation();
	if (this.getCurrencyTranslationType() !== null)
	{
		queryCurrencyTranslation.setCurrencyTranslationObject(this.getCurrencyTranslationType());
	}
	if (this.m_queryCurrencyTranslation.supportsReferenceDate() && !this.m_fixedDate)
	{
		if (this.m_queryCurrencyTranslation.supportsOffsetInMonths() && this.m_offset)
		{
			var offset = this.m_negativeOffset ? -this.m_referenceDateOffset : this.m_referenceDateOffset;
			this.m_queryCurrencyTranslation.setDynamicReferenceDateWithOffsetAndGranularity(offset, this.m_referenceOffsetGranularity);
		}
		else
		{
			this.m_queryCurrencyTranslation.setDynamicReferenceDate();
		}
	}
	if (this.m_queryCurrencyTranslation.supportsReferenceDate() && this.m_fixedDate && oFF.notNull(this.m_referenceDate))
	{
		this.m_queryCurrencyTranslation.setFixedReferenceDateByDateValue(this.m_referenceDate);
	}
	if (this.m_queryCurrencyTranslation.requiresRateName())
	{
		this.m_queryCurrencyTranslation.setFixedRateNameByString(oFF.QctModel.DEFAULT_RATE_NAME);
	}
	if (this.m_queryCurrencyTranslation.supportsPlanningParameters())
	{
		this.checkApplyCatVersion();
		if (oFF.CtRateType.isDefined(this.m_rateType))
		{
			this.m_queryCurrencyTranslation.setFixedRateType(this.m_rateType);
		}
		else
		{
			this.m_queryCurrencyTranslation.setDynamicRateType();
		}
	}
	if (this.m_queryCurrencyTranslation.supportsTargetCurrency() && oFF.notNull(this.m_targetCurrency))
	{
		this.m_queryCurrencyTranslation.setFixedTargetCurrencyByString(this.m_targetCurrency);
	}
	queryModel.resumeEventing();
};

oFF.HierarchyCatalogCallbackLambda = function() {};
oFF.HierarchyCatalogCallbackLambda.prototype = new oFF.XObject();
oFF.HierarchyCatalogCallbackLambda.prototype._ff_c = "HierarchyCatalogCallbackLambda";

oFF.HierarchyCatalogCallbackLambda.createForCreation = function(callback)
{
	var obj = new oFF.HierarchyCatalogCallbackLambda();
	obj.m_creationCallback = callback;
	return obj;
};
oFF.HierarchyCatalogCallbackLambda.createForResult = function(callback)
{
	var obj = new oFF.HierarchyCatalogCallbackLambda();
	obj.m_resultCallback = callback;
	return obj;
};
oFF.HierarchyCatalogCallbackLambda.prototype.m_creationCallback = null;
oFF.HierarchyCatalogCallbackLambda.prototype.m_resultCallback = null;
oFF.HierarchyCatalogCallbackLambda.prototype.releaseObject = function()
{
	this.m_creationCallback = null;
	this.m_resultCallback = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogCallbackLambda.prototype.onHierarchyCatalogManagerCreated = function(extResult, hierarchyCatalogManager, customIdentifier)
{
	this.m_creationCallback(extResult);
	this.releaseObject();
};
oFF.HierarchyCatalogCallbackLambda.prototype.onHierarchyCatalogResult = function(extResult, result, customIdentifier)
{
	this.m_resultCallback(extResult);
	this.releaseObject();
};

oFF.OlapUiI18n = function() {};
oFF.OlapUiI18n.prototype = new oFF.XObject();
oFF.OlapUiI18n.prototype._ff_c = "OlapUiI18n";

oFF.OlapUiI18n.KEY_PREFIX = "I18N";
oFF.OlapUiI18n.I18N_OK = "I18N_OK";
oFF.OlapUiI18n.I18N_CANCEL = "I18N_CANCEL";
oFF.OlapUiI18n.s_defaultValues = null;
oFF.OlapUiI18n.create = function()
{
	return new oFF.OlapUiI18n();
};
oFF.OlapUiI18n.staticSetup = function()
{
	oFF.OlapUiI18n.s_defaultValues = oFF.XHashMapOfStringByString.create();
	oFF.OlapUiI18n.s_defaultValues.put(oFF.OlapUiI18n.I18N_OK, "Ok");
	oFF.OlapUiI18n.s_defaultValues.put(oFF.OlapUiI18n.I18N_CANCEL, "Cancel");
	oFF.OuSetupLocalization.staticSetup();
	oFF.VariableDialogI18n.staticSetupVd();
	oFF.DimensionDialogI18n.staticSetupDd();
	oFF.CatalogDialogI18n.staticSetupCd();
	oFF.CtDialogI18n.staticSetupCtd();
	oFF.DataCellDialogI18n.staticSetupDcd();
	oFF.ClipboardDialogI18n.staticSetupCbd();
	oFF.LayoutDialogI18n.staticSetupLd();
	oFF.VariantPopupI18n.staticSetupVp();
};
oFF.OlapUiI18n.addDefaultValue = function(key, value)
{
	if (oFF.notNull(oFF.OlapUiI18n.s_defaultValues))
	{
		oFF.OlapUiI18n.s_defaultValues.put(key, value);
	}
};
oFF.OlapUiI18n.prototype.m_externalMapper = null;
oFF.OlapUiI18n.prototype.m_externalProvider = null;
oFF.OlapUiI18n.prototype.m_suppressDefaultTexts = false;
oFF.OlapUiI18n.prototype.setExternalLocalization = function(mapper, provider)
{
	this.m_externalMapper = mapper;
	this.m_externalProvider = provider;
};
oFF.OlapUiI18n.prototype.setSuppressDefaultTexts = function(suppressDefaultTexts)
{
	this.m_suppressDefaultTexts = suppressDefaultTexts;
};
oFF.OlapUiI18n.prototype.getText = function(key)
{
	return this.getTextWithPlaceholder2(key, null, null);
};
oFF.OlapUiI18n.prototype.getTextWithPlaceholder = function(key, replacement)
{
	return this.getTextWithPlaceholder2(key, replacement, null);
};
oFF.OlapUiI18n.prototype.getTextWithPlaceholder2 = function(key, replacement1, replacement2)
{
	var externalText = this.lookupExternalText(key, replacement1, replacement2);
	if (oFF.notNull(externalText))
	{
		return externalText;
	}
	if (!this.m_suppressDefaultTexts)
	{
		var text = oFF.OlapUiI18n.s_defaultValues.getByKey(key);
		if (oFF.notNull(text))
		{
			if (oFF.XString.containsString(text, "{0}"))
			{
				text = oFF.XString.replace(text, "{0}", replacement1);
			}
			if (oFF.XString.containsString(text, "{1}"))
			{
				text = oFF.XString.replace(text, "{1}", replacement2);
			}
			return text;
		}
	}
	return key;
};
oFF.OlapUiI18n.prototype.lookupExternalText = function(key, replacement1, replacement2)
{
	if (oFF.isNull(this.m_externalProvider))
	{
		return null;
	}
	var externalKey = oFF.notNull(this.m_externalMapper) ? this.m_externalMapper.lookupExternalKey(key) : key;
	if (oFF.notNull(externalKey))
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(replacement1))
		{
			return this.m_externalProvider.getTextWithPlaceholder(externalKey, replacement1, replacement2);
		}
		return this.m_externalProvider.getText(externalKey);
	}
	return null;
};
oFF.OlapUiI18n.prototype.getAllLocalizations = function()
{
	return oFF.OlapUiI18n.s_defaultValues;
};
oFF.OlapUiI18n.prototype.releaseObject = function()
{
	this.m_externalMapper = null;
	this.m_externalProvider = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapUiI18nFactory = function() {};
oFF.OlapUiI18nFactory.prototype = new oFF.I18nFactory();
oFF.OlapUiI18nFactory.prototype._ff_c = "OlapUiI18nFactory";

oFF.OlapUiI18nFactory.staticSetup = function()
{
	oFF.I18nFactory.registerFactory(new oFF.OlapUiI18nFactory());
};
oFF.OlapUiI18nFactory.prototype.newI18nInstance = function()
{
	return oFF.OlapUiI18n.create();
};

oFF.OlapUiDialogHandle = function() {};
oFF.OlapUiDialogHandle.prototype = new oFF.XObject();
oFF.OlapUiDialogHandle.prototype._ff_c = "OlapUiDialogHandle";

oFF.OlapUiDialogHandle.DIALOG_CSS_CLASS = "ffSacDialog";
oFF.OlapUiDialogHandle.createDialogHandle = function(dialog)
{
	var obj = new oFF.OlapUiDialogHandle();
	obj.setupDialogHandle(dialog);
	return obj;
};
oFF.OlapUiDialogHandle.prototype.m_genesis = null;
oFF.OlapUiDialogHandle.prototype.m_dialog = null;
oFF.OlapUiDialogHandle.prototype.setupDialogHandle = function(dialog)
{
	this.m_dialog = dialog;
	this.m_dialog.addCssClass(oFF.OlapUiDialogHandle.DIALOG_CSS_CLASS);
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("1rem"));
	this.m_genesis = oFF.UiGenesis.create(this.m_dialog);
};
oFF.OlapUiDialogHandle.prototype.getGenesis = function()
{
	return this.m_genesis;
};
oFF.OlapUiDialogHandle.prototype.setTitle = function(title)
{
	this.m_dialog.setTitle(title);
};
oFF.OlapUiDialogHandle.prototype.setName = function(name)
{
	this.m_dialog.setName(name);
};
oFF.OlapUiDialogHandle.prototype.setWidth = function(width)
{
	this.m_dialog.setWidth(width);
};
oFF.OlapUiDialogHandle.prototype.setHeight = function(height)
{
	this.m_dialog.setHeight(height);
};
oFF.OlapUiDialogHandle.prototype.getCssClass = function()
{
	return this.m_dialog.getCssClass();
};
oFF.OlapUiDialogHandle.prototype.addCssClass = function(cssClass)
{
	return this.m_dialog.addCssClass(cssClass);
};
oFF.OlapUiDialogHandle.prototype.removeCssClass = function(cssClass)
{
	return this.m_dialog.removeCssClass(cssClass);
};
oFF.OlapUiDialogHandle.prototype.addNewButton = function()
{
	return this.m_dialog.addNewDialogButton();
};
oFF.OlapUiDialogHandle.prototype.insertNewButton = function(index)
{
	var button = this.m_genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_dialog.insertDialogButton(button, index);
	return button;
};
oFF.OlapUiDialogHandle.prototype.isOpen = function()
{
	return this.m_dialog.isOpen();
};
oFF.OlapUiDialogHandle.prototype.open = function()
{
	return this.m_dialog.open();
};
oFF.OlapUiDialogHandle.prototype.close = function()
{
	return this.m_dialog.close();
};
oFF.OlapUiDialogHandle.prototype.getListenerOnAfterOpen = function()
{
	return this.m_dialog.getListenerOnAfterOpen();
};
oFF.OlapUiDialogHandle.prototype.registerOnAfterOpen = function(listener)
{
	return this.m_dialog.registerOnAfterOpen(listener);
};
oFF.OlapUiDialogHandle.prototype.registerOnBeforeOpen = function(listener)
{
	return this.m_dialog.registerOnBeforeOpen(listener);
};
oFF.OlapUiDialogHandle.prototype.getListenerOnBeforeOpen = function()
{
	return this.m_dialog.getListenerOnBeforeOpen();
};
oFF.OlapUiDialogHandle.prototype.getListenerOnAfterClose = function()
{
	return this.m_dialog.getListenerOnAfterClose();
};
oFF.OlapUiDialogHandle.prototype.registerOnAfterClose = function(listener)
{
	return this.m_dialog.registerOnAfterClose(listener);
};
oFF.OlapUiDialogHandle.prototype.registerOnBeforeClose = function(listener)
{
	return this.m_dialog.registerOnBeforeClose(listener);
};
oFF.OlapUiDialogHandle.prototype.getListenerOnBeforeClose = function()
{
	return this.m_dialog.getListenerOnBeforeClose();
};
oFF.OlapUiDialogHandle.prototype.registerOnResize = function(listener)
{
	return this.m_dialog.registerOnResize(listener);
};
oFF.OlapUiDialogHandle.prototype.getListenerOnResize = function()
{
	return this.m_dialog.getListenerOnResize();
};
oFF.OlapUiDialogHandle.prototype.isResizable = function()
{
	return this.m_dialog.isResizable();
};
oFF.OlapUiDialogHandle.prototype.setResizable = function(resizable)
{
	return this.m_dialog.setResizable(resizable);
};
oFF.OlapUiDialogHandle.prototype.getOffsetWidth = function()
{
	return this.m_dialog.getOffsetWidth();
};
oFF.OlapUiDialogHandle.prototype.shake = function()
{
	this.m_dialog.shake();
};
oFF.OlapUiDialogHandle.prototype.isBusy = function()
{
	return this.m_dialog.isBusy();
};
oFF.OlapUiDialogHandle.prototype.setBusy = function(busy)
{
	return this.m_dialog.setBusy(busy);
};
oFF.OlapUiDialogHandle.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_dialog) && this.m_dialog.isOpen())
	{
		this.m_dialog.close();
	}
	this.m_dialog = oFF.XObjectExt.release(this.m_dialog);
	this.m_genesis = oFF.XObjectExt.release(this.m_genesis);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapUiDummyHandle = function() {};
oFF.OlapUiDummyHandle.prototype = new oFF.XObject();
oFF.OlapUiDummyHandle.prototype._ff_c = "OlapUiDummyHandle";

oFF.OlapUiDummyHandle.createFactory = function()
{
	return new oFF.OlapUiDummyHandle();
};
oFF.OlapUiDummyHandle.createDummy = function()
{
	var obj = new oFF.OlapUiDummyHandle();
	obj.m_genesis = oFF.UiGenesis.create(oFF.UiContextDummy.getSingleton());
	return obj;
};
oFF.OlapUiDummyHandle.prototype.m_genesis = null;
oFF.OlapUiDummyHandle.prototype.m_afterClose = null;
oFF.OlapUiDummyHandle.prototype.m_afterOpen = null;
oFF.OlapUiDummyHandle.prototype.m_beforeClose = null;
oFF.OlapUiDummyHandle.prototype.m_beforeOpen = null;
oFF.OlapUiDummyHandle.prototype.getInstance = function()
{
	return oFF.OlapUiDummyHandle.createDummy();
};
oFF.OlapUiDummyHandle.prototype.getGenesis = function()
{
	return this.m_genesis;
};
oFF.OlapUiDummyHandle.prototype.setTitle = function(title) {};
oFF.OlapUiDummyHandle.prototype.setName = function(name) {};
oFF.OlapUiDummyHandle.prototype.setWidth = function(width) {};
oFF.OlapUiDummyHandle.prototype.setHeight = function(height) {};
oFF.OlapUiDummyHandle.prototype.addNewButton = function()
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.insertNewButton = function(index)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.shake = function() {};
oFF.OlapUiDummyHandle.prototype.registerOnAfterClose = function(listener)
{
	this.m_afterClose = listener;
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.getListenerOnAfterClose = function()
{
	return this.m_afterClose;
};
oFF.OlapUiDummyHandle.prototype.registerOnAfterOpen = function(listener)
{
	this.m_afterOpen = listener;
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.getListenerOnAfterOpen = function()
{
	return this.m_afterOpen;
};
oFF.OlapUiDummyHandle.prototype.registerOnBeforeOpen = function(listener)
{
	this.m_beforeOpen = listener;
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.getListenerOnBeforeOpen = function()
{
	return this.m_beforeOpen;
};
oFF.OlapUiDummyHandle.prototype.registerOnBeforeClose = function(listener)
{
	this.m_beforeClose = listener;
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.getListenerOnBeforeClose = function()
{
	return this.m_beforeClose;
};
oFF.OlapUiDummyHandle.prototype.registerOnResize = function(listener)
{
	return null;
};
oFF.OlapUiDummyHandle.prototype.getListenerOnResize = function()
{
	return null;
};
oFF.OlapUiDummyHandle.prototype.isResizable = function()
{
	return false;
};
oFF.OlapUiDummyHandle.prototype.setResizable = function(resizable)
{
	return null;
};
oFF.OlapUiDummyHandle.prototype.getOffsetWidth = function()
{
	return 0;
};
oFF.OlapUiDummyHandle.prototype.close = function()
{
	var event = oFF.UiControlEvent.create(oFF.UiContextDummy.getSingleton(), null);
	if (oFF.notNull(this.m_beforeClose))
	{
		this.m_beforeClose.onBeforeClose(event);
	}
	if (oFF.notNull(this.m_afterClose))
	{
		this.m_afterClose.onAfterClose(event);
	}
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.open = function()
{
	if (oFF.notNull(this.m_afterOpen))
	{
		this.m_afterOpen.onAfterOpen(oFF.UiControlEvent.create(oFF.UiContextDummy.getSingleton(), null));
	}
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.getCssClass = function()
{
	return null;
};
oFF.OlapUiDummyHandle.prototype.addCssClass = function(cssClass)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.removeCssClass = function(cssClass)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.isBusy = function()
{
	return false;
};
oFF.OlapUiDummyHandle.prototype.setBusy = function(busy)
{
	return oFF.UiContextDummy.getSingleton();
};
oFF.OlapUiDummyHandle.prototype.isOpen = function()
{
	return false;
};

oFF.OlapUiNavigationHandle = function() {};
oFF.OlapUiNavigationHandle.prototype = new oFF.XObject();
oFF.OlapUiNavigationHandle.prototype._ff_c = "OlapUiNavigationHandle";

oFF.OlapUiNavigationHandle.createNavigationHandle = function(container, page)
{
	var obj = new oFF.OlapUiNavigationHandle();
	obj.setupNavigationHandle(container, page);
	return obj;
};
oFF.OlapUiNavigationHandle.prototype.m_navigationContainer = null;
oFF.OlapUiNavigationHandle.prototype.m_genesis = null;
oFF.OlapUiNavigationHandle.prototype.m_page = null;
oFF.OlapUiNavigationHandle.prototype.m_afterOpen = null;
oFF.OlapUiNavigationHandle.prototype.m_beforeOpen = null;
oFF.OlapUiNavigationHandle.prototype.m_beforeClose = null;
oFF.OlapUiNavigationHandle.prototype.m_afterClose = null;
oFF.OlapUiNavigationHandle.prototype.setupNavigationHandle = function(container, page)
{
	this.m_navigationContainer = container;
	this.m_page = page;
	this.m_page.setShowNavButton(false);
	this.m_genesis = oFF.UiGenesis.create(this.m_page);
};
oFF.OlapUiNavigationHandle.prototype.getGenesis = function()
{
	return this.m_genesis;
};
oFF.OlapUiNavigationHandle.prototype.setTitle = function(title)
{
	this.m_page.setTitle(title);
};
oFF.OlapUiNavigationHandle.prototype.setName = function(name)
{
	this.m_page.setName(name);
};
oFF.OlapUiNavigationHandle.prototype.setWidth = function(width) {};
oFF.OlapUiNavigationHandle.prototype.setHeight = function(height) {};
oFF.OlapUiNavigationHandle.prototype.getCssClass = function()
{
	return this.m_navigationContainer.getCssClass();
};
oFF.OlapUiNavigationHandle.prototype.addCssClass = function(cssClass)
{
	return this.m_navigationContainer.addCssClass(cssClass);
};
oFF.OlapUiNavigationHandle.prototype.removeCssClass = function(cssClass)
{
	return this.m_navigationContainer.removeCssClass(cssClass);
};
oFF.OlapUiNavigationHandle.prototype.addNewButton = function()
{
	var button = this.m_genesis.newControl(oFF.UiType.PAGE_BUTTON);
	this.m_page.addPageButton(button);
	return button;
};
oFF.OlapUiNavigationHandle.prototype.insertNewButton = function(index)
{
	var button = this.m_genesis.newControl(oFF.UiType.PAGE_BUTTON);
	this.m_page.insertPageButton(button, index);
	return button;
};
oFF.OlapUiNavigationHandle.prototype.isOpen = function()
{
	return this.m_navigationContainer.getIndexOfPage(this.m_page) !== -1;
};
oFF.OlapUiNavigationHandle.prototype.open = function()
{
	this.m_navigationContainer.pushPage(this.m_page);
	if (oFF.notNull(this.m_afterOpen))
	{
		this.m_afterOpen.onAfterOpen(oFF.UiControlEvent.create(this.m_page, null));
	}
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.close = function()
{
	if (oFF.notNull(this.m_beforeClose))
	{
		this.m_beforeClose.onBeforeClose(oFF.UiControlEvent.create(this.m_page, null));
	}
	this.m_navigationContainer.popPage();
	if (oFF.notNull(this.m_afterClose))
	{
		this.m_afterClose.onAfterClose(oFF.UiControlEvent.create(this.m_page, null));
	}
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.getListenerOnAfterOpen = function()
{
	return this.m_afterOpen;
};
oFF.OlapUiNavigationHandle.prototype.registerOnAfterOpen = function(listener)
{
	this.m_afterOpen = listener;
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.registerOnBeforeOpen = function(listener)
{
	this.m_beforeOpen = listener;
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.getListenerOnBeforeOpen = function()
{
	return this.m_beforeOpen;
};
oFF.OlapUiNavigationHandle.prototype.getListenerOnBeforeClose = function()
{
	return this.m_beforeClose;
};
oFF.OlapUiNavigationHandle.prototype.registerOnBeforeClose = function(listener)
{
	this.m_beforeClose = listener;
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.getListenerOnAfterClose = function()
{
	return this.m_afterClose;
};
oFF.OlapUiNavigationHandle.prototype.registerOnAfterClose = function(listener)
{
	this.m_afterClose = listener;
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.registerOnResize = function(listener)
{
	return null;
};
oFF.OlapUiNavigationHandle.prototype.getListenerOnResize = function()
{
	return null;
};
oFF.OlapUiNavigationHandle.prototype.isResizable = function()
{
	return false;
};
oFF.OlapUiNavigationHandle.prototype.setResizable = function(resizable)
{
	return null;
};
oFF.OlapUiNavigationHandle.prototype.getOffsetWidth = function()
{
	return 0;
};
oFF.OlapUiNavigationHandle.prototype.shake = function() {};
oFF.OlapUiNavigationHandle.prototype.isBusy = function()
{
	return this.m_genesis.getRoot().isBusy();
};
oFF.OlapUiNavigationHandle.prototype.setBusy = function(busy)
{
	this.m_genesis.getRoot().setBusy(busy);
	return this.m_page;
};
oFF.OlapUiNavigationHandle.prototype.releaseObject = function()
{
	this.m_navigationContainer.clearPages();
	this.m_navigationContainer = null;
	this.m_page = null;
	this.m_genesis = oFF.XObjectExt.release(this.m_genesis);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapUiPageHandle = function() {};
oFF.OlapUiPageHandle.prototype = new oFF.XObject();
oFF.OlapUiPageHandle.prototype._ff_c = "OlapUiPageHandle";

oFF.OlapUiPageHandle.createPageHandle = function(page)
{
	var obj = new oFF.OlapUiPageHandle();
	obj.setupPageHandle(page);
	return obj;
};
oFF.OlapUiPageHandle.prototype.m_genesis = null;
oFF.OlapUiPageHandle.prototype.m_page = null;
oFF.OlapUiPageHandle.prototype.m_afterOpen = null;
oFF.OlapUiPageHandle.prototype.m_beforeOpen = null;
oFF.OlapUiPageHandle.prototype.m_beforeClose = null;
oFF.OlapUiPageHandle.prototype.m_afterClose = null;
oFF.OlapUiPageHandle.prototype.setupPageHandle = function(page)
{
	this.m_page = page;
	this.m_genesis = oFF.UiGenesis.create(this.m_page);
};
oFF.OlapUiPageHandle.prototype.getGenesis = function()
{
	return this.m_genesis;
};
oFF.OlapUiPageHandle.prototype.setTitle = function(title)
{
	this.m_page.setTitle(title);
};
oFF.OlapUiPageHandle.prototype.setName = function(name)
{
	this.m_page.setName(name);
};
oFF.OlapUiPageHandle.prototype.setWidth = function(width) {};
oFF.OlapUiPageHandle.prototype.setHeight = function(height) {};
oFF.OlapUiPageHandle.prototype.getCssClass = function()
{
	return this.m_page.getCssClass();
};
oFF.OlapUiPageHandle.prototype.addCssClass = function(cssClass)
{
	return this.m_page.addCssClass(cssClass);
};
oFF.OlapUiPageHandle.prototype.removeCssClass = function(cssClass)
{
	return this.m_page.removeCssClass(cssClass);
};
oFF.OlapUiPageHandle.prototype.addNewButton = function()
{
	var button = this.m_genesis.newControl(oFF.UiType.PAGE_BUTTON);
	this.m_page.addPageButton(button);
	return button;
};
oFF.OlapUiPageHandle.prototype.insertNewButton = function(index)
{
	var button = this.m_genesis.newControl(oFF.UiType.PAGE_BUTTON);
	this.m_page.insertPageButton(button, index);
	return button;
};
oFF.OlapUiPageHandle.prototype.isOpen = function()
{
	return this.m_page.getParent() !== null;
};
oFF.OlapUiPageHandle.prototype.open = function()
{
	if (oFF.notNull(this.m_afterOpen))
	{
		this.m_afterOpen.onAfterOpen(oFF.UiControlEvent.create(this.m_page, null));
	}
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.close = function()
{
	if (oFF.notNull(this.m_beforeClose))
	{
		this.m_beforeClose.onBeforeClose(oFF.UiControlEvent.create(this.m_page, null));
	}
	if (oFF.notNull(this.m_afterClose))
	{
		this.m_afterClose.onAfterClose(oFF.UiControlEvent.create(this.m_page, null));
	}
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.getListenerOnAfterOpen = function()
{
	return this.m_afterOpen;
};
oFF.OlapUiPageHandle.prototype.registerOnAfterOpen = function(listener)
{
	this.m_afterOpen = listener;
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.registerOnBeforeOpen = function(listener)
{
	this.m_beforeOpen = listener;
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.getListenerOnBeforeOpen = function()
{
	return this.m_beforeOpen;
};
oFF.OlapUiPageHandle.prototype.getListenerOnBeforeClose = function()
{
	return this.m_beforeClose;
};
oFF.OlapUiPageHandle.prototype.registerOnBeforeClose = function(listener)
{
	this.m_beforeClose = listener;
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.getListenerOnAfterClose = function()
{
	return this.m_afterClose;
};
oFF.OlapUiPageHandle.prototype.registerOnAfterClose = function(listener)
{
	this.m_afterClose = listener;
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.registerOnResize = function(listener)
{
	return null;
};
oFF.OlapUiPageHandle.prototype.getListenerOnResize = function()
{
	return null;
};
oFF.OlapUiPageHandle.prototype.isResizable = function()
{
	return false;
};
oFF.OlapUiPageHandle.prototype.setResizable = function(resizable)
{
	return null;
};
oFF.OlapUiPageHandle.prototype.getOffsetWidth = function()
{
	return 0;
};
oFF.OlapUiPageHandle.prototype.shake = function() {};
oFF.OlapUiPageHandle.prototype.isBusy = function()
{
	return this.m_genesis.getRoot().isBusy();
};
oFF.OlapUiPageHandle.prototype.setBusy = function(busy)
{
	this.m_genesis.getRoot().setBusy(busy);
	return this.m_page;
};
oFF.OlapUiPageHandle.prototype.releaseObject = function()
{
	this.m_page = null;
	this.m_genesis = oFF.XObjectExt.release(this.m_genesis);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OuQueryExecutionListenerLambda = function() {};
oFF.OuQueryExecutionListenerLambda.prototype = new oFF.XObject();
oFF.OuQueryExecutionListenerLambda.prototype._ff_c = "OuQueryExecutionListenerLambda";

oFF.OuQueryExecutionListenerLambda.createSingleUse = function(callback)
{
	var obj = new oFF.OuQueryExecutionListenerLambda();
	obj.setupExt(callback);
	return obj;
};
oFF.OuQueryExecutionListenerLambda.prototype.m_callback = null;
oFF.OuQueryExecutionListenerLambda.prototype.setupExt = function(callback)
{
	this.m_callback = callback;
};
oFF.OuQueryExecutionListenerLambda.prototype.releaseObject = function()
{
	this.m_callback = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OuQueryExecutionListenerLambda.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_callback(extResult);
	this.releaseObject();
};

oFF.OuValHelpExecutedListenerLambda = function() {};
oFF.OuValHelpExecutedListenerLambda.prototype = new oFF.XObject();
oFF.OuValHelpExecutedListenerLambda.prototype._ff_c = "OuValHelpExecutedListenerLambda";

oFF.OuValHelpExecutedListenerLambda.createSingleUse = function(callback)
{
	var obj = new oFF.OuValHelpExecutedListenerLambda();
	obj.m_callback = callback;
	return obj;
};
oFF.OuValHelpExecutedListenerLambda.prototype.m_callback = null;
oFF.OuValHelpExecutedListenerLambda.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_callback(extResult);
	oFF.XObjectExt.release(this);
};
oFF.OuValHelpExecutedListenerLambda.prototype.releaseObject = function()
{
	this.m_callback = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapUiValueHelpDimension = function() {};
oFF.OlapUiValueHelpDimension.prototype = new oFF.OlapUiValueHelpAbstract();
oFF.OlapUiValueHelpDimension.prototype._ff_c = "OlapUiValueHelpDimension";

oFF.OlapUiValueHelpDimension.create = function(valueRequestObject)
{
	var obj = new oFF.OlapUiValueHelpDimension();
	obj.setupExt(valueRequestObject);
	obj.cleanUpSelectorSettings(valueRequestObject);
	return obj;
};
oFF.OlapUiValueHelpDimension.prototype.m_hierarchyName = null;
oFF.OlapUiValueHelpDimension.prototype.m_hierarchyChanged = false;
oFF.OlapUiValueHelpDimension.prototype.releaseObject = function()
{
	oFF.OlapUiValueHelpAbstract.prototype.releaseObject.call( this );
	this.m_hierarchyName = null;
};
oFF.OlapUiValueHelpDimension.prototype.getReadMode = function(readMode)
{
	if (readMode === oFF.OlapUiReadMode.QUERY_DEFAULT)
	{
		var dfReadMode = this.getDimension().getReadModeDefault(oFF.QContextType.SELECTOR);
		if (oFF.notNull(dfReadMode))
		{
			return dfReadMode;
		}
	}
	return readMode === oFF.OlapUiReadMode.MASTER ? oFF.QMemberReadMode.MASTER_AND_SPACE : oFF.QMemberReadMode.BOOKED_AND_SPACE_AND_STATE;
};
oFF.OlapUiValueHelpDimension.prototype.isHierarchicalValueHelp = function()
{
	return this.m_hierarchyChanged ? oFF.XStringUtils.isNotNullAndNotEmpty(this.m_hierarchyName) : this.m_valueRequestObject.isHierarchyActive();
};
oFF.OlapUiValueHelpDimension.prototype.getHierarchyName = function()
{
	return this.m_hierarchyChanged ? this.m_hierarchyName : this.m_valueRequestObject.getHierarchyName();
};
oFF.OlapUiValueHelpDimension.prototype.setHierarchyName = function(hierarchyName)
{
	this.m_hierarchyName = hierarchyName;
	this.m_hierarchyChanged = true;
	this.m_valueRequestObject.setSelectorHierarchyActive(this.isHierarchicalValueHelp());
};
oFF.OlapUiValueHelpDimension.prototype.getDimension = function()
{
	return this.m_valueRequestObject;
};
oFF.OlapUiValueHelpDimension.prototype.getKeyField = function()
{
	var dimension = this.m_valueRequestObject;
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyKeyField() : dimension.getFlatKeyField();
};
oFF.OlapUiValueHelpDimension.prototype.getDisplayKeyField = function()
{
	var dimension = this.m_valueRequestObject;
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyDisplayKeyField() : dimension.getFlatDisplayKeyField();
};
oFF.OlapUiValueHelpDimension.prototype.getTextField = function()
{
	var dimension = this.m_valueRequestObject;
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyTextField() : dimension.getFlatTextField();
};
oFF.OlapUiValueHelpDimension.prototype.processValueHelp = function(startPage, endPage, pageSize, fields, readMode, listener, customIdentifier)
{
	var dimension = this.m_valueRequestObject;
	this.configureValueHelp(dimension, this.getReadMode(readMode), startPage, endPage, pageSize, fields, true);
	if (dimension.isSelectorGettingInterval())
	{
		dimension.setSelectorHierarchyActive(false);
		if (dimension.getKeyField().getValueType().isDateTime())
		{
			dimension.addSelectorFilterForKey("0001-01-01", oFF.ComparisonOperator.GREATER_THAN);
		}
	}
	dimension.processValueHelp(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.OlapUiValueHelpDimension.prototype.processChildFetch = function(node, offset, amount, fields, readMode, listener, customIdentifier)
{
	var dimension = node.getDimension();
	this.configureValueHelp(dimension, this.getReadMode(readMode), 0, 0, amount, fields, false);
	dimension.setSelectorPaging(offset, offset + amount);
	node.processValueHelpChildFetch(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.OlapUiValueHelpDimension.prototype.processSearch = function(searchPattern, searchFields, fields, pageSize, loadParentNodes, readMode, listener, customIdentifier)
{
	var dimension = this.m_valueRequestObject;
	this.configureValueHelp(dimension, this.getReadMode(readMode), 0, 0, pageSize, fields, false);
	var filterAdded = oFF.XStringUtils.isNotNullAndNotEmpty(searchPattern) && this.setSelectorFilter(dimension, searchPattern, searchFields, loadParentNodes);
	if (!filterAdded)
	{
		listener.onValuehelpExecuted(oFF.ExtResult.create(oFF.XList.create(), null), null, customIdentifier);
		return;
	}
	dimension.processValueHelp(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	dimension.clearSelectorFilter();
};
oFF.OlapUiValueHelpDimension.prototype.processFetchItems = function(items, fields, listener, customIdentifier)
{
	var dimension = this.m_valueRequestObject;
	this.configureFetchItems(dimension, this.getReadMode(oFF.OlapUiReadMode.MASTER), items, fields);
	dimension.processValueHelp(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	dimension.clearSelectorFilter();
};

oFF.OlapUiValueHelpVariable = function() {};
oFF.OlapUiValueHelpVariable.prototype = new oFF.OlapUiValueHelpAbstract();
oFF.OlapUiValueHelpVariable.prototype._ff_c = "OlapUiValueHelpVariable";

oFF.OlapUiValueHelpVariable.create = function(valueRequestObject)
{
	var obj = new oFF.OlapUiValueHelpVariable();
	obj.setupExt(valueRequestObject);
	obj.cleanUpSelectorSettings(valueRequestObject.getDimension());
	return obj;
};
oFF.OlapUiValueHelpVariable.prototype.getContextType = function()
{
	var variable = this.m_valueRequestObject;
	return this.getSystemType(variable.getDimension()).isTypeOf(oFF.SystemType.ABAP) ? oFF.QContextType.VARIABLE : oFF.QContextType.SELECTOR;
};
oFF.OlapUiValueHelpVariable.prototype.getReadMode = function(readMode)
{
	if (readMode === oFF.OlapUiReadMode.QUERY_DEFAULT)
	{
		var dfReadMode = this.getDimension().getReadModeDefault(this.getContextType());
		if (oFF.notNull(dfReadMode))
		{
			return dfReadMode;
		}
	}
	return readMode === oFF.OlapUiReadMode.MASTER ? oFF.QMemberReadMode.MASTER : oFF.QMemberReadMode.BOOKED;
};
oFF.OlapUiValueHelpVariable.prototype.isHierarchicalValueHelp = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyName());
};
oFF.OlapUiValueHelpVariable.prototype.getHierarchyName = function()
{
	var variable = this.m_valueRequestObject;
	var varType = variable.getVariableType();
	return oFF.notNull(varType) && varType.isTypeOf(oFF.VariableType.HIERARCHY_NODE_VARIABLE) ? variable.getHierarchyName() : null;
};
oFF.OlapUiValueHelpVariable.prototype.setHierarchyName = function(hierarchyName) {};
oFF.OlapUiValueHelpVariable.prototype.getDimension = function()
{
	return this.m_valueRequestObject.getDimension();
};
oFF.OlapUiValueHelpVariable.prototype.getKeyField = function()
{
	var dimension = this.getDimension();
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyKeyField() : dimension.getFlatKeyField();
};
oFF.OlapUiValueHelpVariable.prototype.getDisplayKeyField = function()
{
	var dimension = this.getDimension();
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyDisplayKeyField() : dimension.getFlatDisplayKeyField();
};
oFF.OlapUiValueHelpVariable.prototype.getTextField = function()
{
	var dimension = this.getDimension();
	return this.isHierarchicalValueHelp() ? dimension.getHierarchyTextField() : dimension.getFlatTextField();
};
oFF.OlapUiValueHelpVariable.prototype.processValueHelp = function(startPage, endPage, pageSize, fields, readMode, listener, customIdentifier)
{
	var variable = this.m_valueRequestObject;
	this.processValueHelpForVariable(variable, startPage, endPage, pageSize, fields, readMode, listener, customIdentifier);
};
oFF.OlapUiValueHelpVariable.prototype.processValueHelpForVariable = function(variable, startPage, endPage, pageSize, fields, readMode, listener, customIdentifier)
{
	var dimension = variable.getDimension();
	this.configureValueHelp(dimension, this.getReadMode(readMode), startPage, endPage, pageSize, fields, true);
	if (dimension.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
	{
		dimension.processVarHelpWithVariable(variable, oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	else
	{
		dimension.processVarHelp(variable.getName(), oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
};
oFF.OlapUiValueHelpVariable.prototype.processChildFetch = function(node, offset, amount, fields, readMode, listener, customIdentifier)
{
	var variable = this.m_valueRequestObject;
	this.processChildFetchForVariable(variable, node, offset, amount, fields, readMode, listener, customIdentifier);
};
oFF.OlapUiValueHelpVariable.prototype.processChildFetchForVariable = function(variable, node, offset, amount, fields, readMode, listener, customIdentifier)
{
	var dimension = node.getDimension();
	this.configureValueHelp(dimension, this.getReadMode(readMode), 0, 0, amount, fields, false);
	dimension.setSelectorPaging(offset, offset + amount);
	if (dimension.getDataSource().getType() === oFF.MetaObjectType.DIMENSION)
	{
		node.processVarHelpChildFetchWithVariable(variable, oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	else
	{
		node.processVarHelpChildFetch(variable.getName(), oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
};
oFF.OlapUiValueHelpVariable.prototype.processSearch = function(searchPattern, searchFields, fields, pageSize, loadParentNodes, readMode, listener, customIdentifier)
{
	var variable = this.m_valueRequestObject;
	this.processSearchForVariable(variable, searchPattern, searchFields, fields, pageSize, loadParentNodes, readMode, listener, customIdentifier);
};
oFF.OlapUiValueHelpVariable.prototype.processSearchForVariable = function(variable, searchPattern, searchFields, fields, pageSize, loadParentNodes, readMode, listener, customIdentifier)
{
	var dimension = variable.getDimension();
	this.configureValueHelp(dimension, this.getReadMode(readMode), 0, 0, pageSize, fields, false);
	var filterAdded = oFF.XStringUtils.isNotNullAndNotEmpty(searchPattern) && this.setSelectorFilter(dimension, searchPattern, searchFields, loadParentNodes);
	if (!filterAdded)
	{
		listener.onValuehelpExecuted(oFF.ExtResult.create(oFF.XList.create(), null), null, customIdentifier);
		return;
	}
	if (dimension.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
	{
		dimension.processVarHelpWithVariable(variable, oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	else
	{
		dimension.processVarHelp(variable.getName(), oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	dimension.clearSelectorFilter();
};
oFF.OlapUiValueHelpVariable.prototype.processFetchItems = function(items, fields, listener, customIdentifier)
{
	var variable = this.m_valueRequestObject;
	var dimension = variable.getDimension();
	this.configureFetchItems(dimension, this.getReadMode(oFF.OlapUiReadMode.MASTER), items, fields);
	if (dimension.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
	{
		dimension.processVarHelpWithVariable(variable, oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	else
	{
		dimension.processVarHelp(variable.getName(), oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	dimension.clearSelectorFilter();
};

oFF.OuLocalization = function() {};
oFF.OuLocalization.prototype = new oFF.OlapUiI18n();
oFF.OuLocalization.prototype._ff_c = "OuLocalization";

oFF.OuLocalization.s_tInstances = null;
oFF.OuLocalization.staticSetupLocalization = function()
{
	oFF.OuLocalizationMessages.staticSetupLocalizationMessages();
	oFF.OuLocalizationTexts.staticSetupLocalizationTexts();
};
oFF.OuLocalization.sGetInstances = function()
{
	return oFF.OuLocalization.s_tInstances;
};
oFF.OuLocalization.createLocalization = function(id, text)
{
	var loInstance;
	if (oFF.isNull(oFF.OuLocalization.s_tInstances))
	{
		oFF.OuLocalization.s_tInstances = oFF.XHashMapByString.create();
	}
	loInstance = oFF.OuLocalization.s_tInstances.getByKey(id);
	if (oFF.isNull(loInstance))
	{
		loInstance = new oFF.OuLocalization();
		loInstance.setupUiLocalization(id, text);
		oFF.OuLocalization.s_tInstances.put(id, loInstance);
	}
	return loInstance;
};
oFF.OuLocalization.prototype.m_id = null;
oFF.OuLocalization.prototype.setupUiLocalization = function(id, text)
{
	oFF.OlapUiI18n.prototype.setup.call( this );
	this.m_id = id;
	oFF.OlapUiI18n.addDefaultValue(id, text);
};
oFF.OuLocalization.prototype.getId = function()
{
	return this.m_id;
};
oFF.OuLocalization.prototype.getI18nText = function()
{
	return this.getText(this.getId());
};
oFF.OuLocalization.prototype.getI18nTextWithPlaceHolders = function(tReplacements)
{
	if (oFF.isNull(tReplacements) || tReplacements.size() <= 0)
	{
		return this.getI18nText();
	}
	if (tReplacements.size() > 1)
	{
		var lcPlaceHolder = "{0}";
		var lcPlaceHolderSize = oFF.XString.size(lcPlaceHolder);
		var lTextWithPlaceHolder = "";
		var lText = this.getI18nText();
		var lOffsetStart = 0;
		var lOffsetEnd = 0;
		var lReplacement = null;
		while (lOffsetEnd !== -1)
		{
			lOffsetEnd = oFF.XString.indexOfFrom(lText, lcPlaceHolder, lOffsetStart);
			if (lOffsetEnd !== -1)
			{
				lOffsetEnd = lOffsetEnd + lcPlaceHolderSize;
				var lSubString = oFF.XString.substring(lText, lOffsetStart, lOffsetEnd);
				if (!tReplacements.isEmpty())
				{
					lReplacement = tReplacements.get(0);
					tReplacements.removeAt(0);
				}
				lTextWithPlaceHolder = oFF.XStringUtils.concatenate2(lTextWithPlaceHolder, oFF.XString.replace(lSubString, "{0}", lReplacement));
				lOffsetStart = lOffsetEnd;
			}
			else
			{
				lTextWithPlaceHolder = oFF.XStringUtils.concatenate2(lTextWithPlaceHolder, oFF.XString.substring(lText, lOffsetStart, -1));
			}
		}
		return lTextWithPlaceHolder;
	}
	else
	{
		return this.getTextWithPlaceholder(this.getId(), tReplacements.get(0));
	}
};

oFF.OuMessageLog = function() {};
oFF.OuMessageLog.prototype = new oFF.XObject();
oFF.OuMessageLog.prototype._ff_c = "OuMessageLog";

oFF.OuMessageLog.sCreateMessageLog = function(oOwner)
{
	var loInstance = new oFF.OuMessageLog();
	loInstance.setupMessageLog(oOwner);
	return loInstance;
};
oFF.OuMessageLog.prototype.m_oOwner = null;
oFF.OuMessageLog.prototype.m_tMessages = null;
oFF.OuMessageLog.prototype.m_tMessageLogs = null;
oFF.OuMessageLog.prototype.m_tListeners = null;
oFF.OuMessageLog.prototype.setupMessageLog = function(oOwner)
{
	this.setup();
	this.m_oOwner = oOwner;
};
oFF.OuMessageLog.prototype.setup = function()
{
	oFF.XObject.prototype.setup.call( this );
	this.m_tMessages = oFF.XHashMapByString.create();
	this.m_tMessageLogs = oFF.XList.create();
	this.m_tListeners = oFF.XList.create();
};
oFF.OuMessageLog.prototype.getOwner = function()
{
	return this.m_oOwner;
};
oFF.OuMessageLog.prototype.hasMessages = function(severity)
{
	var loMessageIterator = this.getMessages().getIterator();
	while (loMessageIterator.hasNext())
	{
		var loMessage = loMessageIterator.next();
		if (oFF.isNull(loMessage))
		{
			continue;
		}
		if (oFF.isNull(severity))
		{
			return true;
		}
		else if (loMessage.getSeverity() === severity)
		{
			return true;
		}
	}
	return false;
};
oFF.OuMessageLog.prototype.getMessages = function()
{
	var ltMessages = oFF.XHashMapByString.create();
	var loMessageLogIterator = this.m_tMessageLogs.getIterator();
	while (loMessageLogIterator.hasNext())
	{
		var loMessageLog = loMessageLogIterator.next();
		if (oFF.isNull(loMessageLog))
		{
			continue;
		}
		var ltMessageLogMessages = loMessageLog.getMessages();
		var loMessageIterator = ltMessageLogMessages.getIterator();
		while (loMessageIterator.hasNext())
		{
			var loMessage = loMessageIterator.next();
			this._addMessageToMapList(ltMessages, loMessage);
		}
	}
	ltMessages.putAll(this.m_tMessages);
	return ltMessages.getValuesAsReadOnlyList();
};
oFF.OuMessageLog.prototype.clear = function()
{
	this.m_tMessages.clear();
	var loMessageLogIterator = this.m_tMessageLogs.getIterator();
	while (loMessageLogIterator.hasNext())
	{
		var loMessageLog = loMessageLogIterator.next();
		if (oFF.isNull(loMessageLog))
		{
			continue;
		}
		loMessageLog.clear();
	}
	this.handleChange(this);
};
oFF.OuMessageLog.prototype.addMessages = function(tMessages)
{
	if (oFF.isNull(tMessages))
	{
		return;
	}
	var loMessageIterator = tMessages.getIterator();
	while (loMessageIterator.hasNext())
	{
		var loMessage = loMessageIterator.next();
		if (oFF.isNull(loMessage))
		{
			continue;
		}
		this._addMessage(loMessage);
	}
};
oFF.OuMessageLog.prototype.addI18nMessage = function(severity, oMessage, tReplacements, oAddInfo)
{
	var loMessage = oFF.OuMessage.sCreateMessage(severity, oMessage, tReplacements, oAddInfo);
	this._addMessage(loMessage);
	return loMessage;
};
oFF.OuMessageLog.prototype.addSimpleMessage = function(severity, id, text, tReplacements, oAddInfo)
{
	var loMessage = oFF.OuMessage.sCreateMessageSimple(severity, id, text, tReplacements, oAddInfo);
	this._addMessage(loMessage);
	return loMessage;
};
oFF.OuMessageLog.prototype._addMessage = function(oMessage)
{
	if (this._addMessageToMapList(this.m_tMessages, oMessage))
	{
		this.handleChange(this);
	}
};
oFF.OuMessageLog.prototype._addMessageToMapList = function(tMessages, oMessage)
{
	if (oFF.notNull(oMessage))
	{
		if (!tMessages.contains(oMessage) && !tMessages.containsKey(oMessage.getUniqueId()))
		{
			tMessages.put(oMessage.getUniqueId(), oMessage);
			return true;
		}
	}
	return false;
};
oFF.OuMessageLog.prototype.removeMessage = function(oMessage)
{
	this._removeMessage(oMessage, null);
};
oFF.OuMessageLog.prototype.removeLocalizationMessage = function(oMessage)
{
	if (oFF.isNull(oMessage))
	{
		return;
	}
	this._removeMessage(null, oMessage.getId());
};
oFF.OuMessageLog.prototype.removeSimpleMessage = function(id)
{
	this._removeMessage(null, id);
};
oFF.OuMessageLog.prototype._removeMessage = function(oMessage, id)
{
	var ltMessages = oFF.XList.create();
	var loMessageIterator;
	var loMessage;
	if (oFF.notNull(oMessage))
	{
		ltMessages.add(oMessage);
	}
	else if (oFF.notNull(id))
	{
		loMessageIterator = this.m_tMessages.getIterator();
		while (loMessageIterator.hasNext())
		{
			loMessage = loMessageIterator.next();
			if (oFF.isNull(loMessage))
			{
				continue;
			}
			if (oFF.XString.isEqual(loMessage.getId(), id))
			{
				ltMessages.add(loMessage);
			}
		}
	}
	var lChanged = false;
	loMessageIterator = ltMessages.getIterator();
	while (loMessageIterator.hasNext())
	{
		loMessage = loMessageIterator.next();
		if (oFF.isNull(loMessage))
		{
			continue;
		}
		this.m_tMessages.remove(loMessage.getUniqueId());
		lChanged = true;
	}
	if (lChanged)
	{
		this.handleChange(this);
	}
};
oFF.OuMessageLog.prototype.addListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	if (!this.m_tListeners.contains(oListener))
	{
		this.m_tListeners.add(oListener);
	}
};
oFF.OuMessageLog.prototype.removeListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	this.m_tListeners.removeElement(oListener);
};
oFF.OuMessageLog.prototype.addMessageLog = function(oMessageLog)
{
	if (oFF.isNull(oMessageLog) || oMessageLog === this)
	{
		return;
	}
	if (!this.m_tMessageLogs.contains(oMessageLog))
	{
		this.m_tMessageLogs.add(oMessageLog);
		oMessageLog.addListener(this);
	}
};
oFF.OuMessageLog.prototype.removeMessageLog = function(oMessageLog)
{
	if (oFF.isNull(oMessageLog))
	{
		return;
	}
	this.m_tMessageLogs.removeElement(oMessageLog);
	oMessageLog.removeListener(this);
};
oFF.OuMessageLog.prototype.getListeners = function()
{
	var ltRemoveListeners = oFF.XList.create();
	var loListener;
	var loListenerIterator = this.m_tListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		if (loListener.isReleased())
		{
			ltRemoveListeners.add(loListener);
		}
	}
	loListenerIterator = ltRemoveListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		this.m_tListeners.removeElement(loListener);
	}
	return this.m_tListeners;
};
oFF.OuMessageLog.prototype.handleChange = function(oMessageLog)
{
	var loMessageLog = oMessageLog;
	if (oFF.isNull(loMessageLog))
	{
		loMessageLog = this;
	}
	var loMessageLogListenerIterator = this.getListeners().getIterator();
	while (loMessageLogListenerIterator.hasNext())
	{
		var loListener = loMessageLogListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onMessageLogChanged(loMessageLog);
	}
};
oFF.OuMessageLog.prototype.onMessageLogChanged = function(oMessageLog)
{
	this.handleChange(oMessageLog);
};
oFF.OuMessageLog.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oOwner = null;
	this.m_tMessages = oFF.XObjectExt.release(this.m_tMessages);
	this.m_tMessageLogs = null;
	this.m_tListeners = oFF.XObjectExt.release(this.m_tListeners);
};

oFF.OuModel = function() {};
oFF.OuModel.prototype = new oFF.OuListenerAccess();
oFF.OuModel.prototype._ff_c = "OuModel";

oFF.OuModel.sCreateModel = function(oModel, oEnvironment, oSourceProperties)
{
	if (oFF.notNull(oModel))
	{
		oModel.setupModel(oEnvironment, oSourceProperties);
	}
	return oModel;
};
oFF.OuModel.prototype.m_oEnvironment = null;
oFF.OuModel.prototype.m_oMessageLog = null;
oFF.OuModel.prototype.m_oSourceProperties = null;
oFF.OuModel.prototype.m_oModelProperties = null;
oFF.OuModel.prototype.setupModel = function(oEnvironment, oSourceProperties)
{
	oFF.OuListenerAccess.prototype.setup.call( this );
	this.m_oEnvironment = oEnvironment;
	this.m_oMessageLog = oFF.OuMessageLog.sCreateMessageLog(this);
	this.m_oSourceProperties = oFF.OuProperties.sCreateProperties();
	this.handleSetSourceProperties(oSourceProperties);
	this.m_oSourceProperties.addListener(this);
	this.m_oModelProperties = oFF.OuProperties.sCreateProperties();
	this.handleSetModelProperties();
	this.m_oModelProperties.addListener(this);
};
oFF.OuModel.prototype.getEnvironment = function()
{
	return this.m_oEnvironment;
};
oFF.OuModel.prototype.getMessageLog = function()
{
	return this.m_oMessageLog;
};
oFF.OuModel.prototype.getSourceProperties = function()
{
	return this.m_oSourceProperties;
};
oFF.OuModel.prototype.getModelProperties = function()
{
	return this.m_oModelProperties;
};
oFF.OuModel.prototype.validate = function()
{
	var loMessageLog = this.getMessageLog();
	loMessageLog.clear();
	this.handleValidate();
};
oFF.OuModel.prototype.submit = function()
{
	this.validate();
	if (!this.getMessageLog().hasMessages(oFF.Severity.ERROR))
	{
		this.handleSubmit();
		return true;
	}
	return false;
};
oFF.OuModel.prototype.handleSourceChanged = function(oModel, oProperty) {};
oFF.OuModel.prototype.handleModelChanged = function(oModel, oProperty)
{
	var ltListeners = this.getListeners();
	var loListenerIterator = ltListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onModelChanged(oModel, oProperty);
	}
};
oFF.OuModel.prototype.onModelChanged = function(oModel, oProperty)
{
	this.handleModelChanged(oModel, oProperty);
};
oFF.OuModel.prototype.onPropertyChanged = function(oProperty)
{
	if (oProperty.getProperty().getType() === oFF.COuPropertyType.SOURCE)
	{
		this.handleSourceChanged(this, oProperty);
	}
	if (oProperty.getProperty().getType() === oFF.COuPropertyType.MODEL)
	{
		this.handleModelChanged(this, oProperty);
	}
};
oFF.OuModel.prototype.releaseObject = function()
{
	oFF.OuListenerAccess.prototype.releaseObject.call( this );
	this.m_oEnvironment = oFF.XObjectExt.release(this.m_oEnvironment);
	this.m_oMessageLog = oFF.XObjectExt.release(this.m_oMessageLog);
	this.m_oSourceProperties = oFF.XObjectExt.release(this.m_oSourceProperties);
	this.m_oModelProperties = oFF.XObjectExt.release(this.m_oModelProperties);
};

oFF.OuModelPropertyModel = function() {};
oFF.OuModelPropertyModel.prototype = new oFF.OuListenerAccess();
oFF.OuModelPropertyModel.prototype._ff_c = "OuModelPropertyModel";

oFF.OuModelPropertyModel.sCreateModelPropertyModel = function(oModel, property, oPropertyModel)
{
	var loInstance = new oFF.OuModelPropertyModel();
	loInstance.setupModelPropertyModel(oModel, property, oPropertyModel);
	return loInstance;
};
oFF.OuModelPropertyModel.prototype.m_oModel = null;
oFF.OuModelPropertyModel.prototype.m_property = null;
oFF.OuModelPropertyModel.prototype.m_oPropertyModel = null;
oFF.OuModelPropertyModel.prototype.setupModelPropertyModel = function(oModel, property, oPropertyModel)
{
	this.setup();
	this.m_oModel = oModel;
	this.m_property = property;
	this.m_oPropertyModel = oPropertyModel;
	this._add(this.m_oPropertyModel);
};
oFF.OuModelPropertyModel.prototype.setup = function()
{
	oFF.OuListenerAccess.prototype.setup.call( this );
};
oFF.OuModelPropertyModel.prototype.get = function()
{
	return this.m_oPropertyModel;
};
oFF.OuModelPropertyModel.prototype._add = function(oModel)
{
	var loListener = this;
	try
	{
		loListener = this.m_oModel;
	}
	catch (e)
	{
		loListener = this;
	}
	oModel.addListener(loListener);
	this.m_oModel.getMessageLog().addMessageLog(oModel.getMessageLog());
};
oFF.OuModelPropertyModel.prototype._remove = function(oModel)
{
	var loListener = this;
	try
	{
		loListener = this.m_oModel;
		oModel.removeListener(loListener);
	}
	catch (e)
	{
		e = null;
	}
	oModel.removeListener(this);
	this.m_oModel.getMessageLog().removeMessageLog(oModel.getMessageLog());
};
oFF.OuModelPropertyModel.prototype.onModelChanged = function(oModel, oProperty)
{
	this.handleModelChanged(oModel, oProperty);
};
oFF.OuModelPropertyModel.prototype.handleModelChanged = function(oModel, oProperty)
{
	var ltListeners = this.getListeners();
	var loListenerIterator = ltListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onModelChanged(oModel, oProperty);
	}
};
oFF.OuModelPropertyModel.prototype.releaseObject = function()
{
	oFF.OuListenerAccess.prototype.releaseObject.call( this );
	this._remove(this.m_oPropertyModel);
	this.m_oModel = null;
	this.m_property = oFF.XObjectExt.release(this.m_property);
	this.m_oPropertyModel = oFF.XObjectExt.release(this.m_oPropertyModel);
};

oFF.OuModelPropertyModelList = function() {};
oFF.OuModelPropertyModelList.prototype = new oFF.OuListenerAccess();
oFF.OuModelPropertyModelList.prototype._ff_c = "OuModelPropertyModelList";

oFF.OuModelPropertyModelList.sCreateModelPropertyModelList = function(oModel, property)
{
	var loInstance = new oFF.OuModelPropertyModelList();
	loInstance.setupModelPropertyModelList(oModel, property);
	return loInstance;
};
oFF.OuModelPropertyModelList.prototype.m_oModel = null;
oFF.OuModelPropertyModelList.prototype.m_property = null;
oFF.OuModelPropertyModelList.prototype.m_tModels = null;
oFF.OuModelPropertyModelList.prototype.setupModelPropertyModelList = function(oModel, property)
{
	this.setup();
	this.m_oModel = oModel;
	this.m_property = property;
	try
	{
		var loModelListener = oModel;
		this.addListener(loModelListener);
	}
	catch (e)
	{
		e = null;
	}
};
oFF.OuModelPropertyModelList.prototype.setup = function()
{
	oFF.OuListenerAccess.prototype.setup.call( this );
	this.m_tModels = oFF.XListOfNameObject.create();
};
oFF.OuModelPropertyModelList.prototype.getAll = function()
{
	return this.m_tModels;
};
oFF.OuModelPropertyModelList.prototype.get = function(name)
{
	var loModelItem = null;
	var loModelIterator = this.m_tModels.getIterator();
	while (loModelIterator.hasNext())
	{
		var loModel = loModelIterator.next();
		if (oFF.isNull(loModel))
		{
			continue;
		}
		try
		{
			var loModelNameObject = loModel;
			if (oFF.XString.isEqual(loModelNameObject.getName(), name))
			{
				loModelItem = loModel;
				break;
			}
		}
		catch (e)
		{
			e = null;
			break;
		}
	}
	return loModelItem;
};
oFF.OuModelPropertyModelList.prototype.clear = function()
{
	if (this.m_tModels.isEmpty())
	{
		return;
	}
	var loProperty = this.getProperty();
	var loModelIterator = this.m_tModels.getIterator();
	while (loModelIterator.hasNext())
	{
		var loModel = loModelIterator.next();
		if (oFF.isNull(loModel))
		{
			continue;
		}
		this._remove(loModel);
	}
	this.m_tModels.clear();
	loProperty.setPropertyValue(this.m_tModels);
	this.handleModelChanged(this.m_oModel, loProperty);
};
oFF.OuModelPropertyModelList.prototype.add = function(oModel)
{
	var loProperty = this._add(oModel);
	if (oFF.notNull(loProperty))
	{
		this.handleModelChanged(this.m_oModel, loProperty);
	}
};
oFF.OuModelPropertyModelList.prototype._add = function(oModel)
{
	if (oFF.isNull(oModel))
	{
		return null;
	}
	if (this.m_tModels.contains(oModel))
	{
		return null;
	}
	var loListener = this;
	try
	{
		loListener = this.m_oModel;
	}
	catch (e)
	{
		loListener = this;
	}
	oModel.addListener(loListener);
	this.m_oModel.getMessageLog().addMessageLog(oModel.getMessageLog());
	var loProperty = this.getProperty();
	this.m_tModels.add(oModel);
	loProperty.setPropertyValue(this.m_tModels);
	return loProperty;
};
oFF.OuModelPropertyModelList.prototype.remove = function(oModel)
{
	var loProperty = this._remove(oModel);
	if (oFF.notNull(loProperty))
	{
		this.handleModelChanged(this.m_oModel, loProperty);
	}
};
oFF.OuModelPropertyModelList.prototype._remove = function(oModel)
{
	if (oFF.isNull(oModel))
	{
		return null;
	}
	if (!this.m_tModels.contains(oModel))
	{
		return null;
	}
	var loListener = this;
	try
	{
		loListener = this.m_oModel;
		oModel.removeListener(loListener);
	}
	catch (e)
	{
		e = null;
	}
	oModel.removeListener(this);
	this.m_oModel.getMessageLog().removeMessageLog(oModel.getMessageLog());
	var loProperty = this.getProperty();
	this.m_tModels.removeElement(oModel);
	loProperty.setPropertyValue(this.m_tModels);
	return loProperty;
};
oFF.OuModelPropertyModelList.prototype.onModelChanged = function(oModel, oProperty)
{
	this.handleModelChanged(oModel, oProperty);
};
oFF.OuModelPropertyModelList.prototype.handleModelChanged = function(oModel, oProperty)
{
	var ltListeners = this.getListeners();
	var loListenerIterator = ltListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onModelChanged(oModel, oProperty);
	}
};
oFF.OuModelPropertyModelList.prototype.getProperty = function()
{
	var ltOld = oFF.XList.create();
	ltOld.addAll(this.m_tModels.getValuesAsReadOnlyList());
	return oFF.OuProperty.sCreateProperty(this.m_property, this.m_tModels, ltOld);
};
oFF.OuModelPropertyModelList.prototype.releaseObject = function()
{
	oFF.OuListenerAccess.prototype.releaseObject.call( this );
	this.clear();
	this.m_oModel = null;
	this.m_property = oFF.XObjectExt.release(this.m_property);
	this.m_tModels = oFF.XObjectExt.release(this.m_tModels);
};

oFF.OuProperty = function() {};
oFF.OuProperty.prototype = new oFF.XObject();
oFF.OuProperty.prototype._ff_c = "OuProperty";

oFF.OuProperty.sCreateProperty = function(property, oPropertyValue, oPropertyValueOld)
{
	var loInstance = new oFF.OuProperty();
	loInstance.setupProperty(property, oPropertyValue, oPropertyValueOld);
	return loInstance;
};
oFF.OuProperty.prototype.m_property = null;
oFF.OuProperty.prototype.m_oPropertyValue = null;
oFF.OuProperty.prototype.m_oPropertyValueOld = null;
oFF.OuProperty.prototype.setupProperty = function(property, oPropertyValue, oPropertyValueOld)
{
	oFF.XObject.prototype.setup.call( this );
	this.m_property = property;
	this.m_oPropertyValue = oPropertyValue;
	this.m_oPropertyValueOld = oPropertyValueOld;
};
oFF.OuProperty.prototype.getProperty = function()
{
	return this.m_property;
};
oFF.OuProperty.prototype.setPropertyValue = function(oPropertyValue)
{
	this.m_oPropertyValue = oPropertyValue;
};
oFF.OuProperty.prototype.getPropertyValue = function()
{
	return this.m_oPropertyValue;
};
oFF.OuProperty.prototype.setOldPropertyValue = function(oPropertyValue)
{
	this.m_oPropertyValueOld = oPropertyValue;
};
oFF.OuProperty.prototype.getOldPropertyValue = function()
{
	return this.m_oPropertyValueOld;
};
oFF.OuProperty.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_property = null;
	this.m_oPropertyValue = null;
	this.m_oPropertyValueOld = null;
};

oFF.OuRenderingUtil = function() {};
oFF.OuRenderingUtil.prototype = new oFF.XObject();
oFF.OuRenderingUtil.prototype._ff_c = "OuRenderingUtil";

oFF.OuRenderingUtil.s_oRenderingManager = null;
oFF.OuRenderingUtil.getInstance = function()
{
	if (oFF.isNull(oFF.OuRenderingUtil.s_oRenderingManager))
	{
		oFF.OuRenderingUtil.s_oRenderingManager = new oFF.OuRenderingUtil();
		oFF.OuRenderingUtil.s_oRenderingManager.setupRenderingUtil();
	}
	return oFF.OuRenderingUtil.s_oRenderingManager;
};
oFF.OuRenderingUtil.sRemoveListener = function(oRenderingObject)
{
	var loInstance = oFF.OuRenderingUtil.getInstance();
	loInstance.removeListener(oRenderingObject);
};
oFF.OuRenderingUtil.sCreateControlName = function(oRenderingObject, controlType, controlName)
{
	var lName = "";
	if (oFF.notNull(oRenderingObject) && oRenderingObject.getName() !== null)
	{
		lName = oFF.XStringUtils.concatenate2("XObj", oRenderingObject.getName());
	}
	if (oFF.notNull(controlType))
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(lName))
		{
			lName = oFF.XStringUtils.concatenate2(lName, "-");
		}
		lName = oFF.XStringUtils.concatenate3(lName, "XUie", controlType.getName());
	}
	if (oFF.notNull(controlName))
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(lName))
		{
			lName = oFF.XStringUtils.concatenate2(lName, "-");
		}
		lName = oFF.XStringUtils.concatenate3(lName, "XName", controlName);
	}
	return lName;
};
oFF.OuRenderingUtil.sGetControlName = function(oRenderingObject, oControl)
{
	var lControlName = oControl.getName();
	var lIsValid = oFF.OuRenderingUtil.sDoesUieNameBelongToRenderingObject(oRenderingObject, lControlName);
	if (!lIsValid)
	{
		return null;
	}
	var lObjectName1 = oFF.OuRenderingUtil.sCreateControlName(oRenderingObject, null, null);
	var lObjectName2 = oFF.XStringUtils.concatenate2(lObjectName1, "-");
	if (oFF.XString.containsString(lControlName, lObjectName2))
	{
		lControlName = oFF.XString.replace(lControlName, lObjectName2, "");
	}
	else
	{
		lControlName = oFF.XString.replace(lControlName, lObjectName1, "");
	}
	var lControlTypeName1 = oFF.OuRenderingUtil.sCreateControlName(null, oControl.getUiType(), null);
	var lControlTypeName2 = oFF.XStringUtils.concatenate2(lControlTypeName1, "-");
	if (oFF.XString.containsString(lControlName, lControlTypeName2))
	{
		lControlName = oFF.XString.replace(lControlName, lControlTypeName2, "");
	}
	else
	{
		lControlName = oFF.XString.replace(lControlName, lControlTypeName1, "");
	}
	var lControlName1 = oFF.OuRenderingUtil.sCreateControlName(null, null, "");
	var lControlName2 = oFF.XStringUtils.concatenate2(lControlName1, "-");
	if (oFF.XString.containsString(lControlName, lControlName2))
	{
		lControlName = oFF.XString.replace(lControlName, lControlName2, "");
	}
	else
	{
		lControlName = oFF.XString.replace(lControlName, lControlName1, "");
	}
	return lControlName;
};
oFF.OuRenderingUtil.sCreateUiEvent = function(oRenderingObject, event, oControlEvent)
{
	var loEvent = null;
	var loControl = oControlEvent.getControl();
	var lControlName = oFF.OuRenderingUtil.sGetControlName(oRenderingObject, loControl);
	if (oFF.notNull(lControlName))
	{
		loEvent = oFF.OuEvent.sCreateEvent(oRenderingObject, lControlName, event, oControlEvent);
	}
	return loEvent;
};
oFF.OuRenderingUtil.sDoesUieNameBelongToRenderingObject = function(oRenderingObject, uieName)
{
	var lRenderingObjectName = oFF.OuRenderingUtil.sCreateControlName(oRenderingObject, null, null);
	return oFF.XString.containsString(uieName, lRenderingObjectName);
};
oFF.OuRenderingUtil.sCreateControl = function(oRenderingObject, oParent, controlType, controlName, label)
{
	var loControl = oRenderingObject.getEnvironment().getGenesis().newControl(controlType);
	if (oFF.isNull(loControl))
	{
		return null;
	}
	loControl.setName(oFF.OuRenderingUtil.sCreateControlName(oRenderingObject, loControl.getUiType(), controlName));
	loControl.setWidth(oFF.UiCssLength.create("auto"));
	loControl.setHeight(oFF.UiCssLength.create("auto"));
	if (loControl.getUiType() === oFF.UiType.FLEX_LAYOUT)
	{
		loControl.setWidth(oFF.UiCssLength.create("100%"));
	}
	else if (loControl.getUiType() === oFF.UiType.TAB_BAR)
	{
		loControl.setWidth(oFF.UiCssLength.create("100%"));
		loControl.setHeight(oFF.UiCssLength.create("100%"));
	}
	var loParent = oParent;
	if (oFF.notNull(label))
	{
		loParent = oFF.OuRenderingUtil.sCreateLayoutRow(oRenderingObject, loParent, controlName);
		oFF.OuRenderingUtil.sCreateLabel(oRenderingObject, loParent, controlName, label);
		var loSpacer = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, loParent, oFF.UiType.SPACER, controlName, null);
		if (oFF.notNull(loSpacer))
		{
			loSpacer.setWidth(oFF.UiCssLength.create("1em"));
		}
	}
	if (oFF.notNull(loParent))
	{
		loParent.addItem(loControl);
	}
	return loControl;
};
oFF.OuRenderingUtil.sCreateDialogButton = function(oRenderingObject, controlName, description)
{
	var loButton = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, null, oFF.UiType.DIALOG_BUTTON, controlName, null);
	if (oFF.notNull(loButton))
	{
		loButton.setText(description);
		loButton.setTooltip(description);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loButton.registerOnPress(loInstance);
		loInstance.addListener(loButton, oRenderingObject);
	}
	return loButton;
};
oFF.OuRenderingUtil.sCreateToolbar = function(oRenderingObject, oParent, controlName)
{
	return oFF.OuRenderingUtil.sCreateLayoutRow(oRenderingObject, oParent, controlName);
};
oFF.OuRenderingUtil.sCreateToolbarButton = function(oRenderingObject, oParent, controlName, description)
{
	if (oFF.notNull(oParent))
	{
		if (oParent.getItemCount() > 0)
		{
			var loSpacer = oParent.addNewItemOfType(oFF.UiType.SPACER);
			if (oParent.getDirection() === oFF.UiFlexDirection.ROW)
			{
				loSpacer.setWidth(oFF.UiCssLength.create("1em"));
			}
			else if (oParent.getDirection() === oFF.UiFlexDirection.COLUMN)
			{
				loSpacer.setHeight(oFF.UiCssLength.create("1em"));
			}
		}
	}
	return oFF.OuRenderingUtil.sCreateButton(oRenderingObject, oParent, controlName, description);
};
oFF.OuRenderingUtil.sCreateLayoutRow = function(oRenderingObject, oParent, controlName)
{
	var loLayout = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.FLEX_LAYOUT, controlName, null);
	if (oFF.notNull(loLayout))
	{
		loLayout.setDirection(oFF.UiFlexDirection.ROW);
		loLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	}
	return loLayout;
};
oFF.OuRenderingUtil.sCreateLayoutColumn = function(oRenderingObject, oParent, controlName)
{
	var loLayout = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.FLEX_LAYOUT, controlName, null);
	if (oFF.notNull(loLayout))
	{
		loLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	}
	return loLayout;
};
oFF.OuRenderingUtil.sCreateScrollContainer = function(oRenderingObject, oParent, controlName)
{
	return oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.SCROLL_CONTAINER, controlName, null);
};
oFF.OuRenderingUtil.sCreateTabStrip = function(oRenderingObject, oParent, controlName)
{
	var loTabStrip = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.TAB_BAR, controlName, null);
	var loInstance = oFF.OuRenderingUtil.getInstance();
	if (oFF.notNull(loTabStrip))
	{
		loTabStrip.registerOnItemSelect(loInstance);
		loInstance.addListener(loTabStrip, oRenderingObject);
	}
	return loTabStrip;
};
oFF.OuRenderingUtil.sCreateTabStripItem = function(oRenderingObject, oParent, controlName, description, oContent)
{
	var loTabStripItem = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.TAB_BAR_ITEM, controlName, null);
	if (oFF.notNull(loTabStripItem))
	{
		loTabStripItem.setText(description);
		loTabStripItem.setTooltip(description);
		loTabStripItem.setContent(oContent);
	}
	return loTabStripItem;
};
oFF.OuRenderingUtil.sCreatePanel = function(oRenderingObject, oParent, controlName, title, oContent)
{
	var loPanel = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.PANEL, controlName, null);
	if (oFF.notNull(loPanel))
	{
		loPanel.setText(title);
		loPanel.setTooltip(title);
		loPanel.setExpanded(true);
		loPanel.setExpandable(false);
		loPanel.setContent(oContent);
	}
	return loPanel;
};
oFF.OuRenderingUtil.sCreateTable = function(oRenderingObject, oParent, controlName, selectionMode)
{
	var loTable = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.RESPONSIVE_TABLE, controlName, null);
	if (oFF.notNull(loTable))
	{
		loTable.setSelectionMode(selectionMode);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loTable.registerOnSelectionChange(loInstance);
		loInstance.addListener(loTable, oRenderingObject);
	}
	return loTable;
};
oFF.OuRenderingUtil.sCreateTableColumn = function(oRenderingObject, oParent, controlName, description)
{
	var loTableColumn = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, null, oFF.UiType.RESPONSIVE_TABLE_COLUMN, controlName, null);
	if (oFF.notNull(loTableColumn))
	{
		loTableColumn.setTitle(description);
		loTableColumn.setTooltip(description);
		if (oFF.notNull(oParent))
		{
			oParent.addResponsiveTableColumn(loTableColumn);
		}
	}
	return loTableColumn;
};
oFF.OuRenderingUtil.sCreateTableRow = function(oRenderingObject, oParent, controlName)
{
	var loTableRow = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, null, oFF.UiType.RESPONSIVE_TABLE_ROW, controlName, null);
	if (oFF.notNull(loTableRow))
	{
		if (oFF.notNull(oParent))
		{
			oParent.addResponsiveTableRow(loTableRow);
		}
	}
	return loTableRow;
};
oFF.OuRenderingUtil.sCreateTableCell = function(oRenderingObject, oParent, controlName, description)
{
	var loTableCell = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, null, oFF.UiType.LABEL, controlName, null);
	if (oFF.notNull(loTableCell))
	{
		loTableCell.setText(description);
		loTableCell.setTooltip(description);
		if (oFF.notNull(oParent))
		{
			oParent.addResponsiveTableCell(loTableCell);
		}
	}
	return loTableCell;
};
oFF.OuRenderingUtil.sCreateLabel = function(oRenderingObject, oParent, controlName, description)
{
	var loLabel = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.LABEL, controlName, null);
	if (oFF.notNull(loLabel))
	{
		loLabel.setTextAlign(oFF.UiTextAlign.RIGHT);
		loLabel.setText(description);
		loLabel.setTooltip(description);
	}
	return loLabel;
};
oFF.OuRenderingUtil.sCreateLink = function(oRenderingObject, oParent, controlName, description)
{
	var loLink = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.LINK, controlName, null);
	if (oFF.notNull(loLink))
	{
		loLink.setText(description);
		loLink.setTooltip(description);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loLink.registerOnPress(loInstance);
		loInstance.addListener(loLink, oRenderingObject);
	}
	return loLink;
};
oFF.OuRenderingUtil.sCreateInputField = function(oRenderingObject, oParent, controlName, label, value)
{
	var loInput = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.INPUT, controlName, label);
	if (oFF.notNull(loInput))
	{
		loInput.setText(value);
		loInput.setTooltip(value);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loInput.registerOnEnter(loInstance);
		loInput.registerOnEditingEnd(loInstance);
		loInstance.addListener(loInput, oRenderingObject);
	}
	return loInput;
};
oFF.OuRenderingUtil.sCreateCheckbox = function(oRenderingObject, oParent, controlName, description, checked)
{
	var loCheckbox = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.CHECKBOX, controlName, null);
	if (oFF.notNull(loCheckbox))
	{
		loCheckbox.setText(description);
		loCheckbox.setTooltip(description);
		loCheckbox.setChecked(checked);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loCheckbox.registerOnChange(loInstance);
		loInstance.addListener(loCheckbox, oRenderingObject);
	}
	return loCheckbox;
};
oFF.OuRenderingUtil.sCreateSwitch = function(oRenderingObject, oParent, controlName, label, isOn)
{
	var loSwitch = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.SWITCH, controlName, label);
	if (oFF.notNull(loSwitch))
	{
		loSwitch.setOn(isOn);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loSwitch.registerOnChange(loInstance);
		loInstance.addListener(loSwitch, oRenderingObject);
	}
	return loSwitch;
};
oFF.OuRenderingUtil.sCreateButton = function(oRenderingObject, oParent, controlName, description)
{
	var loButton = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.BUTTON, controlName, null);
	if (oFF.notNull(loButton))
	{
		loButton.setText(description);
		loButton.setTooltip(description);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loButton.registerOnPress(loInstance);
		loInstance.addListener(loButton, oRenderingObject);
	}
	return loButton;
};
oFF.OuRenderingUtil.sCreateToggleButton = function(oRenderingObject, oParent, controlName, description, pressed)
{
	var loButton = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.TOGGLE_BUTTON, controlName, null);
	if (oFF.notNull(loButton))
	{
		loButton.setText(description);
		loButton.setTooltip(description);
		loButton.setPressed(pressed);
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loButton.registerOnPress(loInstance);
		loInstance.addListener(loButton, oRenderingObject);
	}
	return loButton;
};
oFF.OuRenderingUtil.sCreateDropdown = function(oRenderingObject, oParent, controlName, label)
{
	var loDropdown = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.DROPDOWN, controlName, label);
	if (oFF.notNull(loDropdown))
	{
		var loInstance = oFF.OuRenderingUtil.getInstance();
		loDropdown.registerOnSelect(loInstance);
		loInstance.addListener(loDropdown, oRenderingObject);
	}
	return loDropdown;
};
oFF.OuRenderingUtil.sCreateDropdownItem = function(oRenderingObject, oParent, controlName, description)
{
	var loDropdownItem = oFF.OuRenderingUtil.sCreateControl(oRenderingObject, oParent, oFF.UiType.DROPDOWN_ITEM, controlName, null);
	if (oFF.notNull(loDropdownItem))
	{
		loDropdownItem.setText(description);
		loDropdownItem.setTooltip(description);
	}
	return loDropdownItem;
};
oFF.OuRenderingUtil.prototype.m_tListeners = null;
oFF.OuRenderingUtil.prototype.setupRenderingUtil = function()
{
	oFF.XObject.prototype.setup.call( this );
	this.m_tListeners = oFF.XSimpleMap.create();
};
oFF.OuRenderingUtil.prototype.addListener = function(oControl, oRenderingObject)
{
	if (oFF.isNull(oControl) || oFF.isNull(oRenderingObject))
	{
		return;
	}
	var ltControls = this.m_tListeners.getByKey(oRenderingObject);
	if (oFF.isNull(ltControls))
	{
		this.removeListener(oRenderingObject);
		ltControls = oFF.XList.create();
		this.m_tListeners.put(oRenderingObject, ltControls);
	}
	ltControls.add(oControl);
};
oFF.OuRenderingUtil.prototype.removeListener = function(oRenderingObject)
{
	if (oFF.isNull(oRenderingObject))
	{
		return;
	}
	this.m_tListeners.remove(oRenderingObject);
};
oFF.OuRenderingUtil.prototype.onPress = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_PRESS, event);
};
oFF.OuRenderingUtil.prototype.onClick = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_CLICK, event);
};
oFF.OuRenderingUtil.prototype.onSelect = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_SELECT, event);
};
oFF.OuRenderingUtil.prototype.onItemSelect = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_SELECT, event);
};
oFF.OuRenderingUtil.prototype.onSelectionChange = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_SELECTION_CHANGE, event);
};
oFF.OuRenderingUtil.prototype.onEnter = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_ENTER, event);
};
oFF.OuRenderingUtil.prototype.onChange = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_CHANGE, event);
};
oFF.OuRenderingUtil.prototype.onEditingEnd = function(event)
{
	this.onUiEvent(oFF.COuEvent.ON_EDITING_END, event);
};
oFF.OuRenderingUtil.prototype.onUiEvent = function(event, oEvent)
{
	var loControl = oEvent.getControl();
	if (oFF.isNull(loControl))
	{
		return;
	}
	var loListenerIterator = this.m_tListeners.getKeysAsIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		var lValid = false;
		var ltControls = this.m_tListeners.getByKey(loListener);
		if (ltControls.contains(loControl))
		{
			lValid = true;
		}
		if (lValid)
		{
			var loEvent = oFF.OuRenderingUtil.sCreateUiEvent(loListener, event, oEvent);
			if (oFF.notNull(loEvent))
			{
				loListener.onUiEvent(loEvent);
			}
			break;
		}
	}
};
oFF.OuRenderingUtil.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OuSourceCondition = function() {};
oFF.OuSourceCondition.prototype = new oFF.OuSourceObject();
oFF.OuSourceCondition.prototype._ff_c = "OuSourceCondition";

oFF.OuSourceCondition.sCreateCondition = function(oQuery, oCondition)
{
	var loInstance = new oFF.OuSourceCondition();
	loInstance.setupCondition(oQuery, oCondition);
	return loInstance;
};
oFF.OuSourceCondition.prototype.m_oQuery = null;
oFF.OuSourceCondition.prototype.setupCondition = function(oQuery, oCondition)
{
	this.setupModelObject(oCondition);
	this.m_oQuery = oQuery;
};
oFF.OuSourceCondition.prototype.setup = function()
{
	oFF.OuSourceObject.prototype.setup.call( this );
};
oFF.OuSourceCondition.prototype.getQuery = function()
{
	return this.m_oQuery;
};
oFF.OuSourceCondition.prototype.getName = function()
{
	var lName = null;
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		lName = loInternalCondition.getName();
	}
	return lName;
};
oFF.OuSourceCondition.prototype.getText = function()
{
	var lText = null;
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		lText = loInternalCondition.getText();
	}
	return lText;
};
oFF.OuSourceCondition.prototype.setText = function(text)
{
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.setDescription(text);
	}
};
oFF.OuSourceCondition.prototype.isActive = function()
{
	var lActive = false;
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		lActive = loInternalCondition.isActive();
	}
	return lActive;
};
oFF.OuSourceCondition.prototype.setActive = function(active)
{
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.setActive(active);
	}
};
oFF.OuSourceCondition.prototype.getThresholds = function()
{
	var ltThresholds = oFF.XListOfNameObject.create();
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		var ltInternalThresholds = loInternalCondition.getThresholds();
		var loInternalThresholdIterator = ltInternalThresholds.getIterator();
		while (loInternalThresholdIterator.hasNext())
		{
			var loInternalThreshold = loInternalThresholdIterator.next();
			if (oFF.isNull(loInternalThreshold))
			{
				continue;
			}
			var loThreshold = oFF.OuSourceConditionThreshold.sCreateConditionThreshold(this, loInternalThreshold);
			ltThresholds.add(loThreshold);
		}
	}
	return ltThresholds;
};
oFF.OuSourceCondition.prototype.clearThresholds = function()
{
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		var ltInternalThresholds = loInternalCondition.getThresholds();
		var loInternalThresholdIterator = ltInternalThresholds.getIterator();
		while (loInternalThresholdIterator.hasNext())
		{
			var loInternalThreshold = loInternalThresholdIterator.next();
			if (oFF.isNull(loInternalThreshold))
			{
				continue;
			}
			loInternalCondition.removeThreshold(loInternalThreshold);
		}
	}
};
oFF.OuSourceCondition.prototype.createThreshold = function()
{
	var loInternalThreshold = null;
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalThreshold = loInternalCondition.createThreshold();
	}
	return oFF.OuSourceConditionThreshold.sCreateConditionThreshold(this, loInternalThreshold);
};
oFF.OuSourceCondition.prototype.removeThreshold = function(oThreshold)
{
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.removeThreshold(oThreshold.getInternalObject());
	}
};
oFF.OuSourceCondition.prototype.getSupportedEvaluationTypes = function()
{
	var ltSupportedEvaluationTypes = oFF.XListOfNameObject.create();
	ltSupportedEvaluationTypes.add(oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN);
	ltSupportedEvaluationTypes.add(oFF.ConditionDimensionEvaluationType.MOST_DETAILED_ON_ROWS);
	ltSupportedEvaluationTypes.add(oFF.ConditionDimensionEvaluationType.MOST_DETAILED_ON_COLS);
	ltSupportedEvaluationTypes.add(oFF.ConditionDimensionEvaluationType.GIVEN_LIST);
	return ltSupportedEvaluationTypes;
};
oFF.OuSourceCondition.prototype.getEvaluationType = function()
{
	var lEvaluationType = oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN;
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		lEvaluationType = loInternalCondition.getDimensionEvaluationType();
	}
	return lEvaluationType;
};
oFF.OuSourceCondition.prototype.setEvaluationType = function(evaluationType)
{
	var lEvaluationType = evaluationType;
	if (oFF.isNull(lEvaluationType))
	{
		lEvaluationType = oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN;
	}
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.setDimensionEvaluationType(lEvaluationType);
	}
};
oFF.OuSourceCondition.prototype.getSupportedEvaluationDimensions = function()
{
	var ltSupportedEvaluationDimensions = oFF.XListOfNameObject.create();
	var ltDimensions = this.getQuery().getDimensions();
	var loDimensionIterator = ltDimensions.getIterator();
	while (loDimensionIterator.hasNext())
	{
		var loDimension = loDimensionIterator.next();
		if (oFF.isNull(loDimension) || loDimension.isStructure() || loDimension.isUDH())
		{
			continue;
		}
		ltSupportedEvaluationDimensions.add(loDimension);
	}
	return ltSupportedEvaluationDimensions;
};
oFF.OuSourceCondition.prototype.getEvaluationDimensions = function()
{
	var ltDimensions = oFF.XListOfNameObject.create();
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		var ltInternalEvaluationDimensions = loInternalCondition.getEvaluationDimensions();
		var loInternalEvaluationDimensionIterator = ltInternalEvaluationDimensions.getIterator();
		while (loInternalEvaluationDimensionIterator.hasNext())
		{
			var loInternalDimension = loInternalEvaluationDimensionIterator.next();
			if (oFF.isNull(loInternalDimension))
			{
				continue;
			}
			var loDimension = oFF.OuSourceDimension.sCreateDimension(this.getQuery(), loInternalDimension);
			ltDimensions.add(loDimension);
		}
	}
	return ltDimensions;
};
oFF.OuSourceCondition.prototype.clearEvaluationDimensions = function()
{
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		var ltInternalDimensions = loInternalCondition.getEvaluationDimensions();
		var loInternalDimensionIterator = ltInternalDimensions.getIterator();
		while (loInternalDimensionIterator.hasNext())
		{
			var loInternalDimension = loInternalDimensionIterator.next();
			if (oFF.isNull(loInternalDimension))
			{
				continue;
			}
			loInternalCondition.removeEvaluationDimension(loInternalDimension);
		}
	}
};
oFF.OuSourceCondition.prototype.setEvaluationDimensions = function(tDimensions)
{
	if (oFF.isNull(tDimensions))
	{
		return;
	}
	this.clearEvaluationDimensions();
	var loDimensionIterator = tDimensions.getIterator();
	while (loDimensionIterator.hasNext())
	{
		var loDimension = loDimensionIterator.next();
		if (oFF.isNull(loDimension))
		{
			continue;
		}
		this.addEvaluationDimension(loDimension);
	}
};
oFF.OuSourceCondition.prototype.addEvaluationDimension = function(oDimension)
{
	if (oFF.isNull(oDimension))
	{
		return;
	}
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.addEvaluationDimension(oDimension.getInternalObject());
	}
};
oFF.OuSourceCondition.prototype.removeEvaluationDimension = function(oDimension)
{
	if (oFF.isNull(oDimension))
	{
		return;
	}
	var loInternalCondition = this.getInternalObject();
	if (oFF.notNull(loInternalCondition))
	{
		loInternalCondition.removeEvaluationDimension(oDimension.getInternalObject());
	}
};
oFF.OuSourceCondition.prototype.reset = function() {};
oFF.OuSourceCondition.prototype.releaseObject = function()
{
	oFF.OuSourceObject.prototype.releaseObject.call( this );
	this.reset();
};

oFF.OuSourceConditionThreshold = function() {};
oFF.OuSourceConditionThreshold.prototype = new oFF.OuSourceObject();
oFF.OuSourceConditionThreshold.prototype._ff_c = "OuSourceConditionThreshold";

oFF.OuSourceConditionThreshold.sCreateConditionThreshold = function(oCondition, oThreshold)
{
	var loInstance = new oFF.OuSourceConditionThreshold();
	loInstance.setupConditionThreshold(oCondition, oThreshold);
	return loInstance;
};
oFF.OuSourceConditionThreshold.prototype.m_oCondition = null;
oFF.OuSourceConditionThreshold.prototype.setupConditionThreshold = function(oCondition, oThreshold)
{
	this.setupModelObject(oThreshold);
	this.m_oCondition = oCondition;
};
oFF.OuSourceConditionThreshold.prototype.setup = function()
{
	oFF.OuSourceObject.prototype.setup.call( this );
};
oFF.OuSourceConditionThreshold.prototype.getQuery = function()
{
	return this.getCondition().getQuery();
};
oFF.OuSourceConditionThreshold.prototype.getCondition = function()
{
	return this.m_oCondition;
};
oFF.OuSourceConditionThreshold.prototype.getName = function()
{
	var lName = null;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		lName = loInternalThreshold.getName();
	}
	return lName;
};
oFF.OuSourceConditionThreshold.prototype.getText = function()
{
	var lText = null;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		lText = loInternalThreshold.getText();
	}
	return lText;
};
oFF.OuSourceConditionThreshold.prototype.getSupportedMeasures = function()
{
	var ltSupportedMeasures = oFF.XListOfNameObject.create();
	var loDimension = this.getQuery().getMeasureStructure();
	if (oFF.notNull(loDimension))
	{
		ltSupportedMeasures = loDimension.getDimensionMembers();
	}
	return ltSupportedMeasures;
};
oFF.OuSourceConditionThreshold.prototype.getMeasure = function()
{
	var loDimensionMember = null;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		var loInternalMeasure = null;
		var ltInternalMeasureCoordinates = loInternalThreshold.getMeasureCoordinates();
		var loInternalMeasureCoordinateIterator = ltInternalMeasureCoordinates.getIterator();
		while (loInternalMeasureCoordinateIterator.hasNext())
		{
			var loInternalMeasureCoordinate = loInternalMeasureCoordinateIterator.next();
			if (oFF.isNull(loInternalMeasureCoordinate))
			{
				continue;
			}
			if (loInternalMeasureCoordinate.getDimension().isMeasureStructure())
			{
				loInternalMeasure = loInternalMeasureCoordinate;
			}
		}
		if (oFF.notNull(loInternalMeasure))
		{
			var loDimension = this.getQuery().getDimension(loInternalMeasure.getDimension().getName());
			loDimensionMember = loDimension.getDimensionMember(loInternalMeasure.getName());
		}
	}
	return loDimensionMember;
};
oFF.OuSourceConditionThreshold.prototype.setMeasure = function(oMeasure)
{
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		loInternalThreshold.addMeasureCoordinate(oMeasure.getInternalObject());
	}
};
oFF.OuSourceConditionThreshold.prototype.getSupportedOperators = function()
{
	var ltSupportedOperators = oFF.XListOfNameObject.create();
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.EQUAL);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.NOT_EQUAL);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.GREATER_THAN);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.LESS_THAN);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.GREATER_EQUAL);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.LESS_EQUAL);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.BETWEEN);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.NOT_BETWEEN);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.TOP_N);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.BOTTOM_N);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.TOP_PERCENT);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.BOTTOM_PERCENT);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.TOP_SUM);
	ltSupportedOperators.add(oFF.ConditionComparisonOperator.BOTTOM_SUM);
	return ltSupportedOperators;
};
oFF.OuSourceConditionThreshold.prototype.getOperator = function()
{
	var loOperator = oFF.ConditionComparisonOperator.EQUAL;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		loOperator = loInternalThreshold.getComparisonOperator();
	}
	return loOperator;
};
oFF.OuSourceConditionThreshold.prototype.setOperator = function(operator)
{
	var lOperator = operator;
	if (oFF.isNull(lOperator))
	{
		lOperator = oFF.ConditionComparisonOperator.EQUAL;
	}
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		loInternalThreshold.setComparisonOperator(lOperator);
	}
};
oFF.OuSourceConditionThreshold.prototype.getLowValue = function()
{
	var lValue = null;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		var loValue = loInternalThreshold.getLow();
		if (oFF.notNull(loValue))
		{
			lValue = loValue.getString();
		}
	}
	return lValue;
};
oFF.OuSourceConditionThreshold.prototype.setLowValue = function(value)
{
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		var loValue = loInternalThreshold.getLow();
		if (oFF.notNull(loValue))
		{
			loValue.setString(value);
		}
	}
};
oFF.OuSourceConditionThreshold.prototype.getHighValue = function()
{
	var lValue = null;
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		var loValue = loInternalThreshold.getHigh();
		if (oFF.notNull(loValue))
		{
			lValue = loValue.getString();
		}
	}
	return lValue;
};
oFF.OuSourceConditionThreshold.prototype.setHighValue = function(value)
{
	var loInternalThreshold = this.getInternalObject();
	if (oFF.notNull(loInternalThreshold))
	{
		var loValue = loInternalThreshold.getHigh();
		if (oFF.notNull(loValue))
		{
			loValue.setString(value);
		}
	}
};
oFF.OuSourceConditionThreshold.prototype.reset = function() {};
oFF.OuSourceConditionThreshold.prototype.releaseObject = function()
{
	oFF.OuSourceObject.prototype.releaseObject.call( this );
	this.reset();
};

oFF.OuSourceDimension = function() {};
oFF.OuSourceDimension.prototype = new oFF.OuSourceObject();
oFF.OuSourceDimension.prototype._ff_c = "OuSourceDimension";

oFF.OuSourceDimension.sCreateDimension = function(oQuery, oDimension)
{
	var loInstance = new oFF.OuSourceDimension();
	loInstance.setupDimension(oQuery, oDimension);
	return loInstance;
};
oFF.OuSourceDimension.prototype.m_oQuery = null;
oFF.OuSourceDimension.prototype.setupDimension = function(oQuery, oDimension)
{
	this.setupModelObject(oDimension);
	this.m_oQuery = oQuery;
};
oFF.OuSourceDimension.prototype.setup = function()
{
	oFF.OuSourceObject.prototype.setup.call( this );
};
oFF.OuSourceDimension.prototype.getQuery = function()
{
	return this.m_oQuery;
};
oFF.OuSourceDimension.prototype.getName = function()
{
	var lName = null;
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		lName = loInternalDimension.getName();
	}
	return lName;
};
oFF.OuSourceDimension.prototype.getText = function()
{
	var lText = null;
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		lText = loInternalDimension.getText();
	}
	return lText;
};
oFF.OuSourceDimension.prototype.getDimensionMembers = function()
{
	var ltDimensionMembers = oFF.XListOfNameObject.create();
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		if (this.isStructure())
		{
			var ltStructureMembers = loInternalDimension.getAllStructureMembers();
			var loStructureMemberIterator = ltStructureMembers.getIterator();
			while (loStructureMemberIterator.hasNext())
			{
				var loStructureMember = loStructureMemberIterator.next();
				if (oFF.isNull(loStructureMember))
				{
					continue;
				}
				var loDimensionMember = oFF.OuSourceDimensionMember.sCreateDimensionMember(this, loStructureMember);
				ltDimensionMembers.add(loDimensionMember);
			}
		}
	}
	return ltDimensionMembers;
};
oFF.OuSourceDimension.prototype.getDimensionMember = function(name)
{
	return this.getDimensionMembers().getByKey(name);
};
oFF.OuSourceDimension.prototype.isStructure = function()
{
	var lIsStructure = false;
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		lIsStructure = loInternalDimension.isStructure();
	}
	return lIsStructure;
};
oFF.OuSourceDimension.prototype.isMeasureStructure = function()
{
	var lIsMeasureStructure = false;
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		lIsMeasureStructure = loInternalDimension.isMeasureStructure();
	}
	return lIsMeasureStructure;
};
oFF.OuSourceDimension.prototype.isUDH = function()
{
	var lIsUDH = false;
	var loInternalDimension = this.getInternalObject();
	if (oFF.notNull(loInternalDimension))
	{
		lIsUDH = loInternalDimension.isUniversalDisplayHierarchyDimension();
	}
	return lIsUDH;
};
oFF.OuSourceDimension.prototype.reset = function() {};
oFF.OuSourceDimension.prototype.releaseObject = function()
{
	oFF.OuSourceObject.prototype.releaseObject.call( this );
	this.reset();
};

oFF.OuSourceDimensionMember = function() {};
oFF.OuSourceDimensionMember.prototype = new oFF.OuSourceObject();
oFF.OuSourceDimensionMember.prototype._ff_c = "OuSourceDimensionMember";

oFF.OuSourceDimensionMember.sCreateDimensionMember = function(oDimension, oDimensionMember)
{
	var loInstance = new oFF.OuSourceDimensionMember();
	loInstance.setupDimensionMember(oDimension, oDimensionMember);
	return loInstance;
};
oFF.OuSourceDimensionMember.prototype.m_oDimension = null;
oFF.OuSourceDimensionMember.prototype.setupDimensionMember = function(oDimension, oDimensionMember)
{
	this.setupModelObject(oDimensionMember);
	this.m_oDimension = oDimension;
};
oFF.OuSourceDimensionMember.prototype.setup = function()
{
	oFF.OuSourceObject.prototype.setup.call( this );
};
oFF.OuSourceDimensionMember.prototype.getQuery = function()
{
	return this.getDimension().getQuery();
};
oFF.OuSourceDimensionMember.prototype.getDimension = function()
{
	return this.m_oDimension;
};
oFF.OuSourceDimensionMember.prototype.getName = function()
{
	var lName = null;
	var loInternalDimensionMember = this.getInternalObject();
	if (oFF.notNull(loInternalDimensionMember))
	{
		lName = loInternalDimensionMember.getName();
	}
	return lName;
};
oFF.OuSourceDimensionMember.prototype.getText = function()
{
	var lText = null;
	var loInternalDimensionMember = this.getInternalObject();
	if (oFF.notNull(loInternalDimensionMember))
	{
		lText = loInternalDimensionMember.getText();
	}
	return lText;
};
oFF.OuSourceDimensionMember.prototype.reset = function() {};
oFF.OuSourceDimensionMember.prototype.releaseObject = function()
{
	oFF.OuSourceObject.prototype.releaseObject.call( this );
	this.reset();
};

oFF.OuSourceQuery = function() {};
oFF.OuSourceQuery.prototype = new oFF.OuSourceObject();
oFF.OuSourceQuery.prototype._ff_c = "OuSourceQuery";

oFF.OuSourceQuery.s_tQueries = null;
oFF.OuSourceQuery.sCreateQuery = function(oQuery)
{
	if (oFF.isNull(oFF.OuSourceQuery.s_tQueries))
	{
		oFF.OuSourceQuery.s_tQueries = oFF.XSimpleMap.create();
	}
	var loInstance = oFF.OuSourceQuery.s_tQueries.getByKey(oQuery);
	if (oFF.isNull(loInstance))
	{
		loInstance = new oFF.OuSourceQuery();
		loInstance.setupModelObject(oQuery);
	}
	return loInstance;
};
oFF.OuSourceQuery.prototype.setup = function()
{
	oFF.OuSourceObject.prototype.setup.call( this );
};
oFF.OuSourceQuery.prototype.getName = function()
{
	var lName = null;
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		lName = loInternalQuery.getName();
	}
	return lName;
};
oFF.OuSourceQuery.prototype.getText = function()
{
	var lText = null;
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		lText = loInternalQuery.getText();
	}
	return lText;
};
oFF.OuSourceQuery.prototype.getDimensions = function()
{
	var ltDimensions = oFF.XListOfNameObject.create();
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var ltInternalDimensions = loInternalQuery.getDimensionAccessor().getDimensions();
		var loInternalDimensionIterator = ltInternalDimensions.getIterator();
		while (loInternalDimensionIterator.hasNext())
		{
			var loInternalDimension = loInternalDimensionIterator.next();
			if (oFF.isNull(loInternalDimension))
			{
				continue;
			}
			var loDimension = oFF.OuSourceDimension.sCreateDimension(this, loInternalDimension);
			ltDimensions.add(loDimension);
		}
	}
	return ltDimensions;
};
oFF.OuSourceQuery.prototype.getDimension = function(name)
{
	return this.getDimensions().getByKey(name);
};
oFF.OuSourceQuery.prototype.getStructures = function()
{
	var ltStructures = oFF.XListOfNameObject.create();
	var ltDimensions = this.getDimensions();
	var loDimensionIterator = ltDimensions.getIterator();
	while (loDimensionIterator.hasNext())
	{
		var loDimension = loDimensionIterator.next();
		if (oFF.isNull(loDimension) || !loDimension.isStructure())
		{
			continue;
		}
		ltStructures.add(loDimension);
	}
	return ltStructures;
};
oFF.OuSourceQuery.prototype.getMeasureStructure = function()
{
	var loDimension = null;
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var loInternalDimension = loInternalQuery.getMeasureDimension();
		loDimension = this.getDimensions().getByKey(loInternalDimension.getName());
	}
	return loDimension;
};
oFF.OuSourceQuery.prototype.getConditions = function()
{
	var ltConditions = oFF.XListOfNameObject.create();
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var ltInternalConditions = loInternalQuery.getConditionManager().getValuesAsReadOnlyList();
		var loInternalConditionIterator = ltInternalConditions.getIterator();
		while (loInternalConditionIterator.hasNext())
		{
			var loInternalCondition = loInternalConditionIterator.next();
			if (oFF.isNull(loInternalCondition))
			{
				continue;
			}
			var loCondition = oFF.OuSourceCondition.sCreateCondition(this, loInternalCondition);
			ltConditions.add(loCondition);
		}
	}
	return ltConditions;
};
oFF.OuSourceQuery.prototype.getCondition = function(name)
{
	return this.getConditions().getByKey(name);
};
oFF.OuSourceQuery.prototype.clearConditions = function()
{
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var loInternalConditionManager = loInternalQuery.getConditionManager();
		loInternalConditionManager.clear();
	}
};
oFF.OuSourceQuery.prototype.createCondition = function(name)
{
	var loInternalCondition = null;
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var loInternalConditionManager = loInternalQuery.getConditionManager();
		loInternalCondition = loInternalConditionManager.addNewCondition(name);
	}
	return oFF.OuSourceCondition.sCreateCondition(this, loInternalCondition);
};
oFF.OuSourceQuery.prototype.removeCondition = function(oCondition)
{
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var loInternalConditionManager = loInternalQuery.getConditionManager();
		loInternalConditionManager.removeElement(oCondition.getInternalObject());
	}
};
oFF.OuSourceQuery.prototype.removeConditionByName = function(name)
{
	var loInternalQuery = this.getInternalObject();
	if (oFF.notNull(loInternalQuery))
	{
		var loInternalConditionManager = loInternalQuery.getConditionManager();
		loInternalConditionManager.removeConditionByName(name);
	}
};
oFF.OuSourceQuery.prototype.reset = function() {};
oFF.OuSourceQuery.prototype.releaseObject = function()
{
	oFF.OuSourceQuery.s_tQueries.remove(this.getInternalObject());
	oFF.OuSourceObject.prototype.releaseObject.call( this );
	this.reset();
};

oFF.AldControllerAxisLayout = function() {};
oFF.AldControllerAxisLayout.prototype = new oFF.XObject();
oFF.AldControllerAxisLayout.prototype._ff_c = "AldControllerAxisLayout";

oFF.AldControllerAxisLayout.SHOW_FREE_BUTTON = "showFreeButton";
oFF.AldControllerAxisLayout.HIDE_FREE_BUTTON = "hideFreeButton";
oFF.AldControllerAxisLayout.TECHNICAL_BUTTON = "technicalButton";
oFF.AldControllerAxisLayout.OK_BUTTON = "okButton";
oFF.AldControllerAxisLayout.CANCEL_BUTTON = "cancelButton";
oFF.AldControllerAxisLayout.BUTTON_ADD_TO_COLUMNS = "buttonAddToColumns";
oFF.AldControllerAxisLayout.BUTTON_ADD_TO_ROWS = "buttonAddToRows";
oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_COLUMNS = "buttonRemoveFromColumns";
oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_ROWS = "buttonRemoveFromRows";
oFF.AldControllerAxisLayout.BUTTON_COLUMNS_UP = "buttonColumnsUp";
oFF.AldControllerAxisLayout.BUTTON_COLUMNS_DOWN = "buttonColumnsDown";
oFF.AldControllerAxisLayout.BUTTON_ROWS_UP = "buttonRowsUp";
oFF.AldControllerAxisLayout.BUTTON_ROWS_DOWN = "buttonRowsDown";
oFF.AldControllerAxisLayout.DIMENSION_INVENTORY_LIST = "DimensionInventoryList";
oFF.AldControllerAxisLayout.COLUMN_DIMENSION_LIST = "ColumnDimensionList";
oFF.AldControllerAxisLayout.ROW_DIMENSION_LIST = "RowDimensionListList";
oFF.AldControllerAxisLayout.HIERARCHICHAL_ROW_SWITCH = "HierarchichalRowSwitch";
oFF.AldControllerAxisLayout.HIERARCHICHAL_COLUMN_SWITCH = "HierarchichalColumnSwitch";
oFF.AldControllerAxisLayout.create = function(application, context)
{
	var obj = new oFF.AldControllerAxisLayout();
	obj.m_context = context;
	obj.m_application = application;
	return obj;
};
oFF.AldControllerAxisLayout.prototype.m_context = null;
oFF.AldControllerAxisLayout.prototype.m_display = null;
oFF.AldControllerAxisLayout.prototype.m_aldModel = null;
oFF.AldControllerAxisLayout.prototype.m_configuration = null;
oFF.AldControllerAxisLayout.prototype.m_okButton = null;
oFF.AldControllerAxisLayout.prototype.m_cancelButton = null;
oFF.AldControllerAxisLayout.prototype.m_aldLayout = null;
oFF.AldControllerAxisLayout.prototype.m_isClosing = false;
oFF.AldControllerAxisLayout.prototype.m_buttonRemoveFromColumns = null;
oFF.AldControllerAxisLayout.prototype.m_buttonAddToColumns = null;
oFF.AldControllerAxisLayout.prototype.m_buttonRemoveFromRows = null;
oFF.AldControllerAxisLayout.prototype.m_buttonAddToRows = null;
oFF.AldControllerAxisLayout.prototype.m_buttonMoveUpColumns = null;
oFF.AldControllerAxisLayout.prototype.m_buttonMoveDownColumns = null;
oFF.AldControllerAxisLayout.prototype.m_buttonMoveUpRows = null;
oFF.AldControllerAxisLayout.prototype.m_buttonMoveDownRows = null;
oFF.AldControllerAxisLayout.prototype.m_buttonHideFree = null;
oFF.AldControllerAxisLayout.prototype.m_buttonShowFree = null;
oFF.AldControllerAxisLayout.prototype.m_dimensionInventoryList = null;
oFF.AldControllerAxisLayout.prototype.m_rowDimensionList = null;
oFF.AldControllerAxisLayout.prototype.m_columnDimensionList = null;
oFF.AldControllerAxisLayout.prototype.m_technicalButton = null;
oFF.AldControllerAxisLayout.prototype.m_dialogCloseListener = null;
oFF.AldControllerAxisLayout.prototype.m_application = null;
oFF.AldControllerAxisLayout.prototype.m_queryModel = null;
oFF.AldControllerAxisLayout.prototype.m_udhSwitchColumns = null;
oFF.AldControllerAxisLayout.prototype.m_udhSwitchRows = null;
oFF.AldControllerAxisLayout.prototype.releaseObject = function()
{
	this.m_aldModel = oFF.XObjectExt.release(this.m_aldModel);
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_aldLayout = oFF.XObjectExt.release(this.m_aldLayout);
	this.m_context = null;
};
oFF.AldControllerAxisLayout.prototype.openDialog = function(title, modelComponent, dialogCloseListener)
{
	oFF.XObjectExt.assertNotNullExt(modelComponent, "Dimension must be set");
	this.m_dialogCloseListener = dialogCloseListener;
	this.setupController(title, modelComponent);
};
oFF.AldControllerAxisLayout.prototype.setupController = function(title, queryModel)
{
	var zeroSuppressionContainer;
	var totalsContainer;
	this.m_isClosing = false;
	this.m_aldModel = oFF.AldModel.createFrom(queryModel);
	this.m_queryModel = queryModel;
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("AxisDialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(60, oFF.UiCssSizeUnit.PERCENT));
	this.m_display.setWidth(oFF.UiCssLength.createExt(55, oFF.UiCssSizeUnit.PERCENT));
	this.m_aldModel.addListener(this);
	var genesis = this.m_display.getGenesis();
	this.m_aldLayout = oFF.AldAxisLayoutDialogLayout.createWithGenesis(genesis);
	var localization = this.m_context.getLocalization();
	if (this.m_aldModel.isSupportsUniversalDisplayHierarchy())
	{
		var row;
		var label;
		if (oFF.isNull(this.m_udhSwitchColumns))
		{
			row = this.m_aldLayout.getColumnDimensions().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			label = row.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("auto")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setMargin(oFF.UiCssBoxEdges.create("0em"));
			label.setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_DISPLAY_HIERARCHICALLY));
			row.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em")).setHeight(oFF.UiCssLength.create("1em"));
			this.m_udhSwitchColumns = row.addNewItemOfType(oFF.UiType.SWITCH).setName(oFF.AldControllerAxisLayout.HIERARCHICHAL_COLUMN_SWITCH).setOffText(" ").setOnText(" ");
			row.addItem(this.m_udhSwitchColumns.setWidth(oFF.UiCssLength.create("4em")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER)).setMargin(oFF.UiCssBoxEdges.create("0em"));
			this.m_udhSwitchColumns.registerOnChange(this);
			this.m_aldLayout.getColumnDimensions().addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setHeight(oFF.UiCssLength.create("1em"));
		}
		if (oFF.isNull(this.m_udhSwitchRows))
		{
			row = this.m_aldLayout.getRowDimensions().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			label = row.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("auto")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setMargin(oFF.UiCssBoxEdges.create("0em"));
			label.setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_DISPLAY_HIERARCHICALLY));
			row.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em")).setHeight(oFF.UiCssLength.create("1em"));
			this.m_udhSwitchRows = row.addNewItemOfType(oFF.UiType.SWITCH).setName(oFF.AldControllerAxisLayout.HIERARCHICHAL_ROW_SWITCH).setOffText(" ").setOnText(" ");
			row.addItem(this.m_udhSwitchRows.setWidth(oFF.UiCssLength.create("4em")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER)).setMargin(oFF.UiCssBoxEdges.create("0em"));
			this.m_udhSwitchRows.registerOnChange(this);
			this.m_aldLayout.getRowDimensions().addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em"));
		}
	}
	var panelLayout;
	var vl;
	if (oFF.isNull(this.m_technicalButton))
	{
		this.m_technicalButton = this.m_aldLayout.getTechnicalLayout().addNewItemOfType(oFF.UiType.TOGGLE_BUTTON);
		this.m_technicalButton.setIcon("technical-object").setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_TECHNICAL));
		this.m_technicalButton.setName(oFF.AldControllerAxisLayout.TECHNICAL_BUTTON);
		this.m_technicalButton.registerOnPress(this);
	}
	if (this.m_aldModel.getAldModelTotalsColumns() !== null)
	{
		totalsContainer = oFF.AldControllerTotals.createWithModelAndGenesis(this.m_application, this.m_context, this.m_aldModel.getAldModelTotalsColumns(), genesis);
		panelLayout = this.m_aldLayout.getValueDisplayColumns().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setMargin(oFF.UiCssBoxEdges.create("0em")).setPadding(oFF.UiCssBoxEdges.create("0em"));
		panelLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setHeight(oFF.UiCssLength.create("2em")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_POSITION_OF_TOTALS));
		vl = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
		vl.addItem(totalsContainer.getPositionRBG());
		panelLayout.addItem(vl);
	}
	if (this.m_aldModel.getAldModelZeroSuppressionColumns() !== null)
	{
		zeroSuppressionContainer = oFF.AldControllerZeroSuppression.createWithModelAndGenesis(this.m_application, this.m_context, this.m_aldModel.getAldModelZeroSuppressionColumns(), genesis);
		panelLayout = this.m_aldLayout.getValueDisplayColumns().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setMargin(oFF.UiCssBoxEdges.create("0em")).setPadding(oFF.UiCssBoxEdges.create("0em"));
		panelLayout.addNewItemOfType(oFF.UiType.LABEL).setHeight(oFF.UiCssLength.create("2em")).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ZERO_SUPPRESSION));
		vl = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
		vl.addItem(zeroSuppressionContainer.getZeroSuppressionRadioButtonGroup());
		panelLayout.addItem(vl);
	}
	if (this.m_aldModel.getAldModelTotalsRows() !== null)
	{
		totalsContainer = oFF.AldControllerTotals.createWithModelAndGenesis(this.m_application, this.m_context, this.m_aldModel.getAldModelTotalsRows(), genesis);
		panelLayout = this.m_aldLayout.getValueDisplayRows().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setMargin(oFF.UiCssBoxEdges.create("0em")).setPadding(oFF.UiCssBoxEdges.create("0em"));
		panelLayout.addNewItemOfType(oFF.UiType.LABEL).setHeight(oFF.UiCssLength.create("2em")).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_POSITION_OF_TOTALS));
		vl = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
		vl.addItem(totalsContainer.getPositionRBG());
		panelLayout.addItem(vl);
	}
	if (this.m_aldModel.getAldModelZeroSuppressionRows() !== null)
	{
		zeroSuppressionContainer = oFF.AldControllerZeroSuppression.createWithModelAndGenesis(this.m_application, this.m_context, this.m_aldModel.getAldModelZeroSuppressionRows(), genesis);
		panelLayout = this.m_aldLayout.getValueDisplayRows().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setMargin(oFF.UiCssBoxEdges.create("0em")).setPadding(oFF.UiCssBoxEdges.create("0em"));
		panelLayout.addNewItemOfType(oFF.UiType.LABEL).setHeight(oFF.UiCssLength.create("2em")).setFontSize(oFF.UiCssLength.create("125%")).setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ZERO_SUPPRESSION));
		vl = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
		vl.addItem(zeroSuppressionContainer.getZeroSuppressionRadioButtonGroup());
		panelLayout.addItem(vl);
	}
	if (oFF.isNull(this.m_dimensionInventoryList))
	{
		this.m_dimensionInventoryList = this.m_aldLayout.getDimensionInventory().addNewItemOfType(oFF.UiType.LIST).setName(oFF.AldControllerAxisLayout.DIMENSION_INVENTORY_LIST);
		this.m_dimensionInventoryList.setSelectionMode(oFF.UiSelectionMode.MULTI_SELECT);
		this.m_dimensionInventoryList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%"));
		this.m_aldLayout.getDimensionInventory().addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	}
	if (oFF.isNull(this.m_columnDimensionList))
	{
		this.m_columnDimensionList = this.m_aldLayout.getColumnDimensions().addNewItemOfType(oFF.UiType.LIST).setName(oFF.AldControllerAxisLayout.COLUMN_DIMENSION_LIST);
		this.m_columnDimensionList.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT);
		this.m_columnDimensionList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
	}
	if (oFF.isNull(this.m_rowDimensionList))
	{
		this.m_rowDimensionList = this.m_aldLayout.getRowDimensions().addNewItemOfType(oFF.UiType.LIST).setName(oFF.AldControllerAxisLayout.ROW_DIMENSION_LIST);
		this.m_rowDimensionList.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT);
		this.m_rowDimensionList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("auto")).setWidth(oFF.UiCssLength.create("100%"));
	}
	if (oFF.isNull(this.m_buttonHideFree))
	{
		this.m_buttonHideFree = this.m_aldLayout.getHideFreeAxisControl().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonHideFree.setIcon("close-command-field").setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_HIDE_FREE));
		this.m_buttonHideFree.setName(oFF.AldControllerAxisLayout.HIDE_FREE_BUTTON);
		this.m_buttonHideFree.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonShowFree))
	{
		this.m_buttonShowFree = this.m_aldLayout.getShowFreeAxisControl().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonShowFree.setIcon("open-command-field").setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_SHOW_FREE));
		this.m_buttonShowFree.setName(oFF.AldControllerAxisLayout.SHOW_FREE_BUTTON);
		this.m_buttonShowFree.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonAddToColumns))
	{
		this.m_buttonAddToColumns = this.m_aldLayout.getColumnDimensionControls().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonAddToColumns.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_COLUMNS));
		this.m_buttonAddToColumns.setIcon("slim-arrow-right");
		this.m_buttonAddToColumns.setName(oFF.AldControllerAxisLayout.BUTTON_ADD_TO_COLUMNS);
		this.m_buttonAddToColumns.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonRemoveFromColumns))
	{
		this.m_buttonRemoveFromColumns = this.m_aldLayout.getColumnDimensionControls().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonRemoveFromColumns.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_REMOVE_FROM_LAYOUT));
		this.m_buttonRemoveFromColumns.setIcon("slim-arrow-left");
		this.m_buttonRemoveFromColumns.setName(oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_COLUMNS);
		this.m_buttonRemoveFromColumns.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonAddToRows))
	{
		this.m_buttonAddToRows = this.m_aldLayout.getRowDimensionControls().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonAddToRows.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_ROWS));
		this.m_buttonAddToRows.setIcon("slim-arrow-right");
		this.m_buttonAddToRows.setName(oFF.AldControllerAxisLayout.BUTTON_ADD_TO_ROWS);
		this.m_buttonAddToRows.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonRemoveFromRows))
	{
		this.m_buttonRemoveFromRows = this.m_aldLayout.getRowDimensionControls().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonRemoveFromRows.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_REMOVE_FROM_LAYOUT));
		this.m_buttonRemoveFromRows.setIcon("slim-arrow-left");
		this.m_buttonRemoveFromRows.setName(oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_ROWS);
		this.m_buttonRemoveFromRows.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonMoveUpColumns))
	{
		this.m_aldLayout.getColumnDimensionOrder().addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("5em"));
		this.m_buttonMoveUpColumns = this.m_aldLayout.getColumnDimensionOrder().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveUpColumns.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_UP));
		this.m_buttonMoveUpColumns.setIcon("slim-arrow-up");
		this.m_buttonMoveUpColumns.setName(oFF.AldControllerAxisLayout.BUTTON_COLUMNS_UP);
		this.m_buttonMoveUpColumns.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonMoveDownColumns))
	{
		this.m_buttonMoveDownColumns = this.m_aldLayout.getColumnDimensionOrder().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveDownColumns.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_DOWN));
		this.m_buttonMoveDownColumns.setIcon("slim-arrow-down");
		this.m_buttonMoveDownColumns.setName(oFF.AldControllerAxisLayout.BUTTON_COLUMNS_DOWN);
		this.m_buttonMoveDownColumns.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonMoveUpRows))
	{
		this.m_aldLayout.getRowDimensionOrder().addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("5em"));
		this.m_buttonMoveUpRows = this.m_aldLayout.getRowDimensionOrder().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveUpRows.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_UP));
		this.m_buttonMoveUpRows.setIcon("slim-arrow-up");
		this.m_buttonMoveUpRows.setName(oFF.AldControllerAxisLayout.BUTTON_ROWS_UP);
		this.m_buttonMoveUpRows.registerOnPress(this);
	}
	if (oFF.isNull(this.m_buttonMoveDownRows))
	{
		this.m_buttonMoveDownRows = this.m_aldLayout.getRowDimensionOrder().addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveDownRows.setTooltip(localization.getText(oFF.LayoutDialogI18n.I18N_LD_MOVE_DOWN));
		this.m_buttonMoveDownRows.setIcon("slim-arrow-down");
		this.m_buttonMoveDownRows.setName(oFF.AldControllerAxisLayout.BUTTON_ROWS_DOWN);
		this.m_buttonMoveDownRows.registerOnPress(this);
	}
	this.reinitializeChildControllers();
	this.m_aldLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.AldControllerAxisLayout.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.AldControllerAxisLayout.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_aldLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.AldControllerAxisLayout.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.AldControllerAxisLayout.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		this.m_aldModel = oFF.XObjectExt.release(this.m_aldModel);
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.AldControllerAxisLayout.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.AldControllerAxisLayout.TECHNICAL_BUTTON:
			this.m_aldModel.setShowTechnical(event.getControl().isPressed());
			return;

		case oFF.AldControllerAxisLayout.SHOW_FREE_BUTTON:
			this.setFreeAxisVisible(true);
			return;

		case oFF.AldControllerAxisLayout.HIDE_FREE_BUTTON:
			this.setFreeAxisVisible(false);
			return;

		case oFF.AldControllerAxisLayout.BUTTON_ADD_TO_COLUMNS:
			this.m_aldModel.activateColumnSelection();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_ADD_TO_ROWS:
			this.m_aldModel.activateRowsSelection();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_COLUMNS:
			this.m_aldModel.deActivateColumnSelection();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_REMOVE_FROM_ROWS:
			this.m_aldModel.deActivateRowSelection();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_COLUMNS_UP:
			this.m_aldModel.moveUpColumnDimension();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_ROWS_UP:
			this.m_aldModel.moveUpRowDimension();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_COLUMNS_DOWN:
			this.m_aldModel.moveDownColumnDimension();
			return;

		case oFF.AldControllerAxisLayout.BUTTON_ROWS_DOWN:
			this.m_aldModel.moveDownRowDimension();
			return;

		case oFF.AldControllerAxisLayout.OK_BUTTON:
			this.m_aldModel.applyToQueryModel(this.m_queryModel);
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				this.m_dialogCloseListener.onSubmit();
			}
			break;

		case oFF.AldControllerAxisLayout.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.AldControllerAxisLayout.prototype.setFreeAxisVisible = function(visible)
{
	this.m_aldLayout.setFreeAxisVisible(visible);
};
oFF.AldControllerAxisLayout.prototype.onAfterOpen = function(event) {};
oFF.AldControllerAxisLayout.prototype.reinitializeChildControllers = function()
{
	var list;
	var selectionList;
	var size;
	var i;
	var subItem;
	var item;
	list = this.m_aldModel.getDimensionOrderedOnFree();
	selectionList = this.m_aldModel.getDimensionOrderedOnFreeSelected();
	size = list.size();
	if (oFF.notNull(this.m_udhSwitchRows))
	{
		this.m_udhSwitchRows.setOn(this.m_aldModel.isDisplayRowsHierarchically());
	}
	if (oFF.notNull(this.m_udhSwitchColumns))
	{
		this.m_udhSwitchColumns.setOn(this.m_aldModel.isDisplayColumnsHierarchically());
	}
	this.m_dimensionInventoryList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_dimensionInventoryList.addNewItem().setName(item.getComponentName()).setText(this.m_aldModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonAddToColumns.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	this.m_buttonAddToRows.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	list = this.m_aldModel.getDimensionOrderedOnColumns();
	selectionList = this.m_aldModel.getDimensionOrderedOnColumnsSelected();
	size = list.size();
	this.m_columnDimensionList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_columnDimensionList.addNewItem().setName(item.getComponentName()).setText(this.m_aldModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonRemoveFromColumns.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	oFF.DdModelOrderable.adoptList(this.m_aldModel.getDimensionOrderedOnColumns());
	var currentSelection = selectionList.size() === 1 ? selectionList.get(0) : null;
	this.m_buttonMoveDownColumns.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveDown());
	this.m_buttonMoveUpColumns.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveUp());
	list = this.m_aldModel.getDimensionOrderedOnRows();
	selectionList = this.m_aldModel.getDimensionOrderedOnRowsSelected();
	size = list.size();
	this.m_rowDimensionList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_rowDimensionList.addNewItem().setName(item.getComponentName()).setText(this.m_aldModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonRemoveFromRows.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	oFF.DdModelOrderable.adoptList(this.m_aldModel.getDimensionOrderedOnRows());
	currentSelection = selectionList.size() === 1 ? selectionList.get(0) : null;
	this.m_buttonMoveDownRows.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveDown());
	this.m_buttonMoveUpRows.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveUp());
};
oFF.AldControllerAxisLayout.prototype.onObservableModelChange = function(model)
{
	this.reinitializeChildControllers();
};
oFF.AldControllerAxisLayout.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.AldControllerAxisLayout.DIMENSION_INVENTORY_LIST:
			this.m_aldModel.setDimensionOrderedOnFreeSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.AldControllerAxisLayout.COLUMN_DIMENSION_LIST:
			this.m_aldModel.setDimensionOrderedOnColumnsSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.AldControllerAxisLayout.ROW_DIMENSION_LIST:
			this.m_aldModel.setDimensionOrderedOnRowsSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;
	}
};
oFF.AldControllerAxisLayout.prototype.getListOfSelectedCustomObjects = function(context)
{
	var resultList = oFF.XList.create();
	var selectedItems = context.getSelectedItems();
	var size = selectedItems.size();
	for (var i = 0; i < size; i++)
	{
		resultList.add(selectedItems.get(i).getCustomObject());
	}
	return resultList;
};
oFF.AldControllerAxisLayout.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.AldControllerAxisLayout.HIERARCHICHAL_ROW_SWITCH:
			this.m_aldModel.setDisplayRowsHierarchically(control.isOn());
			break;

		case oFF.AldControllerAxisLayout.HIERARCHICHAL_COLUMN_SWITCH:
			this.m_aldModel.setDisplayColumnsHierarchically(control.isOn());
			break;
	}
};

oFF.AldControllerTotals = function() {};
oFF.AldControllerTotals.prototype = new oFF.DdControllerFlexible();
oFF.AldControllerTotals.prototype._ff_c = "AldControllerTotals";

oFF.AldControllerTotals.POSITION_DROPDOWN = "positionDropdown";
oFF.AldControllerTotals.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.AldControllerTotals();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.AldControllerTotals.prototype.m_positionRBG = null;
oFF.AldControllerTotals.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.AldControllerTotals.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	if (this.getModel().getResultAlignment() !== null && this.getModel().isSupportsResultAlignment())
	{
		labelTexts.add(localization.getText(oFF.LayoutDialogI18n.I18N_LD_POSITION_OF_TOTALS));
	}
	return labelTexts;
};
oFF.AldControllerTotals.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.AldControllerTotals.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.AldControllerTotals.prototype.getControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (this.getModel().getResultAlignment() !== null && this.getModel().isSupportsResultAlignment())
	{
		var alignment = this.getModel().getResultAlignment();
		if (oFF.isNull(this.m_positionRBG))
		{
			this.m_positionRBG = this.getGenesis().newControl(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.AldControllerTotals.POSITION_DROPDOWN);
			var availableAlignments = this.getModel().getSupportedResultAlignments();
			var curAlignment = oFF.ResultAlignment.TOP;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionRBG.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE)).setName(curAlignment.getName()).setCustomObject(curAlignment);
			}
			curAlignment = oFF.ResultAlignment.TOPBOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionRBG.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			curAlignment = oFF.ResultAlignment.BOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionRBG.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			this.m_positionRBG.registerOnSelect(this);
		}
		this.m_positionRBG.setSelectedName(alignment.getName());
		controls.add(this.m_positionRBG);
	}
	return controls;
};
oFF.AldControllerTotals.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.AldControllerTotals.prototype.getWidths = function()
{
	return null;
};
oFF.AldControllerTotals.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.AldControllerTotals.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.AldControllerTotals.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.AldControllerTotals.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.AldControllerTotals.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.AldControllerTotals.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.AldControllerTotals.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.AldControllerTotals.prototype.getPositionRBG = function()
{
	this.getControls();
	return this.m_positionRBG;
};

oFF.AldControllerZeroSuppression = function() {};
oFF.AldControllerZeroSuppression.prototype = new oFF.DdControllerFlexible();
oFF.AldControllerZeroSuppression.prototype._ff_c = "AldControllerZeroSuppression";

oFF.AldControllerZeroSuppression.ZERO_SUPPRESSION_RBG = "zeroSuppressionRBG";
oFF.AldControllerZeroSuppression.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.AldControllerZeroSuppression();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.AldControllerZeroSuppression.prototype.m_zeroSuppressionRadioButtonGroup = null;
oFF.AldControllerZeroSuppression.prototype.getZeroSuppressionRadioButtonGroup = function()
{
	this.getControls();
	return this.m_zeroSuppressionRadioButtonGroup;
};
oFF.AldControllerZeroSuppression.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.AldControllerZeroSuppression.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	if (this.getModel().isSupportsZeroSuppression())
	{
		labelTexts.add(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ZERO_SUPPRESSION));
	}
	return labelTexts;
};
oFF.AldControllerZeroSuppression.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.AldControllerZeroSuppression.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.AldControllerZeroSuppression.prototype.getControls = function()
{
	var controls = oFF.XList.create();
	var localization = this.getGenesis().getUiManager().getLocalization();
	if (oFF.isNull(this.m_zeroSuppressionRadioButtonGroup))
	{
		this.m_zeroSuppressionRadioButtonGroup = this.getGenesis().newControl(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.AldControllerZeroSuppression.ZERO_SUPPRESSION_RBG);
		this.m_zeroSuppressionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_NONE)).setName(oFF.ZeroSuppressionType.NONE.getName()).setCustomObject(oFF.ZeroSuppressionType.NONE);
		this.m_zeroSuppressionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_TOTALS_ZERO)).setName(oFF.ZeroSuppressionType.TOTAL_IS_ZERO.getName()).setCustomObject(oFF.ZeroSuppressionType.TOTAL_IS_ZERO);
		this.m_zeroSuppressionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_ALL_ZERO)).setName(oFF.ZeroSuppressionType.ALL_CELLS_ARE_ZERO.getName()).setCustomObject(oFF.ZeroSuppressionType.ALL_CELLS_ARE_ZERO);
		this.m_zeroSuppressionRadioButtonGroup.registerOnSelect(this);
	}
	this.m_zeroSuppressionRadioButtonGroup.setSelectedName(this.getModel().getZeroSuppressionType().getName());
	controls.add(this.m_zeroSuppressionRadioButtonGroup);
	return controls;
};
oFF.AldControllerZeroSuppression.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.AldControllerZeroSuppression.prototype.getWidths = function()
{
	return null;
};
oFF.AldControllerZeroSuppression.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.AldControllerZeroSuppression.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.AldControllerZeroSuppression.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.AldControllerZeroSuppression.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.AldControllerZeroSuppression.ZERO_SUPPRESSION_RBG:
			this.getModel().setZeroSuppressionType(control.getSelectedItem().getCustomObject());
			break;
	}
};

oFF.CatalogDialogI18n = function() {};
oFF.CatalogDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.CatalogDialogI18n.prototype._ff_c = "CatalogDialogI18n";

oFF.CatalogDialogI18n.I18N_CD_SEARCH = "I18N_CD_SEARCH";
oFF.CatalogDialogI18n.I18N_CD_HIERARCHY = "I18N_CD_HIERARCHY";
oFF.CatalogDialogI18n.I18N_CD_VERSION = "I18N_CD_VERSION";
oFF.CatalogDialogI18n.I18N_CD_OBJECT_VERSION = "I18N_CD_OBJECT_VERSION";
oFF.CatalogDialogI18n.I18N_CD_DATE = "I18N_CD_DATE";
oFF.CatalogDialogI18n.I18N_CD_KEY = "I18N_CD_KEY";
oFF.CatalogDialogI18n.I18N_CD_TEXT = "I18N_CD_TEXT";
oFF.CatalogDialogI18n.createCatalogDialogI18n = function()
{
	return new oFF.CatalogDialogI18n();
};
oFF.CatalogDialogI18n.staticSetupCd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_SEARCH, "Search");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_HIERARCHY, "Hierarchy");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_VERSION, "Version");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_OBJECT_VERSION, "Object Version");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_DATE, "Date");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_KEY, "Technical Name");
	oFF.OlapUiI18n.addDefaultValue(oFF.CatalogDialogI18n.I18N_CD_TEXT, "Description");
};

oFF.AbstractCatalogController = function() {};
oFF.AbstractCatalogController.prototype = new oFF.XObject();
oFF.AbstractCatalogController.prototype._ff_c = "AbstractCatalogController";

oFF.AbstractCatalogController.OK_BUTTON = "okButton";
oFF.AbstractCatalogController.CANCEL_BUTTON = "cancelButton";
oFF.AbstractCatalogController.prototype.m_context = null;
oFF.AbstractCatalogController.prototype.m_display = null;
oFF.AbstractCatalogController.prototype.m_catalogProcess = null;
oFF.AbstractCatalogController.prototype.m_okButton = null;
oFF.AbstractCatalogController.prototype.m_cancelButton = null;
oFF.AbstractCatalogController.prototype.m_catalogLayout = null;
oFF.AbstractCatalogController.prototype.m_isClosing = false;
oFF.AbstractCatalogController.prototype.m_dialogCloseListener = null;
oFF.AbstractCatalogController.prototype.m_setParameterListener = null;
oFF.AbstractCatalogController.prototype.m_selectedItem = null;
oFF.AbstractCatalogController.prototype.m_searchInput = null;
oFF.AbstractCatalogController.prototype.m_selectionList = null;
oFF.AbstractCatalogController.prototype.m_parameterName = null;
oFF.AbstractCatalogController.prototype.releaseObject = function()
{
	this.m_catalogProcess = oFF.XObjectExt.release(this.m_catalogProcess);
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_catalogLayout = oFF.XObjectExt.release(this.m_catalogLayout);
	this.m_context = null;
};
oFF.AbstractCatalogController.prototype.openDialog = function(title, catalogManager, setParameterListener, parameterName, dialogCloseListener)
{
	oFF.XObjectExt.assertNotNullExt(catalogManager, "Catalog manager must be set");
	this.m_dialogCloseListener = dialogCloseListener;
	this.m_catalogProcess = oFF.OlapUiCatalogOlap.create(catalogManager);
	this.m_setParameterListener = setParameterListener;
	this.m_parameterName = parameterName;
	this.setupController(title);
	this.m_catalogProcess.processValueHelp(this, null);
};
oFF.AbstractCatalogController.prototype.setupController = function(title)
{
	this.m_isClosing = false;
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("Catalog Dialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(80, oFF.UiCssSizeUnit.PERCENT));
	this.m_display.setWidth(oFF.UiCssLength.createExt(80, oFF.UiCssSizeUnit.PERCENT));
	var genesis = this.m_display.getGenesis();
	this.m_catalogLayout = oFF.DdCatalogLayout.createWithGenesis(genesis);
	this.m_selectionList = this.m_catalogLayout.getSelectionArea().addNewItemOfType(oFF.UiType.TABLE);
	this.m_selectionList.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT);
	this.m_selectionList.setHeight(oFF.UiCssLength.create("100%"));
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.registerOnSelect(this);
	this.m_catalogLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.AbstractCatalogController.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.AbstractCatalogController.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_catalogLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.AbstractCatalogController.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.AbstractCatalogController.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.AbstractCatalogController.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.AbstractCatalogController.OK_BUTTON:
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				if (oFF.notNull(this.m_setParameterListener) && oFF.notNull(this.m_parameterName) && oFF.notNull(this.m_selectedItem))
				{
					this.m_setParameterListener.setObject(this.m_parameterName, this.m_selectedItem);
				}
				this.m_dialogCloseListener.onSubmit();
			}
			break;

		case oFF.AbstractCatalogController.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.AbstractCatalogController.prototype.onAfterOpen = function(event) {};
oFF.AbstractCatalogController.prototype.isSearchActive = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_searchInput.getText());
};
oFF.AbstractCatalogController.prototype.onOlapCatalogResult = function(extResult, result, customIdentifier)
{
	if (!extResult.hasErrors())
	{
		this.m_selectionList.clearRows();
		var iterator = result.getObjectsIterator();
		while (iterator.hasNext())
		{
			var item = iterator.next();
			this.addItemToSelectionList(this.m_selectionList, item);
		}
	}
	this.m_selectionList.setBusy(false);
};
oFF.AbstractCatalogController.prototype.onSelect = function(event)
{
	this.m_selectedItem = event.getControl().getSelectedItem().getCustomObject();
};
oFF.AbstractCatalogController.prototype.onLiveChange = function(event)
{
	this.onSearch(event);
};
oFF.AbstractCatalogController.prototype.onSearch = function(event)
{
	this.m_selectionList.setBusy(true);
	if (this.isSearchActive())
	{
		this.m_catalogProcess.processSearch(this.m_searchInput.getText(), true, true, true, this, null);
	}
	else
	{
		this.m_searchInput.setText(null);
		this.m_selectionList.setBusy(false);
	}
};

oFF.HierarchyCatalogController = function() {};
oFF.HierarchyCatalogController.prototype = new oFF.XObject();
oFF.HierarchyCatalogController.prototype._ff_c = "HierarchyCatalogController";

oFF.HierarchyCatalogController.OK_BUTTON = "okButton";
oFF.HierarchyCatalogController.CANCEL_BUTTON = "cancelButton";
oFF.HierarchyCatalogController.FILTER_INPUT = "filterInput";
oFF.HierarchyCatalogController.VERSION_FILTER_INPUT = "versionFilterInput";
oFF.HierarchyCatalogController.OBJECT_VERSION_FILTER_INPUT = "objectVersionFilterInput";
oFF.HierarchyCatalogController.DATE_FILTER_INPUT = "dateFilterInput";
oFF.HierarchyCatalogController.create = function(context)
{
	var obj = new oFF.HierarchyCatalogController();
	obj.m_context = context;
	return obj;
};
oFF.HierarchyCatalogController.prototype.m_context = null;
oFF.HierarchyCatalogController.prototype.m_display = null;
oFF.HierarchyCatalogController.prototype.m_catalogProcess = null;
oFF.HierarchyCatalogController.prototype.m_okButton = null;
oFF.HierarchyCatalogController.prototype.m_cancelButton = null;
oFF.HierarchyCatalogController.prototype.m_catalogLayout = null;
oFF.HierarchyCatalogController.prototype.m_isClosing = false;
oFF.HierarchyCatalogController.prototype.m_dialogCloseListener = null;
oFF.HierarchyCatalogController.prototype.m_selectedItem = null;
oFF.HierarchyCatalogController.prototype.m_selectionList = null;
oFF.HierarchyCatalogController.prototype.m_searchInput = null;
oFF.HierarchyCatalogController.prototype.m_versionSearchInput = null;
oFF.HierarchyCatalogController.prototype.m_objectVersionSearchInput = null;
oFF.HierarchyCatalogController.prototype.m_dateSearchInput = null;
oFF.HierarchyCatalogController.prototype.m_parameterName = null;
oFF.HierarchyCatalogController.prototype.m_setParameterListener = null;
oFF.HierarchyCatalogController.prototype.m_modelDimension = null;
oFF.HierarchyCatalogController.prototype.releaseObject = function()
{
	this.m_catalogProcess = oFF.XObjectExt.release(this.m_catalogProcess);
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_catalogLayout = oFF.XObjectExt.release(this.m_catalogLayout);
	this.m_context = null;
};
oFF.HierarchyCatalogController.prototype.openDialog = function(title, catalogManager, setParameterListener, parameterName, dialogCloseListener, modelDimension)
{
	oFF.XObjectExt.assertNotNullExt(catalogManager, "Catalog manager must be set");
	this.m_dialogCloseListener = dialogCloseListener;
	this.m_catalogProcess = oFF.OlapUiHierarchyCatalog.create(catalogManager);
	this.m_parameterName = parameterName;
	this.m_setParameterListener = setParameterListener;
	this.setupController(title);
	this.m_catalogProcess.processValueHelp(this, null);
	this.m_modelDimension = modelDimension;
};
oFF.HierarchyCatalogController.prototype.setupController = function(title)
{
	this.m_isClosing = false;
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("Hierarchy Catalog Dialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(50, oFF.UiCssSizeUnit.PERCENT));
	this.m_display.setWidth(oFF.UiCssLength.createExt(50, oFF.UiCssSizeUnit.PERCENT));
	var genesis = this.m_display.getGenesis();
	this.m_catalogLayout = oFF.DdCatalogLayout.createWithGenesis(genesis);
	this.m_catalogLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_selectionList = this.m_catalogLayout.getSelectionArea().addNewItemOfType(oFF.UiType.TABLE);
	this.m_selectionList.setBusy(true);
	this.m_selectionList.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT);
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.m_selectionList.addNewColumn();
	this.setupSearchArea();
	this.m_selectionList.registerOnSelect(this);
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.HierarchyCatalogController.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.HierarchyCatalogController.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_catalogLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.HierarchyCatalogController.prototype.setupSearchArea = function()
{
	var localization = this.m_display.getGenesis().getUiManager().getLocalization();
	var flexLayout = this.m_catalogLayout.getFilterArea().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	flexLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CatalogDialogI18n.I18N_CD_HIERARCHY)).setWidth(oFF.UiCssLength.create("20%"));
	this.m_searchInput = flexLayout.addNewItemOfType(oFF.UiType.SEARCH_FIELD).setName(oFF.HierarchyCatalogController.FILTER_INPUT);
	this.m_searchInput.setPlaceholder(localization.getText(oFF.CatalogDialogI18n.I18N_CD_SEARCH));
	this.m_searchInput.registerOnSearch(this);
	this.m_searchInput.registerOnLiveChange(this);
	flexLayout = this.m_catalogLayout.getFilterArea().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	flexLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CatalogDialogI18n.I18N_CD_VERSION)).setWidth(oFF.UiCssLength.create("20%"));
	this.m_versionSearchInput = flexLayout.addNewItemOfType(oFF.UiType.SEARCH_FIELD).setName(oFF.HierarchyCatalogController.VERSION_FILTER_INPUT);
	this.m_versionSearchInput.setPlaceholder(localization.getText(oFF.CatalogDialogI18n.I18N_CD_SEARCH));
	this.m_versionSearchInput.registerOnSearch(this);
	this.m_versionSearchInput.registerOnLiveChange(this);
	flexLayout = this.m_catalogLayout.getFilterArea().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	flexLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CatalogDialogI18n.I18N_CD_OBJECT_VERSION)).setWidth(oFF.UiCssLength.create("20%"));
	this.m_objectVersionSearchInput = flexLayout.addNewItemOfType(oFF.UiType.SEARCH_FIELD).setName(oFF.HierarchyCatalogController.OBJECT_VERSION_FILTER_INPUT);
	this.m_objectVersionSearchInput.setPlaceholder(localization.getText(oFF.CatalogDialogI18n.I18N_CD_SEARCH));
	this.m_objectVersionSearchInput.registerOnSearch(this);
	this.m_objectVersionSearchInput.registerOnLiveChange(this);
	flexLayout = this.m_catalogLayout.getFilterArea().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	flexLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CatalogDialogI18n.I18N_CD_DATE)).setWidth(oFF.UiCssLength.create("20%"));
	this.m_dateSearchInput = flexLayout.addNewItemOfType(oFF.UiType.DATE_PICKER).setName(oFF.HierarchyCatalogController.DATE_FILTER_INPUT);
	this.m_dateSearchInput.registerOnChange(this);
};
oFF.HierarchyCatalogController.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.HierarchyCatalogController.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.HierarchyCatalogController.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.HierarchyCatalogController.OK_BUTTON:
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				this.m_dialogCloseListener.onSubmit();
			}
			if (oFF.notNull(this.m_setParameterListener) && oFF.notNull(this.m_parameterName) && oFF.notNull(this.m_selectedItem))
			{
				this.m_setParameterListener.setObject(this.m_parameterName, this.m_selectedItem);
			}
			break;

		case oFF.HierarchyCatalogController.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.HierarchyCatalogController.prototype.onAfterOpen = function(event) {};
oFF.HierarchyCatalogController.prototype.onHierarchyCatalogResult = function(extResult, result, customIdentifier)
{
	if (!extResult.hasErrors() && oFF.notNull(result))
	{
		this.m_selectionList.clearColumns();
		this.m_selectionList.clearRows();
		this.addItemsToSelectionList(result.getObjects());
	}
	this.m_selectionList.setBusy(false);
};
oFF.HierarchyCatalogController.prototype.addItemsToSelectionList = function(catalogItems)
{
	var hasVersionName = false;
	var hasVersionDisplayKey = false;
	var hasVersionDescription = false;
	var hasObjectVersion = false;
	var hasDate = false;
	var i;
	var catItem;
	for (i = 0; i < catalogItems.size(); i++)
	{
		catItem = catalogItems.get(i);
		hasVersionName = hasVersionName || catItem.hasVersionName() && oFF.XStringUtils.isNotNullAndNotEmpty(catItem.getVersionName());
		hasVersionDisplayKey = hasVersionDisplayKey || catItem.hasVersionDisplayKey() && oFF.XStringUtils.isNotNullAndNotEmpty(catItem.getVersionDisplayKey());
		hasVersionDescription = hasVersionDescription || catItem.hasVersionDescription() && oFF.XStringUtils.isNotNullAndNotEmpty(catItem.getVersionDescription());
		hasObjectVersion = hasObjectVersion || catItem.hasObjectVersion() && oFF.XStringUtils.isNotNullAndNotEmpty(catItem.getObjectVersion());
		hasDate = hasDate || catItem.getDateFrom() !== null && catItem.getDateFrom().getYear() > 0 || catItem.getDateTo() !== null && catItem.getDateTo().getYear() < 9999;
	}
	var localization = this.m_display.getGenesis().getUiManager().getLocalization();
	if (oFF.notNull(this.m_modelDimension) && this.m_modelDimension.isShowTechnical())
	{
		this.m_selectionList.addNewColumn().setTitle(localization.getText(oFF.CatalogDialogI18n.I18N_CD_KEY));
	}
	else
	{
		this.m_selectionList.addNewColumn().setTitle(localization.getText(oFF.CatalogDialogI18n.I18N_CD_TEXT));
	}
	if (hasVersionName)
	{
		this.m_selectionList.addNewColumn().setTitle(localization.getText(oFF.CatalogDialogI18n.I18N_CD_VERSION));
	}
	if (hasVersionDescription)
	{
		this.m_selectionList.addNewColumn().setTitle(oFF.XStringUtils.concatenate4(localization.getText(oFF.CatalogDialogI18n.I18N_CD_OBJECT_VERSION), " (", localization.getText(oFF.CatalogDialogI18n.I18N_CD_TEXT), ")"));
	}
	if (hasObjectVersion)
	{
		this.m_selectionList.addNewColumn().setTitle(localization.getText(oFF.CatalogDialogI18n.I18N_CD_OBJECT_VERSION));
	}
	if (hasDate)
	{
		this.m_selectionList.addNewColumn();
		this.m_selectionList.addNewColumn();
	}
	for (i = 0; i < catalogItems.size(); i++)
	{
		catItem = catalogItems.get(i);
		this.addItemToSelectionList(catItem, hasVersionName, hasVersionDisplayKey, hasVersionDescription, hasObjectVersion, hasDate);
	}
};
oFF.HierarchyCatalogController.prototype.addItemToSelectionList = function(catalogItem, hasVersionName, hasVersionDisplayKey, hasVersionDescription, hasObjectVersion, hasDate)
{
	var row = this.m_selectionList.addNewRow().setName(catalogItem.getHierarchyName()).setCustomObject(catalogItem);
	if (oFF.notNull(this.m_modelDimension) && (this.m_modelDimension.isShowTechnical() || oFF.XStringUtils.isNullOrEmpty(catalogItem.getHierarchyDescription())))
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getHierarchyName()).setWidth(oFF.UiCssLength.create("20%"));
	}
	else
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getHierarchyDescription()).setWidth(oFF.UiCssLength.create("30%"));
	}
	if (oFF.notNull(this.m_modelDimension) && (this.m_modelDimension.isShowTechnical() || !hasVersionDescription) && hasVersionName)
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getVersionName()).setWidth(oFF.UiCssLength.create("10%"));
	}
	else if (hasVersionDescription)
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getVersionDescription()).setWidth(oFF.UiCssLength.create("10%"));
	}
	if (hasObjectVersion)
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getObjectVersion()).setWidth(oFF.UiCssLength.create("10%"));
	}
	if (hasDate)
	{
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getDateFrom() === null ? "" : catalogItem.getDateFrom().toIsoFormat()).setWidth(oFF.UiCssLength.create("10%"));
		row.addNewCell().setCustomObject(catalogItem).setText(catalogItem.getDateTo() === null ? "" : catalogItem.getDateTo().toIsoFormat()).setWidth(oFF.UiCssLength.create("10%"));
	}
};
oFF.HierarchyCatalogController.prototype.isSearchActive = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_searchInput.getText()) || oFF.XStringUtils.isNotNullAndNotEmpty(this.m_versionSearchInput.getText()) || oFF.XStringUtils.isNotNullAndNotEmpty(this.m_objectVersionSearchInput.getText()) || oFF.XStringUtils.isNotNullAndNotEmpty(this.m_dateSearchInput.getValue());
};
oFF.HierarchyCatalogController.prototype.onSelect = function(event)
{
	this.m_selectedItem = event.getControl().getSelectedItem().getCustomObject();
};
oFF.HierarchyCatalogController.prototype.onChange = function(event)
{
	this.onSearch(event);
};
oFF.HierarchyCatalogController.prototype.onLiveChange = function(event)
{
	this.onSearch(event);
};
oFF.HierarchyCatalogController.prototype.onSearch = function(event)
{
	this.m_selectionList.setBusy(true);
	this.m_catalogProcess.processSearch(this.m_searchInput.getText(), this.m_versionSearchInput.getText(), this.m_objectVersionSearchInput.getText(), oFF.XDate.createDateSafe(this.m_dateSearchInput.getValue()), this, null);
};

oFF.CbController = function() {};
oFF.CbController.prototype = new oFF.XObject();
oFF.CbController.prototype._ff_c = "CbController";

oFF.CbController.IDLE = 0;
oFF.CbController.BUSY = 1;
oFF.CbController.create = function(context)
{
	var obj = new oFF.CbController();
	obj.setupController(context);
	return obj;
};
oFF.CbController.prototype.m_context = null;
oFF.CbController.prototype.m_layout = null;
oFF.CbController.prototype.m_display = null;
oFF.CbController.prototype.m_okBtn = null;
oFF.CbController.prototype.m_cancelBtn = null;
oFF.CbController.prototype.m_listener = null;
oFF.CbController.prototype.m_originalText = null;
oFF.CbController.prototype.setupController = function(context)
{
	this.m_context = context;
	this.m_layout = oFF.CbLayout.create();
};
oFF.CbController.prototype.openClipboardDialog = function(infoText, text, listener)
{
	this.setupClipboardDialog(infoText, text, listener, false);
};
oFF.CbController.prototype.openLazyLoadClipboardDialog = function(infoText, listener)
{
	this.setupClipboardDialog(infoText, null, listener, true);
};
oFF.CbController.prototype.setupClipboardDialog = function(infoText, text, listener, initialDataLazyLoad)
{
	this.m_listener = listener;
	if (oFF.isNull(this.m_display))
	{
		this.m_display = this.m_context.getDisplayFactory().getInstance();
		this.m_display.setName("ClipboardDialog");
		this.m_display.registerOnAfterOpen(this);
		var i18n = this.m_context.getLocalization();
		this.m_display.setTitle(i18n.getText(oFF.ClipboardDialogI18n.I18N_CB_CLIPBOARD));
		this.m_display.setWidth(oFF.UiCssLength.createExt(509, oFF.UiCssSizeUnit.PIXEL));
		this.m_okBtn = this.m_display.addNewButton();
		this.m_okBtn.setText("Ok");
		this.m_okBtn.setButtonType(oFF.UiButtonType.PRIMARY);
		this.m_okBtn.setName("ClipboardOkBtn");
		this.m_okBtn.registerOnPress(this);
		this.m_cancelBtn = this.m_display.addNewButton();
		this.m_cancelBtn.setText("Cancel");
		this.m_cancelBtn.setName("ClipboardCancelBtn");
		this.m_cancelBtn.registerOnPress(this);
		this.m_layout.buildOlapDialogUi(this.m_display.getGenesis());
		this.m_layout.getTextArea().registerOnPaste(this);
	}
	if (oFF.XStringUtils.isNullOrEmpty(infoText))
	{
		this.m_layout.getInfoSection().setVisible(false);
	}
	else
	{
		this.m_layout.getInfoSection().setVisible(true);
		this.m_layout.getInfoLabel().setText(infoText);
	}
	this.setText(text);
	this.setState(initialDataLazyLoad ? oFF.CbController.BUSY : oFF.CbController.IDLE);
	this.m_display.open();
};
oFF.CbController.prototype.setText = function(text)
{
	this.m_originalText = text;
	this.m_layout.getTextArea().setText(text);
	this.setState(oFF.CbController.IDLE);
};
oFF.CbController.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_okBtn)
	{
		this.setState(oFF.CbController.BUSY);
		var text = this.m_layout.getTextArea().getText();
		var hasChanged = !oFF.XString.isEqual(this.m_originalText, text);
		this.m_listener.onClipboardOk(hasChanged, text);
	}
	else if (control === this.m_cancelBtn)
	{
		this.m_listener.onClipboardCancel();
	}
};
oFF.CbController.prototype.close = function()
{
	this.m_display.close();
};
oFF.CbController.prototype.setIdle = function()
{
	this.setState(oFF.CbController.IDLE);
};
oFF.CbController.prototype.setBusy = function()
{
	this.setState(oFF.CbController.BUSY);
};
oFF.CbController.prototype.setState = function(state)
{
	switch (state)
	{
		case oFF.CbController.IDLE:
			this.m_layout.getTextArea().setBusy(false);
			this.m_okBtn.setEnabled(true);
			break;

		case oFF.CbController.BUSY:
			this.m_layout.getTextArea().setBusy(true);
			this.m_okBtn.setEnabled(false);
			break;
	}
};
oFF.CbController.prototype.onPaste = function(event)
{
	var textToParse = this.m_layout.getTextArea().getText();
	var parsedText = oFF.DialogGridParser.convertFromExcel(textToParse);
	this.m_layout.getTextArea().setText(parsedText);
};
oFF.CbController.prototype.onAfterOpen = function(event)
{
	this.m_layout.getTextArea().focus();
};
oFF.CbController.prototype.releaseObject = function()
{
	this.m_listener = null;
	this.m_originalText = null;
	this.m_okBtn = oFF.XObjectExt.release(this.m_okBtn);
	this.m_cancelBtn = oFF.XObjectExt.release(this.m_cancelBtn);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_context = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.ClipboardDialogI18n = function() {};
oFF.ClipboardDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.ClipboardDialogI18n.prototype._ff_c = "ClipboardDialogI18n";

oFF.ClipboardDialogI18n.I18N_CB_CLIPBOARD = "I18N_CB_CLIPBOARD";
oFF.ClipboardDialogI18n.createClipboardDialogI18n = function()
{
	return new oFF.ClipboardDialogI18n();
};
oFF.ClipboardDialogI18n.staticSetupCbd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.ClipboardDialogI18n.I18N_CB_CLIPBOARD, "Clipboard");
};

oFF.CmtController = function() {};
oFF.CmtController.prototype = new oFF.XObject();
oFF.CmtController.prototype._ff_c = "CmtController";

oFF.CmtController.IDLE = 0;
oFF.CmtController.BUSY = 1;
oFF.CmtController.create = function(context)
{
	var obj = new oFF.CmtController();
	obj.setupController(context);
	return obj;
};
oFF.CmtController.prototype.m_context = null;
oFF.CmtController.prototype.m_layout = null;
oFF.CmtController.prototype.m_display = null;
oFF.CmtController.prototype.m_okBtn = null;
oFF.CmtController.prototype.m_cancelBtn = null;
oFF.CmtController.prototype.m_listener = null;
oFF.CmtController.prototype.m_originalText = null;
oFF.CmtController.prototype.setupController = function(context)
{
	this.m_context = context;
	this.m_layout = oFF.CmtLayout.create();
};
oFF.CmtController.prototype.openCommentingDialog = function(infoText, text, readOnly, listener)
{
	this.setUpCommentingDialog(infoText, text, readOnly, listener);
};
oFF.CmtController.prototype.setUpCommentingDialog = function(infoText, text, readOnly, listener)
{
	this.m_listener = listener;
	if (oFF.isNull(this.m_display))
	{
		this.m_display = this.m_context.getDisplayFactory().getInstance();
		this.m_display.setName("CommentingDialog");
		this.m_display.registerOnAfterOpen(this);
		this.m_display.setTitle("Comment");
		this.m_display.setWidth(oFF.UiCssLength.createExt(509, oFF.UiCssSizeUnit.PIXEL));
		this.m_okBtn = this.m_display.addNewButton();
		this.m_okBtn.setText("Ok");
		this.m_okBtn.setButtonType(oFF.UiButtonType.PRIMARY);
		this.m_okBtn.setName("CommentingOkBtn");
		this.m_okBtn.registerOnPress(this);
		this.m_cancelBtn = this.m_display.addNewButton();
		this.m_cancelBtn.setText("Cancel");
		this.m_cancelBtn.setName("CommentingCancelBtn");
		this.m_cancelBtn.registerOnPress(this);
		this.m_layout.buildOlapDialogUi(this.m_display.getGenesis());
		if (oFF.XStringUtils.isNullOrEmpty(infoText))
		{
			this.m_layout.getInfoSection().setVisible(false);
		}
		else
		{
			this.m_layout.getInfoSection().setVisible(true);
			this.m_layout.getInfoLabel().setText(infoText);
		}
		this.setText(text);
		this.m_layout.getTextArea().setEnabled(!readOnly);
		this.setState(oFF.CmtController.IDLE);
		this.m_display.open();
	}
};
oFF.CmtController.prototype.setText = function(text)
{
	this.m_originalText = text;
	this.m_layout.getTextArea().setText(text);
	this.setState(oFF.CmtController.IDLE);
};
oFF.CmtController.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_okBtn)
	{
		this.setState(oFF.CmtController.BUSY);
		var text = this.m_layout.getTextArea().getText();
		var hasChanged = !oFF.XString.isEqual(this.m_originalText, text);
		this.m_listener.onCommentingOk(hasChanged, text);
	}
	else if (control === this.m_cancelBtn)
	{
		this.m_listener.onCommentingCancel();
	}
};
oFF.CmtController.prototype.close = function()
{
	this.m_display.close();
};
oFF.CmtController.prototype.setIdle = function()
{
	this.setState(oFF.CmtController.IDLE);
};
oFF.CmtController.prototype.setBusy = function()
{
	this.setState(oFF.CmtController.BUSY);
};
oFF.CmtController.prototype.setState = function(state)
{
	switch (state)
	{
		case oFF.CmtController.IDLE:
			this.m_layout.getTextArea().setBusy(false);
			this.m_okBtn.setEnabled(true);
			break;

		case oFF.CmtController.BUSY:
			this.m_layout.getTextArea().setBusy(true);
			this.m_okBtn.setEnabled(false);
			break;
	}
};
oFF.CmtController.prototype.onAfterOpen = function(event)
{
	this.m_layout.getTextArea().focus();
};
oFF.CmtController.prototype.releaseObject = function()
{
	this.m_listener = null;
	this.m_originalText = null;
	this.m_okBtn = oFF.XObjectExt.release(this.m_okBtn);
	this.m_cancelBtn = oFF.XObjectExt.release(this.m_cancelBtn);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_context = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OuEntryPointCondition = function() {};
oFF.OuEntryPointCondition.prototype = new oFF.OuEntryPoint();
oFF.OuEntryPointCondition.prototype._ff_c = "OuEntryPointCondition";

oFF.OuEntryPointCondition.sCreateConditionDialogEntryPoint = function(oApplication)
{
	var loEntryPoint = oFF.OuEntryPoint.sCreateDialogEntryPoint(new oFF.OuEntryPointCondition(), oApplication, new oFF.OuDialogCondition());
	return loEntryPoint;
};
oFF.OuEntryPointCondition.sCreateConditionViewEntryPoint = function(oEnvironmentProvider)
{
	var loEntryPoint = oFF.OuEntryPoint.sCreateViewEntryPoint(new oFF.OuEntryPointCondition(), oEnvironmentProvider, new oFF.OuViewCondition());
	return loEntryPoint;
};
oFF.OuEntryPointCondition.prototype.openCondition = function(oQueryModel, conditionName)
{
	var loProperties = oFF.OuProperties.sCreateProperties();
	loProperties.setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, oQueryModel);
	loProperties.setProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME, oFF.XStringValue.create(conditionName));
	if (this.getEntryPointType() === oFF.COuEntryPointType.DIALOG)
	{
		oFF.OuEntryPoint.prototype.open.call( this , loProperties);
	}
	else if (this.getEntryPointType() === oFF.COuEntryPointType.VIEW)
	{
		oFF.OuEntryPoint.prototype.open.call( this , loProperties);
	}
};
oFF.OuEntryPointCondition.prototype.releaseObject = function()
{
	oFF.OuEntryPoint.prototype.releaseObject.call( this );
};

oFF.OuEntryPointConditions = function() {};
oFF.OuEntryPointConditions.prototype = new oFF.OuEntryPoint();
oFF.OuEntryPointConditions.prototype._ff_c = "OuEntryPointConditions";

oFF.OuEntryPointConditions.sCreateConditionsDialogEntryPoint = function(oApplication)
{
	var loEntryPoint = oFF.OuEntryPoint.sCreateDialogEntryPoint(new oFF.OuEntryPointConditions(), oApplication, new oFF.OuDialogConditions());
	return loEntryPoint;
};
oFF.OuEntryPointConditions.sCreateConditionsViewEntryPoint = function(oEnvironmentProvider)
{
	var loEntryPoint = oFF.OuEntryPoint.sCreateViewEntryPoint(new oFF.OuEntryPointConditions(), oEnvironmentProvider, new oFF.OuViewConditions());
	return loEntryPoint;
};
oFF.OuEntryPointConditions.prototype.openConditions = function(oQueryModel)
{
	var loProperties = oFF.OuProperties.sCreateProperties();
	loProperties.setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, oQueryModel);
	if (this.getEntryPointType() === oFF.COuEntryPointType.DIALOG)
	{
		oFF.OuEntryPoint.prototype.open.call( this , loProperties);
	}
	else if (this.getEntryPointType() === oFF.COuEntryPointType.VIEW)
	{
		oFF.OuEntryPoint.prototype.open.call( this , loProperties);
	}
};
oFF.OuEntryPointConditions.prototype.releaseObject = function()
{
	oFF.OuEntryPoint.prototype.releaseObject.call( this );
};

oFF.DataCellController = function() {};
oFF.DataCellController.prototype = new oFF.XObject();
oFF.DataCellController.prototype._ff_c = "DataCellController";

oFF.DataCellController.create = function(context)
{
	var obj = new oFF.DataCellController();
	obj.setupController(context);
	return obj;
};
oFF.DataCellController.prototype.m_context = null;
oFF.DataCellController.prototype.m_layout = null;
oFF.DataCellController.prototype.m_display = null;
oFF.DataCellController.prototype.m_okBtn = null;
oFF.DataCellController.prototype.m_closeBtn = null;
oFF.DataCellController.prototype.m_queryManager = null;
oFF.DataCellController.prototype.m_measure1 = null;
oFF.DataCellController.prototype.m_measure2 = null;
oFF.DataCellController.prototype.m_listener = null;
oFF.DataCellController.prototype.m_propsForSecondStructure = false;
oFF.DataCellController.prototype.m_model = null;
oFF.DataCellController.prototype.setupController = function(context)
{
	this.m_context = context;
	this.m_model = oFF.DataCellModel.create();
	this.m_layout = oFF.DataCellLayout.create();
};
oFF.DataCellController.prototype.getQueryManager = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
};
oFF.DataCellController.prototype.getQueryModel = function()
{
	return this.getQueryManager().getQueryModel();
};
oFF.DataCellController.prototype.getCmds = function()
{
	return this.getQueryManager().getConvenienceCommands();
};
oFF.DataCellController.prototype.openDataCellPropertiesDialog = function(listener, queryManager, measure1, measure2, propsForSecondStructure)
{
	if (propsForSecondStructure && oFF.XStringUtils.isNullOrEmpty(measure2))
	{
		throw oFF.XException.createRuntimeException("measure2 needed when properties for 2nd Structure are to be displayed.");
	}
	this.m_listener = listener;
	this.m_queryManager = oFF.XWeakReferenceUtil.getWeakRef(queryManager);
	this.m_measure1 = measure1;
	this.m_measure2 = measure2;
	this.m_propsForSecondStructure = propsForSecondStructure;
	this.setupDisplay();
	this.populateModel();
	this.m_layout.setModel(this.m_model);
	this.setupDataCellDialog();
};
oFF.DataCellController.prototype.setupDataCellDialog = function()
{
	this.m_okBtn = this.m_display.addNewButton();
	this.m_okBtn.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_OK)).setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okBtn.setName("OkBtn");
	this.m_okBtn.registerOnPress(this);
	this.m_closeBtn = this.m_display.addNewButton();
	this.m_closeBtn.setText(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_CLOSE));
	this.m_closeBtn.setName("CloseBtn");
	this.m_closeBtn.registerOnPress(this);
	this.m_layout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_display.open();
};
oFF.DataCellController.prototype.setupDisplay = function()
{
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("DataCellProperties");
	this.m_display.setTitle(oFF.XStringUtils.concatenate3(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SETTINGS_OF), " ", this.getCmds().getMeasure(this.m_measure1).getText()));
	this.m_display.setWidth(oFF.UiCssLength.createExt(500, oFF.UiCssSizeUnit.PIXEL));
};
oFF.DataCellController.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_okBtn)
	{
		if (this.changed())
		{
			this.m_listener.onDataCellOk();
		}
	}
	this.m_listener.onDataCellClose();
};
oFF.DataCellController.prototype.close = function()
{
	this.m_display.close();
};
oFF.DataCellController.prototype.releaseObject = function()
{
	this.m_listener = null;
	this.m_okBtn = oFF.XObjectExt.release(this.m_okBtn);
	this.m_closeBtn = oFF.XObjectExt.release(this.m_closeBtn);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_context = null;
	this.m_queryManager = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.DataCellController.prototype.changed = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var measure2 = null;
	if (oFF.notNull(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		measure2 = structureDimension.getDimensionMember(this.m_measure2);
	}
	var resetEverything = false;
	var decimalChanged = false;
	var scalingChanged = false;
	var disaggregationModeChanged = false;
	var measureToUpdate = oFF.isNull(this.m_measure2) ? measure1 : oFF.notNull(measure2) ? measure2 : null;
	if (oFF.notNull(measureToUpdate))
	{
		decimalChanged = this.didValueChange(this.m_model.getDecimal(), this.m_layout.getSelectedDecimal());
		scalingChanged = this.didValueChange(this.m_model.getScaling(), this.m_layout.getSelectedScaling());
		disaggregationModeChanged = this.m_model.getDisaggregationModeOnModel() !== this.m_layout.getSelectedDisaggregationMode();
		if (decimalChanged)
		{
			if (this.m_model.getDecimalDefaultAsMetadata())
			{
				measureToUpdate.resetToDefaultNumericScale();
			}
			else
			{
				measureToUpdate.setNumericScale(oFF.XInteger.convertFromString(this.m_layout.getSelectedDecimal()));
			}
		}
		if (scalingChanged)
		{
			if (this.m_model.getScalingDefaultAsMetadata())
			{
				measureToUpdate.resetToDefaultNumericShift();
			}
			else
			{
				measureToUpdate.setNumericShift(oFF.XInteger.convertFromString(this.m_layout.getSelectedScaling()));
			}
		}
		if (disaggregationModeChanged)
		{
			var cell = this.getCellBasedOnMeasures();
			if (this.m_model.getDisaggregationModeDefaultAsMetadata())
			{
				cell.resetToDefaultDisaggregationMode();
			}
			else
			{
				cell.setDisaggregationMode(this.m_layout.getSelectedDisaggregationMode());
			}
		}
	}
	return resetEverything || decimalChanged || scalingChanged || disaggregationModeChanged;
};
oFF.DataCellController.prototype.didValueChange = function(oldValue, newValue)
{
	var valueChanged = false;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(newValue))
	{
		var newValueAsInt = oFF.XInteger.convertFromString(newValue);
		if (oFF.notNull(oldValue))
		{
			var oldValueAsInt = oFF.XInteger.convertFromString(oldValue);
			if (newValueAsInt !== oldValueAsInt)
			{
				valueChanged = true;
			}
		}
		else
		{
			valueChanged = true;
		}
	}
	return valueChanged;
};
oFF.DataCellController.prototype.populateModel = function()
{
	var decimalSelections = this.getDecimalSelections();
	var scalingSelections = this.getScalingSelections();
	var resultCalculationSelections = this.getResultCalculationSelections();
	var singleValueCalculationSelections = this.getSingleValueCalculationSelections();
	var disaggregationModeSelections = this.getDisaggregationModeSelections();
	var decimalOnModel = this.determineDecimal();
	var scalingOnModel = this.determineScaling();
	var valueType = this.determineValueType();
	var disaggregationMode = this.determineDisaggregationMode();
	var resultCalculationOnModel = this.determineResultCalculation();
	var singleValueCalculationOnModel = this.determineSingleValueCalculation();
	this.m_model.setModelValues(decimalSelections, scalingSelections, resultCalculationSelections, singleValueCalculationSelections, decimalOnModel, scalingOnModel, resultCalculationOnModel, singleValueCalculationOnModel, valueType, disaggregationModeSelections, disaggregationMode);
	var decimalDefaultValue = this.getDecimalDefaultValue();
	this.m_model.setDecimalDefaultValue(decimalDefaultValue);
	var decimalDefaultAsMetadata = this.decimalDefaultAsMetadata();
	this.m_model.setDecimalDefaultAsMetadata(decimalDefaultAsMetadata);
	var scalingFactorDefaultValue = this.getScalingDefaultValue();
	this.m_model.setScalingDefaultValue(scalingFactorDefaultValue);
	var scalingFactorDefaultAsMetadata = this.scalingDefaultAsMetadata();
	this.m_model.setScalingDefaultAsMetadata(scalingFactorDefaultAsMetadata);
	var disaggregationModeDefaultValue = this.getDisaggregationModeDefaultValue();
	this.m_model.setDisaggregationModeDefaultvalue(disaggregationModeDefaultValue);
	var isDisaggregationModeDefaultAsMetadata = this.isDisaggregationModeDefaultAsMetadata();
	this.m_model.setDisaggregationModeDefaultAsMetadata(isDisaggregationModeDefaultAsMetadata);
};
oFF.DataCellController.prototype.getDecimalSelections = function()
{
	var decimalSelections = oFF.XList.create();
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_UNDEFINED), "-1"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_0), "0"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_1), "1"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_2), "2"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_3), "3"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_4), "4"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_5), "5"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_6), "6"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_7), "7"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_8), "8"));
	decimalSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_9), "9"));
	return decimalSelections;
};
oFF.DataCellController.prototype.getScalingSelections = function()
{
	var scalingSelections = oFF.XList.create();
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1), "0"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10), "-1"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100), "-2"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000), "-3"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000), "-4"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000), "-5"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000), "-6"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000000), "-7"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000000), "-8"));
	scalingSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000000), "-9"));
	return scalingSelections;
};
oFF.DataCellController.prototype.getResultCalculationSelections = function()
{
	var resultCalculationSelections = oFF.XList.create();
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_UNDEFINED), "00"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_SUM), "01"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_MAX), "02"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_MIN), "03"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES), "04"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES_NOT_ZERO), "05"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES), "06"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES_NOT_ZERO), "07"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_SD), "08"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_VARIANCE), "09"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_FV), "11"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_LV), "12"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_SUM_ROUNDED_VALUES), "13"));
	resultCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RC_SUPPRESS_RESULT), "14"));
	return resultCalculationSelections;
};
oFF.DataCellController.prototype.getSingleValueCalculationSelections = function()
{
	var singleValueCalculationSelections = oFF.XList.create();
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_UNDEFINED), " "));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_SUM), "1"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_MAX), "2"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_MIN), "3"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES), "4"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES_NOT_ZERO), "5"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES), "6"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES_NOT_ZERO), "7"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_SUPPRESS_RESULT), "0"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST_OLYMPIC), "O"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST), "S"));
	singleValueCalculationSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SVC_NORMALIZATION_OF_OVERALL_RESULT), "G"));
	return singleValueCalculationSelections;
};
oFF.DataCellController.prototype.getDisaggregationModeSelections = function()
{
	var disaggregationModeSelections = oFF.XList.create();
	disaggregationModeSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DM_NONE), "None"));
	disaggregationModeSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DM_ABS), "Absolute"));
	disaggregationModeSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DM_COPY), "Copy"));
	disaggregationModeSelections.add(oFF.XPairOfString.create(this.m_context.getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DM_DELTA), "Delta"));
	return disaggregationModeSelections;
};
oFF.DataCellController.prototype.determineDecimal = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var measure2 = null;
	var decimal1 = measure1.getNumericScale();
	var decimal2 = null;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		measure2 = structureDimension.getDimensionMember(this.m_measure2);
		decimal2 = measure2.getNumericScale();
	}
	var finalDecimal = null;
	if (oFF.isNull(measure2))
	{
		if (oFF.notNull(decimal1))
		{
			finalDecimal = decimal1.getStringRepresentation();
		}
	}
	else
	{
		if (oFF.notNull(decimal2))
		{
			finalDecimal = decimal2.getStringRepresentation();
		}
	}
	return finalDecimal;
};
oFF.DataCellController.prototype.determineScaling = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var measure2 = null;
	var scaling1 = measure1.getNumericShift();
	var scaling2 = null;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		measure2 = structureDimension.getDimensionMember(this.m_measure2);
		scaling2 = measure2.getNumericShift();
	}
	var finalScaling = null;
	if (oFF.isNull(measure2))
	{
		if (oFF.notNull(scaling1))
		{
			finalScaling = scaling1.getStringRepresentation();
		}
	}
	else
	{
		if (oFF.notNull(scaling2))
		{
			finalScaling = scaling2.getStringRepresentation();
		}
	}
	return finalScaling;
};
oFF.DataCellController.prototype.determineResultCalculation = function()
{
	var structureMember = null;
	if (!this.m_propsForSecondStructure && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure1))
	{
		structureMember = this.getCmds().getMeasure(this.m_measure1);
	}
	else if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		structureMember = structureDimension.getDimensionMember(this.m_measure2);
	}
	var resultCalculation = oFF.notNull(structureMember) ? structureMember.getResultCalculation() : null;
	return oFF.notNull(resultCalculation) ? resultCalculation.getName() : null;
};
oFF.DataCellController.prototype.determineSingleValueCalculation = function()
{
	var structureMember = null;
	if (!this.m_propsForSecondStructure && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure1))
	{
		structureMember = this.getCmds().getMeasure(this.m_measure1);
	}
	else if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		structureMember = structureDimension.getDimensionMember(this.m_measure2);
	}
	var singleValueCalculation = oFF.notNull(structureMember) ? structureMember.getSingleValueCalculation() : null;
	return oFF.notNull(singleValueCalculation) ? singleValueCalculation.getName() : null;
};
oFF.DataCellController.prototype.determineValueType = function()
{
	var cellOfInterest = this.getCellBasedOnMeasures();
	var baseValueType = null;
	if (oFF.notNull(cellOfInterest))
	{
		baseValueType = cellOfInterest.getBaseValueType();
	}
	return oFF.notNull(baseValueType) ? baseValueType.getName() : null;
};
oFF.DataCellController.prototype.determineDisaggregationMode = function()
{
	var cellOfInterest = this.getCellBasedOnMeasures();
	return oFF.notNull(cellOfInterest) ? cellOfInterest.getDisaggregationMode() : null;
};
oFF.DataCellController.prototype.getCellBasedOnMeasures = function()
{
	var measureMember1 = this.getCmds().getMeasure(this.m_measure1);
	var queryDataCells = measureMember1.getQueryDataCells();
	var cellOfInterest = null;
	if (oFF.XCollectionUtils.hasElements(queryDataCells))
	{
		var numberOfQDC = queryDataCells.size();
		if (numberOfQDC === 1 || oFF.XStringUtils.isNullOrEmpty(this.m_measure2))
		{
			cellOfInterest = queryDataCells.get(0);
		}
		else
		{
			var cell = null;
			for (var i = 0; i < numberOfQDC; i++)
			{
				cell = queryDataCells.get(i);
				if (oFF.XString.isEqual(cell.getReferenceStructureElement1().getName(), this.m_measure1) && oFF.XString.isEqual(cell.getReferenceStructureElement2().getName(), this.m_measure2))
				{
					cellOfInterest = cell;
					break;
				}
			}
		}
	}
	return cellOfInterest;
};
oFF.DataCellController.prototype.getDecimalDefaultValue = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var decimalDefaultValue1 = measure1.getDefaultNumericScale();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		var measure2 = structureDimension.getDimensionMember(this.m_measure2);
		var decimalDefaultValue2 = measure2.getDefaultNumericScale();
		return decimalDefaultValue2;
	}
	return decimalDefaultValue1;
};
oFF.DataCellController.prototype.decimalDefaultAsMetadata = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var decimalDefaultAsMetadata1 = measure1.isNumericScaleDefault();
	var decimalDefaultAsMetadata2 = true;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		var measure2 = structureDimension.getDimensionMember(this.m_measure2);
		decimalDefaultAsMetadata2 = measure2.isNumericScaleDefault();
	}
	return decimalDefaultAsMetadata1 && decimalDefaultAsMetadata2;
};
oFF.DataCellController.prototype.getScalingDefaultValue = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var scalingDefaultValue1 = measure1.getDefaultNumericShift();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		var measure2 = structureDimension.getDimensionMember(this.m_measure2);
		var scalingDefaultValue2 = measure2.getDefaultNumericShift();
		return scalingDefaultValue2;
	}
	return scalingDefaultValue1;
};
oFF.DataCellController.prototype.scalingDefaultAsMetadata = function()
{
	var measure1 = this.getCmds().getMeasure(this.m_measure1);
	var scalingDefaultAsMetadata1 = measure1.isNumericShiftDefault();
	var scalingDefaultAsMetadata2 = true;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_measure2))
	{
		var structureDimension = this.getQueryModel().getNonMeasureDimension();
		var measure2 = structureDimension.getDimensionMember(this.m_measure2);
		scalingDefaultAsMetadata2 = measure2.isNumericShiftDefault();
	}
	return scalingDefaultAsMetadata1 && scalingDefaultAsMetadata2;
};
oFF.DataCellController.prototype.isDisaggregationModeDefaultAsMetadata = function()
{
	var cellOfInterest = this.getCellBasedOnMeasures();
	return oFF.notNull(cellOfInterest) ? cellOfInterest.isDisaggregationModeDefault() : true;
};
oFF.DataCellController.prototype.getDisaggregationModeDefaultValue = function()
{
	var cellOfInterest = this.getCellBasedOnMeasures();
	return oFF.notNull(cellOfInterest) ? cellOfInterest.getDefaultDisaggregationMode() : null;
};

oFF.DataCellDialogI18n = function() {};
oFF.DataCellDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.DataCellDialogI18n.prototype._ff_c = "DataCellDialogI18n";

oFF.DataCellDialogI18n.I18N_DCD_PROPERTIES = "I18N_DCD_PROPERTIES";
oFF.DataCellDialogI18n.I18N_DCD_NUMBER_FORMAT = "I18N_DCD_NUMBER_FORMAT";
oFF.DataCellDialogI18n.I18N_DCD_SETTINGS_OF = "I18N_DCD_SETTINGS_OF";
oFF.DataCellDialogI18n.I18N_DCD_CLOSE = "I18N_DCD_CLOSE";
oFF.DataCellDialogI18n.I18N_DCD_VALUETYPE = "I18N_DCD_VALUETYPE";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL = "I18N_DCD_DECIMAL";
oFF.DataCellDialogI18n.I18N_DCD_SCALING = "I18N_DCD_SCALING";
oFF.DataCellDialogI18n.I18N_DCD_CALCULATIONS = "I18N_DCD_CALCULATIONS";
oFF.DataCellDialogI18n.I18N_DCD_RESULT_CALCULATION = "I18N_DCD_RESULT_CALCULATION";
oFF.DataCellDialogI18n.I18N_DCD_SINGLE_VALUE_CALCULATION = "I18N_DCD_SINGLE_VALUE_CALCULATION";
oFF.DataCellDialogI18n.I18N_DCD_DISAGGREGATION_MODE = "I18N_DCD_DISAGGREGATION_MODE";
oFF.DataCellDialogI18n.I18N_DCD_RESET_ALL = "I18N_DCD_RESET_ALL";
oFF.DataCellDialogI18n.I18N_DCD_DEFAULT_TO_METATA = "I18N_DCD_DEFAULT_TO_METATA";
oFF.DataCellDialogI18n.I18N_DCD_UNDEFINED = "I18N_DCD_UNDEFINED";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_0 = "I18N_DCD_DECIMAL_0";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_1 = "I18N_DCD_DECIMAL_1";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_2 = "I18N_DCD_DECIMAL_2";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_3 = "I18N_DCD_DECIMAL_3";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_4 = "I18N_DCD_DECIMAL_4";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_5 = "I18N_DCD_DECIMAL_5";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_6 = "I18N_DCD_DECIMAL_6";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_7 = "I18N_DCD_DECIMAL_7";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_8 = "I18N_DCD_DECIMAL_8";
oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_9 = "I18N_DCD_DECIMAL_9";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1 = "I18N_DCD_SCALING_IN_1";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10 = "I18N_DCD_SCALING_IN_10";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100 = "I18N_DCD_SCALING_IN_100";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000 = "I18N_DCD_SCALING_IN_1000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000 = "I18N_DCD_SCALING_IN_10000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000 = "I18N_DCD_SCALING_IN_100000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000 = "I18N_DCD_SCALING_IN_1000000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000000 = "I18N_DCD_SCALING_IN_10000000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000000 = "I18N_DCD_SCALING_IN_100000000";
oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000000 = "I18N_DCD_SCALING_IN_1000000000";
oFF.DataCellDialogI18n.I18N_DCD_RC_SUM = "I18N_DCD_RC_SUM";
oFF.DataCellDialogI18n.I18N_DCD_RC_MAX = "I18N_DCD_RC_MAX";
oFF.DataCellDialogI18n.I18N_DCD_RC_MIN = "I18N_DCD_RC_MIN";
oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES = "I18N_DCD_RC_COUNT_ALL_VALUES";
oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES_NOT_ZERO = "I18N_DCD_RC_COUNT_ALL_VALUES_NOT_ZERO ";
oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES = "I18N_DCD_RC_AVG_ALL_VALUES";
oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES_NOT_ZERO = "I18N_DCD_RC_AVG_ALL_VALUES_NOT_ZERO";
oFF.DataCellDialogI18n.I18N_DCD_RC_SD = "I18N_DCD_RC_SD";
oFF.DataCellDialogI18n.I18N_DCD_RC_VARIANCE = "I18N_DCD_RC_VARIANCE";
oFF.DataCellDialogI18n.I18N_DCD_RC_FV = "I18N_DCD_RC_FV";
oFF.DataCellDialogI18n.I18N_DCD_RC_LV = "I18N_DCD_RC_LV";
oFF.DataCellDialogI18n.I18N_DCD_RC_SUM_ROUNDED_VALUES = "I18N_DCD_RC_SUM_ROUNDED_VALUES";
oFF.DataCellDialogI18n.I18N_DCD_RC_SUPPRESS_RESULT = "I18N_DCD_RC_SUPPRESS_RESULT";
oFF.DataCellDialogI18n.I18N_DCD_SVC_SUM = "I18N_DCD_SVC_SUM";
oFF.DataCellDialogI18n.I18N_DCD_SVC_MAX = "I18N_DCD_SVC_MAX";
oFF.DataCellDialogI18n.I18N_DCD_SVC_MIN = "I18N_DCD_SVC_MIN";
oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES = "I18N_DCD_SVC_COUNT_ALL_VALUES";
oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES_NOT_ZERO = "I18N_DCD_SVC_COUNT_ALL_VALUES_NOT_ZERO ";
oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES = "I18N_DCD_SVC_AVG_ALL_VALUES";
oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES_NOT_ZERO = "I18N_DCD_SVC_AVG_ALL_VALUES_NOT_ZERO";
oFF.DataCellDialogI18n.I18N_DCD_SVC_SUPPRESS_RESULT = "I18N_DCD_SVC_SUPPRESS_RESULT";
oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST_OLYMPIC = "I18N_DCD_SVC_RANKEDLIST_OLYMPIC";
oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST = "I18N_DCD_SVC_RANKEDLIST";
oFF.DataCellDialogI18n.I18N_DCD_SVC_NORMALIZATION_OF_OVERALL_RESULT = "I18N_DCD_SVC_NORMALIZATION_OF_OVERALL_RESULT";
oFF.DataCellDialogI18n.I18N_DCD_DM_NONE = "I18N_DCD_DM_NONE";
oFF.DataCellDialogI18n.I18N_DCD_DM_ABS = "I18N_DCD_DM_ABS";
oFF.DataCellDialogI18n.I18N_DCD_DM_COPY = "I18N_DCD_DM_COPY";
oFF.DataCellDialogI18n.I18N_DCD_DM_DELTA = "I18N_DCD_DM_DELTA";
oFF.DataCellDialogI18n.createDataCellDialogI18n = function()
{
	return new oFF.DataCellDialogI18n();
};
oFF.DataCellDialogI18n.staticSetupDcd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_PROPERTIES, "Properties");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_NUMBER_FORMAT, "Number Format");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SETTINGS_OF, "Settings of");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_CLOSE, "Close");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_VALUETYPE, "Value Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL, "Number of Decimal Places");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING, "Scaling Factor");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_CALCULATIONS, "Calculations (Includes Displayed Data Only)");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RESULT_CALCULATION, "Calculate Results as");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SINGLE_VALUE_CALCULATION, "Calculate Single Value as");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DISAGGREGATION_MODE, "Disaggregation Mode");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RESET_ALL, "Reset All Settings");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DEFAULT_TO_METATA, "Default");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_UNDEFINED, "Undefined");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_0, "0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_1, "0.0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_2, "0.00");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_3, "0.000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_4, "0.0000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_5, "0.00000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_6, "0.000000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_7, "0.0000000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_8, "0.00000000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL_9, "0.000000000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1, "in 1");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10, "in 10");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100, "in 100");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000, "in 1,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000, "in 10,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000, "in 100,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000, "in 1,000,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_10000000, "in 10,000,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_100000000, "in 100,000,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SCALING_IN_1000000000, "in 1,000,000,000");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_SUM, "Summation");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_MAX, "Maximum");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_MIN, "Minimum");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES, "Counting all Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_COUNT_ALL_VALUES_NOT_ZERO, "Counting all Values <> 0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES, "Average of all Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_AVG_ALL_VALUES_NOT_ZERO, "Average of all Values <> 0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_SD, "Standard Deviation");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_VARIANCE, "Variance");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_FV, "First Value");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_LV, "Last Value");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_SUM_ROUNDED_VALUES, "Summation of Rounded Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_RC_SUPPRESS_RESULT, "Suppress Result");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_SUM, "Summation");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_MAX, "Maximum");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_MIN, "Minimum");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES, "Counting all Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_COUNT_ALL_VALUES_NOT_ZERO, "Counting all Values <> 0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES, "Average of all Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_AVG_ALL_VALUES_NOT_ZERO, "Average of all Values <> 0");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_SUPPRESS_RESULT, "Suppress Result");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST_OLYMPIC, "Ranked List (Olympic)");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_RANKEDLIST, "Ranked List");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_SVC_NORMALIZATION_OF_OVERALL_RESULT, "Normalization of Overall Result");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DM_NONE, "None");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DM_ABS, "Absolute");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DM_COPY, "Copy");
	oFF.OlapUiI18n.addDefaultValue(oFF.DataCellDialogI18n.I18N_DCD_DM_DELTA, "Delta");
};

oFF.DataCellLayout = function() {};
oFF.DataCellLayout.prototype = new oFF.XObject();
oFF.DataCellLayout.prototype._ff_c = "DataCellLayout";

oFF.DataCellLayout.create = function()
{
	return new oFF.DataCellLayout();
};
oFF.DataCellLayout.prototype.m_dataCellModel = null;
oFF.DataCellLayout.prototype.m_decimalDropdown = null;
oFF.DataCellLayout.prototype.m_decimalDefaultSwitch = null;
oFF.DataCellLayout.prototype.m_scalingDropdown = null;
oFF.DataCellLayout.prototype.m_scalingDefaultSwitch = null;
oFF.DataCellLayout.prototype.m_disaggregationModeDropdown = null;
oFF.DataCellLayout.prototype.m_disaggregationModeDefaultSwitch = null;
oFF.DataCellLayout.prototype.m_resultCalculationDropdown = null;
oFF.DataCellLayout.prototype.m_singleValueCalculationDropdown = null;
oFF.DataCellLayout.prototype.m_selectedDecimal = null;
oFF.DataCellLayout.prototype.m_selectedScaling = null;
oFF.DataCellLayout.prototype.m_selectedDisaggregationMode = null;
oFF.DataCellLayout.prototype.m_resetAllSwitch = null;
oFF.DataCellLayout.prototype.m_flexLayout = null;
oFF.DataCellLayout.prototype.setModel = function(dataCellModel)
{
	this.m_dataCellModel = dataCellModel;
};
oFF.DataCellLayout.prototype.buildOlapDialogUi = function(genesis)
{
	var root = this.buildTree(genesis);
	genesis.setRoot(root);
};
oFF.DataCellLayout.prototype.getLayout = function()
{
	return this.m_flexLayout;
};
oFF.DataCellLayout.prototype.getSelectedDecimal = function()
{
	return this.m_selectedDecimal;
};
oFF.DataCellLayout.prototype.getSelectedScaling = function()
{
	return this.m_selectedScaling;
};
oFF.DataCellLayout.prototype.getSelectedDisaggregationMode = function()
{
	return this.m_selectedDisaggregationMode;
};
oFF.DataCellLayout.prototype.buildTree = function(genesis)
{
	this.m_flexLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_flexLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_flexLayout.setWidth(oFF.UiCssLength.create("100%"));
	this.m_flexLayout.setHeight(oFF.UiCssLength.create("100%"));
	this.m_flexLayout.setName("QueryCellDialogMainViewContainer");
	var defaultToMetadata = this.createRow(genesis);
	defaultToMetadata.addItem(genesis.newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("75%")));
	this.spaceWidth(defaultToMetadata, genesis);
	var defaultLabel = genesis.newControl(oFF.UiType.LABEL);
	defaultLabel.setName(genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DEFAULT_TO_METATA));
	defaultLabel.setText(genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DEFAULT_TO_METATA));
	defaultLabel.setFontWeight(oFF.UiFontWeight.BOLD).setTextAlign(oFF.UiTextAlign.LEFT).setFontSize(oFF.UiCssLength.createExt(15, oFF.UiCssSizeUnit.PIXEL));
	defaultToMetadata.addItem(defaultLabel);
	this.m_flexLayout.addItem(defaultToMetadata);
	this.addBoldLabel(genesis, oFF.DataCellDialogI18n.I18N_DCD_NUMBER_FORMAT);
	var scalingLayout = this.createRow(genesis);
	scalingLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SCALING)));
	this.spaceWidth(scalingLayout, genesis);
	this.m_scalingDropdown = this.addDropDownFor(genesis, this.m_dataCellModel.getScalingSelections(), this.m_dataCellModel.getScaling(), "scalingDropDown");
	scalingLayout.addItem(this.m_scalingDropdown);
	this.m_scalingDefaultSwitch = this.addSwitch(genesis, "scalingDefaultAsMetadata", this.m_dataCellModel.getScalingDefaultAsMetadata());
	scalingLayout.addItem(this.m_scalingDefaultSwitch);
	this.m_flexLayout.addItem(scalingLayout);
	var decimalLayout = this.createRow(genesis);
	decimalLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DECIMAL)));
	this.spaceWidth(decimalLayout, genesis);
	this.m_decimalDropdown = this.addDropDownFor(genesis, this.m_dataCellModel.getDecimalSelections(), this.m_dataCellModel.getDecimal(), "decimalDropDown");
	decimalLayout.addItem(this.m_decimalDropdown);
	this.m_decimalDefaultSwitch = this.addSwitch(genesis, "decimalDefaultAsMetadata", this.m_dataCellModel.getDecimalDefaultAsMetadata());
	decimalLayout.addItem(this.m_decimalDefaultSwitch);
	this.m_flexLayout.addItem(decimalLayout);
	this.addBoldLabel(genesis, oFF.DataCellDialogI18n.I18N_DCD_PROPERTIES);
	var valueTypeLayout = this.createRow(genesis);
	valueTypeLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_VALUETYPE)));
	this.spaceWidth(valueTypeLayout, genesis);
	valueTypeLayout.addItem(this.createTextBox(genesis, this.m_dataCellModel.getValueType(), false));
	this.m_flexLayout.addItem(valueTypeLayout);
	var disaggregationModeLayout = this.createRow(genesis);
	disaggregationModeLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_DISAGGREGATION_MODE)));
	this.spaceWidth(disaggregationModeLayout, genesis);
	var disaggregationModelOnModel = this.m_dataCellModel.getDisaggregationModeOnModel() !== null ? this.m_dataCellModel.getDisaggregationModeOnModel().getName() : null;
	this.m_disaggregationModeDropdown = this.addDropDownFor(genesis, this.m_dataCellModel.getDisaggregationModeSelections(), disaggregationModelOnModel, "diaggregationModeDropDown");
	disaggregationModeLayout.addItem(this.m_disaggregationModeDropdown);
	this.m_disaggregationModeDefaultSwitch = this.addSwitch(genesis, "disaggregationModeDefaultAsMetadata", this.m_dataCellModel.getDisaggregationModeDefaultAsMetadata());
	disaggregationModeLayout.addItem(this.m_disaggregationModeDefaultSwitch);
	this.m_flexLayout.addItem(disaggregationModeLayout);
	this.addBoldLabel(genesis, oFF.DataCellDialogI18n.I18N_DCD_CALCULATIONS);
	var resultCalculationLayout = this.createRow(genesis);
	resultCalculationLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RESULT_CALCULATION)));
	this.spaceWidth(resultCalculationLayout, genesis);
	this.m_resultCalculationDropdown = this.addDropDownFor(genesis, this.m_dataCellModel.getResultCalculationSelections(), this.m_dataCellModel.getResultCalculationOnModel(), "resultCalculationDropDown");
	this.m_resultCalculationDropdown.setEnabled(false);
	resultCalculationLayout.addItem(this.m_resultCalculationDropdown);
	this.m_flexLayout.addItem(resultCalculationLayout);
	var singleValueCalculationLayout = this.createRow(genesis);
	singleValueCalculationLayout.addItem(this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_SINGLE_VALUE_CALCULATION)));
	this.spaceWidth(singleValueCalculationLayout, genesis);
	this.m_singleValueCalculationDropdown = this.addDropDownFor(genesis, this.m_dataCellModel.getSingleValueCalculationSelections(), this.m_dataCellModel.getSingleValueCalculationOnModel(), "singleValueCalculationLabel");
	this.m_singleValueCalculationDropdown.setEnabled(false);
	singleValueCalculationLayout.addItem(this.m_singleValueCalculationDropdown);
	this.m_flexLayout.addItem(singleValueCalculationLayout);
	this.spaceHeight(this.m_flexLayout, genesis);
	this.spaceHeight(this.m_flexLayout, genesis);
	var resetAllSettings = this.createRow(genesis);
	var createLabel = this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(oFF.DataCellDialogI18n.I18N_DCD_RESET_ALL));
	createLabel.setFontWeight(oFF.UiFontWeight.BOLD).setTextAlign(oFF.UiTextAlign.RIGHT).setFontSize(oFF.UiCssLength.createExt(15, oFF.UiCssSizeUnit.PIXEL));
	createLabel.setWidth(oFF.UiCssLength.create("75%"));
	resetAllSettings.addItem(createLabel);
	this.spaceWidth(resetAllSettings, genesis);
	var reset = this.m_dataCellModel.getDecimalDefaultAsMetadata() && this.m_dataCellModel.getScalingDefaultAsMetadata() && this.m_dataCellModel.getDisaggregationModeDefaultAsMetadata();
	this.m_resetAllSwitch = this.addSwitch(genesis, "resetAllAsMetadata", reset);
	resetAllSettings.addItem(this.m_resetAllSwitch);
	this.m_flexLayout.addItem(resetAllSettings);
	this.m_selectedDecimal = this.m_dataCellModel.getDecimal();
	this.m_selectedScaling = this.m_dataCellModel.getScaling();
	this.m_selectedDisaggregationMode = this.m_dataCellModel.getDisaggregationModeOnModel();
	return this.m_flexLayout;
};
oFF.DataCellLayout.prototype.addDropDownFor = function(genesis, singleValueCalculationSelections, singleValueCalculationOnModel, dropdownName)
{
	var dropdown = genesis.newControl(oFF.UiType.DROPDOWN);
	dropdown.setName(dropdownName);
	dropdown.addAllItems(this.createDropdownElements(dropdown, singleValueCalculationSelections));
	dropdown.setSelectedName(singleValueCalculationOnModel);
	dropdown.setWidth(oFF.UiCssLength.create("35%"));
	dropdown.registerOnSelect(this);
	return dropdown;
};
oFF.DataCellLayout.prototype.addSwitch = function(genesis, name, on)
{
	var defaultAsMetadata = genesis.newControl(oFF.UiType.SWITCH);
	defaultAsMetadata.setName(name);
	defaultAsMetadata.setOnText(" ").setOffText(" ");
	defaultAsMetadata.setOn(on);
	defaultAsMetadata.setAlignSelf(oFF.UiFlexAlignSelf.START);
	defaultAsMetadata.registerOnChange(this);
	return defaultAsMetadata;
};
oFF.DataCellLayout.prototype.createDropdownElements = function(dropdown, dropdownValues)
{
	var items = oFF.XList.create();
	var size = dropdownValues.size();
	for (var i = 0; i < size; i++)
	{
		var presentation = dropdownValues.get(i);
		var text = presentation.getFirstString();
		var name = presentation.getSecondString();
		var dropdownItem = dropdown.newItem();
		dropdownItem.setName(name);
		dropdownItem.setText(text);
		items.add(dropdownItem);
	}
	return items;
};
oFF.DataCellLayout.prototype.addBoldLabel = function(genesis, label)
{
	this.spaceHeight(this.m_flexLayout, genesis);
	var propertiesLabel = this.createLabel(genesis, genesis.getUiManager().getLocalization().getText(label));
	propertiesLabel.setFontWeight(oFF.UiFontWeight.BOLD).setTextAlign(oFF.UiTextAlign.LEFT).setFontSize(oFF.UiCssLength.createExt(15, oFF.UiCssSizeUnit.PIXEL));
	propertiesLabel.setWidth(oFF.UiCssLength.create("100%"));
	this.m_flexLayout.addItem(propertiesLabel);
};
oFF.DataCellLayout.prototype.spaceWidth = function(layout, genesis)
{
	layout.addItem(genesis.newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("10px")));
};
oFF.DataCellLayout.prototype.spaceHeight = function(layout, genesis)
{
	layout.addItem(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("10px")));
};
oFF.DataCellLayout.prototype.createRow = function(genesis)
{
	var rowLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	rowLayout.setDirection(oFF.UiFlexDirection.ROW);
	rowLayout.setWidth(oFF.UiCssLength.create("100%"));
	rowLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	return rowLayout;
};
oFF.DataCellLayout.prototype.createLabel = function(genesis, labelText)
{
	var label = genesis.newControl(oFF.UiType.LABEL);
	label.setName(labelText);
	label.setText(labelText);
	label.setWidth(oFF.UiCssLength.create("40%"));
	label.setTextAlign(oFF.UiTextAlign.RIGHT);
	return label;
};
oFF.DataCellLayout.prototype.createTextBox = function(genesis, boxText, editable)
{
	var textBox = genesis.newControl(oFF.UiType.INPUT);
	textBox.setName(boxText);
	textBox.setText(boxText);
	textBox.setEditable(editable);
	textBox.setWidth(oFF.UiCssLength.create("35%"));
	return textBox;
};
oFF.DataCellLayout.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, this.m_decimalDropdown.getName()))
	{
		if (!oFF.XString.isEqual(this.m_selectedDecimal, this.m_decimalDropdown.getSelectedItem().getName()))
		{
			this.m_decimalDefaultSwitch.setOn(false);
			this.m_dataCellModel.setDecimalDefaultAsMetadata(false);
			this.m_selectedDecimal = this.m_decimalDropdown.getSelectedItem().getName();
		}
	}
	else if (oFF.XString.isEqual(controlName, this.m_scalingDropdown.getName()))
	{
		if (!oFF.XString.isEqual(this.m_selectedScaling, this.m_scalingDropdown.getSelectedItem().getName()))
		{
			this.m_scalingDefaultSwitch.setOn(false);
			this.m_dataCellModel.setScalingDefaultAsMetadata(false);
			this.m_selectedScaling = this.m_scalingDropdown.getSelectedItem().getName();
		}
	}
	else if (oFF.XString.isEqual(controlName, this.m_disaggregationModeDropdown.getName()))
	{
		var selectedDisaggregationMode = oFF.DisaggregationMode.lookup(this.m_disaggregationModeDropdown.getSelectedItem().getName());
		if (this.m_selectedDisaggregationMode !== selectedDisaggregationMode)
		{
			this.m_disaggregationModeDefaultSwitch.setOn(false);
			this.m_dataCellModel.setDisaggregationModeDefaultAsMetadata(false);
			this.m_selectedDisaggregationMode = selectedDisaggregationMode;
		}
	}
	this.m_resetAllSwitch.setOn(this.m_decimalDefaultSwitch.isOn() && this.m_scalingDefaultSwitch.isOn() && this.m_disaggregationModeDefaultSwitch.isOn());
};
oFF.DataCellLayout.prototype.onChange = function(event)
{
	if (event.getControl().isOn())
	{
		var controlName = event.getControl().getName();
		switch (controlName)
		{
			case "decimalDefaultAsMetadata":
				this.resetDecimal();
				break;

			case "scalingDefaultAsMetadata":
				this.resetScaling();
				break;

			case "disaggregationModeDefaultAsMetadata":
				this.resetDisaggregationMode();
				break;

			default:
				this.resetScaling();
				this.resetDecimal();
				this.resetDisaggregationMode();
				this.m_decimalDefaultSwitch.setOn(true);
				this.m_scalingDefaultSwitch.setOn(true);
				this.m_disaggregationModeDefaultSwitch.setOn(true);
				break;
		}
	}
};
oFF.DataCellLayout.prototype.resetScaling = function()
{
	this.m_selectedScaling = this.m_dataCellModel.getScalingDefaultValue();
	this.m_scalingDropdown.setSelectedName(this.m_selectedScaling);
	this.m_dataCellModel.setScalingDefaultAsMetadata(true);
};
oFF.DataCellLayout.prototype.resetDecimal = function()
{
	this.m_selectedDecimal = this.m_dataCellModel.getDecimalDefaultValue();
	this.m_decimalDropdown.setSelectedName(this.m_selectedDecimal);
	this.m_dataCellModel.setDecimalDefaultAsMetadata(true);
};
oFF.DataCellLayout.prototype.resetDisaggregationMode = function()
{
	this.m_selectedDisaggregationMode = this.m_dataCellModel.getDisaggregationModeDefaultvalue();
	this.m_disaggregationModeDropdown.setSelectedName(this.m_selectedDisaggregationMode.getName());
	this.m_dataCellModel.setDisaggregationModeDefaultAsMetadata(true);
};

oFF.DimensionDialogI18n = function() {};
oFF.DimensionDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.DimensionDialogI18n.prototype._ff_c = "DimensionDialogI18n";

oFF.DimensionDialogI18n.I18N_DD_VALUE_HELP = "I18N_DD_VALUE_HELP";
oFF.DimensionDialogI18n.I18N_DD_OK = "I18N_DD_OK";
oFF.DimensionDialogI18n.I18N_DD_CANCEL = "I18N_DD_CANCEL";
oFF.DimensionDialogI18n.I18N_DD_DISPLAY = "I18N_DD_DISPLAY";
oFF.DimensionDialogI18n.I18N_DD_DISPLAY_SETTINGS = "I18N_DD_DISPLAY_SETTINGS";
oFF.DimensionDialogI18n.I18N_DD_HIERARCHY = "I18N_DD_HIERARCHY";
oFF.DimensionDialogI18n.I18N_DD_SORT_HIERARCHY = "I18N_DD_SORT_HIERARCHY";
oFF.DimensionDialogI18n.I18N_DD_PRESENT_HIERARCHY = "I18N_DD_PRESENT_HIERARCHY";
oFF.DimensionDialogI18n.I18N_DD_VALUE_DISPLAY = "I18N_DD_VALUE_DISPLAY";
oFF.DimensionDialogI18n.I18N_DD_PRESENTATION_ORDER = "I18N_DD_PRESENTATION_ORDER";
oFF.DimensionDialogI18n.I18N_DD_TEXT_VIEW = "I18N_DD_TEXT_VIEW";
oFF.DimensionDialogI18n.I18N_DD_LOCALE = "I18N_DD_LOCALE";
oFF.DimensionDialogI18n.I18N_DD_CASE_SENSITIVE = "I18N_DD_CASE_SENSITIVE";
oFF.DimensionDialogI18n.I18N_DD_SORTING = "I18N_DD_SORTING";
oFF.DimensionDialogI18n.I18N_DD_SORT_BY = "I18N_DD_SORT_BY";
oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION = "I18N_DD_SORT_DIRECTION";
oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES = "I18N_DD_RESULT_LINES";
oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES_POSITION = "I18N_DD_RESULT_LINES_POSIITON";
oFF.DimensionDialogI18n.I18N_DD_SELECTED_HIERARCHY = "I18N_DD_SELECTED_HIERARCHY";
oFF.DimensionDialogI18n.I18N_DD_EXPAND_TO_LEVEL = "I18N_DD_EXPAND_TO_LEVEL";
oFF.DimensionDialogI18n.I18N_DD_POSITION_OF_LOWER_LEVE_NODES = "I18N_DD_POSITION_OF_LOWER_LEVE_NODES";
oFF.DimensionDialogI18n.I18N_DD_TOTALS_INCLUDING = "I18N_DD_TOTALS_INCLUDING";
oFF.DimensionDialogI18n.I18N_DD_TOTALS_REMAINING = "I18N_DD_TOTALS_REMAINING";
oFF.DimensionDialogI18n.I18N_DD_ABOVE = "I18N_DD_ABOVE";
oFF.DimensionDialogI18n.I18N_DD_BELOW = "I18N_DD_BELOW";
oFF.DimensionDialogI18n.I18N_DD_VALUES_OF_POSTED_NODES = "I18N_DD_VALUES_OF_POSTED_NODES";
oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_VALUES_OF_POSTED_NODES = "I18N_DD_SUPPRESS_VALUES_OF_POSTED_NODES";
oFF.DimensionDialogI18n.I18N_DD_SUPPRESS = "I18N_DD_SUPPRESS";
oFF.DimensionDialogI18n.I18N_DD_CONDITIONAL = "I18N_DD_CONDITIONAL";
oFF.DimensionDialogI18n.I18N_DD_READMODE = "I18N_DD_READMODE";
oFF.DimensionDialogI18n.I18N_DD_CONDENSE_NODES_WITH_ONLY_ONE_LOWER_LEVEL_NODE = "I18N_DD_CONDENSE_NODES_WITH_ONLY_ONE_LOWER_LEVEL_NODE";
oFF.DimensionDialogI18n.I18N_DD_ONLY_POSTED_VALUES = "I18N_DD_ONLY_POSTED_VALUES";
oFF.DimensionDialogI18n.I18N_DD_NO_DISPLAY = "I18N_DD_NO_DISPLAY";
oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT = "I18N_DD_KEY_AND_TEXT";
oFF.DimensionDialogI18n.I18N_DD_KEY = "I18N_DD_KEY";
oFF.DimensionDialogI18n.I18N_DD_PRESENTATIONS_TO_SHOW = "I18N_DD_PRESENTATIONS_TO_SHOW";
oFF.DimensionDialogI18n.I18N_DD_TEXT = "I18N_DD_TEXT";
oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY = "I18N_DD_TEXT_AND_KEY";
oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY_SHORT = "I18N_DD_TEXT_AND_KEY_SHORT";
oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT_SHORT = "I18N_DD_KEY_AND_TEXT_SHORT";
oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS = "I18N_DD_DISPLAY_ALWAYS";
oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_ALWAYS = "I18N_DD_SUPPRESS_ALWAYS";
oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE = "I18N_DD_DISPLAY_IF_MORE_THAN_ONE";
oFF.DimensionDialogI18n.I18N_DD_DIMENSION_KEY = "I18N_DD_DIMENSION_KEY";
oFF.DimensionDialogI18n.I18N_DD_DIMENSION_TEXT = "I18N_DD_DIMENSION_TEXT";
oFF.DimensionDialogI18n.I18N_DD_NO_SORT = "I18N_DD_NO_SORT";
oFF.DimensionDialogI18n.I18N_DD_ASCENDING = "I18N_DD_ASCENDING";
oFF.DimensionDialogI18n.I18N_DD_DESCENDING = "I18N_DD_DESCENDING";
oFF.DimensionDialogI18n.I18N_DD_SHORT_TEXT = "I18N_DD_SHORT_TEXT";
oFF.DimensionDialogI18n.I18N_DD_MEDIUM_TEXT = "I18N_DD_MEDIUM_TEXT";
oFF.DimensionDialogI18n.I18N_DD_LONG_TEXT = "I18N_DD_LONG_TEXT";
oFF.DimensionDialogI18n.I18N_DD_ACTIVE = "I18N_DD_ACTIVE";
oFF.DimensionDialogI18n.I18N_DD_FIELD = "I18N_DD_FIELD";
oFF.DimensionDialogI18n.I18N_DD_MEASURE = "I18N_DD_MEASURE";
oFF.DimensionDialogI18n.I18N_DD_FILTER = "I18N_DD_FILTER";
oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING = "I18N_DD_BREAK_GROUPING";
oFF.DimensionDialogI18n.I18N_DD_ALL_NODES = "I18N_DD_ALL_NODES";
oFF.DimensionDialogI18n.I18N_DD_ONLY_ROOT_NODE = "I18N_DD_ONLY_ROOT_NODE";
oFF.DimensionDialogI18n.I18N_DD_N_CHILD_NODES = "I18N_DD_N_CHILD_NODES";
oFF.DimensionDialogI18n.I18N_DD_DETAILS = "I18N_DD_DETAILS";
oFF.DimensionDialogI18n.I18N_DD_MOVE_BOTTOM = "I18N_DD_MOVE_BOTTOM";
oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN = "I18N_DD_MOVE_DOWN";
oFF.DimensionDialogI18n.I18N_DD_MOVE_UP = "I18N_DD_MOVE_UP";
oFF.DimensionDialogI18n.I18N_DD_MOVE_TOP = "I18N_DD_MOVE_TOP";
oFF.DimensionDialogI18n.I18N_DD_DEACTIVATE_SELECTION = "I18N_DD_DEACTIVATE_SELECTION";
oFF.DimensionDialogI18n.I18N_DD_FIELD_LAYOUT = "I18N_DD_FIELD_LAYOUT";
oFF.DimensionDialogI18n.I18N_DD_ACTIVATE_SELECTION = "I18N_DD_ACTIVATE_SELECTION";
oFF.DimensionDialogI18n.I18N_DD_HIERARCHY_CONDENSATION = "I18N_DD_HIERARCHY_CONDENSATION";
oFF.DimensionDialogI18n.I18N_DD_USE_DEFAULT_SETTING = "I18N_DD_USE_DEFAULT_SETTING";
oFF.DimensionDialogI18n.I18N_DD_NODES_TO_SHOW = "I18N_DD_NODES_TO_SHOW";
oFF.DimensionDialogI18n.I18N_DD_TECHNICAL = "I18N_DD_TECHNICAL";
oFF.DimensionDialogI18n.I18N_DD_ATTRIBUTES = "I18N_DD_ATTRIBUTES";
oFF.DimensionDialogI18n.I18N_DD_TOTALS = "I18N_DD_TOTALS";
oFF.DimensionDialogI18n.createDimensionDialogI18n = function()
{
	return new oFF.DimensionDialogI18n();
};
oFF.DimensionDialogI18n.staticSetupDd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_VALUE_HELP, "Value Help");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_OK, "Ok");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_CANCEL, "Cancel");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_SETTINGS, "Display Settings");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DISPLAY, "Display");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY, "Hierarchy");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SORT_HIERARCHY, "Hierarchy");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_PRESENT_HIERARCHY, "Display Hierarchically");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_VALUE_DISPLAY, "Value Display");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_PRESENTATION_ORDER, "Presentation Order");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TEXT_VIEW, "Description Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_LOCALE, "Locale");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_CASE_SENSITIVE, "Case Sensitive");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SORTING, "Sorting");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SORT_BY, "Sort by");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION, "Sort Direction");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES, "Result Lines");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES_POSITION, "Result Position");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SELECTED_HIERARCHY, "Selected Hierarchy");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_EXPAND_TO_LEVEL, "Expand to Level");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_POSITION_OF_LOWER_LEVE_NODES, "Position of Lower-Level Nodes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TOTALS_INCLUDING, "Totals Including");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TOTALS_REMAINING, "Totals Remaining");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ABOVE, "Above");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_BELOW, "Below");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_VALUES_OF_POSTED_NODES, "Values of Posted Nodes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_VALUES_OF_POSTED_NODES, "Suppress Values of Posted Nodes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS, "Suppress");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_CONDITIONAL, "Conditional");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_CONDENSE_NODES_WITH_ONLY_ONE_LOWER_LEVEL_NODE, "Condense Nodes with Only 1 Child");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_READMODE, "Read Mode");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_NODES_TO_SHOW, "Nodes to Show");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ONLY_POSTED_VALUES, "Show Only Booked Values");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_NO_DISPLAY, "No Display");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT, "ID and Description");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_KEY, "ID");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TEXT, "Description");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_PRESENTATIONS_TO_SHOW, "Presentations to Show");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY, "Description and ID");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY_SHORT, "Desc | ID");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT_SHORT, "ID | Desc");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS, "Always Display");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_ALWAYS, "Always Suppress");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE, "Display if more than one value");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_KEY, "Dimension ID");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_TEXT, "Dimension Description");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_NO_SORT, "Don't Sort");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ASCENDING, "Ascending");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DESCENDING, "Descending");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_SHORT_TEXT, "Short");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MEDIUM_TEXT, "Medium");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_LONG_TEXT, "Long");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ACTIVE, "Active");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_FIELD, "Field");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MEASURE, "Measure");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_FILTER, "Filter");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING, "Break Grouping");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ALL_NODES, "All Nodes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ONLY_ROOT_NODE, "Only Root Node");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_N_CHILD_NODES, "Root and {0} Child Nodes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DETAILS, "Details");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MOVE_BOTTOM, "Move Item to Bottom");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN, "Move Down Item by 1");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP, "Move Up Item by 1");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_MOVE_TOP, "Move Item to Top");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_USE_DEFAULT_SETTING, "Use Default Setting");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_DEACTIVATE_SELECTION, "Deactivate Selection");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_FIELD_LAYOUT, "Field Layout Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ACTIVATE_SELECTION, "Activate Selection");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY_CONDENSATION, "Hierarchy Condensation");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TECHNICAL, "Show Technical Names");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_ATTRIBUTES, "Attributes");
	oFF.OlapUiI18n.addDefaultValue(oFF.DimensionDialogI18n.I18N_DD_TOTALS, "Totals");
};

oFF.DdControllerAxis = function() {};
oFF.DdControllerAxis.prototype = new oFF.XObject();
oFF.DdControllerAxis.prototype._ff_c = "DdControllerAxis";

oFF.DdControllerAxis.OK_BUTTON = "okButton";
oFF.DdControllerAxis.CANCEL_BUTTON = "cancelButton";
oFF.DdControllerAxis.create = function(application, context)
{
	var obj = new oFF.DdControllerAxis();
	obj.m_context = context;
	obj.m_application = application;
	return obj;
};
oFF.DdControllerAxis.prototype.m_context = null;
oFF.DdControllerAxis.prototype.m_display = null;
oFF.DdControllerAxis.prototype.m_axisModel = null;
oFF.DdControllerAxis.prototype.m_configuration = null;
oFF.DdControllerAxis.prototype.m_axis = null;
oFF.DdControllerAxis.prototype.m_okButton = null;
oFF.DdControllerAxis.prototype.m_cancelButton = null;
oFF.DdControllerAxis.prototype.m_ddLayout = null;
oFF.DdControllerAxis.prototype.m_isClosing = false;
oFF.DdControllerAxis.prototype.m_dialogCloseListener = null;
oFF.DdControllerAxis.prototype.m_totalsIncludedContainer = null;
oFF.DdControllerAxis.prototype.m_totalsRemainingContainer = null;
oFF.DdControllerAxis.prototype.m_totalsContainer = null;
oFF.DdControllerAxis.prototype.m_zeroSuppressionContainer = null;
oFF.DdControllerAxis.prototype.m_application = null;
oFF.DdControllerAxis.prototype.releaseObject = function()
{
	this.m_axisModel = oFF.XObjectExt.release(this.m_axisModel);
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.m_axis = null;
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_ddLayout = oFF.XObjectExt.release(this.m_ddLayout);
	this.m_context = null;
};
oFF.DdControllerAxis.prototype.openDialog = function(title, modelComponent, dialogCloseListener)
{
	oFF.XObjectExt.assertNotNullExt(modelComponent, "Dimension must be set");
	this.m_dialogCloseListener = dialogCloseListener;
	this.setupController(title, modelComponent);
};
oFF.DdControllerAxis.prototype.setupController = function(title, axis)
{
	this.m_axis = axis;
	this.m_isClosing = false;
	this.m_axisModel = oFF.DdModelAxis.createFrom(this.m_axis);
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("AxisDialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(80, oFF.UiCssSizeUnit.PERCENT));
	this.m_display.setWidth(oFF.UiCssLength.createExt(80, oFF.UiCssSizeUnit.PERCENT));
	this.m_axisModel.addListener(this);
	var genesis = this.m_display.getGenesis();
	this.m_ddLayout = oFF.DdDimensionDisplayLayoutCompact.createWithGenesis(genesis);
	if (this.m_axisModel.getDdModelTotals() !== null)
	{
		this.m_totalsContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_axisModel.getDdModelTotals(), genesis);
		this.m_totalsContainer.addToLeftRightVerticalLayout(this.m_ddLayout.getTotalsDisplayContent());
	}
	if (this.m_axisModel.getDdModelTotalsIncluded() !== null)
	{
		this.m_totalsIncludedContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_axisModel.getDdModelTotalsIncluded(), genesis);
		this.m_totalsIncludedContainer.addToLeftRightVerticalLayout(this.m_ddLayout.getTotalsDisplayContent());
	}
	if (this.m_axisModel.getDdModelTotalsRemaining() !== null)
	{
		this.m_totalsRemainingContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_axisModel.getDdModelTotalsRemaining(), genesis);
		this.m_totalsRemainingContainer.addToLeftRightVerticalLayout(this.m_ddLayout.getTotalsDisplayContent());
	}
	if (this.m_axisModel.getDdModelZeroSuppression() !== null)
	{
		this.m_zeroSuppressionContainer = oFF.AldControllerZeroSuppression.createWithModelAndGenesis(this.m_application, this.m_context, this.m_axisModel.getDdModelZeroSuppression(), genesis);
		this.m_zeroSuppressionContainer.addToLeftRightVerticalLayout(this.m_ddLayout.getZeroSuppressionDisplayContent());
	}
	this.reinitializeChildControllers();
	this.m_ddLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.DdControllerAxis.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.DdControllerAxis.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_ddLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.DdControllerAxis.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.DdControllerAxis.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		this.m_axisModel = oFF.XObjectExt.release(this.m_axisModel);
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.DdControllerAxis.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerAxis.OK_BUTTON:
			this.m_axisModel.applyToQueryModel(this.m_axis.getQueryModel());
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				this.m_dialogCloseListener.onSubmit();
			}
			break;

		case oFF.DdControllerAxis.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.DdControllerAxis.prototype.onAfterOpen = function(event) {};
oFF.DdControllerAxis.prototype.reinitializeChildControllers = function()
{
	var detailsLayout = this.m_ddLayout.getDetailsTable();
	detailsLayout.clearItems();
	var list = this.m_axisModel.getDimensionOrdered();
	var controllerList = oFF.XList.create();
	for (var i = 0; i < list.size(); i++)
	{
		controllerList.add(oFF.DdControllerDimensionSelection.createWithModelAndGenesis(this.m_application, this.m_context, list.get(i), this.m_display.getGenesis()));
	}
	if (oFF.XCollectionUtils.hasElements(controllerList))
	{
		controllerList.get(0).addVlHeaders(detailsLayout);
		for (var j = 0; j < controllerList.size(); j++)
		{
			var row = detailsLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
			controllerList.get(j).addFlexLayoutComponents(row);
		}
	}
};
oFF.DdControllerAxis.prototype.onObservableModelChange = function(model)
{
	this.reinitializeChildControllers();
};

oFF.DdControllerDimensionCompact = function() {};
oFF.DdControllerDimensionCompact.prototype = new oFF.XObject();
oFF.DdControllerDimensionCompact.prototype._ff_c = "DdControllerDimensionCompact";

oFF.DdControllerDimensionCompact.OK_BUTTON = "okButton";
oFF.DdControllerDimensionCompact.CANCEL_BUTTON = "cancelButton";
oFF.DdControllerDimensionCompact.FIELD_LAYOUT_DROPDOWN = "fieldLayoutDropdown";
oFF.DdControllerDimensionCompact.READ_MODE_DROPDOWN = "readModeDropdown";
oFF.DdControllerDimensionCompact.ATTRIBUTE_INVENTORY_LIST = "attributeInventoryList";
oFF.DdControllerDimensionCompact.ACTIVE_ATTRIBUTE_LIST = "attributeActiveList";
oFF.DdControllerDimensionCompact.DEACTIVATE_SELECTION_BUTTON = "deactivateSelectionButton";
oFF.DdControllerDimensionCompact.ACTIVATE_SELECTION_BUTTON = "activateSelectionButton";
oFF.DdControllerDimensionCompact.TECHNICAL_BUTTON = "technicalButton";
oFF.DdControllerDimensionCompact.create = function(application, context)
{
	var obj = new oFF.DdControllerDimensionCompact();
	obj.m_context = context;
	obj.m_application = application;
	return obj;
};
oFF.DdControllerDimensionCompact.prototype.m_context = null;
oFF.DdControllerDimensionCompact.prototype.m_display = null;
oFF.DdControllerDimensionCompact.prototype.m_dimensionModel = null;
oFF.DdControllerDimensionCompact.prototype.m_configuration = null;
oFF.DdControllerDimensionCompact.prototype.m_dimension = null;
oFF.DdControllerDimensionCompact.prototype.m_okButton = null;
oFF.DdControllerDimensionCompact.prototype.m_cancelButton = null;
oFF.DdControllerDimensionCompact.prototype.m_attributeInventoryList = null;
oFF.DdControllerDimensionCompact.prototype.m_activeAttributeList = null;
oFF.DdControllerDimensionCompact.prototype.m_ddLayout = null;
oFF.DdControllerDimensionCompact.prototype.m_isClosing = false;
oFF.DdControllerDimensionCompact.prototype.m_mainAttributeContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_dialogCloseListener = null;
oFF.DdControllerDimensionCompact.prototype.m_sortContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_hierarchyContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_totalsContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_totalsIncludedContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_totalsRemainingContainer = null;
oFF.DdControllerDimensionCompact.prototype.m_detailFieldContainerLayout = null;
oFF.DdControllerDimensionCompact.prototype.m_buttonDeactivateSelection = null;
oFF.DdControllerDimensionCompact.prototype.m_buttonActivateSelection = null;
oFF.DdControllerDimensionCompact.prototype.m_buttonMoveUp = null;
oFF.DdControllerDimensionCompact.prototype.m_buttonMoveDown = null;
oFF.DdControllerDimensionCompact.prototype.m_application = null;
oFF.DdControllerDimensionCompact.prototype.releaseObject = function()
{
	this.m_dimensionModel = oFF.XObjectExt.release(this.m_dimensionModel);
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.m_dimension = null;
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_ddLayout = oFF.XObjectExt.release(this.m_ddLayout);
	this.m_context = null;
};
oFF.DdControllerDimensionCompact.prototype.openDialog = function(title, modelComponent, dialogCloseListener)
{
	oFF.XObjectExt.assertNotNullExt(modelComponent, "Dimension must be set");
	this.setupController(title, modelComponent, dialogCloseListener);
};
oFF.DdControllerDimensionCompact.prototype.setupController = function(title, dimension, dialogCloseListener)
{
	var i;
	this.m_dimension = dimension;
	this.m_dialogCloseListener = dialogCloseListener;
	this.m_isClosing = false;
	this.m_dimensionModel = oFF.DdModelDimension.createFrom(this.m_dimension, true, null, null);
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("DimensionDialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(40, oFF.UiCssSizeUnit.EM));
	this.m_display.setWidth(oFF.UiCssLength.createExt(60, oFF.UiCssSizeUnit.EM));
	this.m_dimensionModel.addListener(this);
	var genesis = this.m_display.getGenesis();
	var localization = genesis.getUiManager().getLocalization();
	if (this.m_dimensionModel.getMainAttribute() !== null)
	{
		this.m_mainAttributeContainer = oFF.DdControllerFieldContainerCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel.getMainAttribute(), genesis);
	}
	this.m_ddLayout = oFF.DdDimensionDisplayLayoutCompact.createWithGenesis(genesis);
	var detailsLayout = this.m_ddLayout.getDetailsTable();
	var horizontalLayout = detailsLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_attributeInventoryList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.DdControllerDimensionCompact.ATTRIBUTE_INVENTORY_LIST);
	this.m_attributeInventoryList.setSelectionMode(oFF.UiSelectionMode.MULTI_SELECT);
	this.m_attributeInventoryList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
	horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	var mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
	horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	if (oFF.isNull(this.m_buttonDeactivateSelection))
	{
		this.m_buttonDeactivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonDeactivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DEACTIVATE_SELECTION));
		this.m_buttonDeactivateSelection.setIcon("slim-arrow-left");
		this.m_buttonDeactivateSelection.setName(oFF.DdControllerDimensionCompact.DEACTIVATE_SELECTION_BUTTON);
		this.m_buttonDeactivateSelection.registerOnPress(this);
	}
	else
	{
		mbl.addItem(this.m_buttonDeactivateSelection);
	}
	if (oFF.isNull(this.m_buttonActivateSelection))
	{
		this.m_buttonActivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonActivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVATE_SELECTION));
		this.m_buttonActivateSelection.setIcon("slim-arrow-right");
		this.m_buttonActivateSelection.setName(oFF.DdControllerDimensionCompact.ACTIVATE_SELECTION_BUTTON);
		this.m_buttonActivateSelection.registerOnPress(this);
	}
	else
	{
		mbl.addItem(this.m_buttonActivateSelection);
	}
	this.m_activeAttributeList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.DdControllerDimensionCompact.ACTIVE_ATTRIBUTE_LIST);
	this.m_activeAttributeList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
	horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
	horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	if (oFF.isNull(this.m_buttonMoveUp))
	{
		this.m_buttonMoveUp = mbl.addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveUp.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
		this.m_buttonMoveUp.setIcon("slim-arrow-up");
		this.m_buttonMoveUp.setName(oFF.DdControllerAbstract.UP_BUTTON);
		this.m_buttonMoveUp.registerOnPress(this);
	}
	else
	{
		mbl.addItem(this.m_buttonMoveUp);
	}
	if (oFF.isNull(this.m_buttonMoveDown))
	{
		this.m_buttonMoveDown = mbl.addNewItemOfType(oFF.UiType.BUTTON);
		this.m_buttonMoveDown.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
		this.m_buttonMoveDown.setIcon("slim-arrow-down");
		this.m_buttonMoveDown.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
		this.m_buttonMoveDown.registerOnPress(this);
	}
	else
	{
		mbl.addItem(this.m_buttonMoveDown);
	}
	this.m_detailFieldContainerLayout = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
	var controls = oFF.XList.create();
	if (oFF.notNull(this.m_mainAttributeContainer) && this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTE_BASED) || this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS))
	{
		controls = this.m_mainAttributeContainer.getLayoutedControls();
	}
	controls.add(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var readModesFlex = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	readModesFlex.setWidth(oFF.UiCssLength.create("100%"));
	controls.add(readModesFlex);
	readModesFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ONLY_POSTED_VALUES)).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("auto"));
	readModesFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
	var readModeSwitch = readModesFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerDimensionCompact.READ_MODE_DROPDOWN).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
	var readMode = this.m_dimensionModel.getDdModelReadMode().getReadMode();
	if (oFF.notNull(readMode))
	{
		readModeSwitch.setOn(readMode.isTypeOf(oFF.QMemberReadMode.BOOKED));
	}
	readModeSwitch.registerOnChange(this);
	for (i = 0; i < controls.size(); i++)
	{
		this.m_ddLayout.getValueDisplayContent().addItem(controls.get(i));
	}
	this.m_dimensionModel.getDdModelSorting().addListener(this);
	this.m_dimensionModel.getDdModelHierarchy().addListener(this);
	this.m_sortContainer = oFF.DdControllerSortCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel.getDdModelSorting(), genesis);
	this.m_ddLayout.getSortDisplayContent().addAllItems(this.m_sortContainer.getVertialControls());
	this.m_hierarchyContainer = oFF.DdControllerHierarchy.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel, this.m_dimension, genesis);
	this.m_ddLayout.getHierarchyDisplayContent().addAllItems(this.m_hierarchyContainer.getVerticalControls());
	if (this.m_dimension.supportsTotals())
	{
		this.m_totalsContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel.getDdModelTotals(), genesis);
		this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsContainer.getVerticalControls());
	}
	if (this.m_dimensionModel.getDdModelTotalsIncluded() !== null)
	{
		this.m_totalsIncludedContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel.getDdModelTotalsIncluded(), genesis);
		this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsIncludedContainer.getVerticalControls());
	}
	if (this.m_dimensionModel.getDdModelTotalsRemaining() !== null)
	{
		this.m_totalsRemainingContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.m_application, this.m_context, this.m_dimensionModel.getDdModelTotalsRemaining(), genesis);
		this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsRemainingContainer.getVerticalControls());
	}
	this.reinitializeChildControllers();
	this.m_ddLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.DdControllerDimensionCompact.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.DimensionDialogI18n.I18N_DD_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.DdControllerDimensionCompact.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.DimensionDialogI18n.I18N_DD_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_ddLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.DdControllerDimensionCompact.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.DdControllerDimensionCompact.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		this.m_dimensionModel = oFF.XObjectExt.release(this.m_dimensionModel);
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.DdControllerDimensionCompact.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerDimensionCompact.TECHNICAL_BUTTON:
			this.m_dimensionModel.setShowTechnical(event.getControl().isPressed());
			return;

		case oFF.DdControllerDimensionCompact.ACTIVATE_SELECTION_BUTTON:
			this.m_dimensionModel.activateSelection();
			return;

		case oFF.DdControllerDimensionCompact.DEACTIVATE_SELECTION_BUTTON:
			this.m_dimensionModel.deActivateSelection();
			return;

		case oFF.DdControllerAbstract.BOTTOM_BUTTON:
			this.m_dimensionModel.moveBottomActiveAttribute();
			return;

		case oFF.DdControllerAbstract.DOWN_BUTTON:
			this.m_dimensionModel.moveDownActiveAttribute();
			return;

		case oFF.DdControllerAbstract.UP_BUTTON:
			this.m_dimensionModel.moveUpActiveAttribute();
			return;

		case oFF.DdControllerAbstract.TOP_BUTTON:
			this.m_dimensionModel.moveTopActiveAttribute();
			return;

		case oFF.DdControllerDimensionCompact.OK_BUTTON:
			this.m_dimensionModel.applyToQueryModel(this.m_dimension.getQueryModel());
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				this.m_dialogCloseListener.onSubmit();
			}
			break;

		case oFF.DdControllerDimensionCompact.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.DdControllerDimensionCompact.prototype.onAfterOpen = function(event) {};
oFF.DdControllerDimensionCompact.prototype.reinitializeChildControllers = function()
{
	if (!this.m_dimensionModel.getDdModelHierarchy().isActive())
	{
		if (this.m_dimensionModel.getDdModelSorting().tryResetHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	else
	{
		if (this.m_dimensionModel.getDdModelSorting().tryApplyHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	this.m_detailFieldContainerLayout.clearItems();
	var list;
	var selectionList;
	var size;
	var i;
	var subItem;
	var item;
	list = this.m_dimensionModel.getAttributesOrderInactive();
	selectionList = this.m_dimensionModel.getAttributesOrderInactiveSelected();
	size = list.size();
	this.m_attributeInventoryList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_attributeInventoryList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonActivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	list = this.m_dimensionModel.getAttributesOrderActive();
	selectionList = this.m_dimensionModel.getAttributesOrderActiveSelected();
	size = list.size();
	this.m_activeAttributeList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_activeAttributeList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonDeactivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	this.m_detailFieldContainerLayout.clearItems();
	var detailAttribute = this.m_dimensionModel.getDetailAttribute();
	if (oFF.notNull(detailAttribute))
	{
		this.m_detailFieldContainerLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setText(this.m_dimensionModel.isShowTechnical() ? detailAttribute.getComponentName() : detailAttribute.getComponentText()).setHeight(oFF.UiCssLength.create("2em"));
		var fieldContainerController = oFF.DdControllerFieldContainerCompact.createWithModelAndGenesis(this.m_application, this.m_context, detailAttribute, this.m_display.getGenesis());
		this.m_detailFieldContainerLayout.addAllItems(fieldContainerController.getLayoutedControls());
	}
	oFF.DdModelOrderable.adoptList(this.m_dimensionModel.getAttributesOrderActive());
	var currentSelection = selectionList.size() === 1 ? selectionList.get(0) : null;
	this.m_buttonMoveDown.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveDown());
	this.m_buttonMoveUp.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveUp());
};
oFF.DdControllerDimensionCompact.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerDimensionCompact.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerDimensionCompact.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerDimensionCompact.prototype.onObservableModelChange = function(model)
{
	this.reinitializeChildControllers();
};
oFF.DdControllerDimensionCompact.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerDimensionCompact.ATTRIBUTE_INVENTORY_LIST:
			this.m_dimensionModel.setAttributesOrderInactiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.DdControllerDimensionCompact.ACTIVE_ATTRIBUTE_LIST:
			this.m_dimensionModel.setAttributesOrderActiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.DdControllerDimensionCompact.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerDimensionCompact.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerDimensionCompact.prototype.onChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerDimensionCompact.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().isOn() ? oFF.FieldLayoutType.FIELD_BASED : oFF.FieldLayoutType.ATTRIBUTE_BASED);
			break;

		case oFF.DdControllerDimensionCompact.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().isOn() ? oFF.QMemberReadMode.BOOKED : oFF.QMemberReadMode.MASTER);
			break;
	}
};
oFF.DdControllerDimensionCompact.prototype.getListOfSelectedCustomObjects = function(context)
{
	var resultList = oFF.XList.create();
	var selectedItems = context.getSelectedItems();
	var size = selectedItems.size();
	for (var i = 0; i < size; i++)
	{
		resultList.add(selectedItems.get(i).getCustomObject());
	}
	return resultList;
};

oFF.DdControllerDimensionSelection = function() {};
oFF.DdControllerDimensionSelection.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerDimensionSelection.prototype._ff_c = "DdControllerDimensionSelection";

oFF.DdControllerDimensionSelection.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerDimensionSelection();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerDimensionSelection.prototype.m_nameLabel = null;
oFF.DdControllerDimensionSelection.prototype.m_textLabel = null;
oFF.DdControllerDimensionSelection.prototype.m_upButton = null;
oFF.DdControllerDimensionSelection.prototype.m_downButton = null;
oFF.DdControllerDimensionSelection.prototype.m_topButton = null;
oFF.DdControllerDimensionSelection.prototype.m_bottomButton = null;
oFF.DdControllerDimensionSelection.prototype.m_displayCheckbox = null;
oFF.DdControllerDimensionSelection.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerDimensionSelection.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY));
	return labelTexts;
};
oFF.DdControllerDimensionSelection.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerDimensionSelection.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	if (oFF.isNull(this.m_nameLabel))
	{
		this.m_nameLabel = this.getGenesis().newControl(oFF.UiType.LABEL);
		this.m_nameLabel.setText(this.getModel().getComponentName());
	}
	if (oFF.isNull(this.m_textLabel))
	{
		this.m_textLabel = this.getGenesis().newControl(oFF.UiType.LABEL);
		this.m_textLabel.setText(this.getModel().getComponentText());
	}
	controls.add(this.m_nameLabel);
	controls.add(this.m_textLabel);
	return controls;
};
oFF.DdControllerDimensionSelection.prototype.getControls = function()
{
	var controls = oFF.XList.create();
	var display = this.getModel().isVisible();
	if (oFF.isNull(this.m_displayCheckbox))
	{
		this.m_displayCheckbox = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setName(oFF.DdControllerAbstract.DISPLAY_CHECKBOX);
		this.m_displayCheckbox.registerOnChange(this);
	}
	this.m_displayCheckbox.setChecked(display);
	controls.add(this.m_displayCheckbox);
	return controls;
};
oFF.DdControllerDimensionSelection.prototype.getSuffixControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (oFF.isNull(this.m_topButton))
	{
		this.m_topButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_topButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_TOP));
		this.m_topButton.setIcon("arrow-top");
		this.m_topButton.setName(oFF.DdControllerAbstract.TOP_BUTTON);
		this.m_topButton.registerOnPress(this);
	}
	this.m_topButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_topButton);
	if (oFF.isNull(this.m_upButton))
	{
		this.m_upButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_upButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
		this.m_upButton.setIcon("slim-arrow-up");
		this.m_upButton.setName(oFF.DdControllerAbstract.UP_BUTTON);
		this.m_upButton.registerOnPress(this);
	}
	this.m_upButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_upButton);
	if (oFF.isNull(this.m_downButton))
	{
		this.m_downButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_downButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
		this.m_downButton.setIcon("slim-arrow-down");
		this.m_downButton.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
		this.m_downButton.registerOnPress(this);
	}
	this.m_downButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_downButton);
	if (oFF.isNull(this.m_bottomButton))
	{
		this.m_bottomButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_bottomButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_BOTTOM));
		this.m_bottomButton.setIcon("arrow-bottom");
		this.m_bottomButton.setName(oFF.DdControllerAbstract.BOTTOM_BUTTON);
		this.m_bottomButton.registerOnPress(this);
	}
	this.m_bottomButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_bottomButton);
	return controls;
};
oFF.DdControllerDimensionSelection.prototype.getWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("95%");
	return result;
};
oFF.DdControllerDimensionSelection.prototype.getSuffixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("5em");
	result.add("5em");
	result.add("5em");
	result.add("5em");
	return result;
};
oFF.DdControllerDimensionSelection.prototype.getPrefixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("95%");
	result.add("95%");
	return result;
};
oFF.DdControllerDimensionSelection.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.UP_BUTTON:
			this.getModel().moveUp();
			break;

		case oFF.DdControllerAbstract.DOWN_BUTTON:
			this.getModel().moveDown();
			break;

		case oFF.DdControllerAbstract.TOP_BUTTON:
			this.getModel().moveTop();
			break;

		case oFF.DdControllerAbstract.BOTTOM_BUTTON:
			this.getModel().moveBottom();
			break;
	}
};
oFF.DdControllerDimensionSelection.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setVisible(control.isChecked());
			break;
	}
};
oFF.DdControllerDimensionSelection.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};

oFF.DdControllerFieldContainerCompact = function() {};
oFF.DdControllerFieldContainerCompact.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerFieldContainerCompact.prototype._ff_c = "DdControllerFieldContainerCompact";

oFF.DdControllerFieldContainerCompact.DISPLAY_KEY_SWITCH = "displayKey";
oFF.DdControllerFieldContainerCompact.DISPLAY_TEXT_SWITCH = "displayText";
oFF.DdControllerFieldContainerCompact.KEY_BEFORE_TEXT_SWITCH = "keyBeforeText";
oFF.DdControllerFieldContainerCompact.DISPLAY_AS_DISPLAY = "displayAsDisplay";
oFF.DdControllerFieldContainerCompact.KEY_VIEW_DROPDOWN = "keyView";
oFF.DdControllerFieldContainerCompact.TEXT_VIEW_DROPDOWN = "textView";
oFF.DdControllerFieldContainerCompact.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerFieldContainerCompact();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerFieldContainerCompact.prototype.m_nameLabel = null;
oFF.DdControllerFieldContainerCompact.prototype.m_textLabel = null;
oFF.DdControllerFieldContainerCompact.prototype.m_upButton = null;
oFF.DdControllerFieldContainerCompact.prototype.m_downButton = null;
oFF.DdControllerFieldContainerCompact.prototype.m_topButton = null;
oFF.DdControllerFieldContainerCompact.prototype.m_bottomButton = null;
oFF.DdControllerFieldContainerCompact.prototype.m_displayKeyCB = null;
oFF.DdControllerFieldContainerCompact.prototype.m_displayTextCB = null;
oFF.DdControllerFieldContainerCompact.prototype.m_arrangeKeyBeforeTextSegmentedButton = null;
oFF.DdControllerFieldContainerCompact.prototype.m_textViewSB = null;
oFF.DdControllerFieldContainerCompact.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerFieldContainerCompact.prototype.getLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerFieldContainerCompact.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerFieldContainerCompact.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	if (oFF.isNull(this.m_nameLabel))
	{
		this.m_nameLabel = this.getGenesis().newControl(oFF.UiType.LABEL);
		this.m_nameLabel.setText(this.getModel().getComponentName());
	}
	controls.add(this.m_nameLabel);
	if (oFF.isNull(this.m_textLabel))
	{
		this.m_textLabel = this.getGenesis().newControl(oFF.UiType.LABEL);
		this.m_textLabel.setText(this.getModel().getComponentText());
	}
	controls.add(this.m_textLabel);
	return controls;
};
oFF.DdControllerFieldContainerCompact.prototype.getControls = function()
{
	var controls = oFF.XList.create();
	this.getLayoutedControls();
	return controls;
};
oFF.DdControllerFieldContainerCompact.prototype.getLayoutedControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_PRESENTATIONS_TO_SHOW)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
	if (oFF.isNull(this.m_displayKeyCB))
	{
		this.m_displayKeyCB = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY));
		this.m_displayKeyCB.setName(oFF.DdControllerFieldContainerCompact.DISPLAY_KEY_SWITCH);
		this.m_displayKeyCB.registerOnChange(this);
	}
	controls.add(this.m_displayKeyCB);
	this.m_displayKeyCB.setChecked(this.getModel().isDisplayKey());
	this.m_displayKeyCB.setEnabled(this.getModel().isMayDisplayKey());
	if (oFF.isNull(this.m_displayTextCB))
	{
		this.m_displayTextCB = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT));
		this.m_displayTextCB.setName(oFF.DdControllerFieldContainerCompact.DISPLAY_TEXT_SWITCH);
		this.m_displayTextCB.registerOnChange(this);
	}
	controls.add(this.m_displayTextCB);
	this.m_displayTextCB.setChecked(this.getModel().isDisplayText());
	this.m_displayTextCB.setEnabled(this.getModel().isMayDisplayText());
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
	var textView = this.getModel().getTextView();
	var textViewList = this.getModel().getTextViewsAvailable();
	if (oFF.XCollectionUtils.hasElements(textViewList) && (textViewList.contains(oFF.PresentationType.SHORT_TEXT) || textViewList.contains(oFF.PresentationType.MEDIUM_TEXT) || textViewList.contains(oFF.PresentationType.LONG_TEXT)))
	{
		controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT_VIEW)).setFontSize(oFF.UiCssLength.create("110%")));
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
		if (oFF.isNull(this.m_textViewSB))
		{
			this.m_textViewSB = this.getGenesis().newControl(oFF.UiType.SEGMENTED_BUTTON).setName(oFF.DdControllerFieldContainerCompact.TEXT_VIEW_DROPDOWN);
			this.m_textViewSB.registerOnSelectionChange(this);
			var textViewCurrent = oFF.PresentationType.SHORT_TEXT;
			this.m_textViewSB.addNewItem().setName(textViewCurrent.getName()).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SHORT_TEXT)).setCustomObject(textViewCurrent).setEnabled(textViewList.contains(textViewCurrent));
			textViewCurrent = oFF.PresentationType.MEDIUM_TEXT;
			this.m_textViewSB.addNewItem().setName(textViewCurrent.getName()).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MEDIUM_TEXT)).setCustomObject(textViewCurrent).setEnabled(textViewList.contains(textViewCurrent));
			textViewCurrent = oFF.PresentationType.LONG_TEXT;
			this.m_textViewSB.addNewItem().setName(textViewCurrent.getName()).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_LONG_TEXT)).setCustomObject(textViewCurrent).setEnabled(textViewList.contains(textViewCurrent));
		}
		controls.add(this.m_textViewSB);
		if (oFF.notNull(textView))
		{
			this.m_textViewSB.setSelectedName(textView.getName());
		}
		this.m_textViewSB.setEnabled(this.getModel().isDisplayText());
	}
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_PRESENTATION_ORDER)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
	if (oFF.isNull(this.m_arrangeKeyBeforeTextSegmentedButton))
	{
		this.m_arrangeKeyBeforeTextSegmentedButton = this.getGenesis().newControl(oFF.UiType.SEGMENTED_BUTTON);
		this.m_arrangeKeyBeforeTextSegmentedButton.setName(oFF.DdControllerFieldContainerCompact.KEY_BEFORE_TEXT_SWITCH);
		this.m_arrangeKeyBeforeTextSegmentedButton.addNewItem().setName(oFF.DdDisplayAs.TEXT_AND_KEY.getName()).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY_SHORT)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY)).setCustomObject(oFF.DdDisplayAs.TEXT_AND_KEY);
		this.m_arrangeKeyBeforeTextSegmentedButton.addNewItem().setName(oFF.DdDisplayAs.KEY_AND_TEXT.getName()).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT_SHORT)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT)).setCustomObject(oFF.DdDisplayAs.KEY_AND_TEXT);
		this.m_arrangeKeyBeforeTextSegmentedButton.registerOnSelectionChange(this);
	}
	controls.add(this.m_arrangeKeyBeforeTextSegmentedButton);
	var showBoth = this.getModel().isDisplayKey() && this.getModel().isDisplayText();
	this.m_arrangeKeyBeforeTextSegmentedButton.setSelectedName(this.getModel().isDisplayKeyBeforeText() ? oFF.DdDisplayAs.KEY_AND_TEXT.getName() : oFF.DdDisplayAs.TEXT_AND_KEY.getName());
	this.m_arrangeKeyBeforeTextSegmentedButton.setEnabled(showBoth);
	return controls;
};
oFF.DdControllerFieldContainerCompact.prototype.getSuffixControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (oFF.isNull(this.m_topButton))
	{
		this.m_topButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_topButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_TOP));
		this.m_topButton.setIcon("arrow-top");
		this.m_topButton.setName(oFF.DdControllerAbstract.TOP_BUTTON);
		this.m_topButton.registerOnPress(this);
	}
	this.m_topButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_topButton);
	if (oFF.isNull(this.m_upButton))
	{
		this.m_upButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_upButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
		this.m_upButton.setIcon("slim-arrow-up");
		this.m_upButton.setName(oFF.DdControllerAbstract.UP_BUTTON);
		this.m_upButton.registerOnPress(this);
	}
	this.m_upButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_upButton);
	if (oFF.isNull(this.m_downButton))
	{
		this.m_downButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_downButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
		this.m_downButton.setIcon("slim-arrow-down");
		this.m_downButton.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
		this.m_downButton.registerOnPress(this);
	}
	this.m_downButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_downButton);
	if (oFF.isNull(this.m_bottomButton))
	{
		this.m_bottomButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_bottomButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_BOTTOM));
		this.m_bottomButton.setIcon("arrow-bottom");
		this.m_bottomButton.setName(oFF.DdControllerAbstract.BOTTOM_BUTTON);
		this.m_bottomButton.registerOnPress(this);
	}
	this.m_bottomButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_bottomButton);
	return controls;
};
oFF.DdControllerFieldContainerCompact.prototype.getWidths = function()
{
	var result = oFF.XListOfString.create();
	if (this.getModel().isFieldBased())
	{
		result.add("95%");
	}
	else
	{
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
	}
	return result;
};
oFF.DdControllerFieldContainerCompact.prototype.getSuffixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("5em");
	result.add("5em");
	result.add("5em");
	result.add("5em");
	return result;
};
oFF.DdControllerFieldContainerCompact.prototype.getPrefixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("95%");
	result.add("95%");
	return result;
};
oFF.DdControllerFieldContainerCompact.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.UP_BUTTON:
			this.getModel().moveUp();
			break;

		case oFF.DdControllerAbstract.DOWN_BUTTON:
			this.getModel().moveDown();
			break;

		case oFF.DdControllerAbstract.TOP_BUTTON:
			this.getModel().moveTop();
			break;

		case oFF.DdControllerAbstract.BOTTOM_BUTTON:
			this.getModel().moveBottom();
			break;
	}
};
oFF.DdControllerFieldContainerCompact.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerFieldContainerCompact.DISPLAY_AS_DISPLAY:
			this.getModel().setDisplayAs(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.KEY_VIEW_DROPDOWN:
			this.getModel().setKeyView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.TEXT_VIEW_DROPDOWN:
			this.getModel().setTextView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(event.getControl().getSelectedItem().getCustomObject() === oFF.DdDisplayAs.KEY_AND_TEXT);
			break;
	}
};
oFF.DdControllerFieldContainerCompact.prototype.onChange = function(event)
{
	var checkbox = event.getControl();
	var switchControl = event.getControl();
	var controlName = switchControl.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setDisplayAs(checkbox.isChecked() ? oFF.DdDisplayAs.DISPLAY : oFF.DdDisplayAs.NO_DISPLAY);
			break;

		case oFF.DdControllerFieldContainerCompact.DISPLAY_KEY_SWITCH:
			this.getModel().setDisplayKey(checkbox.isChecked());
			break;

		case oFF.DdControllerFieldContainerCompact.DISPLAY_TEXT_SWITCH:
			this.getModel().setDisplayText(checkbox.isChecked());
			break;

		case oFF.DdControllerFieldContainerCompact.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(switchControl.isOn());
			break;
	}
};
oFF.DdControllerFieldContainerCompact.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerFieldContainerCompact.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerFieldContainerCompact.DISPLAY_AS_DISPLAY:
			this.getModel().setDisplayAs(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.KEY_VIEW_DROPDOWN:
			this.getModel().setKeyView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.TEXT_VIEW_DROPDOWN:
			this.getModel().setTextView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerCompact.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(event.getControl().getSelectedItem().getCustomObject() === oFF.DdDisplayAs.KEY_AND_TEXT);
			break;
	}
};

oFF.DdControllerFieldContainerExhaustive = function() {};
oFF.DdControllerFieldContainerExhaustive.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerFieldContainerExhaustive.prototype._ff_c = "DdControllerFieldContainerExhaustive";

oFF.DdControllerFieldContainerExhaustive.DISPLAY_KEY_SWITCH = "displayKey";
oFF.DdControllerFieldContainerExhaustive.DISPLAY_TEXT_SWITCH = "displayText";
oFF.DdControllerFieldContainerExhaustive.KEY_BEFORE_TEXT_SWITCH = "keyBeforeText";
oFF.DdControllerFieldContainerExhaustive.KEY_VIEW_DROPDOWN = "keyView";
oFF.DdControllerFieldContainerExhaustive.TEXT_VIEW_DROPDOWN = "textView";
oFF.DdControllerFieldContainerExhaustive.DISPLAY_AS_DROPDOWN = "displayAs";
oFF.DdControllerFieldContainerExhaustive.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerFieldContainerExhaustive();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerFieldContainerExhaustive.prototype.m_upButton = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_downButton = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_topButton = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_bottomButton = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_displayCheckbox = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_displayAsDropDown = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_keyViewDropDown = null;
oFF.DdControllerFieldContainerExhaustive.prototype.m_textViewDropDown = null;
oFF.DdControllerFieldContainerExhaustive.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	labelTexts.add("");
	return labelTexts;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getControls = function()
{
	var controls = oFF.XList.create();
	this.getLayoutedControls();
	return controls;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getLayoutedControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var i;
	var controls = oFF.XList.create();
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(oFF.XStringUtils.concatenate4(this.getModel().getComponentText(), " (", this.getModel().getComponentName(), ")")).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
	if (this.getModel().isFieldBased())
	{
		var display = this.getModel().getDisplayAs() !== oFF.DdDisplayAs.NO_DISPLAY;
		if (oFF.isNull(this.m_displayCheckbox))
		{
			this.m_displayCheckbox = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setName(oFF.DdControllerAbstract.DISPLAY_CHECKBOX);
			this.m_displayCheckbox.registerOnChange(this);
		}
		this.m_displayCheckbox.setChecked(display);
		controls.add(this.m_displayCheckbox);
	}
	else
	{
		var flex;
		var displayAsList = this.getModel().getAvailableDisplayAs();
		var displayAs = this.getModel().getDisplayAs();
		if (oFF.isNull(this.m_displayAsDropDown))
		{
			flex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setAlignContent(oFF.UiFlexAlignContent.END);
			flex.setWidth(oFF.UiCssLength.create("100%"));
			controls.add(flex);
			flex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_SETTINGS)).setAlignContent(oFF.UiFlexAlignContent.END).setWidth(oFF.UiCssLength.create("50%"));
			flex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_displayAsDropDown = flex.addNewItemOfType(oFF.UiType.DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
			for (i = 0; i < displayAsList.size(); i++)
			{
				var displayAsCurrent = displayAsList.get(i);
				var displayAsLocalization = null;
				if (displayAsCurrent === oFF.DdDisplayAs.NO_DISPLAY)
				{
					displayAsLocalization = localization.getText(oFF.DimensionDialogI18n.I18N_DD_NO_DISPLAY);
				}
				else if (displayAsCurrent === oFF.DdDisplayAs.TEXT)
				{
					displayAsLocalization = localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT);
				}
				else if (displayAsCurrent === oFF.DdDisplayAs.KEY)
				{
					displayAsLocalization = localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY);
				}
				else if (displayAsCurrent === oFF.DdDisplayAs.TEXT_AND_KEY)
				{
					displayAsLocalization = localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT_AND_KEY);
				}
				else if (displayAsCurrent === oFF.DdDisplayAs.KEY_AND_TEXT)
				{
					displayAsLocalization = localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY_AND_TEXT);
				}
				this.m_displayAsDropDown.addNewItem().setName(displayAsCurrent.getName()).setText(displayAsLocalization).setCustomObject(displayAsCurrent);
			}
			this.m_displayAsDropDown.setName(oFF.DdControllerFieldContainerExhaustive.DISPLAY_AS_DROPDOWN);
			this.m_displayAsDropDown.registerOnSelect(this);
		}
		if (oFF.notNull(displayAs))
		{
			this.m_displayAsDropDown.setSelectedName(displayAs.getName());
		}
		this.m_displayAsDropDown.setEnabled(oFF.XCollectionUtils.hasElements(displayAsList));
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
		var keyView = this.getModel().getKeyView();
		var keyViewList = this.getModel().getKeyViewsAvailable();
		if (oFF.XCollectionUtils.hasElements(keyViewList))
		{
			if (oFF.isNull(this.m_keyViewDropDown))
			{
				flex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setAlignContent(oFF.UiFlexAlignContent.END);
				flex.setWidth(oFF.UiCssLength.create("100%"));
				controls.add(flex);
				flex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_KEY)).setAlignContent(oFF.UiFlexAlignContent.END).setWidth(oFF.UiCssLength.create("50%"));
				flex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
				this.m_keyViewDropDown = flex.addNewItemOfType(oFF.UiType.DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
				for (i = 0; i < keyViewList.size(); i++)
				{
					var keyViewCurrent = keyViewList.get(i);
					this.m_keyViewDropDown.addNewItem().setName(keyViewCurrent.getName()).setText(keyViewCurrent.getName()).setCustomObject(keyViewCurrent);
				}
				this.m_keyViewDropDown.setName(oFF.DdControllerFieldContainerExhaustive.KEY_VIEW_DROPDOWN);
				this.m_keyViewDropDown.registerOnSelect(this);
			}
			if (oFF.notNull(keyView))
			{
				this.m_keyViewDropDown.setSelectedName(keyView.getName());
			}
			this.m_keyViewDropDown.setEnabled(oFF.XCollectionUtils.hasElements(keyViewList) && displayAs.isKey());
			controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
		}
		var textView = this.getModel().getTextView();
		var textViewList = this.getModel().getTextViewsAvailable();
		if (oFF.XCollectionUtils.hasElements(textViewList))
		{
			if (oFF.isNull(this.m_textViewDropDown))
			{
				flex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setAlignContent(oFF.UiFlexAlignContent.END);
				flex.setWidth(oFF.UiCssLength.create("100%"));
				controls.add(flex);
				flex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_TEXT)).setAlignContent(oFF.UiFlexAlignContent.END).setWidth(oFF.UiCssLength.create("50%"));
				flex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
				this.m_textViewDropDown = flex.addNewItemOfType(oFF.UiType.DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
				for (i = 0; i < textViewList.size(); i++)
				{
					var textViewCurrent = textViewList.get(i);
					this.m_textViewDropDown.addNewItem().setName(textViewCurrent.getName()).setText(textViewCurrent.getName()).setCustomObject(textViewCurrent);
				}
				this.m_textViewDropDown.setName(oFF.DdControllerFieldContainerExhaustive.TEXT_VIEW_DROPDOWN);
				this.m_textViewDropDown.registerOnSelect(this);
			}
			if (oFF.notNull(textView))
			{
				this.m_textViewDropDown.setSelectedName(textView.getName());
			}
			this.m_textViewDropDown.setEnabled(oFF.XCollectionUtils.hasElements(textViewList) && displayAs.isText());
			controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
		}
	}
	return controls;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getSuffixControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (oFF.isNull(this.m_topButton))
	{
		this.m_topButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_topButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_TOP));
		this.m_topButton.setIcon("arrow-top");
		this.m_topButton.setName(oFF.DdControllerAbstract.TOP_BUTTON);
		this.m_topButton.registerOnPress(this);
	}
	this.m_topButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_topButton);
	if (oFF.isNull(this.m_upButton))
	{
		this.m_upButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_upButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
		this.m_upButton.setIcon("slim-arrow-up");
		this.m_upButton.setName(oFF.DdControllerAbstract.UP_BUTTON);
		this.m_upButton.registerOnPress(this);
	}
	this.m_upButton.setEnabled(this.getModel().isPossibleMoveUp());
	controls.add(this.m_upButton);
	if (oFF.isNull(this.m_downButton))
	{
		this.m_downButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_downButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
		this.m_downButton.setIcon("slim-arrow-down");
		this.m_downButton.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
		this.m_downButton.registerOnPress(this);
	}
	this.m_downButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_downButton);
	if (oFF.isNull(this.m_bottomButton))
	{
		this.m_bottomButton = this.getGenesis().newControl(oFF.UiType.BUTTON);
		this.m_bottomButton.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_BOTTOM));
		this.m_bottomButton.setIcon("arrow-bottom");
		this.m_bottomButton.setName(oFF.DdControllerAbstract.BOTTOM_BUTTON);
		this.m_bottomButton.registerOnPress(this);
	}
	this.m_bottomButton.setEnabled(this.getModel().isPossibleMoveDown());
	controls.add(this.m_bottomButton);
	return controls;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getWidths = function()
{
	var result = oFF.XListOfString.create();
	if (this.getModel().isFieldBased())
	{
		result.add("95%");
	}
	else
	{
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
		result.add("95%");
	}
	return result;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getSuffixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("5em");
	result.add("5em");
	result.add("5em");
	result.add("5em");
	return result;
};
oFF.DdControllerFieldContainerExhaustive.prototype.getPrefixWidths = function()
{
	var result = oFF.XListOfString.create();
	result.add("95%");
	result.add("95%");
	return result;
};
oFF.DdControllerFieldContainerExhaustive.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.UP_BUTTON:
			this.getModel().moveUp();
			break;

		case oFF.DdControllerAbstract.DOWN_BUTTON:
			this.getModel().moveDown();
			break;

		case oFF.DdControllerAbstract.TOP_BUTTON:
			this.getModel().moveTop();
			break;

		case oFF.DdControllerAbstract.BOTTOM_BUTTON:
			this.getModel().moveBottom();
			break;
	}
};
oFF.DdControllerFieldContainerExhaustive.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerFieldContainerExhaustive.DISPLAY_AS_DROPDOWN:
			this.getModel().setDisplayAs(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.KEY_VIEW_DROPDOWN:
			this.getModel().setKeyView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.TEXT_VIEW_DROPDOWN:
			this.getModel().setTextView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(event.getControl().getSelectedItem().getCustomObject() === oFF.DdDisplayAs.KEY_AND_TEXT);
			break;
	}
};
oFF.DdControllerFieldContainerExhaustive.prototype.onChange = function(event)
{
	var checkbox = event.getControl();
	var switchControl = event.getControl();
	var controlName = switchControl.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setDisplayAs(checkbox.isChecked() ? oFF.DdDisplayAs.DISPLAY : oFF.DdDisplayAs.NO_DISPLAY);
			break;

		case oFF.DdControllerFieldContainerExhaustive.DISPLAY_KEY_SWITCH:
			this.getModel().setDisplayKey(checkbox.isChecked());
			break;

		case oFF.DdControllerFieldContainerExhaustive.DISPLAY_TEXT_SWITCH:
			this.getModel().setDisplayText(checkbox.isChecked());
			break;

		case oFF.DdControllerFieldContainerExhaustive.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(switchControl.isOn());
			break;
	}
};
oFF.DdControllerFieldContainerExhaustive.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerFieldContainerExhaustive.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.DdControllerFieldContainerExhaustive.DISPLAY_AS_DROPDOWN:
			this.getModel().setDisplayAs(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.KEY_VIEW_DROPDOWN:
			this.getModel().setKeyView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.TEXT_VIEW_DROPDOWN:
			this.getModel().setTextView(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerFieldContainerExhaustive.KEY_BEFORE_TEXT_SWITCH:
			this.getModel().setDisplayKeyBeforeText(event.getControl().getSelectedItem().getCustomObject() === oFF.DdDisplayAs.KEY_AND_TEXT);
			break;
	}
};

oFF.DdControllerHierarchy = function() {};
oFF.DdControllerHierarchy.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerHierarchy.prototype._ff_c = "DdControllerHierarchy";

oFF.DdControllerHierarchy.HIERARCHY_DROPDOWN = "hierarchyDropdown";
oFF.DdControllerHierarchy.DRILL_LEVEL_DROPDOWN = "drillLevelDropdown";
oFF.DdControllerHierarchy.NODE_POSITION_DROPDOWN = "nodePositionDropdown";
oFF.DdControllerHierarchy.POSTED_NODES_DROPDOWN = "postedNodesDropdown";
oFF.DdControllerHierarchy.NODE_CONDENSATION_CHECKBOX = "nodeCondensationCheckbox";
oFF.DdControllerHierarchy.createWithModelAndGenesis = function(application, context, model, dimension, genesis)
{
	var controller = new oFF.DdControllerHierarchy();
	controller.setupExt(application, context, model.getDdModelHierarchy(), genesis);
	controller.m_dimension = dimension;
	controller.m_modelDimension = model;
	model.getDdModelHierarchy().addListener(controller);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerHierarchy.prototype.m_activeFlex = null;
oFF.DdControllerHierarchy.prototype.m_drillLevelFlex = null;
oFF.DdControllerHierarchy.prototype.m_activeSwitch = null;
oFF.DdControllerHierarchy.prototype.m_hierarchyDropdown = null;
oFF.DdControllerHierarchy.prototype.m_hierarchyInput = null;
oFF.DdControllerHierarchy.prototype.m_drillLevelDropdown = null;
oFF.DdControllerHierarchy.prototype.m_nodePositionRBG = null;
oFF.DdControllerHierarchy.prototype.m_hierarchyCatalogController = null;
oFF.DdControllerHierarchy.prototype.m_nodeCondensationCheckbox = null;
oFF.DdControllerHierarchy.prototype.m_postedNodesCheckbox = null;
oFF.DdControllerHierarchy.prototype.m_valueHelpIco = null;
oFF.DdControllerHierarchy.prototype.m_dimension = null;
oFF.DdControllerHierarchy.prototype.m_modelDimension = null;
oFF.DdControllerHierarchy.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerHierarchy.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVE));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SELECTED_HIERARCHY));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_EXPAND_TO_LEVEL));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_POSITION_OF_LOWER_LEVE_NODES));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_VALUES_OF_POSTED_NODES));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CONDENSE_NODES_WITH_ONLY_ONE_LOWER_LEVEL_NODE));
	return labelTexts;
};
oFF.DdControllerHierarchy.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerHierarchy.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerHierarchy.prototype.getControls = function()
{
	this.getVerticalControls();
	return oFF.XList.create();
};
oFF.DdControllerHierarchy.prototype.getVerticalControls = function()
{
	var i;
	var controls = oFF.XList.create();
	var localization = this.getGenesis().getUiManager().getLocalization();
	var hierarchy = this.getModel().getHierarchy();
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SELECTED_HIERARCHY)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var availableHierarchies = this.getModel().getAvailableHierarchies();
	if (oFF.isNull(this.m_hierarchyDropdown) && oFF.XCollectionUtils.hasElements(availableHierarchies))
	{
		var hierarchyKeys = availableHierarchies.getKeysAsReadOnlyListOfString();
		this.m_hierarchyDropdown = this.getGenesis().newControl(oFF.UiType.COMBO_BOX).setName(oFF.DdControllerHierarchy.HIERARCHY_DROPDOWN);
		for (i = 0; i < hierarchyKeys.size(); i++)
		{
			var curHierarchy = hierarchyKeys.get(i);
			this.m_hierarchyDropdown.addNewItem().setText(this.m_modelDimension.isShowTechnical() ? curHierarchy : availableHierarchies.getByKey(curHierarchy)).setName(curHierarchy);
		}
		this.m_hierarchyDropdown.registerOnSelectionChange(this);
	}
	else if (oFF.isNull(this.m_hierarchyInput) && !oFF.XCollectionUtils.hasElements(availableHierarchies))
	{
		this.m_hierarchyInput = this.getGenesis().newControl(oFF.UiType.INPUT).setName(oFF.DdControllerHierarchy.HIERARCHY_DROPDOWN).setEditable(false);
		this.m_valueHelpIco = this.getGenesis().newControl(oFF.UiType.ICON);
		this.m_valueHelpIco.setName("HierarchyValeHelpButton");
		this.m_valueHelpIco.setIcon("value-help");
		this.m_valueHelpIco.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_VALUE_HELP));
		this.m_hierarchyInput.addEndIcon(this.m_valueHelpIco);
		this.m_hierarchyCatalogController = oFF.HierarchyCatalogController.create(this.getContext());
		this.m_valueHelpIco.registerOnPress(this);
	}
	if (oFF.notNull(this.m_hierarchyDropdown))
	{
		this.m_hierarchyDropdown.setEnabled(this.getModel().isSelectable());
		this.m_hierarchyDropdown.setSelectedName(hierarchy);
		controls.add(this.m_hierarchyDropdown);
	}
	if (oFF.notNull(this.m_hierarchyInput))
	{
		this.m_hierarchyInput.setEnabled(this.getModel().isSelectable());
		this.m_valueHelpIco.setEnabled(this.getModel().isSelectable());
		this.m_hierarchyInput.setText(this.m_modelDimension.isShowTechnical() ? this.getModel().getHierarchy() : this.getModel().getHierarchyText());
		controls.add(this.m_hierarchyInput);
	}
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	var active = this.getModel().isActive();
	if (oFF.isNull(this.m_activeFlex))
	{
		this.m_activeFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		this.m_activeFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_PRESENT_HIERARCHY)).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_activeFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em"));
		this.m_activeSwitch = this.m_activeFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerAbstract.DISPLAY_CHECKBOX).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_activeSwitch.registerOnChange(this);
	}
	this.m_activeSwitch.setOn(active);
	this.m_activeSwitch.setEnabled(this.getModel().isActivable());
	controls.add(this.m_activeFlex);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_NODES_TO_SHOW)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var drillLevel = this.getModel().getDrillLevel();
	if (oFF.isNull(this.m_drillLevelFlex))
	{
		this.m_drillLevelFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		var maxDrillLevel = this.getModel().getMaximumDrillLevel();
		if (maxDrillLevel < 1 || maxDrillLevel > 9)
		{
			maxDrillLevel = 10;
		}
		this.m_drillLevelFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		this.m_drillLevelDropdown = this.m_drillLevelFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.DdControllerHierarchy.DRILL_LEVEL_DROPDOWN).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_drillLevelDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ALL_NODES)).setName("-1").setCustomObject(oFF.XIntegerValue.create(-1));
		this.m_drillLevelDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ONLY_ROOT_NODE)).setName("0").setCustomObject(oFF.XIntegerValue.create(0));
		for (i = 1; i < maxDrillLevel; i++)
		{
			var iString = oFF.XInteger.convertToString(i);
			this.m_drillLevelDropdown.addNewItem().setText(localization.getTextWithPlaceholder(oFF.DimensionDialogI18n.I18N_DD_N_CHILD_NODES, iString)).setName(oFF.XInteger.convertToString(i)).setCustomObject(oFF.XIntegerValue.create(i));
			this.m_drillLevelDropdown.registerOnSelect(this);
		}
	}
	this.m_drillLevelDropdown.setEnabled(active);
	this.m_drillLevelDropdown.setSelectedName(oFF.XInteger.convertToString(drillLevel));
	controls.add(this.m_drillLevelFlex);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_POSITION_OF_LOWER_LEVE_NODES)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var nodePosition = this.getModel().getNodeAlignment();
	var supportsBottomUp = this.getModel().isSupportsBottomUp();
	if (oFF.isNull(this.m_nodePositionRBG))
	{
		this.m_nodePositionRBG = this.getGenesis().newControl(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.DdControllerHierarchy.NODE_POSITION_DROPDOWN).setEnabled(supportsBottomUp);
		this.m_nodePositionRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_BELOW)).setName(oFF.Alignment.CHILDREN_BELOW_PARENT.getName()).setCustomObject(oFF.Alignment.CHILDREN_BELOW_PARENT);
		this.m_nodePositionRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ABOVE)).setName(oFF.Alignment.CHILDREN_ABOVE_PARENT.getName()).setCustomObject(oFF.Alignment.CHILDREN_ABOVE_PARENT);
		this.m_nodePositionRBG.registerOnSelect(this);
	}
	this.m_nodePositionRBG.setEnabled(active && supportsBottomUp);
	this.m_nodePositionRBG.setSelectedName(nodePosition.getName());
	controls.add(this.m_nodePositionRBG);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_HIERARCHY_CONDENSATION)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var postedNodeVisibility = this.getModel().getMemberOfPostedNodeVisibility();
	if (oFF.isNull(this.m_postedNodesCheckbox))
	{
		this.m_postedNodesCheckbox = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setName(oFF.DdControllerHierarchy.POSTED_NODES_DROPDOWN).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_VALUES_OF_POSTED_NODES));
		this.m_postedNodesCheckbox.registerOnChange(this);
	}
	this.m_postedNodesCheckbox.setEnabled(active);
	this.m_postedNodesCheckbox.setChecked(postedNodeVisibility === oFF.ResultVisibility.HIDDEN);
	controls.add(this.m_postedNodesCheckbox);
	var nodeCondensation = this.getModel().isNodeCondensation();
	if (oFF.isNull(this.m_nodeCondensationCheckbox))
	{
		this.m_nodeCondensationCheckbox = this.getGenesis().newControl(oFF.UiType.CHECKBOX).setName(oFF.DdControllerHierarchy.NODE_CONDENSATION_CHECKBOX).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CONDENSE_NODES_WITH_ONLY_ONE_LOWER_LEVEL_NODE));
		this.m_nodeCondensationCheckbox.registerOnChange(this);
	}
	this.m_nodeCondensationCheckbox.setEnabled(active);
	this.m_nodeCondensationCheckbox.setChecked(nodeCondensation);
	controls.add(this.m_nodeCondensationCheckbox);
	return controls;
};
oFF.DdControllerHierarchy.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerHierarchy.prototype.getWidths = function()
{
	return null;
};
oFF.DdControllerHierarchy.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.DdControllerHierarchy.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.DdControllerHierarchy.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
	this.update();
};
oFF.DdControllerHierarchy.prototype.update = function()
{
	if (oFF.notNull(this.m_hierarchyDropdown))
	{
		var availableHierarchies = this.getModel().getAvailableHierarchies();
		var length = this.m_hierarchyDropdown.getItemCount();
		for (var i = 0; i < length; i++)
		{
			var item = this.m_hierarchyDropdown.getItem(i);
			var name = item.getName();
			item.setText(this.m_modelDimension.isShowTechnical() ? name : availableHierarchies.getByKey(name));
		}
	}
};
oFF.DdControllerHierarchy.prototype.onChange = function(event)
{
	var control = event.getControl();
	var checkbox = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setActive(control.isOn());
			break;

		case oFF.DdControllerHierarchy.NODE_CONDENSATION_CHECKBOX:
			this.getModel().setNodeCondensation(checkbox.isChecked());
			break;

		case oFF.DdControllerHierarchy.POSTED_NODES_DROPDOWN:
			this.getModel().setMemberOfPostedNodeVisibility(checkbox.isChecked() ? oFF.ResultVisibility.HIDDEN : oFF.ResultVisibility.ALWAYS);
			break;
	}
};
oFF.DdControllerHierarchy.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var rbg = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerHierarchy.DRILL_LEVEL_DROPDOWN:
			this.getModel().setDrillLevel(control.getSelectedItem().getCustomObject().getInteger());
			break;

		case oFF.DdControllerHierarchy.NODE_POSITION_DROPDOWN:
			this.getModel().setNodeAlignment(rbg.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerHierarchy.POSTED_NODES_DROPDOWN:
			this.getModel().setMemberOfPostedNodeVisibility(rbg.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerHierarchy.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerHierarchy.HIERARCHY_DROPDOWN:
			this.getModel().setHierarchy(control.getSelectedItem().getName());
			this.getModel().setActive(oFF.XStringUtils.isNotNullAndNotEmpty(control.getSelectedItem().getName()));
			break;

		case oFF.DdControllerHierarchy.DRILL_LEVEL_DROPDOWN:
			this.getModel().setDrillLevel(control.getSelectedItem().getCustomObject().getInteger());
			break;

		case oFF.DdControllerHierarchy.NODE_POSITION_DROPDOWN:
			this.getModel().setNodeAlignment(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerHierarchy.POSTED_NODES_DROPDOWN:
			this.getModel().setMemberOfPostedNodeVisibility(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerHierarchy.prototype.onPress = function(event)
{
	this.getGenesis().getRoot().setBusy(true);
	var serviceConfig = oFF.OlapApiModule.SERVICE_TYPE_HIERARCHY_CATALOG.createServiceConfig(this.getApplication());
	serviceConfig.setSystemName(this.m_dimension.getQueryModel().getSystemName());
	var dataSource = this.m_dimension.getQueryModel().getDataSource().getFullQualifiedName();
	serviceConfig.setDataSourceName(dataSource);
	serviceConfig.setDimension(this.m_dimension);
	serviceConfig.processHierarchyCatalogManagerCreation(oFF.SyncType.NON_BLOCKING, this, null).getData();
};
oFF.DdControllerHierarchy.prototype.onHierarchyCatalogManagerCreated = function(extResult, hierarchyCatalogManager, customIdentifier)
{
	var catalogManager = extResult.getData();
	this.getGenesis().getRoot().setBusy(false);
	this.m_hierarchyCatalogController.openDialog("Hierarchy", catalogManager, this, "hierarchy", null, this.m_modelDimension);
};
oFF.DdControllerHierarchy.prototype.setObject = function(parameter, object)
{
	this.getModel().setHierarchyText(object.getHierarchyDescription());
	var hierarchyName = object.getHierarchyName();
	this.getModel().setHierarchy(hierarchyName);
	this.getModel().setActive(oFF.XStringUtils.isNotNullAndNotEmpty(hierarchyName));
};

oFF.DdControllerSortCompact = function() {};
oFF.DdControllerSortCompact.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerSortCompact.prototype._ff_c = "DdControllerSortCompact";

oFF.DdControllerSortCompact.BREAK_GROUPING_CHECKBOX = "breakGroupingCheckbox";
oFF.DdControllerSortCompact.SORT_TYPE_DROPDOWN = "sortTypeDropdown";
oFF.DdControllerSortCompact.SORT_FIELD_DROPDOWN = "sortFieldDropdown";
oFF.DdControllerSortCompact.SORT_DIRECTION_DROPDOWN = "sortDirectionDropdown";
oFF.DdControllerSortCompact.CASE_SENSITIVITY_SWITCH = "caseSensitivitySwitch";
oFF.DdControllerSortCompact.LOCALE_INPUT = "localeInput";
oFF.DdControllerSortCompact.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerSortCompact();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerSortCompact.prototype.m_sortFlex = null;
oFF.DdControllerSortCompact.prototype.m_breakGroupingFlex = null;
oFF.DdControllerSortCompact.prototype.m_localeFlex = null;
oFF.DdControllerSortCompact.prototype.m_caseSensitiveFlex = null;
oFF.DdControllerSortCompact.prototype.m_sortTypeRBG = null;
oFF.DdControllerSortCompact.prototype.m_sortFieldDropdown = null;
oFF.DdControllerSortCompact.prototype.m_sortDirectionRadioButtonGroup = null;
oFF.DdControllerSortCompact.prototype.m_breakGroupingSwitch = null;
oFF.DdControllerSortCompact.prototype.m_caseSensitivitySwitch = null;
oFF.DdControllerSortCompact.prototype.m_localeInput = null;
oFF.DdControllerSortCompact.prototype.m_sortHierarchyItem = null;
oFF.DdControllerSortCompact.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerSortCompact.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVE));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_BY));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FIELD));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING));
	return labelTexts;
};
oFF.DdControllerSortCompact.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerSortCompact.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerSortCompact.prototype.getControls = function()
{
	this.getVertialControls();
	return oFF.XList.create();
};
oFF.DdControllerSortCompact.prototype.getVertialControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var i;
	var controls = oFF.XList.create();
	var active = this.getModel().isActive();
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var sortDirection = this.getModel().getSortDirection();
	if (oFF.isNull(this.m_sortDirectionRadioButtonGroup))
	{
		this.m_sortDirectionRadioButtonGroup = this.getGenesis().newControl(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.DdControllerSortCompact.SORT_DIRECTION_DROPDOWN);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_NO_SORT)).setName(oFF.XSortDirection.DISABLED.getName()).setCustomObject(oFF.XSortDirection.DISABLED);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ASCENDING)).setName(oFF.XSortDirection.ASCENDING.getName()).setCustomObject(oFF.XSortDirection.ASCENDING);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DESCENDING)).setName(oFF.XSortDirection.DESCENDING.getName()).setCustomObject(oFF.XSortDirection.DESCENDING);
		this.m_sortDirectionRadioButtonGroup.registerOnSelect(this);
	}
	this.m_sortDirectionRadioButtonGroup.setEnabled(true);
	this.m_sortDirectionRadioButtonGroup.setSelectedName(sortDirection.getName());
	controls.add(this.m_sortDirectionRadioButtonGroup);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_BY)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var sortType = this.getModel().getSortType();
	var availableSortTypes = this.getModel().getAvailableSortTypes();
	var sortField = this.getModel().getField();
	if (oFF.isNull(this.m_sortFlex))
	{
		this.m_sortFlex = this.getGenesis().newControl(oFF.UiType.VERTICAL_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		this.m_sortTypeRBG = this.m_sortFlex.addNewItemOfType(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.DdControllerSortCompact.SORT_TYPE_DROPDOWN);
		var curSortType = oFF.SortType.MEMBER_KEY;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_KEY)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.MEMBER_TEXT;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_TEXT)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.HIERARCHY;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortHierarchyItem = this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_HIERARCHY)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.FIELD;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FIELD)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.FILTER;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FILTER)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		this.m_sortTypeRBG.registerOnSelect(this);
		this.m_sortFieldDropdown = this.m_sortFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.DdControllerSortCompact.SORT_FIELD_DROPDOWN);
		var availableSortFields = this.getModel().getAvailableFields();
		for (i = 0; i < availableSortFields.size(); i++)
		{
			var curSortField = availableSortFields.get(i);
			this.m_sortFieldDropdown.addNewItem().setText(curSortField).setName(curSortField);
		}
		this.m_sortFieldDropdown.registerOnSelect(this);
	}
	this.m_sortTypeRBG.setEnabled(active);
	this.m_sortTypeRBG.setSelectedName(sortType.getName());
	if (oFF.notNull(this.m_sortHierarchyItem))
	{
		this.m_sortHierarchyItem.setEnabled(this.getModel().isHierarchySortEnabled());
	}
	controls.add(this.m_sortFlex);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	this.m_sortFieldDropdown.setEnabled(active);
	this.m_sortFieldDropdown.setVisible(sortType === oFF.SortType.FIELD);
	if (oFF.notNull(sortField))
	{
		this.m_sortFieldDropdown.setSelectedName(sortField);
	}
	if (false && this.getModel().supportsLocaleSorting())
	{
		if (oFF.isNull(this.m_localeFlex))
		{
			this.m_localeFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			this.m_localeFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_LOCALE)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_localeFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_localeInput = this.m_localeFlex.addNewItemOfType(oFF.UiType.INPUT).setName(oFF.DdControllerSortCompact.LOCALE_INPUT).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("50%"));
			this.m_localeInput.registerOnLiveChange(this);
		}
		this.m_localeInput.setEnabled(active);
		this.m_localeInput.setText(this.getModel().getLocale());
		controls.add(this.m_localeFlex);
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
		if (oFF.isNull(this.m_caseSensitiveFlex))
		{
			this.m_caseSensitiveFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CASE_SENSITIVE)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_caseSensitivitySwitch = this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerSortCompact.CASE_SENSITIVITY_SWITCH).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_caseSensitivitySwitch.registerOnChange(this);
		}
		this.m_caseSensitivitySwitch.setEnabled(active);
		this.m_caseSensitivitySwitch.setOn(this.getModel().isCaseSensitive());
		controls.add(this.m_caseSensitiveFlex);
	}
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	var breakGrouping = this.getModel().isBreakGrouping();
	if (oFF.isNull(this.m_breakGroupingFlex))
	{
		this.m_breakGroupingFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		this.m_breakGroupingSwitch = this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerSortCompact.BREAK_GROUPING_CHECKBOX).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_breakGroupingSwitch.registerOnChange(this);
	}
	this.m_breakGroupingSwitch.setOn(breakGrouping);
	this.m_breakGroupingSwitch.setEnabled(active && this.getModel().isBreakGroupingSupported());
	controls.add(this.m_breakGroupingFlex);
	return controls;
};
oFF.DdControllerSortCompact.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerSortCompact.prototype.getWidths = function()
{
	return null;
};
oFF.DdControllerSortCompact.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.DdControllerSortCompact.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.DdControllerSortCompact.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setActive(control.isOn());
			break;

		case oFF.DdControllerSortCompact.BREAK_GROUPING_CHECKBOX:
			this.getModel().setBreakGrouping(control.isOn());
			break;

		case oFF.DdControllerSortCompact.CASE_SENSITIVITY_SWITCH:
			this.getModel().setCaseSensitive(control.isOn());
			break;
	}
};
oFF.DdControllerSortCompact.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortCompact.SORT_TYPE_DROPDOWN:
			this.getModel().setSortType(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerSortCompact.SORT_FIELD_DROPDOWN:
			this.getModel().setField(control.getSelectedItem().getName());
			break;

		case oFF.DdControllerSortCompact.SORT_DIRECTION_DROPDOWN:
			this.getModel().setSortDirection(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerSortCompact.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerSortCompact.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortCompact.SORT_TYPE_DROPDOWN:
			this.getModel().setSortType(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerSortCompact.SORT_FIELD_DROPDOWN:
			this.getModel().setField(control.getSelectedItem().getName());
			break;

		case oFF.DdControllerSortCompact.SORT_DIRECTION_DROPDOWN:
			this.getModel().setSortDirection(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerSortCompact.prototype.onLiveChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortCompact.LOCALE_INPUT:
			this.getModel().setLocale(control.getText());
			break;
	}
};

oFF.DdControllerSortExhaustive = function() {};
oFF.DdControllerSortExhaustive.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerSortExhaustive.prototype._ff_c = "DdControllerSortExhaustive";

oFF.DdControllerSortExhaustive.BREAK_GROUPING_CHECKBOX = "breakGroupingCheckbox";
oFF.DdControllerSortExhaustive.SORT_TYPE_DROPDOWN = "sortTypeDropdown";
oFF.DdControllerSortExhaustive.SORT_FIELD_DROPDOWN = "sortFieldDropdown";
oFF.DdControllerSortExhaustive.SORT_DIRECTION_DROPDOWN = "sortDirectionDropdown";
oFF.DdControllerSortExhaustive.CASE_SENSITIVITY_SWITCH = "caseSensitivitySwitch";
oFF.DdControllerSortExhaustive.LOCALE_INPUT = "localeInput";
oFF.DdControllerSortExhaustive.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerSortExhaustive();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerSortExhaustive.prototype.m_sortFlex = null;
oFF.DdControllerSortExhaustive.prototype.m_breakGroupingFlex = null;
oFF.DdControllerSortExhaustive.prototype.m_localeFlex = null;
oFF.DdControllerSortExhaustive.prototype.m_caseSensitiveFlex = null;
oFF.DdControllerSortExhaustive.prototype.m_sortTypeRBG = null;
oFF.DdControllerSortExhaustive.prototype.m_sortFieldDropdown = null;
oFF.DdControllerSortExhaustive.prototype.m_sortDirectionRadioButtonGroup = null;
oFF.DdControllerSortExhaustive.prototype.m_breakGroupingSwitch = null;
oFF.DdControllerSortExhaustive.prototype.m_caseSensitivitySwitch = null;
oFF.DdControllerSortExhaustive.prototype.m_localeInput = null;
oFF.DdControllerSortExhaustive.prototype.m_sortHierarchyItem = null;
oFF.DdControllerSortExhaustive.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerSortExhaustive.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVE));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_BY));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FIELD));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION));
	labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING));
	return labelTexts;
};
oFF.DdControllerSortExhaustive.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerSortExhaustive.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerSortExhaustive.prototype.getControls = function()
{
	this.getVertialControls();
	return oFF.XList.create();
};
oFF.DdControllerSortExhaustive.prototype.getVertialControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var i;
	var controls = oFF.XList.create();
	var active = this.getModel().isActive();
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_DIRECTION)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var sortDirection = this.getModel().getSortDirection();
	if (oFF.isNull(this.m_sortDirectionRadioButtonGroup))
	{
		this.m_sortDirectionRadioButtonGroup = this.getGenesis().newControl(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.DdControllerSortExhaustive.SORT_DIRECTION_DROPDOWN);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_NO_SORT)).setName(oFF.XSortDirection.DISABLED.getName()).setCustomObject(oFF.XSortDirection.DISABLED);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ASCENDING)).setName(oFF.XSortDirection.ASCENDING.getName()).setCustomObject(oFF.XSortDirection.ASCENDING);
		this.m_sortDirectionRadioButtonGroup.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DESCENDING)).setName(oFF.XSortDirection.DESCENDING.getName()).setCustomObject(oFF.XSortDirection.DESCENDING);
		this.m_sortDirectionRadioButtonGroup.registerOnSelect(this);
	}
	this.m_sortDirectionRadioButtonGroup.setEnabled(true);
	this.m_sortDirectionRadioButtonGroup.setSelectedName(sortDirection.getName());
	controls.add(this.m_sortDirectionRadioButtonGroup);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	controls.add(this.getGenesis().newControl(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_BY)).setFontSize(oFF.UiCssLength.create("110%")));
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
	var sortType = this.getModel().getSortType();
	var availableSortTypes = this.getModel().getAvailableSortTypes();
	var sortField = this.getModel().getField();
	if (oFF.isNull(this.m_sortFlex))
	{
		this.m_sortFlex = this.getGenesis().newControl(oFF.UiType.VERTICAL_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		this.m_sortTypeRBG = this.m_sortFlex.addNewItemOfType(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.DdControllerSortExhaustive.SORT_TYPE_DROPDOWN);
		var curSortType = oFF.SortType.MEMBER_KEY;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_KEY)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.MEMBER_TEXT;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DIMENSION_TEXT)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.HIERARCHY;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortHierarchyItem = this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SORT_HIERARCHY)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.FIELD;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FIELD)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		curSortType = oFF.SortType.FILTER;
		if (availableSortTypes.contains(curSortType))
		{
			this.m_sortTypeRBG.addNewRadioButton().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FILTER)).setName(curSortType.getName()).setCustomObject(curSortType);
		}
		this.m_sortTypeRBG.registerOnSelect(this);
		this.m_sortFieldDropdown = this.m_sortFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.DdControllerSortExhaustive.SORT_FIELD_DROPDOWN);
		var availableSortFields = this.getModel().getAvailableFields();
		for (i = 0; i < availableSortFields.size(); i++)
		{
			var curSortField = availableSortFields.get(i);
			this.m_sortFieldDropdown.addNewItem().setText(curSortField).setName(curSortField);
		}
		this.m_sortFieldDropdown.registerOnSelect(this);
	}
	this.m_sortTypeRBG.setEnabled(active);
	this.m_sortTypeRBG.setSelectedName(sortType.getName());
	if (oFF.notNull(this.m_sortHierarchyItem))
	{
		this.m_sortHierarchyItem.setEnabled(this.getModel().isHierarchySortEnabled());
	}
	controls.add(this.m_sortFlex);
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	this.m_sortFieldDropdown.setEnabled(active);
	this.m_sortFieldDropdown.setVisible(sortType === oFF.SortType.FIELD);
	if (oFF.notNull(sortField))
	{
		this.m_sortFieldDropdown.setSelectedName(sortField);
	}
	if (this.getModel().supportsLocaleSorting())
	{
		if (oFF.isNull(this.m_localeFlex))
		{
			this.m_localeFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			this.m_localeFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_LOCALE)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_localeFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_localeInput = this.m_localeFlex.addNewItemOfType(oFF.UiType.INPUT).setName(oFF.DdControllerSortExhaustive.LOCALE_INPUT).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("50%"));
			this.m_localeInput.registerOnLiveChange(this);
		}
		this.m_localeInput.setEnabled(active);
		this.m_localeInput.setText(this.getModel().getLocale());
		controls.add(this.m_localeFlex);
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
		if (oFF.isNull(this.m_caseSensitiveFlex))
		{
			this.m_caseSensitiveFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
			this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CASE_SENSITIVE)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_caseSensitivitySwitch = this.m_caseSensitiveFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerSortExhaustive.CASE_SENSITIVITY_SWITCH).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_caseSensitivitySwitch.registerOnChange(this);
		}
		this.m_caseSensitivitySwitch.setEnabled(active);
		this.m_caseSensitivitySwitch.setOn(this.getModel().isCaseSensitive());
		controls.add(this.m_caseSensitiveFlex);
	}
	controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("100%")).setHeight(oFF.UiCssLength.create("1em")));
	var breakGrouping = this.getModel().isBreakGrouping();
	if (oFF.isNull(this.m_breakGroupingFlex))
	{
		this.m_breakGroupingFlex = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_BREAK_GROUPING)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		this.m_breakGroupingSwitch = this.m_breakGroupingFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerSortExhaustive.BREAK_GROUPING_CHECKBOX).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		this.m_breakGroupingSwitch.registerOnChange(this);
	}
	this.m_breakGroupingSwitch.setOn(breakGrouping);
	this.m_breakGroupingSwitch.setEnabled(active && this.getModel().isBreakGroupingSupported());
	controls.add(this.m_breakGroupingFlex);
	return controls;
};
oFF.DdControllerSortExhaustive.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerSortExhaustive.prototype.getWidths = function()
{
	return null;
};
oFF.DdControllerSortExhaustive.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.DdControllerSortExhaustive.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.DdControllerSortExhaustive.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerAbstract.DISPLAY_CHECKBOX:
			this.getModel().setActive(control.isOn());
			break;

		case oFF.DdControllerSortExhaustive.BREAK_GROUPING_CHECKBOX:
			this.getModel().setBreakGrouping(control.isOn());
			break;

		case oFF.DdControllerSortExhaustive.CASE_SENSITIVITY_SWITCH:
			this.getModel().setCaseSensitive(control.isOn());
			break;
	}
};
oFF.DdControllerSortExhaustive.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortExhaustive.SORT_TYPE_DROPDOWN:
			this.getModel().setSortType(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerSortExhaustive.SORT_FIELD_DROPDOWN:
			this.getModel().setField(control.getSelectedItem().getName());
			break;

		case oFF.DdControllerSortExhaustive.SORT_DIRECTION_DROPDOWN:
			this.getModel().setSortDirection(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerSortExhaustive.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerSortExhaustive.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortExhaustive.SORT_TYPE_DROPDOWN:
			this.getModel().setSortType(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerSortExhaustive.SORT_FIELD_DROPDOWN:
			this.getModel().setField(control.getSelectedItem().getName());
			break;

		case oFF.DdControllerSortExhaustive.SORT_DIRECTION_DROPDOWN:
			this.getModel().setSortDirection(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerSortExhaustive.prototype.onLiveChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerSortExhaustive.LOCALE_INPUT:
			this.getModel().setLocale(control.getText());
			break;
	}
};

oFF.DdControllerTotalsCompact = function() {};
oFF.DdControllerTotalsCompact.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerTotalsCompact.prototype._ff_c = "DdControllerTotalsCompact";

oFF.DdControllerTotalsCompact.POSITION_DROPDOWN = "positionDropdown";
oFF.DdControllerTotalsCompact.VISIBILITY_DROPDOWN = "visibilityDropdown";
oFF.DdControllerTotalsCompact.VISIBILITY_SWITCH = "visibilitySwitch";
oFF.DdControllerTotalsCompact.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerTotalsCompact();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerTotalsCompact.prototype.m_visibilitySwitch = null;
oFF.DdControllerTotalsCompact.prototype.m_visibilitySB = null;
oFF.DdControllerTotalsCompact.prototype.m_horizontalSwitchLayout = null;
oFF.DdControllerTotalsCompact.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerTotalsCompact.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	if (this.getModel().getResultAlignment() === null)
	{
		labelTexts.add(this.getModel().getResultStructureElement().getName());
	}
	else
	{
		labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES));
	}
	return labelTexts;
};
oFF.DdControllerTotalsCompact.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerTotalsCompact.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerTotalsCompact.prototype.getControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (this.getModel().getResultAlignment() === null)
	{
		if (oFF.isNull(this.m_visibilitySwitch))
		{
			this.m_visibilitySwitch = this.getGenesis().newControl(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerTotalsCompact.VISIBILITY_SWITCH);
			this.m_visibilitySwitch.registerOnChange(this);
		}
		this.m_visibilitySwitch.setOn(this.getModel().getResultVisibility() !== oFF.ResultVisibility.HIDDEN);
		controls.add(this.m_visibilitySwitch);
	}
	else
	{
		var visibility = this.getModel().getResultVisibility();
		if (oFF.isNull(this.m_visibilitySB))
		{
			this.m_visibilitySB = this.getGenesis().newControl(oFF.UiType.SEGMENTED_BUTTON).setName(oFF.DdControllerTotalsCompact.VISIBILITY_DROPDOWN).setWidth(oFF.UiCssLength.create("90%"));
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS)).setName(oFF.ResultVisibility.ALWAYS.getName()).setCustomObject(oFF.ResultVisibility.ALWAYS);
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CONDITIONAL)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE)).setName(oFF.ResultVisibility.CONDITIONAL.getName()).setCustomObject(oFF.ResultVisibility.CONDITIONAL).setEnabled(this.getModel().isSupportsConditionalResultVisibility());
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_ALWAYS)).setName(oFF.ResultVisibility.HIDDEN.getName()).setCustomObject(oFF.ResultVisibility.HIDDEN);
			this.m_visibilitySB.registerOnSelectionChange(this);
		}
		this.m_visibilitySB.setSelectedName(visibility.getName());
		controls.add(this.m_visibilitySB);
	}
	return controls;
};
oFF.DdControllerTotalsCompact.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerTotalsCompact.prototype.getWidths = function()
{
	return null;
};
oFF.DdControllerTotalsCompact.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.DdControllerTotalsCompact.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.DdControllerTotalsCompact.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerTotalsCompact.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsCompact.VISIBILITY_SWITCH:
			this.getModel().setResultVisibility(control.isOn() ? oFF.ResultVisibility.VISIBLE : oFF.ResultVisibility.HIDDEN);
			break;
	}
};
oFF.DdControllerTotalsCompact.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsCompact.VISIBILITY_DROPDOWN:
			this.getModel().setResultVisibility(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerTotalsCompact.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerTotalsCompact.prototype.getVerticalControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (this.getModel().getResultAlignment() === null)
	{
		if (oFF.isNull(this.m_horizontalSwitchLayout))
		{
			this.m_horizontalSwitchLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT);
			this.m_horizontalSwitchLayout.setWidth(oFF.UiCssLength.create("100%"));
			this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.LABEL).setText(this.getInternationalText(localization)).setWidth(oFF.UiCssLength.create("auto")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_visibilitySwitch = this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerTotalsCompact.VISIBILITY_SWITCH).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_visibilitySwitch.registerOnChange(this);
		}
		this.m_visibilitySwitch.setOn(this.getModel().getResultVisibility() !== oFF.ResultVisibility.HIDDEN);
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
		controls.add(this.m_horizontalSwitchLayout);
	}
	else
	{
		var visibility = this.getModel().getResultVisibility();
		if (oFF.isNull(this.m_visibilitySB))
		{
			this.m_visibilitySB = this.getGenesis().newControl(oFF.UiType.SEGMENTED_BUTTON).setName(oFF.DdControllerTotalsCompact.VISIBILITY_DROPDOWN).setWidth(oFF.UiCssLength.create("90%"));
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS)).setName(oFF.ResultVisibility.ALWAYS.getName()).setCustomObject(oFF.ResultVisibility.ALWAYS);
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_CONDITIONAL)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE)).setName(oFF.ResultVisibility.CONDITIONAL.getName()).setCustomObject(oFF.ResultVisibility.CONDITIONAL).setEnabled(this.getModel().isSupportsConditionalResultVisibility());
			this.m_visibilitySB.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_ALWAYS)).setName(oFF.ResultVisibility.HIDDEN.getName()).setCustomObject(oFF.ResultVisibility.HIDDEN);
			this.m_visibilitySB.registerOnSelectionChange(this);
		}
		this.m_visibilitySB.setSelectedName(visibility.getName());
		controls.add(this.m_visibilitySB);
	}
	return controls;
};
oFF.DdControllerTotalsCompact.prototype.getInternationalText = function(localization)
{
	if (this.getModel().getResultStructureElement() === oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS)
	{
		return localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS_INCLUDING);
	}
	if (this.getModel().getResultStructureElement() === oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS)
	{
		return localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS_REMAINING);
	}
	return "";
};
oFF.DdControllerTotalsCompact.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsCompact.VISIBILITY_DROPDOWN:
			this.getModel().setResultVisibility(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerTotalsCompact.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};

oFF.DdControllerTotalsExhaustive = function() {};
oFF.DdControllerTotalsExhaustive.prototype = new oFF.DdControllerFlexible();
oFF.DdControllerTotalsExhaustive.prototype._ff_c = "DdControllerTotalsExhaustive";

oFF.DdControllerTotalsExhaustive.POSITION_DROPDOWN = "positionDropdown";
oFF.DdControllerTotalsExhaustive.VISIBILITY_DROPDOWN = "visibilityDropdown";
oFF.DdControllerTotalsExhaustive.VISIBILITY_SWITCH = "visibilitySwitch";
oFF.DdControllerTotalsExhaustive.createWithModelAndGenesis = function(application, context, model, genesis)
{
	var controller = new oFF.DdControllerTotalsExhaustive();
	controller.setupExt(application, context, model, genesis);
	model.addListener(controller);
	return controller;
};
oFF.DdControllerTotalsExhaustive.prototype.m_positionDropdown = null;
oFF.DdControllerTotalsExhaustive.prototype.m_visibilitySwitch = null;
oFF.DdControllerTotalsExhaustive.prototype.m_visibilityDropdown = null;
oFF.DdControllerTotalsExhaustive.prototype.m_horizontalSwitchLayout = null;
oFF.DdControllerTotalsExhaustive.prototype.m_visibilityLayout = null;
oFF.DdControllerTotalsExhaustive.prototype.m_alignmentLayout = null;
oFF.DdControllerTotalsExhaustive.prototype.getPrefixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerTotalsExhaustive.prototype.getLabelTexts = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var labelTexts = oFF.XListOfString.create();
	if (this.getModel().getResultAlignment() === null)
	{
		labelTexts.add(this.getModel().getResultStructureElement().getName());
	}
	else
	{
		labelTexts.add(localization.getText(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES));
	}
	return labelTexts;
};
oFF.DdControllerTotalsExhaustive.prototype.getSuffixLabelTexts = function()
{
	var labelTexts = oFF.XListOfString.create();
	return labelTexts;
};
oFF.DdControllerTotalsExhaustive.prototype.getPrefixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerTotalsExhaustive.prototype.getControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (this.getModel().getResultAlignment() === null)
	{
		if (oFF.isNull(this.m_visibilitySwitch))
		{
			this.m_visibilitySwitch = this.getGenesis().newControl(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerTotalsExhaustive.VISIBILITY_SWITCH);
			this.m_visibilitySwitch.registerOnChange(this);
		}
		this.m_visibilitySwitch.setOn(this.getModel().getResultVisibility() !== oFF.ResultVisibility.HIDDEN);
		controls.add(this.m_visibilitySwitch);
	}
	else
	{
		var visibility = this.getModel().getResultVisibility();
		if (oFF.isNull(this.m_visibilityDropdown))
		{
			this.m_visibilityDropdown = this.getGenesis().newControl(oFF.UiType.DROPDOWN).setName(oFF.DdControllerTotalsExhaustive.VISIBILITY_DROPDOWN);
			this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS)).setName(oFF.ResultVisibility.ALWAYS.getName()).setCustomObject(oFF.ResultVisibility.ALWAYS);
			if (this.getModel().isSupportsConditionalResultVisibility())
			{
				this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE)).setName(oFF.ResultVisibility.CONDITIONAL.getName()).setCustomObject(oFF.ResultVisibility.CONDITIONAL);
			}
			this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS)).setName(oFF.ResultVisibility.HIDDEN.getName()).setCustomObject(oFF.ResultVisibility.HIDDEN);
			this.m_visibilityDropdown.registerOnSelect(this);
			this.m_visibilityDropdown.setSelectedName(visibility.getName());
		}
		this.m_visibilityDropdown.setSelectedName(visibility.getName());
		controls.add(this.m_visibilityDropdown);
	}
	if (this.getModel().getResultAlignment() !== null && this.getModel().isSupportsResultAlignment())
	{
		var alignment = this.getModel().getResultAlignment();
		if (oFF.isNull(this.m_positionDropdown))
		{
			this.m_positionDropdown = this.getGenesis().newControl(oFF.UiType.DROPDOWN).setName(oFF.DdControllerTotalsExhaustive.POSITION_DROPDOWN);
			var availableAlignments = this.getModel().getSupportedResultAlignments();
			var curAlignment = oFF.ResultAlignment.TOP;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE)).setName(curAlignment.getName()).setCustomObject(curAlignment);
			}
			curAlignment = oFF.ResultAlignment.TOPBOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			curAlignment = oFF.ResultAlignment.BOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			this.m_positionDropdown.registerOnSelect(this);
		}
		this.m_positionDropdown.setSelectedName(alignment.getName());
		controls.add(this.m_positionDropdown);
	}
	return controls;
};
oFF.DdControllerTotalsExhaustive.prototype.getSuffixControls = function()
{
	var controls = oFF.XList.create();
	return controls;
};
oFF.DdControllerTotalsExhaustive.prototype.getWidths = function()
{
	return null;
};
oFF.DdControllerTotalsExhaustive.prototype.getSuffixWidths = function()
{
	return null;
};
oFF.DdControllerTotalsExhaustive.prototype.getPrefixWidths = function()
{
	return null;
};
oFF.DdControllerTotalsExhaustive.prototype.onObservableModelChange = function(model)
{
	this.getPrefixControls();
	this.getControls();
	this.getSuffixControls();
};
oFF.DdControllerTotalsExhaustive.prototype.onChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsExhaustive.VISIBILITY_SWITCH:
			this.getModel().setResultVisibility(control.isOn() ? oFF.ResultVisibility.VISIBLE : oFF.ResultVisibility.HIDDEN);
			break;
	}
};
oFF.DdControllerTotalsExhaustive.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsExhaustive.VISIBILITY_DROPDOWN:
			this.getModel().setResultVisibility(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerTotalsExhaustive.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};
oFF.DdControllerTotalsExhaustive.prototype.getVerticalControls = function()
{
	var localization = this.getGenesis().getUiManager().getLocalization();
	var controls = oFF.XList.create();
	if (this.getModel().getResultAlignment() === null)
	{
		if (oFF.isNull(this.m_horizontalSwitchLayout))
		{
			this.m_horizontalSwitchLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT);
			this.m_horizontalSwitchLayout.setWidth(oFF.UiCssLength.create("100%"));
			this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.LABEL).setText(this.getInternationalText(localization)).setWidth(oFF.UiCssLength.create("50%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_visibilitySwitch = this.m_horizontalSwitchLayout.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.DdControllerTotalsExhaustive.VISIBILITY_SWITCH).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_visibilitySwitch.registerOnChange(this);
		}
		this.m_visibilitySwitch.setOn(this.getModel().getResultVisibility() !== oFF.ResultVisibility.HIDDEN);
		controls.add(this.getGenesis().newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
		controls.add(this.m_horizontalSwitchLayout);
	}
	else
	{
		var visibility = this.getModel().getResultVisibility();
		if (oFF.isNull(this.m_visibilityLayout) || oFF.isNull(this.m_visibilityDropdown))
		{
			this.m_visibilityLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT);
			this.m_visibilityLayout.setWidth(oFF.UiCssLength.create("100%"));
			this.m_visibilityLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES)).setWidth(oFF.UiCssLength.create("50%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_visibilityLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_visibilityDropdown = this.m_visibilityLayout.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.DdControllerTotalsExhaustive.VISIBILITY_DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
			this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_ALWAYS)).setName(oFF.ResultVisibility.ALWAYS.getName()).setCustomObject(oFF.ResultVisibility.ALWAYS);
			this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DISPLAY_IF_MORE_THAN_ONE)).setName(oFF.ResultVisibility.CONDITIONAL.getName()).setCustomObject(oFF.ResultVisibility.CONDITIONAL).setEnabled(this.getModel().isSupportsConditionalResultVisibility());
			this.m_visibilityDropdown.addNewItem().setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS)).setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_SUPPRESS_ALWAYS)).setName(oFF.ResultVisibility.HIDDEN.getName()).setCustomObject(oFF.ResultVisibility.HIDDEN);
			this.m_visibilityDropdown.registerOnSelect(this);
		}
		this.m_visibilityDropdown.setSelectedName(visibility.getName());
		controls.add(this.m_visibilityLayout);
	}
	var availableAlignments = this.getModel().getSupportedResultAlignments();
	if (this.getModel().getResultAlignment() !== null && this.getModel().isSupportsResultAlignment() && oFF.XCollectionUtils.hasElements(availableAlignments))
	{
		var alignment = this.getModel().getResultAlignment();
		if (oFF.isNull(this.m_alignmentLayout) || oFF.isNull(this.m_positionDropdown))
		{
			this.m_alignmentLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT);
			this.m_alignmentLayout.setWidth(oFF.UiCssLength.create("100%"));
			this.m_alignmentLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_RESULT_LINES_POSITION)).setWidth(oFF.UiCssLength.create("50%")).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
			this.m_alignmentLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			this.m_positionDropdown = this.m_alignmentLayout.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.DdControllerTotalsExhaustive.POSITION_DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
			var curAlignment = oFF.ResultAlignment.TOP;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE)).setName(curAlignment.getName()).setCustomObject(curAlignment);
			}
			curAlignment = oFF.ResultAlignment.TOPBOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			curAlignment = oFF.ResultAlignment.BOTTOM;
			if (availableAlignments.contains(curAlignment))
			{
				this.m_positionDropdown.addNewItem().setText(localization.getText(oFF.LayoutDialogI18n.I18N_LD_BELOW)).setName(curAlignment.getName()).setCustomObject(curAlignment).setEnabled(availableAlignments.contains(curAlignment));
			}
			this.m_positionDropdown.registerOnSelect(this);
		}
		this.m_positionDropdown.setSelectedName(alignment.getName());
		controls.add(this.m_alignmentLayout);
	}
	return controls;
};
oFF.DdControllerTotalsExhaustive.prototype.getInternationalText = function(localization)
{
	if (this.getModel().getResultStructureElement() === oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS)
	{
		return localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS_INCLUDING);
	}
	if (this.getModel().getResultStructureElement() === oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS)
	{
		return localization.getText(oFF.DimensionDialogI18n.I18N_DD_TOTALS_REMAINING);
	}
	return "";
};
oFF.DdControllerTotalsExhaustive.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var controlName = control.getName();
	switch (controlName)
	{
		case oFF.DdControllerTotalsExhaustive.VISIBILITY_DROPDOWN:
			this.getModel().setResultVisibility(control.getSelectedItem().getCustomObject());
			break;

		case oFF.DdControllerTotalsExhaustive.POSITION_DROPDOWN:
			this.getModel().setResultAlignment(control.getSelectedItem().getCustomObject());
			break;
	}
};

oFF.DdModelDimension = function() {};
oFF.DdModelDimension.prototype = new oFF.DdModelOrderable();
oFF.DdModelDimension.prototype._ff_c = "DdModelDimension";

oFF.DdModelDimension.createFrom = function(dimension, visible, containingList, parentModel)
{
	var instance = new oFF.DdModelDimension();
	instance.setupExt(dimension, visible, oFF.isNull(containingList) && oFF.isNull(parentModel));
	instance.setupListeners();
	instance.setupContainer(containingList, parentModel);
	return instance;
};
oFF.DdModelDimension.prototype.m_showTechnical = false;
oFF.DdModelDimension.prototype.m_componentName = null;
oFF.DdModelDimension.prototype.m_componentText = null;
oFF.DdModelDimension.prototype.m_mainAttribute = null;
oFF.DdModelDimension.prototype.m_secondaryAttributeInventory = null;
oFF.DdModelDimension.prototype.m_fieldInventory = null;
oFF.DdModelDimension.prototype.m_secondaryAttributesOrderInactive = null;
oFF.DdModelDimension.prototype.m_secondaryAttributesOrderActive = null;
oFF.DdModelDimension.prototype.m_fieldsOrderInactive = null;
oFF.DdModelDimension.prototype.m_fieldsOrderActive = null;
oFF.DdModelDimension.prototype.m_secondaryAttributesOrderInactiveSelected = null;
oFF.DdModelDimension.prototype.m_secondaryAttributesOrderActiveSelected = null;
oFF.DdModelDimension.prototype.m_fieldsOrderInactiveSelected = null;
oFF.DdModelDimension.prototype.m_fieldsOrderActiveSelected = null;
oFF.DdModelDimension.prototype.m_fieldLayoutType = null;
oFF.DdModelDimension.prototype.m_availableFieldLayoutTypes = null;
oFF.DdModelDimension.prototype.m_visible = false;
oFF.DdModelDimension.prototype.m_ddModelReadMode = null;
oFF.DdModelDimension.prototype.m_ddModelSorting = null;
oFF.DdModelDimension.prototype.m_ddModelHierarchy = null;
oFF.DdModelDimension.prototype.m_ddModelTotals = null;
oFF.DdModelDimension.prototype.m_ddModelTotalsIncluded = null;
oFF.DdModelDimension.prototype.m_ddModelTotalsRemaining = null;
oFF.DdModelDimension.prototype.isShowTechnical = function()
{
	return this.m_showTechnical;
};
oFF.DdModelDimension.prototype.setShowTechnical = function(showTechnical)
{
	this.m_showTechnical = showTechnical;
	this.callListeners();
};
oFF.DdModelDimension.prototype.setVisible = function(visible)
{
	this.m_visible = visible;
};
oFF.DdModelDimension.prototype.setupExt = function(dimension, visible, initializeSubModels)
{
	this.m_visible = visible;
	this.m_componentName = dimension.getName();
	this.m_componentText = dimension.getText();
	this.m_fieldLayoutType = dimension.getFieldLayoutType();
	this.m_availableFieldLayoutTypes = oFF.XList.create();
	if (dimension.supportsFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTE_BASED))
	{
		this.m_availableFieldLayoutTypes.add(oFF.FieldLayoutType.ATTRIBUTE_BASED);
	}
	if (dimension.supportsFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS))
	{
		this.m_availableFieldLayoutTypes.add(oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS);
	}
	if (dimension.supportsFieldLayoutType(oFF.FieldLayoutType.FIELD_BASED))
	{
		this.m_availableFieldLayoutTypes.add(oFF.FieldLayoutType.FIELD_BASED);
	}
	if (initializeSubModels)
	{
		this.initializeMainAttributes(dimension);
		this.initializeDetailsLayout(dimension);
		this.initializeReadMode(dimension);
		this.initializeSorting(dimension);
		this.initializeHierarchy(dimension);
		this.initializeTotals(dimension);
	}
};
oFF.DdModelDimension.prototype.initializeDetailsLayout = function(dimension)
{
	var resultSetAttributes = dimension.getResultSetAttributes();
	this.m_secondaryAttributeInventory = oFF.XHashMapByString.create();
	this.m_secondaryAttributesOrderActive = oFF.XList.create();
	this.m_secondaryAttributesOrderInactive = oFF.XList.create();
	this.m_secondaryAttributesOrderActiveSelected = oFF.XList.create();
	this.m_secondaryAttributesOrderInactiveSelected = oFF.XList.create();
	var dimensionMainAttribute = dimension.getMainAttribute();
	for (var h = 0; h < resultSetAttributes.size(); h++)
	{
		var resultSetAttribute = resultSetAttributes.get(h);
		var resultSetAttributeName = resultSetAttribute.getName();
		if (oFF.notNull(this.m_mainAttribute) && oFF.notNull(dimensionMainAttribute) && oFF.XString.isEqual(resultSetAttributeName, dimensionMainAttribute.getName()))
		{
			this.m_mainAttribute.applyResultSetSettings(resultSetAttribute);
		}
		else
		{
			var resultSetAttributeModel = oFF.DdModelFieldContainer.createFromFieldContainer(resultSetAttribute, this.m_secondaryAttributesOrderActive, this);
			resultSetAttributeModel.applyResultSetSettings(resultSetAttribute);
			this.m_secondaryAttributeInventory.put(resultSetAttributeName, resultSetAttributeModel);
		}
	}
	var attributes = dimension.getAttributes();
	for (var i = 0; i < attributes.size(); i++)
	{
		var attribute = attributes.get(i);
		var attributeName = attribute.getName();
		if ((oFF.isNull(dimensionMainAttribute) || oFF.isNull(this.m_mainAttribute) || !oFF.XString.isEqual(attributeName, dimensionMainAttribute.getName())) && !this.m_secondaryAttributeInventory.containsKey(attributeName))
		{
			var attributeModel = oFF.DdModelFieldContainer.createFromFieldContainer(attribute, this.m_secondaryAttributesOrderInactive, this);
			this.m_secondaryAttributeInventory.put(attributeName, attributeModel);
		}
	}
	this.m_fieldInventory = oFF.XHashMapByString.create();
	this.m_fieldsOrderInactive = oFF.XList.create();
	this.m_fieldsOrderActive = oFF.XList.create();
	this.m_fieldsOrderInactiveSelected = oFF.XList.create();
	this.m_fieldsOrderActiveSelected = oFF.XList.create();
	var resultSetFields = dimension.getResultSetFields();
	var mainFieldList = null;
	if (oFF.notNull(dimensionMainAttribute))
	{
		mainFieldList = dimensionMainAttribute.getFields();
	}
	if (!oFF.XCollectionUtils.hasElements(mainFieldList))
	{
		var mainFieldList2 = oFF.XList.create();
		mainFieldList2.add(dimension.getFlatKeyField());
		mainFieldList2.add(dimension.getHierarchyKeyField());
		mainFieldList2.add(dimension.getFlatDisplayKeyField());
		mainFieldList2.add(dimension.getHierarchyDisplayKeyField());
		mainFieldList2.add(dimension.getFlatTextField());
		mainFieldList2.add(dimension.getHierarchyTextField());
		mainFieldList = mainFieldList2;
	}
	for (var j = 0; j < resultSetFields.size(); j++)
	{
		var resultSetField = resultSetFields.get(j);
		if (!mainFieldList.contains(resultSetField))
		{
			var resultSetFieldModel = oFF.DdModelFieldContainer.createFromSingleField(resultSetField, this.m_fieldsOrderActive, this);
			resultSetFieldModel.setDisplayAs(oFF.DdDisplayAs.DISPLAY);
			this.m_fieldInventory.put(resultSetField.getName(), resultSetFieldModel);
		}
	}
	var fields = dimension.getFields();
	for (var k = 0; k < fields.size(); k++)
	{
		var field = fields.get(k);
		var fieldName = field.getName();
		if (!mainFieldList.contains(field) && !this.m_fieldInventory.containsKey(fieldName))
		{
			var fieldModel = oFF.DdModelFieldContainer.createFromSingleField(field, this.m_fieldsOrderInactive, this);
			this.m_fieldInventory.put(fieldName, fieldModel);
		}
	}
};
oFF.DdModelDimension.prototype.initializeTotals = function(dimension)
{
	if (dimension.supportsTotals())
	{
		var capabilities = dimension.getModelCapabilities();
		this.m_ddModelTotals = oFF.DdModelTotals.createFrom(capabilities, dimension, true, null, null);
		if (capabilities.supportsConditionalResults())
		{
			this.m_ddModelTotalsIncluded = oFF.DdModelTotals.createFrom(capabilities, dimension, true, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, null);
			this.m_ddModelTotalsRemaining = oFF.DdModelTotals.createFrom(capabilities, dimension, true, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, null);
		}
	}
};
oFF.DdModelDimension.prototype.initializeMainAttributes = function(dimension)
{
	var mainAttribute = dimension.getMainAttribute();
	if (oFF.notNull(mainAttribute))
	{
		this.m_mainAttribute = oFF.DdModelFieldContainer.createFromFieldContainer(mainAttribute, null, null);
	}
	else
	{
		this.m_mainAttribute = oFF.DdModelFieldContainer.createFromFieldContainer(dimension, null, null);
	}
};
oFF.DdModelDimension.prototype.initializeReadMode = function(dimension)
{
	this.m_ddModelReadMode = oFF.DdModelReadMode.createFrom(dimension, oFF.QContextType.RESULT_SET);
};
oFF.DdModelDimension.prototype.initializeSorting = function(dimension)
{
	this.m_ddModelSorting = oFF.DdModelSorting.createFrom(dimension);
};
oFF.DdModelDimension.prototype.initializeHierarchy = function(dimension)
{
	this.m_ddModelHierarchy = oFF.DdModelHierarchySelection.createFrom(dimension);
};
oFF.DdModelDimension.prototype.getKeyFieldName = function(dimension)
{
	var keyView = this.m_mainAttribute.getKeyView();
	var keyField = dimension.getFieldByPresentationType(keyView);
	if (oFF.isNull(keyField))
	{
		keyField = dimension.getDisplayKeyField();
	}
	if (oFF.isNull(keyField))
	{
		keyField = dimension.getKeyField();
	}
	var keyFieldName = null;
	if (oFF.notNull(keyField))
	{
		keyFieldName = keyField.getName();
	}
	return keyFieldName;
};
oFF.DdModelDimension.prototype.getTextFieldName = function(dimension)
{
	var textView = this.m_mainAttribute.getTextView();
	var textField = dimension.getFieldByPresentationType(textView);
	if (oFF.isNull(textField))
	{
		textField = dimension.getTextField();
	}
	var textFieldName = null;
	if (oFF.notNull(textField))
	{
		textFieldName = textField.getName();
	}
	return textFieldName;
};
oFF.DdModelDimension.prototype.applyToQueryModel = function(queryModel)
{
	var convenienceCommands = queryModel.getConvenienceCommands();
	convenienceCommands.clearAllFields(this.m_componentName, oFF.QContextType.RESULT_SET);
	convenienceCommands.clearAllAttributes(this.m_componentName, oFF.QContextType.RESULT_SET);
	var dimension = convenienceCommands.getDimension(this.m_componentName);
	if (oFF.notNull(this.m_mainAttribute))
	{
		this.m_mainAttribute.applyToQueryModel(queryModel, this.m_componentName);
	}
	if (dimension.getFieldLayoutType() !== this.m_fieldLayoutType)
	{
		dimension.setFieldLayoutType(this.m_fieldLayoutType);
	}
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.ATTRIBUTE_BASED || this.m_fieldLayoutType === oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS)
	{
		for (var h = 0; h < this.m_secondaryAttributesOrderActive.size(); h++)
		{
			this.m_secondaryAttributesOrderActive.get(h).applyToQueryModel(queryModel, this.m_componentName);
		}
	}
	else if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		var textFieldName;
		var keyFieldName;
		if (oFF.notNull(this.m_mainAttribute))
		{
			if (this.m_mainAttribute.isDisplayKey() && this.m_mainAttribute.isDisplayText())
			{
				textFieldName = this.getTextFieldName(dimension);
				keyFieldName = this.getKeyFieldName(dimension);
				if (!this.m_mainAttribute.isDisplayKeyBeforeText())
				{
					if (oFF.XStringUtils.isNotNullAndNotEmpty(textFieldName))
					{
						convenienceCommands.addField(null, this.m_componentName, null, textFieldName, oFF.QContextType.RESULT_SET);
					}
					if (oFF.XStringUtils.isNotNullAndNotEmpty(keyFieldName))
					{
						convenienceCommands.addField(null, this.m_componentName, null, keyFieldName, oFF.QContextType.RESULT_SET);
					}
				}
				else if (this.m_mainAttribute.isDisplayKey() && this.m_mainAttribute.isDisplayText())
				{
					if (oFF.XStringUtils.isNotNullAndNotEmpty(keyFieldName))
					{
						convenienceCommands.addField(null, this.m_componentName, null, keyFieldName, oFF.QContextType.RESULT_SET);
					}
					if (oFF.XStringUtils.isNotNullAndNotEmpty(textFieldName))
					{
						convenienceCommands.addField(null, this.m_componentName, null, textFieldName, oFF.QContextType.RESULT_SET);
					}
				}
			}
			else if (this.m_mainAttribute.isDisplayKey())
			{
				keyFieldName = this.getKeyFieldName(dimension);
				if (oFF.XStringUtils.isNotNullAndNotEmpty(keyFieldName))
				{
					convenienceCommands.addField(null, this.m_componentName, null, keyFieldName, oFF.QContextType.RESULT_SET);
				}
			}
			else if (this.m_mainAttribute.isDisplayText())
			{
				textFieldName = this.getTextFieldName(dimension);
				if (oFF.XStringUtils.isNotNullAndNotEmpty(textFieldName))
				{
					convenienceCommands.addField(null, this.m_componentName, null, textFieldName, oFF.QContextType.RESULT_SET);
				}
			}
		}
		for (var i = 0; i < this.m_fieldsOrderActive.size(); i++)
		{
			var fieldComponent = this.m_fieldsOrderActive.get(i);
			var displayField = convenienceCommands.getField(fieldComponent.getComponentName());
			convenienceCommands.addField(dimension.getDimensionType(), this.m_componentName, displayField.getPresentationType(), fieldComponent.getComponentName(), oFF.QContextType.RESULT_SET);
		}
	}
	dimension.setReadModeGraceful(oFF.QContextType.RESULT_SET, this.getDdModelReadMode().getReadMode());
	var modelSorting = this.getDdModelSorting();
	var sortingManager = queryModel.getSortingManager();
	sortingManager.removeDimensionSorting(dimension);
	var availableFields = dimension.getFields();
	if (oFF.XCollectionUtils.hasElements(availableFields))
	{
		for (var j = 0; j < availableFields.size(); j++)
		{
			var fieldSorting = queryModel.getSortingManager().getFieldSorting(availableFields.get(j), false);
			if (oFF.notNull(fieldSorting))
			{
				sortingManager.getSortingOperations().removeElement(fieldSorting);
			}
		}
	}
	if (modelSorting.isActive())
	{
		convenienceCommands.sort(modelSorting.getSortType(), dimension.getDimensionType(), this.getComponentName(), null, modelSorting.getField(), null, modelSorting.getSortDirection());
		var sortingOperation = null;
		if (modelSorting.getSortType() === oFF.SortType.FIELD)
		{
			sortingOperation = sortingManager.getFieldSorting(queryModel.getFieldByName(modelSorting.getField()), false);
		}
		else if (modelSorting.getSortType().isTypeOf(oFF.SortType.ABSTRACT_DIMENSION_SORT))
		{
			sortingOperation = sortingManager.getDimensionSorting(dimension, false);
		}
		if (oFF.notNull(sortingOperation) && modelSorting.supportsLocaleSorting())
		{
			sortingOperation.setLocale(modelSorting.getLocale());
			sortingOperation.setIsCaseSensitive(modelSorting.isCaseSensitive());
		}
	}
	var modelHierarchy = this.getDdModelHierarchy();
	if (dimension.supportsHierarchy())
	{
		if (!dimension.isDisplayHierarchyFixInFilter())
		{
			convenienceCommands.setDimensionHierarchy(this.getComponentName(), modelHierarchy.getHierarchy(), modelHierarchy.isActive(), modelHierarchy.getDrillLevel());
		}
		else
		{
			dimension.setInitialDrillLevel(modelHierarchy.getDrillLevel());
		}
		if (modelHierarchy.isActive())
		{
			dimension.setLowerLevelNodeAlignment(modelHierarchy.getNodeAlignment());
			dimension.setMemberOfPostedNodeVisibility(modelHierarchy.getMemberOfPostedNodeVisibility());
			dimension.setHasNodeCondensation(modelHierarchy.isNodeCondensation());
		}
	}
	dimension.clearResultVisibilitySettings();
	if (oFF.notNull(this.m_ddModelTotals) && this.m_ddModelTotals.isActive())
	{
		this.m_ddModelTotals.applyToModel(queryModel, dimension, oFF.QModelLevel.DIMENSIONS);
	}
	if (oFF.notNull(this.m_ddModelTotalsIncluded) && oFF.notNull(this.m_ddModelTotalsIncluded) && this.m_ddModelTotalsIncluded.isActive())
	{
		this.m_ddModelTotalsIncluded.applyToModel(queryModel, dimension, oFF.QModelLevel.DIMENSIONS);
	}
	if (oFF.notNull(this.m_ddModelTotalsRemaining) && oFF.notNull(this.m_ddModelTotalsRemaining) && this.m_ddModelTotalsRemaining.isActive())
	{
		this.m_ddModelTotalsRemaining.applyToModel(queryModel, dimension, oFF.QModelLevel.DIMENSIONS);
	}
};
oFF.DdModelDimension.prototype.getComponentName = function()
{
	return this.m_componentName;
};
oFF.DdModelDimension.prototype.setComponentName = function(componentName)
{
	this.m_componentName = componentName;
};
oFF.DdModelDimension.prototype.getMainAttribute = function()
{
	return this.m_mainAttribute;
};
oFF.DdModelDimension.prototype.setMainAttribute = function(mainAttribute)
{
	this.m_mainAttribute = mainAttribute;
};
oFF.DdModelDimension.prototype.getDdModelTotals = function()
{
	return this.m_ddModelTotals;
};
oFF.DdModelDimension.prototype.getDdModelTotalsIncluded = function()
{
	return this.m_ddModelTotalsIncluded;
};
oFF.DdModelDimension.prototype.getDdModelTotalsRemaining = function()
{
	return this.m_ddModelTotalsRemaining;
};
oFF.DdModelDimension.prototype.getFieldLayoutType = function()
{
	return this.m_fieldLayoutType;
};
oFF.DdModelDimension.prototype.setFieldLayoutType = function(fieldLayoutType)
{
	this.m_fieldLayoutType = fieldLayoutType;
	this.callListeners();
};
oFF.DdModelDimension.prototype.getAvailableFieldLayoutTypes = function()
{
	return this.m_availableFieldLayoutTypes;
};
oFF.DdModelDimension.prototype.getAttributesOrderInactive = function()
{
	return this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED ? this.m_fieldsOrderInactive : this.m_secondaryAttributesOrderInactive;
};
oFF.DdModelDimension.prototype.getAttributesOrderActive = function()
{
	return this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED ? this.m_fieldsOrderActive : this.m_secondaryAttributesOrderActive;
};
oFF.DdModelDimension.prototype.getAttributesOrderInactiveSelected = function()
{
	return this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED ? this.m_fieldsOrderInactiveSelected : this.m_secondaryAttributesOrderInactiveSelected;
};
oFF.DdModelDimension.prototype.getAttributesOrderActiveSelected = function()
{
	return this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED ? this.m_fieldsOrderActiveSelected : this.m_secondaryAttributesOrderActiveSelected;
};
oFF.DdModelDimension.prototype.setAttributesOrderInactiveSelected = function(list)
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.m_fieldsOrderInactiveSelected = list;
	}
	else
	{
		this.m_secondaryAttributesOrderInactiveSelected = list;
	}
	this.callListeners();
};
oFF.DdModelDimension.prototype.setAttributesOrderActiveSelected = function(list)
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.m_fieldsOrderActiveSelected = list;
	}
	else
	{
		this.m_secondaryAttributesOrderActiveSelected = list;
	}
	this.callListeners();
};
oFF.DdModelDimension.prototype.activateSelection = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.moveElement(this.m_fieldsOrderInactiveSelected, this.m_fieldsOrderInactive, this.m_fieldsOrderActiveSelected, this.m_fieldsOrderActive);
	}
	else
	{
		this.moveElement(this.m_secondaryAttributesOrderInactiveSelected, this.m_secondaryAttributesOrderInactive, this.m_secondaryAttributesOrderActiveSelected, this.m_secondaryAttributesOrderActive);
	}
};
oFF.DdModelDimension.prototype.deActivateSelection = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.moveElement(this.m_fieldsOrderActiveSelected, this.m_fieldsOrderActive, this.m_fieldsOrderInactiveSelected, this.m_fieldsOrderInactive);
	}
	else
	{
		this.moveElement(this.m_secondaryAttributesOrderActiveSelected, this.m_secondaryAttributesOrderActive, this.m_secondaryAttributesOrderInactiveSelected, this.m_secondaryAttributesOrderInactive);
	}
};
oFF.DdModelDimension.prototype.activateAll = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.moveElement(this.m_fieldsOrderInactive, this.m_fieldsOrderInactiveSelected, this.m_fieldsOrderActiveSelected, this.m_fieldsOrderActive);
	}
	else
	{
		this.moveElement(this.m_secondaryAttributesOrderInactive, this.m_secondaryAttributesOrderInactiveSelected, this.m_secondaryAttributesOrderActiveSelected, this.m_secondaryAttributesOrderActive);
	}
};
oFF.DdModelDimension.prototype.deActivateAll = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		this.moveElement(this.m_fieldsOrderActive, this.m_fieldsOrderActiveSelected, this.m_fieldsOrderInactiveSelected, this.m_fieldsOrderInactive);
	}
	else
	{
		this.moveElement(this.m_secondaryAttributesOrderActive, this.m_secondaryAttributesOrderActiveSelected, this.m_secondaryAttributesOrderInactiveSelected, this.m_secondaryAttributesOrderInactive);
	}
};
oFF.DdModelDimension.prototype.moveElement = function(elementsToMove, listToRemoveFrom, list1ToAddTo, list2ToAddTo)
{
	list1ToAddTo.addAll(elementsToMove);
	list2ToAddTo.addAll(elementsToMove);
	var size = elementsToMove.size();
	for (var i = 0; i < size; i++)
	{
		listToRemoveFrom.removeElement(elementsToMove.get(i));
	}
	elementsToMove.clear();
	this.callListeners();
};
oFF.DdModelDimension.prototype.isVisible = function()
{
	return this.m_visible;
};
oFF.DdModelDimension.prototype.getComponentText = function()
{
	return this.m_componentText;
};
oFF.DdModelDimension.prototype.getDdModelReadMode = function()
{
	return this.m_ddModelReadMode;
};
oFF.DdModelDimension.prototype.getDdModelSorting = function()
{
	return this.m_ddModelSorting;
};
oFF.DdModelDimension.prototype.getDdModelHierarchy = function()
{
	return this.m_ddModelHierarchy;
};
oFF.DdModelDimension.prototype.getDetailAttribute = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED || !oFF.XCollectionUtils.hasElements(this.m_secondaryAttributesOrderActiveSelected))
	{
		return null;
	}
	return this.m_secondaryAttributesOrderActiveSelected.get(this.m_secondaryAttributesOrderActiveSelected.size() - 1);
};
oFF.DdModelDimension.prototype.moveUpActiveAttribute = function()
{
	var activeList = this.getAttributesOrderActiveSelected();
	if (activeList.size() === 1)
	{
		activeList.get(0).moveUp();
		this.callListeners();
	}
};
oFF.DdModelDimension.prototype.moveTopActiveAttribute = function()
{
	var activeList = this.getAttributesOrderActiveSelected();
	if (activeList.size() === 1)
	{
		activeList.get(0).moveTop();
		this.callListeners();
	}
};
oFF.DdModelDimension.prototype.moveDownActiveAttribute = function()
{
	var activeList = this.getAttributesOrderActiveSelected();
	if (activeList.size() === 1)
	{
		activeList.get(0).moveDown();
		this.callListeners();
	}
};
oFF.DdModelDimension.prototype.moveBottomActiveAttribute = function()
{
	var activeList = this.getAttributesOrderActiveSelected();
	if (activeList.size() === 1)
	{
		activeList.get(0).moveBottom();
		this.callListeners();
	}
};

oFF.DdModelFieldContainer = function() {};
oFF.DdModelFieldContainer.prototype = new oFF.DdModelOrderable();
oFF.DdModelFieldContainer.prototype._ff_c = "DdModelFieldContainer";

oFF.DdModelFieldContainer.createFromFieldContainer = function(fieldContainer, containingList, parentModel)
{
	var instance = new oFF.DdModelFieldContainer();
	instance.setupExt(fieldContainer);
	instance.setupContainer(containingList, parentModel);
	return instance;
};
oFF.DdModelFieldContainer.createFromSingleField = function(field, containingList, parentModel)
{
	var instance = new oFF.DdModelFieldContainer();
	instance.setupExtFromField(field);
	instance.setupContainer(containingList, parentModel);
	return instance;
};
oFF.DdModelFieldContainer.prototype.m_componentName = null;
oFF.DdModelFieldContainer.prototype.m_componentText = null;
oFF.DdModelFieldContainer.prototype.m_mayDisplayText = false;
oFF.DdModelFieldContainer.prototype.m_mayDisplayKey = false;
oFF.DdModelFieldContainer.prototype.isMayDisplayText = function()
{
	return this.m_mayDisplayText;
};
oFF.DdModelFieldContainer.prototype.isMayDisplayKey = function()
{
	return this.m_mayDisplayKey;
};
oFF.DdModelFieldContainer.prototype.isDisplayText = function()
{
	return this.m_displayText;
};
oFF.DdModelFieldContainer.prototype.getAvailableDisplayAs = function()
{
	var displayAs = oFF.XList.create();
	displayAs.add(oFF.DdDisplayAs.NO_DISPLAY);
	if (this.isMayDisplayKey())
	{
		displayAs.add(oFF.DdDisplayAs.KEY);
	}
	if (this.isMayDisplayText())
	{
		displayAs.add(oFF.DdDisplayAs.TEXT);
	}
	if (this.isMayDisplayText() && this.isMayDisplayKey())
	{
		displayAs.add(oFF.DdDisplayAs.KEY_AND_TEXT);
		displayAs.add(oFF.DdDisplayAs.TEXT_AND_KEY);
	}
	return displayAs;
};
oFF.DdModelFieldContainer.prototype.setDisplayText = function(displayText)
{
	this.m_displayText = displayText;
	this.callListeners();
};
oFF.DdModelFieldContainer.prototype.isDisplayKey = function()
{
	return this.m_displayKey;
};
oFF.DdModelFieldContainer.prototype.setDisplayKey = function(displayKey)
{
	this.m_displayKey = displayKey;
	this.callListeners();
};
oFF.DdModelFieldContainer.prototype.isDisplayKeyBeforeText = function()
{
	return this.m_displayKeyBeforeText;
};
oFF.DdModelFieldContainer.prototype.setDisplayKeyBeforeText = function(displayKeyBeforeText)
{
	this.m_displayKeyBeforeText = displayKeyBeforeText;
	this.callListeners();
};
oFF.DdModelFieldContainer.prototype.getDisplayAs = function()
{
	if (this.m_displayText && this.m_displayKey && this.m_displayKeyBeforeText)
	{
		return oFF.DdDisplayAs.KEY_AND_TEXT;
	}
	if (this.m_displayText && this.m_displayKey)
	{
		return oFF.DdDisplayAs.TEXT_AND_KEY;
	}
	if (this.m_displayText)
	{
		return oFF.DdDisplayAs.TEXT;
	}
	if (this.m_displayKey)
	{
		return oFF.DdDisplayAs.KEY;
	}
	return oFF.DdDisplayAs.NO_DISPLAY;
};
oFF.DdModelFieldContainer.prototype.setDisplayAs = function(displayAs)
{
	if (oFF.notNull(displayAs))
	{
		this.m_displayKey = displayAs.isKey();
		this.m_displayText = displayAs.isText();
	}
	if (displayAs === oFF.DdDisplayAs.KEY_AND_TEXT)
	{
		this.m_displayKeyBeforeText = true;
	}
	else if (displayAs === oFF.DdDisplayAs.TEXT_AND_KEY)
	{
		this.m_displayKeyBeforeText = false;
	}
	this.callListeners();
};
oFF.DdModelFieldContainer.prototype.m_displayText = false;
oFF.DdModelFieldContainer.prototype.m_displayKey = false;
oFF.DdModelFieldContainer.prototype.m_displayKeyBeforeText = false;
oFF.DdModelFieldContainer.prototype.m_textView = null;
oFF.DdModelFieldContainer.prototype.m_keyView = null;
oFF.DdModelFieldContainer.prototype.m_displayUseDimensionSetting = false;
oFF.DdModelFieldContainer.prototype.m_textViewsAvailable = null;
oFF.DdModelFieldContainer.prototype.m_keyViewsAvailable = null;
oFF.DdModelFieldContainer.prototype.m_fieldBased = false;
oFF.DdModelFieldContainer.prototype.setupExtFromField = function(field)
{
	this.m_componentName = field.getName();
	this.m_componentText = field.getText();
	if (oFF.XStringUtils.isNullOrEmpty(this.m_componentText))
	{
		this.m_componentText = this.m_componentName;
	}
	this.m_fieldBased = true;
};
oFF.DdModelFieldContainer.prototype.setupExt = function(fieldContainer)
{
	this.m_componentName = fieldContainer.getName();
	this.m_componentText = fieldContainer.getText();
	if (oFF.XStringUtils.isNullOrEmpty(this.m_componentText))
	{
		this.m_componentText = this.m_componentName;
	}
	this.m_fieldBased = false;
	this.reloadFieldContainerLayout(fieldContainer);
	this.m_mayDisplayKey = oFF.XCollectionUtils.hasElements(this.m_keyViewsAvailable);
	this.m_mayDisplayText = oFF.XCollectionUtils.hasElements(this.m_textViewsAvailable);
	if (this.m_mayDisplayText)
	{
		this.m_textView = this.m_textViewsAvailable.get(0);
	}
	if (this.m_mayDisplayKey)
	{
		this.m_keyView = this.m_keyViewsAvailable.get(0);
		for (var i = 0; i < this.m_keyViewsAvailable.size(); i++)
		{
			var curKeyView = this.m_keyViewsAvailable.get(i);
			if (curKeyView.isTypeOf(oFF.PresentationType.DISPLAY_KEY) || curKeyView.isTypeOf(oFF.PresentationType.ACTIVE_DISPLAY_KEY) || curKeyView.isTypeOf(oFF.PresentationType.HIERARCHY_DISPLAY_KEY) || curKeyView.isTypeOf(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND) || curKeyView.isTypeOf(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT))
			{
				this.m_keyView = curKeyView;
				break;
			}
		}
	}
};
oFF.DdModelFieldContainer.prototype.reloadFieldContainerLayout = function(fieldContainer)
{
	this.m_textViewsAvailable = oFF.XList.create();
	this.m_keyViewsAvailable = oFF.XList.create();
	var presentationType;
	if (fieldContainer.getComponentType() === oFF.OlapComponentType.ATTRIBUTE)
	{
		var myFields = fieldContainer.getFields();
		for (var i = 0; i < myFields.size(); i++)
		{
			var field = myFields.get(i);
			presentationType = field.getPresentationType();
			if (presentationType.isTypeOf(oFF.PresentationType.TEXT) && presentationType !== oFF.PresentationType.TEXT && !this.m_textViewsAvailable.contains(presentationType))
			{
				this.m_textViewsAvailable.add(presentationType);
			}
			else if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_KEY) && !this.m_keyViewsAvailable.contains(presentationType))
			{
				this.m_keyViewsAvailable.add(presentationType);
			}
		}
	}
	if (fieldContainer.getTextField() !== null)
	{
		presentationType = fieldContainer.getTextField().getPresentationType();
		this.m_textViewsAvailable.removeElement(presentationType);
		this.m_textViewsAvailable.insert(0, presentationType);
	}
	if (fieldContainer.getKeyField() !== null)
	{
		presentationType = fieldContainer.getKeyField().getPresentationType();
		this.m_keyViewsAvailable.removeElement(presentationType);
		this.m_keyViewsAvailable.insert(0, presentationType);
	}
	if (fieldContainer.getDisplayKeyField() !== null)
	{
		presentationType = fieldContainer.getDisplayKeyField().getPresentationType();
		this.m_keyViewsAvailable.removeElement(presentationType);
		this.m_keyViewsAvailable.insert(0, presentationType);
	}
};
oFF.DdModelFieldContainer.prototype.getKeyView = function()
{
	return this.m_keyView;
};
oFF.DdModelFieldContainer.prototype.setKeyView = function(keyView)
{
	this.m_keyView = keyView;
};
oFF.DdModelFieldContainer.prototype.getTextView = function()
{
	return this.m_textView;
};
oFF.DdModelFieldContainer.prototype.setTextView = function(textView)
{
	this.m_textView = textView;
};
oFF.DdModelFieldContainer.prototype.isDisplayUseDimensionSetting = function()
{
	return this.m_displayUseDimensionSetting;
};
oFF.DdModelFieldContainer.prototype.setDisplayUseDimensionSetting = function(displayUseDimensionSetting)
{
	this.m_displayUseDimensionSetting = displayUseDimensionSetting;
};
oFF.DdModelFieldContainer.prototype.getKeyViewsAvailable = function()
{
	return this.m_keyViewsAvailable;
};
oFF.DdModelFieldContainer.prototype.getTextViewsAvailable = function()
{
	return this.m_textViewsAvailable;
};
oFF.DdModelFieldContainer.prototype.getComponentName = function()
{
	return this.m_componentName;
};
oFF.DdModelFieldContainer.prototype.setComponentName = function(componentName)
{
	this.m_componentName = componentName;
};
oFF.DdModelFieldContainer.prototype.setTextViewsAvailable = function(textViewsAvailable)
{
	this.m_textViewsAvailable = textViewsAvailable;
};
oFF.DdModelFieldContainer.prototype.setKeyViewsAvailable = function(keyViewsAvailable)
{
	this.m_keyViewsAvailable = keyViewsAvailable;
};
oFF.DdModelFieldContainer.prototype.applyResultSetSettings = function(resultSetAttribute)
{
	var i;
	var rsf;
	this.m_displayKey = false;
	this.m_displayText = false;
	var resultSetFields = resultSetAttribute.getResultSetFields();
	for (i = 0; i < resultSetFields.size(); i++)
	{
		rsf = resultSetFields.get(i);
		var presentationType = rsf.getPresentationType();
		if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_TEXT))
		{
			if (this.m_displayKey)
			{
				this.m_displayKeyBeforeText = true;
				this.m_displayText = true;
				return;
			}
			if (!this.m_displayText)
			{
				this.m_displayText = true;
				this.m_textView = presentationType;
			}
		}
		else if (presentationType.isTypeOf(oFF.PresentationType.ABSTRACT_KEY))
		{
			if (this.m_displayText)
			{
				this.m_displayKeyBeforeText = false;
				this.m_displayKey = true;
				return;
			}
			if (!this.m_displayKey)
			{
				this.m_displayKey = true;
				this.m_keyView = presentationType;
			}
		}
	}
	if (!oFF.XCollectionUtils.hasElements(resultSetFields) && resultSetAttribute.getDimension().getMainAttribute() === resultSetAttribute)
	{
		resultSetFields = resultSetAttribute.getDimension().getResultSetFields();
		for (i = 0; i < resultSetFields.size(); i++)
		{
			rsf = resultSetFields.get(i);
			if (rsf === resultSetAttribute.getFlatTextField() || rsf === resultSetAttribute.getHierarchyTextField())
			{
				if (this.m_displayKey)
				{
					this.m_displayKeyBeforeText = true;
					this.m_displayText = true;
					return;
				}
				if (!this.m_displayText)
				{
					this.m_displayText = true;
					this.m_textView = rsf.getPresentationType();
				}
			}
			else if (rsf === resultSetAttribute.getFlatKeyField() || rsf === resultSetAttribute.getHierarchyKeyField() || rsf === resultSetAttribute.getFlatDisplayKeyField() || rsf === resultSetAttribute.getHierarchyDisplayKeyField())
			{
				if (this.m_displayText)
				{
					this.m_displayKeyBeforeText = false;
					this.m_displayKey = true;
					return;
				}
				if (!this.m_displayKey)
				{
					this.m_displayKey = true;
					this.m_keyView = rsf.getPresentationType();
				}
			}
		}
	}
};
oFF.DdModelFieldContainer.prototype.applyToQueryModel = function(queryModel, dimensionName)
{
	var convenienceCommands = queryModel.getConvenienceCommands();
	if (this.m_displayKey || this.m_displayText)
	{
		if (!oFF.XStream.of(queryModel.getDimensionByName(dimensionName).getResultSetAttributes()).anyMatch( function(rsa){
			return oFF.XString.isEqual(rsa.getName(), this.getComponentName());
		}.bind(this)))
		{
			convenienceCommands.addAttributeToResultSet(dimensionName, this.getComponentName());
		}
		convenienceCommands.clearAllAttributeFields(dimensionName, this.getComponentName(), oFF.QContextType.RESULT_SET);
	}
	var presentationType1 = null;
	var presentationType2 = null;
	if (this.m_displayKey && this.m_displayText && !this.m_displayKeyBeforeText)
	{
		presentationType1 = this.getTextView();
		presentationType2 = this.getKeyView();
	}
	else if (this.m_displayKey && this.m_displayText)
	{
		presentationType1 = this.getKeyView();
		presentationType2 = this.getTextView();
	}
	else if (this.m_displayKey)
	{
		presentationType1 = this.getKeyView();
	}
	else if (this.m_displayText)
	{
		presentationType1 = this.getTextView();
	}
	if (oFF.notNull(presentationType1))
	{
		var field1 = convenienceCommands.addAttributeField(null, dimensionName, this.getComponentName(), presentationType1, null, oFF.QContextType.RESULT_SET);
		if (oFF.notNull(field1))
		{
			field1.setObtainability(oFF.ObtainabilityType.ALWAYS);
		}
	}
	if (oFF.notNull(presentationType2))
	{
		var field2 = convenienceCommands.addAttributeField(null, dimensionName, this.getComponentName(), presentationType2, null, oFF.QContextType.RESULT_SET);
		if (oFF.notNull(field2))
		{
			field2.setObtainability(oFF.ObtainabilityType.ALWAYS);
		}
	}
};
oFF.DdModelFieldContainer.prototype.isFieldBased = function()
{
	return this.m_fieldBased;
};
oFF.DdModelFieldContainer.prototype.getComponentText = function()
{
	return this.m_componentText;
};

oFF.FdVhFunctionController = function() {};
oFF.FdVhFunctionController.prototype = new oFF.XObject();
oFF.FdVhFunctionController.prototype._ff_c = "FdVhFunctionController";

oFF.FdVhFunctionController.STEP = "Step";
oFF.FdVhFunctionController.INPUT = "Input";
oFF.FdVhFunctionController.VALUE_HELP = "ValueHelp";
oFF.FdVhFunctionController.PARAMETER_INDEX = "PARAMETER_INDEX";
oFF.FdVhFunctionController.create = function(context, _function, model)
{
	var obj = new oFF.FdVhFunctionController();
	obj.m_context = context;
	obj.m_function = _function;
	obj.m_model = model;
	obj.m_allValuesByParameterName = oFF.XHashMapByString.create();
	obj.m_selectedValuesByParameterName = oFF.XHashMapByString.create();
	return obj;
};
oFF.FdVhFunctionController.prototype.m_context = null;
oFF.FdVhFunctionController.prototype.m_model = null;
oFF.FdVhFunctionController.prototype.m_function = null;
oFF.FdVhFunctionController.prototype.m_container = null;
oFF.FdVhFunctionController.prototype.m_layout = null;
oFF.FdVhFunctionController.prototype.m_first = null;
oFF.FdVhFunctionController.prototype.m_propertyListHelper = null;
oFF.FdVhFunctionController.prototype.m_parameters = null;
oFF.FdVhFunctionController.prototype.m_allValuesByParameterName = null;
oFF.FdVhFunctionController.prototype.m_selectedValuesByParameterName = null;
oFF.FdVhFunctionController.prototype.releaseObject = function()
{
	this.m_context = null;
	this.m_container = null;
	this.m_first = null;
	this.m_propertyListHelper = null;
	oFF.XObjectExt.release(this.m_layout);
	this.m_function = null;
	oFF.XObjectExt.release(this.m_parameters);
	oFF.XObjectExt.release(this.m_allValuesByParameterName);
	oFF.XObjectExt.release(this.m_selectedValuesByParameterName);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.FdVhFunctionController.prototype.getName = function()
{
	return this.m_function.getName();
};
oFF.FdVhFunctionController.prototype.getDescription = function()
{
	return this.m_function.getDescription();
};
oFF.FdVhFunctionController.prototype.onTabSelected = function(container)
{
	this.m_container = container;
	if (oFF.isNull(this.m_layout))
	{
		this.m_container.addNewItemOfType(oFF.UiType.ACTIVITY_INDICATOR).useMaxSpace();
		this.fetchInitial();
	}
	else
	{
		this.createUiControl();
	}
};
oFF.FdVhFunctionController.prototype.fetchInitial = function()
{
	var dimension = this.m_function.getDimension();
	dimension.getFunctionalValueHelpParameters(this.m_function, oFF.SyncType.NON_BLOCKING, this, null);
};
oFF.FdVhFunctionController.prototype.onParametersLoaded = function(extResult, parameters, customIdentifier)
{
	if (extResult.isValid())
	{
		this.m_parameters = parameters;
		this.createUiControl();
	}
};
oFF.FdVhFunctionController.prototype.createUiControl = function()
{
	this.m_container.clearItems();
	this.m_layout = this.m_container.addNewItemOfType(oFF.UiType.NAVIGATION_CONTAINER);
	this.m_first = this.m_layout.pushNewPage();
	this.m_first.setShowHeader(false);
	this.m_propertyListHelper = oFF.OlapUiPropertyListHelper.create(this.m_container.getUiManager());
	if (!oFF.XCollectionUtils.hasElements(this.m_parameters))
	{
		var i18n = this.m_context.getI18n();
		var flex = this.m_first.setNewContent(oFF.UiType.FLEX_LAYOUT);
		flex.setDirection(oFF.UiFlexDirection.COLUMN);
		flex.setAlignContent(oFF.UiFlexAlignContent.CENTER);
		flex.setJustifyContent(oFF.UiFlexJustifyContent.CENTER);
		flex.setSize(oFF.UiSize.createByCss("100%", "100%"));
		var noParamsLbl = flex.addNewItemOfType(oFF.UiType.LABEL);
		noParamsLbl.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_FVH_NO_PARAMETERS));
		noParamsLbl.setTextAlign(oFF.UiTextAlign.CENTER);
	}
	else
	{
		for (var i = 0; i < this.m_parameters.size(); i++)
		{
			var parameter = this.m_parameters.get(i);
			var input = this.m_propertyListHelper.addStringProperty(parameter.getName(), parameter.getDescription(), null);
			input.registerOnEditingBegin(this);
			input.registerOnSuggestionSelect(this);
			input.setCustomObject(parameter);
			var valueHelpIcon = input.addNewEndIcon();
			valueHelpIcon.setIcon("value-help");
			valueHelpIcon.registerOnPress(this);
			valueHelpIcon.setCustomObject(parameter);
		}
		this.m_first.setContent(this.m_propertyListHelper.getLayout().setPadding(oFF.UiCssBoxEdges.create("10px")));
	}
};
oFF.FdVhFunctionController.prototype.onEditingBegin = function(event)
{
	var parameter = event.getControl().getCustomObject();
	var possibleValues = this.m_allValuesByParameterName.getByKey(parameter.getName());
	if (oFF.isNull(possibleValues))
	{
		this.requestValues(parameter, oFF.FdVhFunctionController.INPUT);
	}
};
oFF.FdVhFunctionController.prototype.onPress = function(event)
{
	this.m_first.setBusy(true);
	var parameter = event.getControl().getCustomObject();
	var possibleValues = this.m_allValuesByParameterName.getByKey(parameter.getName());
	if (oFF.isNull(possibleValues))
	{
		this.requestValues(parameter, oFF.FdVhFunctionController.VALUE_HELP);
	}
	else
	{
		this.openValueTable(possibleValues);
	}
};
oFF.FdVhFunctionController.prototype.requestValues = function(parameter, step)
{
	var properties = oFF.XProperties.create();
	properties.putString(oFF.FdVhFunctionController.STEP, step);
	properties.putInteger(oFF.FdVhFunctionController.PARAMETER_INDEX, this.m_parameters.getIndex(parameter));
	var dimension = this.m_function.getDimension();
	dimension.getFunctionalValueHelpParameterValues(parameter, oFF.SyncType.NON_BLOCKING, this, properties);
};
oFF.FdVhFunctionController.prototype.onParameterValuesLoaded = function(extResult, parameterValues, customIdentifier)
{
	if (extResult.isValid())
	{
		var properties = customIdentifier;
		var parameter = this.m_parameters.get(properties.getIntegerByKey(oFF.FdVhFunctionController.PARAMETER_INDEX));
		var values = extResult.getData();
		this.m_allValuesByParameterName.put(parameter.getName(), values);
		switch (properties.getStringByKey(oFF.FdVhFunctionController.STEP))
		{
			case oFF.FdVhFunctionController.INPUT:
				this.fillSuggestions(values);
				break;

			case oFF.FdVhFunctionController.VALUE_HELP:
				this.openValueTable(values);
				break;
		}
	}
};
oFF.FdVhFunctionController.prototype.fillSuggestions = function(values)
{
	if (!oFF.XCollectionUtils.hasElements(values))
	{
		return;
	}
	var parameter = values.get(0).getParameter();
	var input = this.m_propertyListHelper.getInput(parameter.getName());
	for (var i = 0; i < values.size(); i++)
	{
		var suggestion = input.addNewSuggestion();
		var value = values.get(i);
		suggestion.setName(value.getName());
		suggestion.setText(value.getDescription());
		suggestion.setCustomObject(value);
	}
};
oFF.FdVhFunctionController.prototype.openValueTable = function(values)
{
	this.m_first.setBusy(false);
	if (!oFF.XCollectionUtils.hasElements(values))
	{
		return;
	}
	var parameter = values.get(0).getParameter();
	var i18n = this.m_context.getI18n();
	var valueHelpPage = this.m_layout.pushNewPage();
	valueHelpPage.setTitle(i18n.getTextWithPlaceholder(oFF.FilterDialogI18n.I18N_FD_FVH_SELECT_VALUE_FOR, parameter.getDescription()));
	var table = valueHelpPage.setNewContent(oFF.UiType.RESPONSIVE_TABLE);
	table.setSize(oFF.UiSize.createByCss("100%", "100%"));
	table.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
	table.registerOnSelectionChange(this);
	table.addNewResponsiveTableColumn().setTitle(i18n.getText(oFF.FilterDialogI18n.I18N_FD_FVH_DESCRIPTION));
	this.m_allValuesByParameterName.put(parameter.getName(), values);
	for (var i = 0; i < values.size(); i++)
	{
		var value = values.get(i);
		var row = table.addNewResponsiveTableRow();
		var cellLabel = row.addNewLabelCell();
		cellLabel.setTooltip(value.getName());
		cellLabel.setText(value.getDescription());
		row.setCustomObject(value);
	}
};
oFF.FdVhFunctionController.prototype.onSelectionChange = function(event)
{
	var value = event.getControl().getSelectedItem().getCustomObject();
	this.setValue(value);
};
oFF.FdVhFunctionController.prototype.onSuggestionSelect = function(event)
{
	var value = event.getSelectedItem().getCustomObject();
	this.setValue(value);
};
oFF.FdVhFunctionController.prototype.setValue = function(value)
{
	var parameter = value.getParameter();
	var input = this.m_propertyListHelper.setStringValue(parameter.getName(), value.getDescription());
	input.setValueState(oFF.UiValueState.NONE);
	input.setValueStateText(null);
	this.m_selectedValuesByParameterName.put(parameter.getName(), value);
	var values = oFF.XList.create();
	for (var i = 0; i < this.m_parameters.size(); i++)
	{
		var parameterName = this.m_parameters.get(i).getName();
		var paramValue = this.m_selectedValuesByParameterName.getByKey(parameterName);
		if (oFF.notNull(paramValue))
		{
			values.add(paramValue);
		}
	}
	var selection = this.m_model.getSelectedItems();
	var resultItem = oFF.XCollectionUtils.findFirst(selection,  function(item){
		return item.getType() === oFF.FdItemType.VALUEHELP_FUNCTION && item.getFunction() === this.m_function;
	}.bind(this));
	if (oFF.notNull(resultItem))
	{
		resultItem.getValues().clear();
		resultItem.getValues().addAll(values);
	}
	else
	{
		this.m_model.addSelection(oFF.XCollectionUtils.singletonList(oFF.FdVhResultItem.create(this.m_function, values)));
	}
};

oFF.FdItem = function() {};
oFF.FdItem.prototype = new oFF.XObject();
oFF.FdItem.prototype._ff_c = "FdItem";

oFF.FdItem.prototype.m_comparisonOperator = null;
oFF.FdItem.prototype.m_hierarchyName = null;
oFF.FdItem.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_comparisonOperator = null;
	this.m_hierarchyName = null;
};
oFF.FdItem.prototype.hasChildren = function()
{
	return false;
};
oFF.FdItem.prototype.getChildren = function()
{
	return null;
};
oFF.FdItem.prototype.isRootNode = function()
{
	return false;
};
oFF.FdItem.prototype.getComparisonOperator = function()
{
	return oFF.notNull(this.m_comparisonOperator) ? this.m_comparisonOperator : oFF.FdComparisonOperator.EQUAL;
};
oFF.FdItem.prototype.setComparisonOperator = function(operator)
{
	this.m_comparisonOperator = operator;
};
oFF.FdItem.prototype.isExcluded = function()
{
	return this.m_comparisonOperator === oFF.FdComparisonOperator.NOT_EQUAL || this.m_comparisonOperator === oFF.FdComparisonOperator.NOT_BETWEEN;
};
oFF.FdItem.prototype.setExcluded = function(excluded)
{
	if (excluded)
	{
		if (oFF.isNull(this.m_comparisonOperator) || this.m_comparisonOperator === oFF.FdComparisonOperator.EQUAL)
		{
			this.m_comparisonOperator = oFF.FdComparisonOperator.NOT_EQUAL;
		}
	}
	else if (this.m_comparisonOperator === oFF.FdComparisonOperator.NOT_EQUAL)
	{
		this.m_comparisonOperator = oFF.FdComparisonOperator.EQUAL;
	}
};
oFF.FdItem.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.FdItem.prototype.setHierarchyName = function(hierarchyName)
{
	this.m_hierarchyName = hierarchyName;
};
oFF.FdItem.prototype.getFormattedValueByPresentation = function(presentation, i18n)
{
	return this.getTextFormatted();
};
oFF.FdItem.prototype.getTextFormatted = function()
{
	return this.getText();
};
oFF.FdItem.prototype.getLow = function()
{
	return this;
};
oFF.FdItem.prototype.getHigh = function()
{
	return this;
};
oFF.FdItem.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	return this.getComparisonOperator() === otherItem.getComparisonOperator() && oFF.XString.isEqual(this.getHierarchyName(), otherItem.getHierarchyName()) && this.isNull() === otherItem.isNull();
};
oFF.FdItem.prototype.toString = function()
{
	return this.getKey();
};

oFF.FdComponentPresentationSelection = function() {};
oFF.FdComponentPresentationSelection.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentPresentationSelection.prototype._ff_c = "FdComponentPresentationSelection";

oFF.FdComponentPresentationSelection.create = function(model, context, listenerOnPresentationsChanged)
{
	var container = new oFF.FdComponentPresentationSelection();
	container.setupComponent(model, context, oFF.FdLayoutPresentationSelection.create());
	container.m_listenerOnPresentationsChanged = listenerOnPresentationsChanged;
	return container;
};
oFF.FdComponentPresentationSelection.prototype.m_listenerOnPresentationsChanged = null;
oFF.FdComponentPresentationSelection.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_listenerOnPresentationsChanged = null;
};
oFF.FdComponentPresentationSelection.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	var layout = this.m_layout;
	this.publishAvailablePresentations();
	if (genesis.getUiManager().getDeviceInfo().isSmartphone())
	{
		layout.getComboBoxAdditionalPresentations().registerOnSelectionFinish(this);
	}
	var showHierarchyDropdown = this.m_model.isFeatureEnabled(oFF.FdFeature.HIERARCHY_CHANGE);
	layout.setHierarchyDropdownVisible(showHierarchyDropdown);
	if (showHierarchyDropdown)
	{
		var hierarchyModel = this.m_model.getHierarchyModel();
		this.onAvailableHierarchiesChanged(hierarchyModel.getHierarchies(), hierarchyModel.getActiveHierarchy());
		hierarchyModel.registerOnAvailableHierarchiesChange(this);
		layout.getDropdownHierarchySelection().registerOnSelect(this);
	}
};
oFF.FdComponentPresentationSelection.prototype.getPresentationSelectionLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentPresentationSelection.prototype.getDropdownItemsSelectedByDefault = function(items, selectedPresentations)
{
	var selectedItems = oFF.XList.create();
	for (var i = 0; i < items.size(); i++)
	{
		if (selectedPresentations.contains(items.get(i).getCustomObject()))
		{
			selectedItems.add(items.get(i));
		}
	}
	return selectedItems.hasElements() ? selectedItems : null;
};
oFF.FdComponentPresentationSelection.prototype.onSelect = function(event)
{
	var layout = this.getPresentationSelectionLayout();
	var dropdownMainPresentations = layout.getDropdownMainPresentations();
	if (event.getControl() === dropdownMainPresentations)
	{
		dropdownMainPresentations.setTooltip(dropdownMainPresentations.getSelectedName());
		this.m_listenerOnPresentationsChanged.onMainPresentationChanged();
		return;
	}
	var dropdownHierarchySelection = layout.getDropdownHierarchySelection();
	if (event.getControl() === dropdownHierarchySelection)
	{
		var selectedHierarchy = dropdownHierarchySelection.getSelectedName();
		dropdownHierarchySelection.setTooltip(selectedHierarchy);
		if (oFF.XString.isEqual(selectedHierarchy, this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_HIERARCHY_FLAT_PRESENTATION)))
		{
			selectedHierarchy = null;
		}
		this.m_model.getHierarchyModel().setActiveHierarchy(selectedHierarchy);
	}
};
oFF.FdComponentPresentationSelection.prototype.onAvailableHierarchiesChanged = function(hierarchies, activeHierarchy)
{
	var layout = this.getPresentationSelectionLayout();
	var showHierarchies = oFF.XCollectionUtils.hasElements(hierarchies) || oFF.XStringUtils.isNotNullAndNotEmpty(activeHierarchy);
	layout.setHierarchyDropdownVisible(showHierarchies);
	if (showHierarchies)
	{
		var flatPresentationText = this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_HIERARCHY_FLAT_PRESENTATION);
		var hierarchyValues = oFF.XListOfString.create();
		hierarchyValues.add(flatPresentationText);
		hierarchyValues.addAll(hierarchies);
		var hierarchyDropdown = layout.getDropdownHierarchySelection();
		hierarchyDropdown.clearItems();
		this.addSimpleDropdownItems(hierarchyDropdown, hierarchyValues);
		var selectedHierarchy = oFF.XStringUtils.isNotNullAndNotEmpty(activeHierarchy) ? activeHierarchy : flatPresentationText;
		hierarchyDropdown.setSelectedName(selectedHierarchy);
		hierarchyDropdown.setTooltip(selectedHierarchy);
	}
};
oFF.FdComponentPresentationSelection.prototype.onSelectionChange = function(event)
{
	this.updateAdditionalPresentationsTooltip();
	this.m_listenerOnPresentationsChanged.onAdditionalPresentationsChanged();
};
oFF.FdComponentPresentationSelection.prototype.onSelectionFinish = function(event)
{
	this.updateAdditionalPresentationsTooltip();
	this.m_listenerOnPresentationsChanged.onAdditionalPresentationsChanged();
};
oFF.FdComponentPresentationSelection.prototype.updateAdditionalPresentationsTooltip = function()
{
	var comboBoxAdditionalPresentations = this.getPresentationSelectionLayout().getComboBoxAdditionalPresentations();
	if (comboBoxAdditionalPresentations.isVisible())
	{
		var selectedItems = comboBoxAdditionalPresentations.getSelectedItems();
		comboBoxAdditionalPresentations.setTooltip(oFF.XCollectionUtils.hasElements(selectedItems) ? oFF.XCollectionUtils.join(oFF.XStream.of(selectedItems).collect(oFF.XStreamCollector.toListOfString( function(item){
			return item.getName();
		}.bind(this))), ",") : null);
	}
};
oFF.FdComponentPresentationSelection.prototype.getSelectedPresentations = function()
{
	var result = oFF.XLinkedHashMapByString.create();
	var mainPresentation = this.getMainPresentation();
	var mainKeyPresentation = mainPresentation.getKeyPresentation();
	var mainTextPresentation = mainPresentation.getTextPresentation();
	var showKey = oFF.notNull(mainKeyPresentation);
	var showText = oFF.notNull(mainTextPresentation);
	if (showKey)
	{
		result.put(mainKeyPresentation.getName(), mainKeyPresentation);
	}
	if (showText)
	{
		result.put(mainTextPresentation.getName(), mainTextPresentation);
	}
	var additionalPresentations = this.getAdditionalPresentations();
	var size = additionalPresentations.size();
	for (var i = 0; i < size; i++)
	{
		var presentation = additionalPresentations.get(i);
		var keyPresentation = presentation.getKeyPresentation();
		var textPresentation = presentation.getTextPresentation();
		var keyVisible = oFF.notNull(keyPresentation) && (showKey || oFF.isNull(textPresentation));
		var textVisible = oFF.notNull(textPresentation) && (showText || oFF.isNull(keyPresentation));
		if (keyVisible)
		{
			result.put(textVisible ? keyPresentation.getName() : presentation.getName(), keyPresentation);
		}
		if (textVisible)
		{
			result.put(presentation.getName(), textPresentation);
		}
	}
	return result;
};
oFF.FdComponentPresentationSelection.prototype.publishAvailablePresentations = function()
{
	var layout = this.getPresentationSelectionLayout();
	var mainPresentationDropdown = layout.getDropdownMainPresentations();
	mainPresentationDropdown.clearItems();
	this.addDropdownItems(mainPresentationDropdown, this.m_model.getMainPresentations());
	var selectedMainPresentation = this.m_model.getSelectedMainPresentation().getName();
	mainPresentationDropdown.setSelectedName(selectedMainPresentation);
	mainPresentationDropdown.setTooltip(selectedMainPresentation);
	mainPresentationDropdown.registerOnSelect(this);
	var additionalPresentations = layout.getComboBoxAdditionalPresentations();
	additionalPresentations.clearItems();
	var dropdownItems = this.addDropdownItems(additionalPresentations, this.m_model.getAdditionalPresentations());
	additionalPresentations.setSelectedItems(this.getDropdownItemsSelectedByDefault(dropdownItems, this.m_model.getSelectedAdditionalPresentations()));
	this.updateAdditionalPresentationsTooltip();
	layout.setAdditionalPresentationsVisible(dropdownItems.hasElements());
	additionalPresentations.registerOnSelectionChange(this);
};
oFF.FdComponentPresentationSelection.prototype.getMainPresentation = function()
{
	var selection = this.getPresentationSelectionLayout().getDropdownMainPresentations().getSelectedItem();
	return oFF.notNull(selection) ? selection.getCustomObject() : null;
};
oFF.FdComponentPresentationSelection.prototype.getAdditionalPresentations = function()
{
	var presentations = oFF.XList.create();
	var selectedItems = this.getPresentationSelectionLayout().getComboBoxAdditionalPresentations().getSelectedItems();
	var size = selectedItems.size();
	for (var i = 0; i < size; i++)
	{
		presentations.add(selectedItems.get(i).getCustomObject());
	}
	return presentations;
};
oFF.FdComponentPresentationSelection.prototype.focus = function()
{
	if (oFF.notNull(this.m_layout))
	{
		var layout = this.getPresentationSelectionLayout();
		var mainPresentationDropdown = layout.getDropdownMainPresentations();
		if (oFF.notNull(mainPresentationDropdown))
		{
			mainPresentationDropdown.focus();
		}
	}
};

oFF.FdComponentSearch = function() {};
oFF.FdComponentSearch.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentSearch.prototype._ff_c = "FdComponentSearch";

oFF.FdComponentSearch.create = function(model, context, listenerOnSearch)
{
	var container = new oFF.FdComponentSearch();
	container.setupComponent(model, context, oFF.FdLayoutSearch.create());
	container.m_listenerOnSearch = listenerOnSearch;
	return container;
};
oFF.FdComponentSearch.prototype.m_listenerOnSearch = null;
oFF.FdComponentSearch.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_listenerOnSearch = null;
};
oFF.FdComponentSearch.prototype.getSearchContainerLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentSearch.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	var searchField = this.getSearchContainerLayout().getSearchField();
	searchField.registerOnSearch(this);
	searchField.registerOnLiveChange(this);
	searchField.setDebounceTime(oFF.FdConfiguration.SEARCH_DEBOUNCE_TIMEOUT);
	this.publishAvailablePresentations();
};
oFF.FdComponentSearch.prototype.isSearchActive = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.getSearchContainerLayout().getSearchField().getText());
};
oFF.FdComponentSearch.prototype.clearSearch = function()
{
	this.getSearchContainerLayout().getSearchField().setText(null);
};
oFF.FdComponentSearch.prototype.getSearchText = function()
{
	return this.getSearchContainerLayout().getSearchField().getText();
};
oFF.FdComponentSearch.prototype.getSearchPresentations = function()
{
	var selection = this.getSearchContainerLayout().getDropdownSearch().getSelectedItem();
	var presentation = oFF.notNull(selection) ? selection.getCustomObject() : null;
	var searchPresentations = oFF.XList.create();
	if (oFF.notNull(presentation))
	{
		var keyPresentation = presentation.getKeyPresentation();
		if (oFF.notNull(keyPresentation) && keyPresentation.isFilterable())
		{
			searchPresentations.add(keyPresentation);
		}
		var textPresentation = presentation.getTextPresentation();
		if (oFF.notNull(textPresentation) && textPresentation.isFilterable())
		{
			searchPresentations.add(textPresentation);
		}
	}
	return searchPresentations;
};
oFF.FdComponentSearch.prototype.publishAvailablePresentations = function()
{
	var presentationsForSearch = oFF.FdPresentationUtils.getFilterablePresentations(this.m_model.getMainPresentations(), this.m_model.getAdditionalPresentations());
	if (oFF.XCollectionUtils.hasElements(presentationsForSearch))
	{
		var dropdownSearch = this.getSearchContainerLayout().getDropdownSearch();
		var selectedName = oFF.XStringUtils.isNotNullAndNotEmpty(dropdownSearch.getSelectedName()) ? dropdownSearch.getSelectedName() : presentationsForSearch.get(0).getName();
		dropdownSearch.clearItems();
		this.addDropdownItems(dropdownSearch, presentationsForSearch);
		dropdownSearch.setSelectedName(selectedName);
		dropdownSearch.registerOnSelect(this);
	}
	else
	{
		this.getSearchContainerLayout().setSearchVisible(false);
	}
};
oFF.FdComponentSearch.prototype.onLiveChange = function(event)
{
	this.onSearch(event);
};
oFF.FdComponentSearch.prototype.onSelect = function(event)
{
	if (this.isSearchActive())
	{
		this.onSearch(event);
	}
};
oFF.FdComponentSearch.prototype.onSearch = function(event)
{
	this.m_listenerOnSearch.onSearch(event);
};
oFF.FdComponentSearch.prototype.focus = function()
{
	if (oFF.notNull(this.m_layout))
	{
		var layout = this.m_layout;
		var searchField = layout.getSearchField();
		if (oFF.notNull(searchField))
		{
			searchField.focus();
		}
	}
};

oFF.FdComponentSelectionContainer = function() {};
oFF.FdComponentSelectionContainer.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentSelectionContainer.prototype._ff_c = "FdComponentSelectionContainer";

oFF.FdComponentSelectionContainer.create = function(model, context, clipboardController, mainPresentation, listenerOnDelete, listenerOnSelectionCleared, listenerOnNewSelection)
{
	var container = new oFF.FdComponentSelectionContainer();
	container.setupComponent(model, context, oFF.FdLayoutSelectionContainer.create());
	container.m_clipboardController = clipboardController;
	container.m_mainPresentation = mainPresentation;
	container.m_listenerOnDelete = listenerOnDelete;
	container.m_listenerOnSelectionCleared = listenerOnSelectionCleared;
	container.m_listenerOnNewSelection = listenerOnNewSelection;
	return container;
};
oFF.FdComponentSelectionContainer.prototype.m_mainPresentation = null;
oFF.FdComponentSelectionContainer.prototype.m_listenerOnDelete = null;
oFF.FdComponentSelectionContainer.prototype.m_listenerOnSelectionCleared = null;
oFF.FdComponentSelectionContainer.prototype.m_listenerOnNewSelection = null;
oFF.FdComponentSelectionContainer.prototype.m_clipboardController = null;
oFF.FdComponentSelectionContainer.prototype.m_clipboardHelper = null;
oFF.FdComponentSelectionContainer.prototype.m_genesis = null;
oFF.FdComponentSelectionContainer.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_clipboardController = null;
	this.m_mainPresentation = null;
	this.m_listenerOnDelete = null;
	this.m_listenerOnSelectionCleared = null;
	this.m_genesis = null;
};
oFF.FdComponentSelectionContainer.prototype.getSelectionContainerLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentSelectionContainer.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_layout.buildOlapDialogUi(genesis);
	var selectionLayout = this.getSelectionContainerLayout();
	selectionLayout.getClipboardBtn().setVisible(this.m_model.isFeatureEnabled(oFF.FdFeature.CLIPBOARD) && this.m_model.getSelectionMode() === oFF.UiSelectionMode.MULTI_SELECT);
	selectionLayout.getClipboardBtn().registerOnPress(oFF.UiLambdaPressListener.create( function(evt1){
		this.m_clipboardHelper = oFF.ClipboardHelperForFdItem.createHelper(this.m_context.getI18n());
		var valueGrid = this.m_clipboardHelper.getValueGrid(this.m_model.getSelectedItems());
		var text = oFF.DialogGridParser.serializeWithFormat(oFF.DialogGridFormat.SEMICOLON, valueGrid);
		this.m_clipboardController().openClipboardDialog(null, text, this);
	}.bind(this)));
	selectionLayout.getSelectionListClearBtn().registerOnPress(oFF.UiLambdaPressListener.create( function(evt2){
		this.m_listenerOnSelectionCleared.onSelectionCleared();
	}.bind(this)));
	selectionLayout.getSelectionList().registerOnDelete(this);
};
oFF.FdComponentSelectionContainer.prototype.setBusy = function(busy)
{
	this.getSelectionContainerLayout().getSelectionList().setBusy(busy);
};
oFF.FdComponentSelectionContainer.prototype.onDelete = function(event)
{
	var removedItem = event.getAffectedItem();
	this.getSelectionContainerLayout().getSelectionList().removeItem(removedItem);
	this.m_model.removeSelectedItem(removedItem.getCustomObject());
	this.m_listenerOnDelete.onDelete(event);
};
oFF.FdComponentSelectionContainer.prototype.renderSelectedItems = function()
{
	var selectionList = this.getSelectionContainerLayout().getSelectionList();
	var presentation = this.m_mainPresentation();
	var selectedItems = this.m_model.getSelectedItems();
	selectionList.clearItems();
	var listContent = oFF.XList.create();
	var size = selectedItems.size();
	var lineThrough = null;
	for (var i = 0; i < size; i++)
	{
		var item = selectedItems.get(i);
		var label = this.m_genesis.newControl(oFF.UiType.LABEL);
		label.setText(this.prependComparisonOperator(item, this.getSelectedItemText(item, presentation)));
		if (item.isExcluded())
		{
			if (oFF.isNull(lineThrough))
			{
				lineThrough = new oFF.UiCssTextDecoration();
				lineThrough.setLine(oFF.UiTextDecorationLine.LINE_THROUGH);
			}
			label.setTextDecoration(lineThrough);
		}
		var listItem = this.m_genesis.newControl(oFF.UiType.CUSTOM_LIST_ITEM);
		listItem.setCustomObject(item);
		listItem.setContent(label);
		listItem.setPadding(oFF.UiCssBoxEdges.create("0px"));
		listContent.add(listItem);
	}
	selectionList.addAllItems(listContent);
	selectionList.setBusy(false);
};
oFF.FdComponentSelectionContainer.prototype.getSelectedItemText = function(item, presentation)
{
	var keyPresentation = presentation.getKeyPresentation();
	var textPresentation = presentation.getTextPresentation();
	var key = item.getFormattedValueByPresentation(keyPresentation, this.m_context.getI18n());
	if (oFF.isNull(key))
	{
		key = item.getDisplayKey();
	}
	var text = item.getFormattedValueByPresentation(textPresentation, this.m_context.getI18n());
	if (oFF.isNull(text))
	{
		text = item.getTextFormatted();
	}
	if (oFF.notNull(keyPresentation) && oFF.notNull(textPresentation) && oFF.notNull(key) && oFF.notNull(text))
	{
		return oFF.XStringUtils.concatenate3(key, " - ", text);
	}
	return oFF.notNull(textPresentation) && oFF.notNull(text) || oFF.isNull(key) ? text : key;
};
oFF.FdComponentSelectionContainer.prototype.prependComparisonOperator = function(item, value)
{
	var operator = item.getComparisonOperator();
	if (oFF.notNull(value) && item.getType() !== oFF.FdItemType.RANGE && operator !== oFF.FdComparisonOperator.EQUAL && operator !== oFF.FdComparisonOperator.NOT_EQUAL)
	{
		return oFF.XStringUtils.concatenate3(operator.getSign(), " ", value);
	}
	return value;
};
oFF.FdComponentSelectionContainer.prototype.onClipboardOk = function(hasChanged, text)
{
	if (hasChanged)
	{
		var itemsOnCurrentPage = this.m_model.getItemsOnCurrentPage();
		var useKey = oFF.XCollectionUtils.hasElements(itemsOnCurrentPage) && !itemsOnCurrentPage.get(0).hasDisplayKey();
		var items = this.m_clipboardHelper.parseFromClipboard(text, useKey);
		this.m_listenerOnNewSelection.onNewSelection(items);
	}
	this.m_clipboardController().close();
	this.m_clipboardHelper = oFF.XObjectExt.release(this.m_clipboardHelper);
};
oFF.FdComponentSelectionContainer.prototype.onClipboardCancel = function()
{
	this.m_clipboardController().close();
	this.m_clipboardHelper = oFF.XObjectExt.release(this.m_clipboardHelper);
};
oFF.FdComponentSelectionContainer.prototype.focus = function() {};

oFF.FdComponentToggles = function() {};
oFF.FdComponentToggles.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentToggles.prototype._ff_c = "FdComponentToggles";

oFF.FdComponentToggles.create = function(model, context, listenerOnChange)
{
	var container = new oFF.FdComponentToggles();
	container.setupComponent(model, context, oFF.FdLayoutToggles.create());
	container.m_listenerOnToggleChange = listenerOnChange;
	return container;
};
oFF.FdComponentToggles.prototype.m_listenerOnToggleChange = null;
oFF.FdComponentToggles.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_listenerOnToggleChange = null;
};
oFF.FdComponentToggles.prototype.getToggleLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentToggles.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	this.updateReadModeToggleLayout();
	var readModeSwitch = this.getToggleLayout().getReadModeSwitch();
	if (readModeSwitch.isVisible())
	{
		if (this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE))
		{
			readModeSwitch.registerOnChange(this);
			if (this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT))
			{
				this.getToggleLayout().getReadModeUseDefaultCheckbox().registerOnChange(this);
			}
		}
		else
		{
			readModeSwitch.setTooltip(this.m_context.getI18n().getText(readModeSwitch.isOn() ? oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_UNBOOKED_DISABLED : oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_BOOKED_DISABLED));
		}
	}
	this.updateExcludeToggleVisibility();
};
oFF.FdComponentToggles.prototype.updateExcludeToggleVisibility = function()
{
	var layout = this.getToggleLayout();
	layout.setExcludeSwitchVisible(this.m_model.isFeatureEnabled(oFF.FdFeature.EXCLUDE));
	var excludeSwitch = layout.getExcludeSwitch();
	excludeSwitch.setOn(this.m_model.isExcludeSwitchOn());
	excludeSwitch.registerOnChange(this);
};
oFF.FdComponentToggles.prototype.updateReadModeToggleLayout = function()
{
	this.getToggleLayout().setReadModeSwitchVisible(this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH), this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE), this.m_model.isReadModeSwitchOn(), this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT), this.m_model.isUseReadModeDefault());
};
oFF.FdComponentToggles.prototype.onChange = function(event)
{
	var toggleLayout = this.getToggleLayout();
	var readModeSwitch = toggleLayout.getReadModeSwitch();
	var readModeUseDefaultCheckbox = toggleLayout.getReadModeUseDefaultCheckbox();
	var excludeSwitch = toggleLayout.getExcludeSwitch();
	if (event.getControl() === readModeSwitch)
	{
		var isReadModeOn = readModeSwitch.isOn();
		this.m_model.setReadModeSwitchOn(isReadModeOn);
		this.m_listenerOnToggleChange.onReadModeChanged(isReadModeOn);
	}
	else if (event.getControl() === readModeUseDefaultCheckbox)
	{
		this.m_model.setUseReadModeDefault(readModeUseDefaultCheckbox.isChecked());
		this.updateReadModeToggleLayout();
		this.m_listenerOnToggleChange.onReadModeChanged(readModeSwitch.isOn());
	}
	else if (event.getControl() === excludeSwitch)
	{
		var isExcludeOn = excludeSwitch.isOn();
		this.m_model.setExcludeSwitchOn(isExcludeOn);
		this.m_listenerOnToggleChange.onExcludeChanged(isExcludeOn);
	}
};
oFF.FdComponentToggles.prototype.setReadModeToggleState = function(isOn)
{
	this.getToggleLayout().getReadModeSwitch().setOn(isOn);
};
oFF.FdComponentToggles.prototype.focus = function()
{
	if (oFF.notNull(this.m_layout))
	{
		var readModeSwitch = this.getToggleLayout().getReadModeSwitch();
		if (oFF.notNull(readModeSwitch) && readModeSwitch.isVisible())
		{
			readModeSwitch.focus();
			return;
		}
		var excludeSwitch = this.getToggleLayout().getExcludeSwitch();
		if (oFF.notNull(excludeSwitch) && excludeSwitch.isVisible())
		{
			excludeSwitch.focus();
		}
	}
};

oFF.FdComponentDateRangeDynamic = function() {};
oFF.FdComponentDateRangeDynamic.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentDateRangeDynamic.prototype._ff_c = "FdComponentDateRangeDynamic";

oFF.FdComponentDateRangeDynamic.create = function(model, context, item, dataChangedListener)
{
	var component = new oFF.FdComponentDateRangeDynamic();
	component.setupComponent(model, context, oFF.FdLayoutDateRangeDynamic.create( function(){
		component.onDataChanged();
	}.bind(this)));
	component.m_item = item;
	component.m_dataChangedListener = dataChangedListener;
	return component;
};
oFF.FdComponentDateRangeDynamic.prototype.m_item = null;
oFF.FdComponentDateRangeDynamic.prototype.m_dataChangedListener = null;
oFF.FdComponentDateRangeDynamic.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_item = null;
	this.m_dataChangedListener = null;
};
oFF.FdComponentDateRangeDynamic.prototype.getDynamicDateRangeLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentDateRangeDynamic.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	this.getDynamicDateRangeLayout().bindItem(this.m_item);
};
oFF.FdComponentDateRangeDynamic.prototype.onDataChanged = function()
{
	this.validate(true);
	this.m_dataChangedListener();
};
oFF.FdComponentDateRangeDynamic.prototype.getItem = function()
{
	return this.m_item;
};
oFF.FdComponentDateRangeDynamic.prototype.validate = function(showValidationMessages)
{
	var layout = this.getDynamicDateRangeLayout();
	if (showValidationMessages)
	{
		layout.clearMessages();
	}
	if (showValidationMessages && this.isEmpty())
	{
		return true;
	}
	var granularity = this.m_item.getGranularity();
	var lookBackValid = granularity.isCurrentDateUnit() || this.isNumberValid(layout.getLookBackText(), this.getMaxValue(granularity));
	var lookAheadValid = granularity.isCurrentDateUnit() || this.isNumberValid(layout.getLookAheadText(), this.getMaxValue(granularity));
	if ((!lookBackValid || !lookAheadValid) && showValidationMessages)
	{
		layout.showMainMessage(this.m_context.getI18n().getTextWithPlaceholder2(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_NUMBER_BETWEEN, "0", oFF.XInteger.convertToString(this.getMaxValue(granularity))), !lookBackValid, !lookAheadValid);
	}
	var offsetGranularity = this.m_item.getOffsetGranularity();
	var offsetValid = oFF.isNull(offsetGranularity) || this.isNumberValid(layout.getOffsetText(), this.getMaxValue(offsetGranularity));
	if (!offsetValid && showValidationMessages)
	{
		layout.showOffsetMessage(this.m_context.getI18n().getTextWithPlaceholder2(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_NUMBER_BETWEEN, "0", oFF.XInteger.convertToString(this.getMaxValue(offsetGranularity))));
	}
	return lookAheadValid && lookBackValid && offsetValid;
};
oFF.FdComponentDateRangeDynamic.prototype.getMaxValue = function(granularity)
{
	var value = this.m_context.getConfiguration().getDynamicDateRangeMaxYears();
	return granularity === oFF.DateRangeGranularity.QUARTER ? value * 4 : (granularity === oFF.DateRangeGranularity.MONTH ? value * 12 : (granularity === oFF.DateRangeGranularity.DAY ? value * 365 : value));
};
oFF.FdComponentDateRangeDynamic.prototype.isNumberValid = function(inputText, maxValue)
{
	if (oFF.XStringUtils.isNullOrEmpty(inputText) || oFF.XString.containsString(inputText, ".") || oFF.XString.containsString(inputText, ","))
	{
		return false;
	}
	var value = oFF.XInteger.convertFromStringWithDefault(inputText, -1);
	return value >= 0 && value <= maxValue;
};
oFF.FdComponentDateRangeDynamic.prototype.isEmpty = function()
{
	return false;
};
oFF.FdComponentDateRangeDynamic.prototype.focus = function()
{
	this.getDynamicDateRangeLayout().focus();
};

oFF.FdComponentDateRangeFixed = function() {};
oFF.FdComponentDateRangeFixed.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentDateRangeFixed.prototype._ff_c = "FdComponentDateRangeFixed";

oFF.FdComponentDateRangeFixed.create = function(model, context, item, dataChangedListener)
{
	var component = new oFF.FdComponentDateRangeFixed();
	component.setupComponent(model, context, oFF.FdLayoutDateRangeFixed.create( function(){
		component.onDataChanged();
	}.bind(this)));
	component.m_item = item;
	component.m_dataChangedListener = dataChangedListener;
	return component;
};
oFF.FdComponentDateRangeFixed.prototype.m_item = null;
oFF.FdComponentDateRangeFixed.prototype.m_dataChangedListener = null;
oFF.FdComponentDateRangeFixed.prototype.m_dateRangeMax = null;
oFF.FdComponentDateRangeFixed.prototype.m_dateRangeMin = null;
oFF.FdComponentDateRangeFixed.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_item = null;
	this.m_dataChangedListener = null;
	this.m_dateRangeMin = oFF.XObjectExt.release(this.m_dateRangeMin);
	this.m_dateRangeMax = oFF.XObjectExt.release(this.m_dateRangeMax);
};
oFF.FdComponentDateRangeFixed.prototype.getFixedDateRangeLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentDateRangeFixed.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	var layout = this.getFixedDateRangeLayout();
	var rangeModel = this.m_model.getRangeModel();
	var minDate = rangeModel.getMin();
	var maxDate = rangeModel.getMax();
	if (oFF.notNull(minDate) && oFF.notNull(maxDate))
	{
		this.m_dateRangeMin = oFF.XDate.createEmptyDate();
		this.m_dateRangeMin.setYear(minDate.getYear());
		this.m_dateRangeMin.setMonthOfYear(1);
		this.m_dateRangeMin.setDayOfMonth(1);
		this.m_dateRangeMax = oFF.XDate.createEmptyDate();
		this.m_dateRangeMax.setYear(maxDate.getYear());
		this.m_dateRangeMax.setMonthOfYear(12);
		this.m_dateRangeMax.setDayOfMonth(31);
		layout.setAvailableRange(this.m_dateRangeMin, this.m_dateRangeMax);
		if (this.m_item.getDateFrom() === null)
		{
			this.m_item.setDateFrom(this.m_dateRangeMin.toIsoFormat());
		}
		if (this.m_item.getDateTo() === null)
		{
			this.m_item.setDateTo(this.m_dateRangeMax.toIsoFormat());
		}
	}
	layout.bindItem(this.m_item);
};
oFF.FdComponentDateRangeFixed.prototype.onDataChanged = function()
{
	this.validate(true);
	this.m_dataChangedListener();
};
oFF.FdComponentDateRangeFixed.prototype.getItem = function()
{
	return this.m_item;
};
oFF.FdComponentDateRangeFixed.prototype.validate = function(showValidationMessages)
{
	if (showValidationMessages)
	{
		this.getFixedDateRangeLayout().clearMessage();
	}
	if (showValidationMessages && this.isEmpty())
	{
		return true;
	}
	if (this.m_item.getGranularity() === oFF.DateRangeGranularity.DAY)
	{
		return this.validateDateInputFields(showValidationMessages);
	}
	if (this.isStartDateLaterThanEndDate())
	{
		if (showValidationMessages)
		{
			this.getFixedDateRangeLayout().showMessage(this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_MIN_GREATER_MAX), true, true);
		}
		return false;
	}
	return true;
};
oFF.FdComponentDateRangeFixed.prototype.validateDateInputFields = function(showValidationMessages)
{
	var isFromStart = oFF.XString.isEqual(this.m_item.getDateFrom(), "-1");
	var isToEnd = oFF.XString.isEqual(this.m_item.getDateTo(), "-1");
	var dateFrom = !isFromStart ? oFF.XDate.createDateSafe(this.m_item.getDateFrom()) : null;
	var dateTo = !isToEnd ? oFF.XDate.createDateSafe(this.m_item.getDateTo()) : null;
	var errorMessage = null;
	var errorOnFromDate = !isFromStart && oFF.isNull(dateFrom);
	var errorOnToDate = !isToEnd && oFF.isNull(dateTo);
	if (errorOnFromDate || errorOnToDate)
	{
		var dateDisplayFormat = oFF.UiNumberFormatterCenter.getCenter().getDateDisplayFormat();
		errorMessage = this.m_context.getI18n().getTextWithPlaceholder(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_INVALID_DATE_FORMAT, oFF.notNull(dateDisplayFormat) ? dateDisplayFormat : "");
	}
	else
	{
		if (!isFromStart && !isToEnd && dateFrom.getMilliseconds() > dateTo.getMilliseconds())
		{
			errorOnFromDate = true;
			errorOnToDate = true;
			errorMessage = this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_MIN_GREATER_MAX);
		}
		else
		{
			if (oFF.notNull(this.m_dateRangeMin) && oFF.notNull(this.m_dateRangeMax))
			{
				if (!isFromStart && dateFrom.getMilliseconds() < this.m_dateRangeMin.getMilliseconds())
				{
					errorOnFromDate = true;
					errorMessage = this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_START_DATE_OUTSIDE_RANGE);
				}
				else if (!isToEnd && dateTo.getMilliseconds() > this.m_dateRangeMax.getMilliseconds())
				{
					errorOnToDate = true;
					errorMessage = this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_END_DATE_OUTSIDE_RANGE);
				}
			}
		}
	}
	if ((errorOnFromDate || errorOnToDate) && showValidationMessages)
	{
		this.getFixedDateRangeLayout().showMessage(errorMessage, errorOnFromDate, errorOnToDate);
	}
	return !errorOnFromDate && !errorOnToDate;
};
oFF.FdComponentDateRangeFixed.prototype.isStartDateLaterThanEndDate = function()
{
	var startDateLaterThanEndDate = false;
	var granularity = this.m_item.getGranularity();
	if ((granularity === oFF.DateRangeGranularity.YEAR || granularity === oFF.DateRangeGranularity.QUARTER || granularity === oFF.DateRangeGranularity.MONTH) && this.m_item.getYearFrom() !== -1 && this.m_item.getYearTo() !== -1)
	{
		if (this.m_item.getYearFrom() > this.m_item.getYearTo())
		{
			startDateLaterThanEndDate = true;
		}
		else if (this.m_item.getYearFrom() === this.m_item.getYearTo())
		{
			if (granularity === oFF.DateRangeGranularity.QUARTER)
			{
				startDateLaterThanEndDate = this.m_item.getQuarterFrom() > this.m_item.getQuarterTo();
			}
			else
			{
				startDateLaterThanEndDate = this.m_item.getMonthFrom() > this.m_item.getMonthTo();
			}
		}
	}
	return startDateLaterThanEndDate;
};
oFF.FdComponentDateRangeFixed.prototype.isEmpty = function()
{
	return false;
};
oFF.FdComponentDateRangeFixed.prototype.focus = function()
{
	this.getFixedDateRangeLayout().focus();
};

oFF.FdComponentAbstractTable = function() {};
oFF.FdComponentAbstractTable.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentAbstractTable.prototype._ff_c = "FdComponentAbstractTable";

oFF.FdComponentAbstractTable.prototype.m_uiTable = null;
oFF.FdComponentAbstractTable.prototype.m_view = null;
oFF.FdComponentAbstractTable.prototype.setupTableComponent = function(model, context, layout, tableBasedView)
{
	this.setupComponent(model, context, layout);
	this.m_view = tableBasedView;
};
oFF.FdComponentAbstractTable.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_uiTable = oFF.XObjectExt.release(this.m_uiTable);
	this.m_view = null;
};
oFF.FdComponentAbstractTable.prototype.getLayout = function()
{
	return this.m_uiTable.getLayout();
};
oFF.FdComponentAbstractTable.prototype.setBusy = function(busy)
{
	this.m_uiTable.setBusy(busy);
};
oFF.FdComponentAbstractTable.prototype.isPresentationUpdateNeeded = function(presentationNames)
{
	var columns = this.m_uiTable.getColumns();
	if (presentationNames.size() !== columns.size())
	{
		return true;
	}
	for (var i = 0; i < columns.size(); i++)
	{
		if (!oFF.XString.isEqual(columns.get(i).getTitle(), presentationNames.get(i)))
		{
			return true;
		}
	}
	return false;
};
oFF.FdComponentAbstractTable.prototype.onSelectionChange = function(event)
{
	this.m_view.onTableSelectionChange(this.m_uiTable.getRows(), this.m_uiTable.getSelectedItems());
};
oFF.FdComponentAbstractTable.prototype.onSelectionCleared = function()
{
	this.m_uiTable.clearSelectedItems();
};
oFF.FdComponentAbstractTable.prototype.deselect = function(item)
{
	var rows = this.m_uiTable.getRows();
	var size = rows.size();
	for (var i = 0; i < size; i++)
	{
		var uiItem = rows.get(i);
		var customObject = uiItem.getCustomObject();
		if (oFF.notNull(customObject) && customObject.isEqualTo(item))
		{
			uiItem.setSelected(false);
		}
	}
};
oFF.FdComponentAbstractTable.prototype.setSelectionMode = function(selectionMode)
{
	this.m_uiTable.setSelectionMode(selectionMode);
};
oFF.FdComponentAbstractTable.prototype.getFirstItem = function()
{
	var rows = this.m_uiTable.getRows();
	return oFF.XCollectionUtils.hasElements(rows) ? rows.get(0).getCustomObject() : null;
};
oFF.FdComponentAbstractTable.prototype.publishPresentations = function()
{
	this.updateColumns();
	this.updateRows(this.m_uiTable.getRows(), this.m_view.getSelectedPresentations().getValuesAsReadOnlyList());
	this.setBusy(false);
};
oFF.FdComponentAbstractTable.prototype.updateRows = function(rows, presentations)
{
	if (oFF.XCollectionUtils.hasElements(rows))
	{
		var size = rows.size();
		for (var i = 0; i < size; i++)
		{
			var row = rows.get(i);
			this.m_uiTable.clearCells(row);
			this.m_uiTable.addAllCells(row, this.createRowCells(row, row.getCustomObject(), presentations));
		}
	}
};
oFF.FdComponentAbstractTable.prototype.updateColumns = function()
{
	var colIndex = 0;
	var presentationNames = this.m_view.getSelectedPresentations().getKeysAsReadOnlyListOfString();
	var size = presentationNames.size();
	for (var i = 0; i < size; i++)
	{
		var col = this.getOrCreateColumn(colIndex);
		col.setTitle(presentationNames.get(i));
		colIndex++;
	}
	while (this.m_uiTable.getColumn(colIndex) !== null)
	{
		this.m_uiTable.removeColumn(this.m_uiTable.getColumn(colIndex));
	}
	if (this.m_uiTable.hasColumns())
	{
		var lastColIndex = this.m_uiTable.numberOfColumns() - 1;
		this.m_uiTable.getColumn(lastColIndex).setWidth(oFF.UiCssLength.create("auto"));
	}
};
oFF.FdComponentAbstractTable.prototype.getOrCreateColumn = function(colIndex)
{
	var col = this.m_uiTable.getColumn(colIndex);
	return oFF.notNull(col) ? col : this.m_uiTable.addNewColumn();
};
oFF.FdComponentAbstractTable.prototype.createRowCells = function(row, item, presentations)
{
	var tooltip = this.getTooltip(item);
	var cellList = oFF.XList.create();
	var size = presentations.size();
	for (var i = 0; i < size; i++)
	{
		var presentation = presentations.get(i);
		var cell = this.m_uiTable.newCell(row);
		cell.setText(item.getFormattedValueByPresentation(presentation, this.m_context.getI18n()));
		cell.setCustomObject(presentation);
		cell.setTooltip(tooltip);
		cellList.add(cell);
	}
	return cellList;
};
oFF.FdComponentAbstractTable.prototype.getTooltip = function(item)
{
	var key = item.hasDisplayKey() ? item.getDisplayKey() : item.getKey();
	var text = item.getTextFormatted();
	var sb = oFF.XStringBuffer.create();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(key))
	{
		sb.append(this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID)).append(": ").append(key);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		if (sb.length() > 0)
		{
			sb.appendNewLine();
		}
		sb.append(this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION)).append(": ").append(text);
	}
	return sb.toString();
};
oFF.FdComponentAbstractTable.prototype.onSearchChange = function(isSearchActive, searchText)
{
	if (!isSearchActive)
	{
		this.refreshContent(false);
	}
};
oFF.FdComponentAbstractTable.prototype.updatePaging = function(forceDisablePaging) {};
oFF.FdComponentAbstractTable.prototype.parentNodesInSearchNeeded = function()
{
	return true;
};
oFF.FdComponentAbstractTable.prototype.onError = function(messages, customIdentifier)
{
	this.setBusy(false);
};
oFF.FdComponentAbstractTable.prototype.focus = function() {};
oFF.FdComponentAbstractTable.prototype.onProcessFinished = function(items, startPage, customIdentifier) {};

oFF.FdFunctionalValuesLayout = function() {};
oFF.FdFunctionalValuesLayout.prototype = new oFF.XObject();
oFF.FdFunctionalValuesLayout.prototype._ff_c = "FdFunctionalValuesLayout";

oFF.FdFunctionalValuesLayout.createLayout = function()
{
	return new oFF.FdFunctionalValuesLayout();
};
oFF.FdFunctionalValuesLayout.prototype.m_root = null;
oFF.FdFunctionalValuesLayout.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_root.setName("FilterDialogFunctionalValuesView");
};
oFF.FdFunctionalValuesLayout.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_root = oFF.XObjectExt.release(this.m_root);
};
oFF.FdFunctionalValuesLayout.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdFunctionalValuesLayout.prototype.resize = function(dialogWidth) {};

oFF.FdRangesLayout = function() {};
oFF.FdRangesLayout.prototype = new oFF.XObject();
oFF.FdRangesLayout.prototype._ff_c = "FdRangesLayout";

oFF.FdRangesLayout.createLayout = function()
{
	var layout = new oFF.FdRangesLayout();
	layout.setupRangesLayout();
	return layout;
};
oFF.FdRangesLayout.prototype.m_genesis = null;
oFF.FdRangesLayout.prototype.m_root = null;
oFF.FdRangesLayout.prototype.m_size = null;
oFF.FdRangesLayout.prototype.m_info = null;
oFF.FdRangesLayout.prototype.m_ranges = null;
oFF.FdRangesLayout.prototype.m_addRangeBtn = null;
oFF.FdRangesLayout.prototype.m_rangeLayouts = null;
oFF.FdRangesLayout.prototype.setupRangesLayout = function()
{
	this.m_rangeLayouts = oFF.XList.create();
	this.m_size = oFF.FdLayoutSize.DESKTOP_LARGE;
};
oFF.FdRangesLayout.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setName("FilterDialogRangesView");
	this.addContent(this.m_root);
};
oFF.FdRangesLayout.prototype.addContent = function(root)
{
	this.m_info = root.addNewItemOfType(oFF.UiType.MESSAGE_STRIP);
	this.m_info.setIcon("message-information");
	this.m_info.setShowIcon(true);
	this.m_info.setMargin(oFF.UiCssBoxEdges.create("0 0 1rem 0"));
	this.m_info.setName("FilterDialogRangeInfo");
	this.m_ranges = root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_ranges.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_ranges.setAlignItems(oFF.UiFlexAlignItems.START);
	this.m_ranges.useMaxWidth();
	this.m_ranges.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_ranges.setName("FilterDialogRangeList");
	var addRangeBtnContainer = root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	addRangeBtnContainer.setDirection(oFF.UiFlexDirection.ROW);
	addRangeBtnContainer.setName("FilterDialogAddRangeBtnContainer");
	this.m_addRangeBtn = addRangeBtnContainer.addNewItemOfType(oFF.UiType.BUTTON);
	var addNewText = this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW);
	this.m_addRangeBtn.setText(addNewText);
	this.m_addRangeBtn.setTooltip(addNewText);
	this.m_addRangeBtn.setName("FilterDialogAddRangeBtn");
	this.m_addRangeBtn.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_addRangeBtn.setMargin(oFF.UiCssBoxEdges.create("0 0 0 1rem"));
};
oFF.FdRangesLayout.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_genesis = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
	this.m_size = null;
	this.m_ranges = oFF.XObjectExt.release(this.m_ranges);
	this.m_addRangeBtn = oFF.XObjectExt.release(this.m_addRangeBtn);
	this.m_rangeLayouts = oFF.XObjectExt.release(this.m_rangeLayouts);
};
oFF.FdRangesLayout.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdRangesLayout.prototype.resize = function(dialogWidth)
{
	this.m_size = oFF.FdLayoutSize.get(this.m_genesis.getUiManager().getDeviceInfo(), dialogWidth, false);
	this.resizeRangeLayouts(this.m_size);
};
oFF.FdRangesLayout.prototype.resizeRangeLayouts = function(size)
{
	oFF.XCollectionUtils.forEach(this.m_rangeLayouts,  function(rangeLayout){
		rangeLayout.resizeComponent(size);
	}.bind(this));
};
oFF.FdRangesLayout.prototype.addRange = function(range)
{
	range.resizeComponent(this.m_size);
	this.m_rangeLayouts.add(range);
	this.m_ranges.addItem(range.getRoot());
};
oFF.FdRangesLayout.prototype.removeRange = function(range)
{
	this.m_rangeLayouts.removeElement(range);
	this.m_ranges.removeItem(range.getRoot());
};
oFF.FdRangesLayout.prototype.clearRanges = function()
{
	this.m_rangeLayouts.clear();
	this.m_ranges.clearItems();
};
oFF.FdRangesLayout.prototype.getAddRangeBtn = function()
{
	return this.m_addRangeBtn;
};
oFF.FdRangesLayout.prototype.setAddRangeBtnVisible = function(visible)
{
	this.m_addRangeBtn.setVisible(visible);
};
oFF.FdRangesLayout.prototype.setRangeInfo = function(min, max)
{
	var showRangeInfo = oFF.notNull(min) && oFF.notNull(max);
	this.m_info.setVisible(showRangeInfo);
	if (showRangeInfo)
	{
		var minValue;
		var maxValue;
		var formatter = oFF.UiNumberFormatterCenter.getCenter();
		if (min.getValueType().isDateBased() && max.getValueType().isDateBased())
		{
			minValue = formatter.formatTextForDateTimeKey(null, min.getStringRepresentation(), min.getValueType());
			maxValue = formatter.formatTextForDateTimeKey(null, max.getStringRepresentation(), max.getValueType());
		}
		else if (min.getValueType().isNumber() && max.getValueType().isNumber())
		{
			minValue = formatter.format(min.getStringRepresentation());
			maxValue = formatter.format(max.getStringRepresentation());
		}
		else
		{
			minValue = min.getStringRepresentation();
			maxValue = min.getStringRepresentation();
		}
		this.m_info.setText(this.m_genesis.getUiManager().getLocalization().getTextWithPlaceholder2(oFF.FilterDialogI18n.I18N_FD_RANGES_INFO, minValue, maxValue));
	}
};

oFF.FdTableLayout = function() {};
oFF.FdTableLayout.prototype = new oFF.XObject();
oFF.FdTableLayout.prototype._ff_c = "FdTableLayout";

oFF.FdTableLayout.DROPDOWN_WIDTH = "180px";
oFF.FdTableLayout.createLayout = function(searchLayout, togglesLayout, selectionContainerLayout, presentationSelectionLayout)
{
	var fdLayout = new oFF.FdTableLayout();
	fdLayout.m_searchLayout = searchLayout;
	fdLayout.m_togglesLayout = togglesLayout;
	fdLayout.m_selectionContainerLayout = selectionContainerLayout;
	fdLayout.m_presentationSelectionLayout = presentationSelectionLayout;
	return fdLayout;
};
oFF.FdTableLayout.prototype.m_genesis = null;
oFF.FdTableLayout.prototype.m_size = null;
oFF.FdTableLayout.prototype.m_layoutType = null;
oFF.FdTableLayout.prototype.m_root = null;
oFF.FdTableLayout.prototype.m_contentContainer = null;
oFF.FdTableLayout.prototype.m_infoLabelContainer = null;
oFF.FdTableLayout.prototype.m_infoLabel = null;
oFF.FdTableLayout.prototype.m_searchLayout = null;
oFF.FdTableLayout.prototype.m_togglesLayout = null;
oFF.FdTableLayout.prototype.m_presentationSelectionLayout = null;
oFF.FdTableLayout.prototype.m_clearSelectionButton = null;
oFF.FdTableLayout.prototype.m_selectionContainerLayout = null;
oFF.FdTableLayout.prototype.m_showOnlySelectedToggleBtn = null;
oFF.FdTableLayout.prototype.m_headerContainer = null;
oFF.FdTableLayout.prototype.m_headerPanelLayout = null;
oFF.FdTableLayout.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.ROW);
	this.m_root.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setName("FilterDialogWrapper");
	this.m_root.addItem(this.createMainView());
	if (oFF.notNull(this.m_selectionContainerLayout))
	{
		this.m_root.addItem(this.m_selectionContainerLayout.getRoot());
	}
};
oFF.FdTableLayout.prototype.createMainView = function()
{
	var mainViewContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	mainViewContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	mainViewContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	mainViewContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	mainViewContainer.useMaxSpace();
	mainViewContainer.setName("FilterDialogMainViewContainer");
	this.m_headerContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_headerContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_headerContainer.useMaxWidth();
	this.m_headerContainer.setFlex("0 0 auto");
	this.m_headerContainer.setName("FilterDialogHeaderContainer");
	mainViewContainer.addItem(this.m_headerContainer);
	this.m_headerContainer.addItem(this.createHeaderPanel());
	this.m_headerContainer.addItem(this.createInfoLabelContainer());
	this.m_contentContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_contentContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_contentContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	this.m_contentContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_contentContainer.useMaxWidth();
	this.m_contentContainer.setMinHeight(oFF.UiCssLength.create("0"));
	this.m_contentContainer.setFlex("auto");
	this.m_contentContainer.setName("FilterDialogContentContainer");
	mainViewContainer.addItem(this.m_contentContainer);
	this.m_clearSelectionButton = this.m_genesis.newControl(oFF.UiType.BUTTON);
	this.m_clearSelectionButton.setName("FilterDialogClearButton");
	this.m_clearSelectionButton.setText(this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_clearSelectionButton.setFlex("0 0 40px");
	this.m_clearSelectionButton.setTooltip(this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_clearSelectionButton.setVisible(false);
	this.m_clearSelectionButton.setButtonType(oFF.UiButtonType.TRANSPARENT);
	mainViewContainer.addItem(this.m_clearSelectionButton);
	return mainViewContainer;
};
oFF.FdTableLayout.prototype.setTableLayout = function(tableLayout, layoutType)
{
	this.m_contentContainer.clearItems();
	this.m_contentContainer.addItem(tableLayout.getRoot());
	this.m_layoutType = layoutType;
	if (layoutType === oFF.FdTableType.NAVIGATION_CONTAINER)
	{
		this.m_showOnlySelectedToggleBtn.setVisible(false);
	}
};
oFF.FdTableLayout.prototype.createHeaderPanel = function()
{
	var headerPanel = this.m_genesis.newControl(oFF.UiType.PANEL);
	headerPanel.setExpandable(true);
	headerPanel.setWidth(oFF.UiCssLength.create("100%"));
	headerPanel.setName("FilterDialogHeader");
	headerPanel.setMargin(oFF.UiCssBoxEdges.create("0 0 1rem 0"));
	headerPanel.setExpanded(!this.m_genesis.getUiManager().getDeviceInfo().isMobile());
	this.m_headerPanelLayout = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_headerPanelLayout.setDirection(oFF.UiFlexDirection.ROW);
	this.m_headerPanelLayout.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_headerPanelLayout.setWidth(oFF.UiCssLength.create("100%"));
	this.m_headerPanelLayout.setMargin(oFF.UiCssBoxEdges.create("0"));
	this.m_headerPanelLayout.setPadding(oFF.UiCssBoxEdges.create("0"));
	this.m_headerPanelLayout.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_headerPanelLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	headerPanel.setHeader(this.m_headerPanelLayout);
	var panelHeaderTextLbl = this.m_headerPanelLayout.addNewItemOfType(oFF.UiType.LABEL);
	panelHeaderTextLbl.setText(this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_SETTINGS));
	panelHeaderTextLbl.setFontSize(oFF.UiCssLength.create("18px"));
	this.m_showOnlySelectedToggleBtn = this.m_headerPanelLayout.addNewItemOfType(oFF.UiType.TOGGLE_BUTTON);
	this.m_showOnlySelectedToggleBtn.setName("FilterDialogHeaderShowOnlySelectedToggleBtn");
	this.m_showOnlySelectedToggleBtn.setIcon("multiselect-all");
	this.m_showOnlySelectedToggleBtn.setTooltip(this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_SHOW_ONLY_SELECTED_MEMBERS));
	var contentContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	contentContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	contentContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	contentContainer.setFlex("0 0 auto");
	contentContainer.setPadding(oFF.UiCssBoxEdges.create("0 0 0.5rem 0"));
	contentContainer.setName("FilterDialogHeaderContentWrapper");
	headerPanel.setContent(contentContainer);
	contentContainer.addItem(this.m_genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("0.5rem")));
	contentContainer.addItem(this.m_presentationSelectionLayout.getRoot());
	contentContainer.addItem(this.m_togglesLayout.getRoot());
	return headerPanel;
};
oFF.FdTableLayout.prototype.createInfoLabelContainer = function()
{
	this.m_infoLabelContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_infoLabelContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_infoLabelContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_infoLabelContainer.setName("FilterDialogInfoLabelContainer");
	this.m_infoLabelContainer.setWidth(oFF.UiCssLength.create("100%"));
	this.m_infoLabelContainer.setMargin(oFF.UiCssBoxEdges.create("0 0 1rem 0"));
	this.m_infoLabelContainer.setVisible(false);
	this.m_infoLabelContainer.addItem(this.m_genesis.newControl(oFF.UiType.ICON).setIcon("message-information").setMargin(oFF.UiCssBoxEdges.create("0 0.5rem 0 0")));
	this.m_infoLabel = this.m_genesis.newControl(oFF.UiType.LABEL);
	this.m_infoLabel.setFontStyle(oFF.UiFontStyle.ITALIC);
	this.m_infoLabel.setName("FilterDialogInfoLabel");
	this.m_infoLabel.setWrapping(true);
	this.m_infoLabelContainer.addItem(this.m_infoLabel);
	return this.m_infoLabelContainer;
};
oFF.FdTableLayout.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdTableLayout.prototype.resize = function(dialogWidth)
{
	var size = oFF.FdLayoutSize.get(this.m_genesis.getUiManager().getDeviceInfo(), dialogWidth, oFF.notNull(this.m_selectionContainerLayout));
	if (this.m_size !== size)
	{
		this.m_size = size;
		if (size.isLarge() && !size.isMobile())
		{
			this.m_headerPanelLayout.addItem(this.m_searchLayout.getRoot());
		}
		else
		{
			this.m_headerContainer.insertItem(this.m_searchLayout.getRoot(), 0);
		}
		this.m_showOnlySelectedToggleBtn.setVisible(this.m_layoutType !== oFF.FdTableType.NAVIGATION_CONTAINER && (size.isMobile() || (size.isSmall() && oFF.notNull(this.m_selectionContainerLayout))));
		this.m_searchLayout.resizeComponent(size);
		this.m_presentationSelectionLayout.resizeComponent(size);
		this.m_togglesLayout.resizeComponent(size);
		if (oFF.notNull(this.m_selectionContainerLayout))
		{
			this.m_selectionContainerLayout.resizeComponent(size);
		}
	}
};
oFF.FdTableLayout.prototype.setInfoLabelText = function(text)
{
	this.m_infoLabel.setText(text);
	this.m_infoLabelContainer.setVisible(oFF.XStringUtils.isNotNullAndNotEmpty(text));
};
oFF.FdTableLayout.prototype.getClearSelectionButton = function()
{
	return this.m_clearSelectionButton;
};
oFF.FdTableLayout.prototype.getShowOnlySelectedToggleBtn = function()
{
	return this.m_showOnlySelectedToggleBtn;
};
oFF.FdTableLayout.prototype.releaseObject = function()
{
	this.m_genesis = null;
	this.m_size = null;
	this.m_layoutType = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
	this.m_contentContainer = oFF.XObjectExt.release(this.m_contentContainer);
	this.m_infoLabelContainer = oFF.XObjectExt.release(this.m_infoLabelContainer);
	this.m_infoLabel = oFF.XObjectExt.release(this.m_infoLabel);
	this.m_clearSelectionButton = oFF.XObjectExt.release(this.m_clearSelectionButton);
	this.m_searchLayout = oFF.XObjectExt.release(this.m_searchLayout);
	this.m_togglesLayout = oFF.XObjectExt.release(this.m_togglesLayout);
	this.m_selectionContainerLayout = oFF.XObjectExt.release(this.m_selectionContainerLayout);
	this.m_presentationSelectionLayout = oFF.XObjectExt.release(this.m_presentationSelectionLayout);
	this.m_showOnlySelectedToggleBtn = oFF.XObjectExt.release(this.m_showOnlySelectedToggleBtn);
	this.m_headerContainer = oFF.XObjectExt.release(this.m_headerContainer);
	this.m_headerPanelLayout = oFF.XObjectExt.release(this.m_headerPanelLayout);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.FdViewLayout = function() {};
oFF.FdViewLayout.prototype = new oFF.XObject();
oFF.FdViewLayout.prototype._ff_c = "FdViewLayout";

oFF.FdViewLayout.createLayout = function(filterTypes, selectedFilterType, selectedViewLayout, typeChangeListener, functionalValueViews)
{
	var layout = new oFF.FdViewLayout();
	layout.m_filterTypes = filterTypes;
	layout.m_selectedTabName = selectedFilterType === oFF.FdFilterType.FUNCTIONAL_VALUES && oFF.XCollectionUtils.hasElements(functionalValueViews) ? functionalValueViews.get(0).getFirstString() : selectedFilterType.getName();
	layout.m_selectedViewLayout = selectedViewLayout;
	layout.m_typeChangeListener = typeChangeListener;
	layout.m_functionalValueViews = functionalValueViews;
	return layout;
};
oFF.FdViewLayout.prototype.m_root = null;
oFF.FdViewLayout.prototype.m_filterTypes = null;
oFF.FdViewLayout.prototype.m_selectedTabName = null;
oFF.FdViewLayout.prototype.m_selectedViewLayout = null;
oFF.FdViewLayout.prototype.m_typeChangeListener = null;
oFF.FdViewLayout.prototype.m_tabBar = null;
oFF.FdViewLayout.prototype.m_functionalValueViews = null;
oFF.FdViewLayout.prototype.m_functionalValueTabNames = null;
oFF.FdViewLayout.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_root.setAlignItems(oFF.UiFlexAlignItems.START);
	this.m_root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_root.setName("FilterDialogViewContainer");
	this.m_root.setWidth(oFF.UiCssLength.create("calc(100% + 2rem)"));
	this.m_root.setHeight(oFF.UiCssLength.create("calc(100% + 2rem)"));
	this.m_root.setMargin(oFF.UiCssBoxEdges.create("-1rem 0 0 -1rem"));
	var i18n = genesis.getUiManager().getLocalization();
	this.m_tabBar = this.m_root.addNewItemOfType(oFF.UiType.ICON_TAB_BAR);
	oFF.XCollectionUtils.forEach(this.m_filterTypes,  function(filterType){
		if (filterType === oFF.FdFilterType.FUNCTIONAL_VALUES)
		{
			this.m_functionalValueTabNames = oFF.XHashSetOfString.create();
			for (var i = 0; i < this.m_functionalValueViews.size(); i++)
			{
				var name = this.m_functionalValueViews.get(i).getFirstString();
				var description = this.m_functionalValueViews.get(i).getSecondString();
				this.addTabBarItem(genesis, name, description);
				this.m_functionalValueTabNames.add(name);
			}
		}
		else
		{
			this.addTabBarItem(genesis, filterType.getName(), this.getTabName(i18n, filterType));
		}
	}.bind(this));
	this.m_tabBar.setName("FilterDialogTabBar");
	this.m_tabBar.setSelectedName(this.m_selectedTabName);
	this.m_tabBar.registerOnSelect(this);
	this.updateSelectedTabContent();
};
oFF.FdViewLayout.prototype.updateSelectedTabContent = function()
{
	var selectedTab = this.m_tabBar.getSelectedItem();
	selectedTab.setCustomObject(this.m_selectedViewLayout);
	selectedTab.setContent(this.m_selectedViewLayout.getRoot());
};
oFF.FdViewLayout.prototype.addTabBarItem = function(genesis, name, description)
{
	var tabBarItem = genesis.newControl(oFF.UiType.ICON_TAB_BAR_ITEM);
	tabBarItem.setName(name);
	tabBarItem.setText(description);
	tabBarItem.setTooltip(description);
	this.m_tabBar.addItem(tabBarItem);
};
oFF.FdViewLayout.prototype.getTabName = function(i18n, filterType)
{
	if (filterType === oFF.FdFilterType.LIST)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_LIST);
	}
	if (filterType === oFF.FdFilterType.RANGE)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_RANGE);
	}
	if (filterType === oFF.FdFilterType.MEASURE_BASED_FILTER)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_MBF);
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2(filterType.getName(), " is not supported"));
};
oFF.FdViewLayout.prototype.onSelect = function(event)
{
	var selectedName = event.getSelectedName();
	var selectedFilterType = oFF.notNull(this.m_functionalValueTabNames) && this.m_functionalValueTabNames.contains(selectedName) ? oFF.FdFilterType.FUNCTIONAL_VALUES : oFF.FdFilterType.getByName(selectedName);
	if (oFF.notNull(selectedFilterType) && !oFF.XString.isEqual(this.m_selectedTabName, selectedName))
	{
		this.m_root.setBusy(true);
		var viewLayout = this.m_typeChangeListener(selectedFilterType, oFF.XStringValue.create(selectedName));
		if (oFF.notNull(viewLayout))
		{
			this.m_selectedTabName = selectedName;
			this.m_selectedViewLayout = viewLayout;
			this.updateSelectedTabContent();
		}
		else
		{
			this.m_tabBar.setSelectedName(this.m_selectedTabName);
		}
		this.m_root.setBusy(false);
	}
};
oFF.FdViewLayout.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_root = oFF.XObjectExt.release(this.m_root);
	this.m_tabBar = oFF.XObjectExt.release(this.m_tabBar);
	this.m_selectedTabName = null;
	this.m_selectedViewLayout = null;
	this.m_filterTypes = null;
	this.m_typeChangeListener = null;
	this.m_functionalValueViews = null;
	this.m_functionalValueTabNames = oFF.XObjectExt.release(this.m_functionalValueTabNames);
};
oFF.FdViewLayout.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdViewLayout.prototype.resize = function(dialogWidth)
{
	oFF.XCollectionUtils.forEach(this.m_tabBar.getItems(),  function(item){
		var viewLayout = item.getCustomObject();
		if (oFF.notNull(viewLayout) && !viewLayout.isReleased())
		{
			viewLayout.resize(dialogWidth);
		}
	}.bind(this));
};

oFF.FdLayoutPresentationSelection = function() {};
oFF.FdLayoutPresentationSelection.prototype = new oFF.XObject();
oFF.FdLayoutPresentationSelection.prototype._ff_c = "FdLayoutPresentationSelection";

oFF.FdLayoutPresentationSelection.MARGIN = "0 0 0 0.25rem";
oFF.FdLayoutPresentationSelection.create = function()
{
	return new oFF.FdLayoutPresentationSelection();
};
oFF.FdLayoutPresentationSelection.prototype.m_presentationsContainer = null;
oFF.FdLayoutPresentationSelection.prototype.m_mainPresentationsContainer = null;
oFF.FdLayoutPresentationSelection.prototype.m_dropdownMainPresentations = null;
oFF.FdLayoutPresentationSelection.prototype.m_additionalPresentationsContainer = null;
oFF.FdLayoutPresentationSelection.prototype.m_comboBoxAdditionalPresentations = null;
oFF.FdLayoutPresentationSelection.prototype.m_hierarchyContainer = null;
oFF.FdLayoutPresentationSelection.prototype.m_dropdownHierarchySelection = null;
oFF.FdLayoutPresentationSelection.prototype.buildOlapDialogUi = function(genesis)
{
	var localization = genesis.getUiManager().getLocalization();
	var margin = oFF.UiCssBoxEdges.create(oFF.FdLayoutPresentationSelection.MARGIN);
	this.m_presentationsContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_presentationsContainer.setName("FilterDialogPresentationWrapper");
	this.m_presentationsContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_presentationsContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_presentationsContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_presentationsContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_presentationsContainer.setWidth(oFF.UiCssLength.create("100%"));
	this.m_mainPresentationsContainer = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_mainPresentationsContainer.setName("FilterDialogMainPresentationsContainer");
	this.m_presentationsContainer.addItem(this.m_mainPresentationsContainer);
	var presentationLabel = genesis.newControl(oFF.UiType.LABEL);
	presentationLabel.setName("FilterDialogPresentationLabel");
	presentationLabel.setText(localization.getText(oFF.FilterDialogI18n.I18N_FD_SHOW_PRESENTATION));
	this.m_mainPresentationsContainer.addItem(presentationLabel);
	this.m_dropdownMainPresentations = genesis.newControl(oFF.UiType.DROPDOWN);
	this.m_dropdownMainPresentations.setName("FilterDialogDropdownMainPresentations");
	this.m_dropdownMainPresentations.setWidth(oFF.UiCssLength.create("100%"));
	presentationLabel.setLabelFor(this.m_dropdownMainPresentations);
	this.m_mainPresentationsContainer.addItem(this.m_dropdownMainPresentations);
	this.m_hierarchyContainer = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_hierarchyContainer.setName("FilterDialogHierarchyContainer");
	this.m_hierarchyContainer.setMargin(margin);
	this.m_presentationsContainer.addItem(this.m_hierarchyContainer);
	var hierarchyLabel = genesis.newControl(oFF.UiType.LABEL);
	hierarchyLabel.setName("FilterDialogHierarchyLabel");
	hierarchyLabel.setText(localization.getText(oFF.FilterDialogI18n.I18N_FD_HIERARCHY));
	this.m_hierarchyContainer.addItem(hierarchyLabel);
	this.m_dropdownHierarchySelection = genesis.newControl(oFF.UiType.DROPDOWN);
	this.m_dropdownHierarchySelection.setName("FilterDialogDropdownHierarchy");
	this.m_dropdownHierarchySelection.setWidth(oFF.UiCssLength.create("100%"));
	hierarchyLabel.setLabelFor(this.m_dropdownHierarchySelection);
	this.m_hierarchyContainer.addItem(this.m_dropdownHierarchySelection);
	this.m_additionalPresentationsContainer = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_additionalPresentationsContainer.setName("FilterDialogAdditionalPresentationsContainer");
	this.m_additionalPresentationsContainer.setMargin(margin);
	this.m_presentationsContainer.addItem(this.m_additionalPresentationsContainer);
	var additionalPresentationsLabel = genesis.newControl(oFF.UiType.LABEL);
	additionalPresentationsLabel.setText(localization.getText(oFF.FilterDialogI18n.I18N_FD_ATTRIBUTES));
	this.m_additionalPresentationsContainer.addItem(additionalPresentationsLabel);
	this.m_comboBoxAdditionalPresentations = genesis.newControl(oFF.UiType.MULTI_COMBO_BOX);
	this.m_comboBoxAdditionalPresentations.setName("FilterDialogComboBoxAdditionalPresentations");
	this.m_comboBoxAdditionalPresentations.setWidth(oFF.UiCssLength.create("100%"));
	this.m_comboBoxAdditionalPresentations.setPlaceholder(localization.getText(oFF.FilterDialogI18n.I18N_FD_SELECT_ATTRIBUTE));
	additionalPresentationsLabel.setLabelFor(this.m_comboBoxAdditionalPresentations);
	this.m_additionalPresentationsContainer.addItem(this.m_comboBoxAdditionalPresentations);
	this.updateDropdownSizes();
};
oFF.FdLayoutPresentationSelection.prototype.getRoot = function()
{
	return this.m_presentationsContainer;
};
oFF.FdLayoutPresentationSelection.prototype.resizeComponent = function(size)
{
	var hierarchyVisible = this.m_hierarchyContainer.isVisible();
	var attributesVisible = this.m_additionalPresentationsContainer.isVisible();
	if (hierarchyVisible || attributesVisible)
	{
		this.m_presentationsContainer.setWrap(size.isLarge() || (size.isMedium() && (!hierarchyVisible || !attributesVisible)) ? oFF.UiFlexWrap.NO_WRAP : oFF.UiFlexWrap.WRAP);
		this.updateDropdownSizes();
	}
};
oFF.FdLayoutPresentationSelection.prototype.getDropdownMainPresentations = function()
{
	return this.m_dropdownMainPresentations;
};
oFF.FdLayoutPresentationSelection.prototype.getComboBoxAdditionalPresentations = function()
{
	return this.m_comboBoxAdditionalPresentations;
};
oFF.FdLayoutPresentationSelection.prototype.setAdditionalPresentationsVisible = function(visible)
{
	this.m_additionalPresentationsContainer.setVisible(visible);
	this.updateDropdownSizes();
};
oFF.FdLayoutPresentationSelection.prototype.setHierarchyDropdownVisible = function(visible)
{
	this.m_hierarchyContainer.setVisible(visible);
	this.updateDropdownSizes();
};
oFF.FdLayoutPresentationSelection.prototype.updateDropdownSizes = function()
{
	var widthFull = oFF.UiCssLength.create("100%");
	if (this.m_presentationsContainer.getWrap() === oFF.UiFlexWrap.WRAP)
	{
		this.m_mainPresentationsContainer.setWidth(widthFull);
		this.m_hierarchyContainer.setWidth(widthFull);
		this.m_hierarchyContainer.setMargin(null);
		this.m_additionalPresentationsContainer.setWidth(widthFull);
		this.m_additionalPresentationsContainer.setMargin(null);
		return;
	}
	var fixWidth = oFF.UiCssLength.create(oFF.FdTableLayout.DROPDOWN_WIDTH);
	var margin = oFF.UiCssBoxEdges.create(oFF.FdLayoutPresentationSelection.MARGIN);
	var additionalPresentationsVisible = this.m_additionalPresentationsContainer.isVisible();
	this.m_mainPresentationsContainer.setWidth(additionalPresentationsVisible || this.m_hierarchyContainer.isVisible() ? fixWidth : widthFull);
	this.m_hierarchyContainer.setWidth(additionalPresentationsVisible ? fixWidth : null);
	this.m_hierarchyContainer.setFlex(additionalPresentationsVisible ? null : "1 1 auto");
	this.m_hierarchyContainer.setMargin(margin);
	this.m_additionalPresentationsContainer.setWidth(null);
	this.m_additionalPresentationsContainer.setFlex("1 1 auto");
	this.m_additionalPresentationsContainer.setMargin(margin);
};
oFF.FdLayoutPresentationSelection.prototype.getDropdownHierarchySelection = function()
{
	return this.m_dropdownHierarchySelection;
};
oFF.FdLayoutPresentationSelection.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_mainPresentationsContainer = oFF.XObjectExt.release(this.m_mainPresentationsContainer);
	this.m_dropdownMainPresentations = oFF.XObjectExt.release(this.m_dropdownMainPresentations);
	this.m_additionalPresentationsContainer = oFF.XObjectExt.release(this.m_additionalPresentationsContainer);
	this.m_comboBoxAdditionalPresentations = oFF.XObjectExt.release(this.m_comboBoxAdditionalPresentations);
	this.m_hierarchyContainer = oFF.XObjectExt.release(this.m_hierarchyContainer);
	this.m_dropdownHierarchySelection = oFF.XObjectExt.release(this.m_dropdownHierarchySelection);
};

oFF.FdLayoutResponsiveTable = function() {};
oFF.FdLayoutResponsiveTable.prototype = new oFF.XObject();
oFF.FdLayoutResponsiveTable.prototype._ff_c = "FdLayoutResponsiveTable";

oFF.FdLayoutResponsiveTable.create = function()
{
	return new oFF.FdLayoutResponsiveTable();
};
oFF.FdLayoutResponsiveTable.prototype.m_root = null;
oFF.FdLayoutResponsiveTable.prototype.m_responsiveTable = null;
oFF.FdLayoutResponsiveTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_responsiveTable = genesis.newControl(oFF.UiType.RESPONSIVE_TABLE);
	this.m_responsiveTable.setName("FilterDialogResponsiveTable");
	this.m_responsiveTable.setFlex("auto");
	this.m_root = this.m_responsiveTable;
};
oFF.FdLayoutResponsiveTable.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdLayoutResponsiveTable.prototype.resizeComponent = function(size) {};
oFF.FdLayoutResponsiveTable.prototype.setRoot = function(root)
{
	this.m_root = root;
};
oFF.FdLayoutResponsiveTable.prototype.releaseObject = function()
{
	this.m_root = null;
	this.m_responsiveTable = oFF.XObjectExt.release(this.m_responsiveTable);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.FdLayoutSearch = function() {};
oFF.FdLayoutSearch.prototype = new oFF.XObject();
oFF.FdLayoutSearch.prototype._ff_c = "FdLayoutSearch";

oFF.FdLayoutSearch.create = function()
{
	return new oFF.FdLayoutSearch();
};
oFF.FdLayoutSearch.prototype.m_searchContainer = null;
oFF.FdLayoutSearch.prototype.m_dropdownSearch = null;
oFF.FdLayoutSearch.prototype.m_searchField = null;
oFF.FdLayoutSearch.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_searchContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_searchContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_searchContainer.setJustifyContent(oFF.UiFlexJustifyContent.END);
	this.m_searchContainer.setAlignItems(oFF.UiFlexAlignItems.END);
	this.m_searchContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_searchContainer.setName("FilterDialogSearchContainer");
	this.m_searchField = genesis.newControl(oFF.UiType.SEARCH_FIELD);
	this.m_searchField.setName("FilterDialogSearchInput");
	this.m_searchField.setWidth(oFF.UiCssLength.create("250px"));
	this.m_searchField.setMargin(oFF.UiCssBoxEdges.create("0 0.25rem 0 0 "));
	this.m_searchField.setPlaceholder(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_SEARCH));
	this.m_searchContainer.addItem(this.m_searchField);
	this.m_dropdownSearch = genesis.newControl(oFF.UiType.DROPDOWN);
	this.m_dropdownSearch.setName("FilterDialogDropdownSearch");
	this.m_dropdownSearch.setWidth(oFF.UiCssLength.create(oFF.FdTableLayout.DROPDOWN_WIDTH));
	this.m_dropdownSearch.setTooltip(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_SEARCH_TOOLTIP));
	this.m_searchContainer.addItem(this.m_dropdownSearch);
};
oFF.FdLayoutSearch.prototype.getRoot = function()
{
	return this.m_searchContainer;
};
oFF.FdLayoutSearch.prototype.resizeComponent = function(size) {};
oFF.FdLayoutSearch.prototype.getDropdownSearch = function()
{
	return this.m_dropdownSearch;
};
oFF.FdLayoutSearch.prototype.getSearchField = function()
{
	return this.m_searchField;
};
oFF.FdLayoutSearch.prototype.setSearchVisible = function(visible)
{
	this.m_searchContainer.setVisible(visible);
};
oFF.FdLayoutSearch.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_searchContainer = oFF.XObjectExt.release(this.m_searchContainer);
	this.m_dropdownSearch = oFF.XObjectExt.release(this.m_dropdownSearch);
	this.m_searchField = oFF.XObjectExt.release(this.m_searchField);
};

oFF.FdLayoutSelectionContainer = function() {};
oFF.FdLayoutSelectionContainer.prototype = new oFF.XObject();
oFF.FdLayoutSelectionContainer.prototype._ff_c = "FdLayoutSelectionContainer";

oFF.FdLayoutSelectionContainer.create = function()
{
	return new oFF.FdLayoutSelectionContainer();
};
oFF.FdLayoutSelectionContainer.prototype.m_selectionContainer = null;
oFF.FdLayoutSelectionContainer.prototype.m_selectionList = null;
oFF.FdLayoutSelectionContainer.prototype.m_selectionListClearBtn = null;
oFF.FdLayoutSelectionContainer.prototype.m_clipboardBtn = null;
oFF.FdLayoutSelectionContainer.prototype.buildOlapDialogUi = function(genesis)
{
	var sizeFull = oFF.UiCssLength.create("100%");
	this.m_selectionContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_selectionContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_selectionContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	this.m_selectionContainer.setAlignItems(oFF.UiFlexAlignItems.START);
	this.m_selectionContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_selectionContainer.setName("FilterDialogSelectionContainer");
	this.m_selectionContainer.setHeight(sizeFull);
	var separator = genesis.newControl(oFF.UiType.SEPARATOR);
	separator.setHeight(sizeFull);
	separator.setMargin(oFF.UiCssBoxEdges.create("0 1rem 0 1rem"));
	this.m_selectionContainer.addItem(separator);
	var selectionListContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	selectionListContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	selectionListContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	selectionListContainer.setAlignItems(oFF.UiFlexAlignItems.START);
	selectionListContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	selectionListContainer.setName("FilterDialogSelectionListContainer");
	selectionListContainer.setWidth(oFF.UiCssLength.create("225px"));
	selectionListContainer.setHeight(sizeFull);
	this.m_selectionContainer.addItem(selectionListContainer);
	var titleContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	titleContainer.setDirection(oFF.UiFlexDirection.ROW);
	titleContainer.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	titleContainer.setAlignItems(oFF.UiFlexAlignItems.START);
	titleContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	titleContainer.setWidth(sizeFull);
	titleContainer.setFlex("0 0 auto");
	titleContainer.setMargin(oFF.UiCssBoxEdges.create("0 0 0.5rem 0"));
	var selectedMembersLabel = genesis.newControl(oFF.UiType.LABEL);
	selectedMembersLabel.setText(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_SELECTED_MEMBERS));
	selectedMembersLabel.setFontWeight(oFF.UiFontWeight.BOLD);
	selectedMembersLabel.setFlex("0 0 auto");
	selectedMembersLabel.setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
	titleContainer.addItem(selectedMembersLabel);
	this.m_clipboardBtn = genesis.newControl(oFF.UiType.BUTTON);
	this.m_clipboardBtn.setIcon("paste");
	this.m_clipboardBtn.setTooltip("Clipboard");
	this.m_clipboardBtn.setName("FilterDialogClipboard");
	this.m_clipboardBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	titleContainer.addItem(this.m_clipboardBtn);
	selectionListContainer.addItem(titleContainer);
	var listWrapper = genesis.newControl(oFF.UiType.SCROLL_CONTAINER);
	listWrapper.setWidth(sizeFull);
	listWrapper.setFlex("auto");
	this.m_selectionList = listWrapper.setNewContent(oFF.UiType.LIST);
	this.m_selectionList.setName("FilterDialogPreviewList");
	this.m_selectionList.useMaxSpace();
	this.m_selectionList.setSelectionMode(oFF.UiSelectionMode.DELETE);
	this.m_selectionList.setBorderWidth(oFF.UiCssBoxEdges.create("0px"));
	selectionListContainer.addItem(listWrapper);
	selectionListContainer.addItem(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("0.5rem")).setFlex("0 0 auto"));
	var clearButtonContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	clearButtonContainer.setDirection(oFF.UiFlexDirection.ROW);
	clearButtonContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	clearButtonContainer.setFlex("0 0 auto");
	clearButtonContainer.setWidth(sizeFull);
	clearButtonContainer.setName("FilterDialogPreviewListClearBtnContainer");
	selectionListContainer.addItem(clearButtonContainer);
	this.m_selectionListClearBtn = genesis.newControl(oFF.UiType.BUTTON);
	this.m_selectionListClearBtn.setName("FilterDialogPreviewListClearBtn");
	this.m_selectionListClearBtn.setText(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_selectionListClearBtn.setTooltip(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_selectionListClearBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	clearButtonContainer.addItem(this.m_selectionListClearBtn);
	selectedMembersLabel.setLabelFor(this.m_selectionList);
};
oFF.FdLayoutSelectionContainer.prototype.getRoot = function()
{
	return this.m_selectionContainer;
};
oFF.FdLayoutSelectionContainer.prototype.resizeComponent = function(size)
{
	this.m_selectionContainer.setVisible(!size.isMobile() && !size.isSmall());
};
oFF.FdLayoutSelectionContainer.prototype.getSelectionList = function()
{
	return this.m_selectionList;
};
oFF.FdLayoutSelectionContainer.prototype.getSelectionListClearBtn = function()
{
	return this.m_selectionListClearBtn;
};
oFF.FdLayoutSelectionContainer.prototype.getClipboardBtn = function()
{
	return this.m_clipboardBtn;
};
oFF.FdLayoutSelectionContainer.prototype.isSelectionPreviewVisible = function()
{
	return this.m_selectionContainer.isVisible();
};
oFF.FdLayoutSelectionContainer.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_selectionContainer = oFF.XObjectExt.release(this.m_selectionContainer);
	this.m_selectionList = oFF.XObjectExt.release(this.m_selectionList);
	this.m_selectionListClearBtn = oFF.XObjectExt.release(this.m_selectionListClearBtn);
};

oFF.FdLayoutTable = function() {};
oFF.FdLayoutTable.prototype = new oFF.XObject();
oFF.FdLayoutTable.prototype._ff_c = "FdLayoutTable";

oFF.FdLayoutTable.create = function()
{
	return new oFF.FdLayoutTable();
};
oFF.FdLayoutTable.prototype.m_table = null;
oFF.FdLayoutTable.prototype.m_pagingBtnPrev = null;
oFF.FdLayoutTable.prototype.m_pagingBtnNext = null;
oFF.FdLayoutTable.prototype.m_pagingBtn1 = null;
oFF.FdLayoutTable.prototype.m_pagingBtn2 = null;
oFF.FdLayoutTable.prototype.m_pagingBtn3 = null;
oFF.FdLayoutTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_table = genesis.newControl(oFF.UiType.TABLE);
	this.m_table.setName("FilterDialogTable");
	this.m_table.setFlex("auto");
	this.m_table.setVisibleRowCountMode(oFF.UiVisibleRowCountMode.AUTO);
	this.m_table.setMinRowCount(2);
	this.m_table.setSelectionBehavior(oFF.UiSelectionBehavior.ROW);
	var tableFooter = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	tableFooter.setDirection(oFF.UiFlexDirection.ROW);
	tableFooter.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	tableFooter.setWrap(oFF.UiFlexWrap.NO_WRAP);
	tableFooter.setWidth(oFF.UiCssLength.create("100%"));
	tableFooter.setJustifyContent(oFF.UiFlexJustifyContent.CENTER);
	tableFooter.setName("FilterDialogTableFooter");
	var marginLeft = oFF.UiCssBoxEdges.create("0 0 0 0.25rem");
	this.m_pagingBtnPrev = genesis.newControl(oFF.UiType.BUTTON);
	this.m_pagingBtnPrev.setName("FilterDialogPagingBtnPrev");
	this.m_pagingBtnPrev.setIcon("navigation-left-arrow");
	this.m_pagingBtnPrev.setTooltip(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_PREVIOUS));
	this.m_pagingBtnPrev.setButtonType(oFF.UiButtonType.TRANSPARENT);
	tableFooter.addItem(this.m_pagingBtnPrev);
	this.m_pagingBtn1 = genesis.newControl(oFF.UiType.BUTTON);
	this.m_pagingBtn1.setName("FilterDialogPagingBtn1");
	this.m_pagingBtn1.setMargin(marginLeft);
	this.m_pagingBtn1.setButtonType(oFF.UiButtonType.TRANSPARENT);
	tableFooter.addItem(this.m_pagingBtn1);
	this.m_pagingBtn2 = genesis.newControl(oFF.UiType.BUTTON);
	this.m_pagingBtn2.setName("FilterDialogPagingBtn2");
	this.m_pagingBtn2.setMargin(marginLeft);
	this.m_pagingBtn2.setButtonType(oFF.UiButtonType.TRANSPARENT);
	tableFooter.addItem(this.m_pagingBtn2);
	this.m_pagingBtn3 = genesis.newControl(oFF.UiType.BUTTON);
	this.m_pagingBtn3.setName("FilterDialogPagingBtn3");
	this.m_pagingBtn3.setMargin(marginLeft);
	this.m_pagingBtn3.setButtonType(oFF.UiButtonType.TRANSPARENT);
	tableFooter.addItem(this.m_pagingBtn3);
	this.m_pagingBtnNext = genesis.newControl(oFF.UiType.BUTTON);
	this.m_pagingBtnNext.setName("FilterDialogPagingBtnNext");
	this.m_pagingBtnNext.setIcon("navigation-right-arrow");
	this.m_pagingBtnNext.setTooltip(genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_NEXT));
	this.m_pagingBtnNext.setMargin(marginLeft);
	this.m_pagingBtnNext.setButtonType(oFF.UiButtonType.TRANSPARENT);
	tableFooter.addItem(this.m_pagingBtnNext);
	this.m_table.setFooter(tableFooter);
};
oFF.FdLayoutTable.prototype.getRoot = function()
{
	return this.m_table;
};
oFF.FdLayoutTable.prototype.resizeComponent = function(size) {};
oFF.FdLayoutTable.prototype.disableAllPagingButtons = function()
{
	this.m_pagingBtnPrev.setEnabled(false);
	this.m_pagingBtnNext.setEnabled(false);
	this.m_pagingBtn1.setEnabled(false);
	this.m_pagingBtn2.setEnabled(false);
	this.m_pagingBtn3.setEnabled(false);
};
oFF.FdLayoutTable.prototype.getPagingBtnPrev = function()
{
	return this.m_pagingBtnPrev;
};
oFF.FdLayoutTable.prototype.getPagingBtnNext = function()
{
	return this.m_pagingBtnNext;
};
oFF.FdLayoutTable.prototype.getPagingBtn1 = function()
{
	return this.m_pagingBtn1;
};
oFF.FdLayoutTable.prototype.getPagingBtn2 = function()
{
	return this.m_pagingBtn2;
};
oFF.FdLayoutTable.prototype.getPagingBtn3 = function()
{
	return this.m_pagingBtn3;
};
oFF.FdLayoutTable.prototype.setPagingBtn1Visible = function(visible, enabled)
{
	this.m_pagingBtn1.setVisible(visible);
	this.m_pagingBtn1.setEnabled(enabled);
};
oFF.FdLayoutTable.prototype.setPagingBtn2Visible = function(visible, enabled)
{
	this.m_pagingBtn2.setVisible(visible);
	this.m_pagingBtn2.setEnabled(enabled);
};
oFF.FdLayoutTable.prototype.setPagingBtn3Visible = function(visible, enabled)
{
	this.m_pagingBtn3.setVisible(visible);
	this.m_pagingBtn3.setEnabled(enabled);
};
oFF.FdLayoutTable.prototype.releaseObject = function()
{
	this.m_table = oFF.XObjectExt.release(this.m_table);
	this.m_pagingBtnPrev = oFF.XObjectExt.release(this.m_pagingBtnPrev);
	this.m_pagingBtnNext = oFF.XObjectExt.release(this.m_pagingBtnNext);
	this.m_pagingBtn1 = oFF.XObjectExt.release(this.m_pagingBtn1);
	this.m_pagingBtn2 = oFF.XObjectExt.release(this.m_pagingBtn2);
	this.m_pagingBtn3 = oFF.XObjectExt.release(this.m_pagingBtn3);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.FdLayoutToggles = function() {};
oFF.FdLayoutToggles.prototype = new oFF.XObject();
oFF.FdLayoutToggles.prototype._ff_c = "FdLayoutToggles";

oFF.FdLayoutToggles.MARGIN_COLUMN = "0 0.5rem 0 0";
oFF.FdLayoutToggles.MARGIN_TOP = "0.25rem 0 0 0";
oFF.FdLayoutToggles.MARGIN_RIGHT = "0 0.25rem 0 0";
oFF.FdLayoutToggles.MARGIN_USE_DEFAULT_READMODE_SMALL_SCREEN = "-0.25rem 0px 0px 0.5rem";
oFF.FdLayoutToggles.create = function()
{
	return new oFF.FdLayoutToggles();
};
oFF.FdLayoutToggles.prototype.m_container = null;
oFF.FdLayoutToggles.prototype.m_labelColumn = null;
oFF.FdLayoutToggles.prototype.m_readModeLabelContainer = null;
oFF.FdLayoutToggles.prototype.m_excludeLabelContainer = null;
oFF.FdLayoutToggles.prototype.m_readModeSwitch = null;
oFF.FdLayoutToggles.prototype.m_readModeUseDefaultCheckbox = null;
oFF.FdLayoutToggles.prototype.m_smallScreenSwitchPlaceholder = null;
oFF.FdLayoutToggles.prototype.m_excludeSwitch = null;
oFF.FdLayoutToggles.prototype.m_readModeUseDefaultCheckboxColumn = null;
oFF.FdLayoutToggles.prototype.m_readModeUseDefaultLayout = null;
oFF.FdLayoutToggles.prototype.m_readModeUseDefaultInfoIconPopover = null;
oFF.FdLayoutToggles.prototype.m_readModeUseDefaultInfoIcon = null;
oFF.FdLayoutToggles.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_readModeSwitch = this.createSwitch(genesis, "FilterDialogReadModeSwitch");
	this.m_readModeUseDefaultCheckbox = genesis.newControl(oFF.UiType.CHECKBOX);
	this.m_readModeUseDefaultCheckbox.setName("FilterDialogReadModeUseDefaultCheckbox");
	this.m_smallScreenSwitchPlaceholder = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setHeight(oFF.UiCssLength.create("2rem")).setVisible(false);
	this.m_excludeSwitch = this.createSwitch(genesis, "FilterDialogExcludeSwitch");
	this.m_container = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_container.setDirection(oFF.UiFlexDirection.ROW);
	this.m_container.setJustifyContent(oFF.UiFlexJustifyContent.START);
	this.m_container.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_container.setName("FilterDialogToggleContainer");
	this.m_labelColumn = this.createColumn(genesis);
	this.m_readModeLabelContainer = this.createSwitchLabelLayout(genesis, oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS, this.m_readModeSwitch);
	this.m_excludeLabelContainer = this.createSwitchLabelLayout(genesis, oFF.FilterDialogI18n.I18N_FD_EXCLUDE_MEMBERS, this.m_excludeSwitch);
	this.m_labelColumn.addItem(this.m_readModeLabelContainer);
	this.m_labelColumn.addItem(this.m_excludeLabelContainer);
	this.m_container.addItem(this.m_labelColumn);
	var toggleColumn = this.createColumn(genesis);
	toggleColumn.addItem(this.m_readModeSwitch);
	toggleColumn.addItem(this.m_smallScreenSwitchPlaceholder);
	toggleColumn.addItem(this.m_excludeSwitch);
	this.m_container.addItem(toggleColumn);
	this.m_readModeUseDefaultCheckboxColumn = this.createColumn(genesis);
	this.m_readModeUseDefaultLayout = this.createReadModeDefaultLayout(genesis);
	this.m_readModeUseDefaultCheckboxColumn.addItem(this.m_readModeUseDefaultLayout);
	this.m_container.addItem(this.m_readModeUseDefaultCheckboxColumn);
};
oFF.FdLayoutToggles.prototype.createColumn = function(genesis)
{
	var labelContainer = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	labelContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	labelContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	labelContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	labelContainer.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_COLUMN));
	labelContainer.setFlex("0 0 auto");
	return labelContainer;
};
oFF.FdLayoutToggles.prototype.createSwitchLabelLayout = function(genesis, i18nKey, uiSwitch)
{
	var readModeLabel = genesis.newControl(oFF.UiType.LABEL);
	readModeLabel.setFlex("auto");
	readModeLabel.setText(genesis.getUiManager().getLocalization().getText(i18nKey));
	readModeLabel.setLabelFor(uiSwitch);
	var container = this.createCenteredRowLayout(genesis);
	container.addItem(readModeLabel);
	return container;
};
oFF.FdLayoutToggles.prototype.createReadModeDefaultLayout = function(genesis)
{
	var i18n = genesis.getUiManager().getLocalization();
	var label = genesis.newControl(oFF.UiType.LABEL);
	label.setName("FilterDialogReadModeUseDefaultLabel");
	label.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT));
	label.setLabelFor(this.m_readModeUseDefaultCheckbox);
	label.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_RIGHT));
	this.m_readModeUseDefaultInfoIcon = genesis.newControl(oFF.UiType.ICON);
	this.m_readModeUseDefaultInfoIcon.setName("FilterDialogReadModeUseDefaultIcon");
	this.m_readModeUseDefaultInfoIcon.setIcon("message-information");
	this.m_readModeUseDefaultInfoIcon.setTooltip(null);
	this.m_readModeUseDefaultInfoIcon.registerOnHover(this);
	this.m_readModeUseDefaultInfoIcon.registerOnHoverEnd(this);
	var iconPopOverLabel = genesis.newControl(oFF.UiType.LABEL);
	iconPopOverLabel.setName("FilterDialogReadModeUseDefaultIconPopoverLabel");
	iconPopOverLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT_TOOLTIP));
	iconPopOverLabel.setWrapping(true);
	this.m_readModeUseDefaultInfoIconPopover = genesis.newControl(oFF.UiType.POPOVER);
	this.m_readModeUseDefaultInfoIconPopover.setName("FilterDialogReadModeUseDefaultIconPopover");
	this.m_readModeUseDefaultInfoIconPopover.setContent(iconPopOverLabel);
	this.m_readModeUseDefaultInfoIconPopover.setWidth(oFF.UiCssLength.create("150px"));
	this.m_readModeUseDefaultInfoIconPopover.setPadding(oFF.UiCssBoxEdges.create("10px"));
	this.m_readModeUseDefaultInfoIconPopover.setPlacement(oFF.UiPlacementType.TOP);
	var container = this.createCenteredRowLayout(genesis);
	container.setName("FilterDialogReadModeUseDefaultContainer");
	container.setFlex(null);
	container.addItem(this.m_readModeUseDefaultCheckbox);
	container.addItem(label);
	container.addItem(this.m_readModeUseDefaultInfoIcon);
	return container;
};
oFF.FdLayoutToggles.prototype.onHover = function(event)
{
	this.m_readModeUseDefaultInfoIconPopover.openAt(this.m_readModeUseDefaultInfoIcon);
};
oFF.FdLayoutToggles.prototype.onHoverEnd = function(event)
{
	this.m_readModeUseDefaultInfoIconPopover.close();
};
oFF.FdLayoutToggles.prototype.createCenteredRowLayout = function(genesis)
{
	var container = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	container.setDirection(oFF.UiFlexDirection.ROW);
	container.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	container.setWrap(oFF.UiFlexWrap.NO_WRAP);
	container.setFlex("auto");
	container.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_TOP));
	return container;
};
oFF.FdLayoutToggles.prototype.createSwitch = function(genesis, name)
{
	var switchControl = genesis.newControl(oFF.UiType.SWITCH);
	switchControl.setName(name);
	switchControl.setOnText(" ");
	switchControl.setOffText(" ");
	switchControl.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_TOP));
	return switchControl;
};
oFF.FdLayoutToggles.prototype.getRoot = function()
{
	return this.m_container;
};
oFF.FdLayoutToggles.prototype.resizeComponent = function(size)
{
	if (this.m_readModeUseDefaultCheckboxColumn.isVisible())
	{
		if (size.isSmall())
		{
			this.m_readModeUseDefaultLayout.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_USE_DEFAULT_READMODE_SMALL_SCREEN));
			this.m_labelColumn.insertItem(this.m_readModeUseDefaultLayout, 1);
			this.m_smallScreenSwitchPlaceholder.setVisible(true);
		}
		else
		{
			this.m_readModeUseDefaultLayout.setMargin(oFF.UiCssBoxEdges.create(oFF.FdLayoutToggles.MARGIN_TOP));
			this.m_readModeUseDefaultCheckboxColumn.addItem(this.m_readModeUseDefaultLayout);
			this.m_smallScreenSwitchPlaceholder.setVisible(false);
		}
	}
};
oFF.FdLayoutToggles.prototype.getReadModeSwitch = function()
{
	return this.m_readModeSwitch;
};
oFF.FdLayoutToggles.prototype.getReadModeUseDefaultCheckbox = function()
{
	return this.m_readModeUseDefaultCheckbox;
};
oFF.FdLayoutToggles.prototype.getExcludeSwitch = function()
{
	return this.m_excludeSwitch;
};
oFF.FdLayoutToggles.prototype.setReadModeSwitchVisible = function(visible, enabled, isOn, useDefaultCheckboxVisible, useDefaultCheckboxChecked)
{
	this.m_readModeLabelContainer.setVisible(visible);
	this.m_readModeSwitch.setVisible(visible);
	this.m_readModeSwitch.setEnabled(enabled && (!useDefaultCheckboxVisible || !useDefaultCheckboxChecked));
	this.m_readModeSwitch.setOn(isOn);
	this.m_readModeUseDefaultCheckboxColumn.setVisible(useDefaultCheckboxVisible);
	this.m_readModeUseDefaultCheckbox.setChecked(useDefaultCheckboxChecked);
	this.m_container.setVisible(visible || this.m_excludeSwitch.isVisible());
};
oFF.FdLayoutToggles.prototype.setExcludeSwitchVisible = function(visible)
{
	this.m_excludeLabelContainer.setVisible(visible);
	this.m_excludeSwitch.setVisible(visible);
	this.m_container.setVisible(visible || this.m_readModeSwitch.isVisible());
};
oFF.FdLayoutToggles.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_container = oFF.XObjectExt.release(this.m_container);
	this.m_labelColumn = oFF.XObjectExt.release(this.m_labelColumn);
	this.m_readModeLabelContainer = oFF.XObjectExt.release(this.m_readModeLabelContainer);
	this.m_excludeLabelContainer = oFF.XObjectExt.release(this.m_excludeLabelContainer);
	this.m_readModeSwitch = oFF.XObjectExt.release(this.m_readModeSwitch);
	this.m_readModeUseDefaultCheckbox = oFF.XObjectExt.release(this.m_readModeUseDefaultCheckbox);
	this.m_excludeSwitch = oFF.XObjectExt.release(this.m_excludeSwitch);
	this.m_readModeUseDefaultCheckboxColumn = oFF.XObjectExt.release(this.m_readModeUseDefaultCheckboxColumn);
	this.m_readModeUseDefaultLayout = oFF.XObjectExt.release(this.m_readModeUseDefaultLayout);
	this.m_smallScreenSwitchPlaceholder = oFF.XObjectExt.release(this.m_smallScreenSwitchPlaceholder);
	this.m_readModeUseDefaultInfoIcon = oFF.XObjectExt.release(this.m_readModeUseDefaultInfoIcon);
	this.m_readModeUseDefaultInfoIconPopover = oFF.XObjectExt.release(this.m_readModeUseDefaultInfoIconPopover);
};

oFF.FdLayoutTreeTable = function() {};
oFF.FdLayoutTreeTable.prototype = new oFF.XObject();
oFF.FdLayoutTreeTable.prototype._ff_c = "FdLayoutTreeTable";

oFF.FdLayoutTreeTable.create = function()
{
	return new oFF.FdLayoutTreeTable();
};
oFF.FdLayoutTreeTable.prototype.m_treeTable = null;
oFF.FdLayoutTreeTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_treeTable = genesis.newControl(oFF.UiType.TREE_TABLE);
	this.m_treeTable.setName("FilterDialogTree");
	this.m_treeTable.setVisibleRowCountMode(oFF.UiVisibleRowCountMode.AUTO);
	this.m_treeTable.setMinRowCount(2);
	this.m_treeTable.setSelectionBehavior(oFF.UiSelectionBehavior.ROW);
	this.m_treeTable.setFlex("auto");
};
oFF.FdLayoutTreeTable.prototype.getRoot = function()
{
	return this.m_treeTable;
};
oFF.FdLayoutTreeTable.prototype.resizeComponent = function(size) {};
oFF.FdLayoutTreeTable.prototype.releaseObject = function()
{
	this.m_treeTable = oFF.XObjectExt.release(this.m_treeTable);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.LayoutDialogI18n = function() {};
oFF.LayoutDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.LayoutDialogI18n.prototype._ff_c = "LayoutDialogI18n";

oFF.LayoutDialogI18n.I18N_LD_COLUMNS = "I18N_LD_COLUMNS";
oFF.LayoutDialogI18n.I18N_LD_ROWS = "I18N_LD_ROWS";
oFF.LayoutDialogI18n.I18N_LD_FREE_AXIS = "I18N_LD_FREE_AXIS";
oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_COLUMNS = "I18N_LD_MOVE_TO_COLUMNS";
oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_ROWS = "I18N_LD_MOVE_TO_ROWS";
oFF.LayoutDialogI18n.I18N_LD_REMOVE_FROM_LAYOUT = "I18N_LD_REMOVE_FROM_LAYOUT";
oFF.LayoutDialogI18n.I18N_LD_GRID_CONFIG = "I18N_LD_GRID_CONFIG";
oFF.LayoutDialogI18n.I18N_LD_COLUMN_LIMIT = "I18N_LD_COLUMN_LIMIT";
oFF.LayoutDialogI18n.I18N_LD_ROW_LIMIT = "I18N_LD_ROW_LIMIT";
oFF.LayoutDialogI18n.I18N_LD_ALLOW_INPUT = "I18N_LD_ALLOW_INPUT";
oFF.LayoutDialogI18n.I18N_LD_DISPLAY_HIERARCHICALLY = "I18N_LD_DISPLAY_HIERARCHICALLY";
oFF.LayoutDialogI18n.I18N_LD_PROPERTIES = "I18N_LD_PROPERTIES";
oFF.LayoutDialogI18n.I18N_LD_SELECT_FILTER = "I18N_LD_SELECT_FILTER";
oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_TOTALS_ZERO = "I18N_LD_SUPPRESSION_TOTALS_ZERO";
oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_ALL_ZERO = "I18N_LD_SUPPRESSION_ALL_ZERO";
oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_ALL_NULL = "I18N_LD_SUPPRESSION_ALL_NULL";
oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_NONE = "I18N_LD_SUPPRESSION_NONE";
oFF.LayoutDialogI18n.I18N_LD_MOVE_BOTTOM = "I18N_LD_MOVE_BOTTOM";
oFF.LayoutDialogI18n.I18N_LD_MOVE_DOWN = "I18N_LD_MOVE_DOWN";
oFF.LayoutDialogI18n.I18N_LD_MOVE_UP = "I18N_LD_MOVE_UP";
oFF.LayoutDialogI18n.I18N_LD_MOVE_TOP = "I18N_LD_MOVE_TOP";
oFF.LayoutDialogI18n.I18N_LD_USE_DEFAULT_SETTING = "I18N_LD_USE_DEFAULT_SETTING";
oFF.LayoutDialogI18n.I18N_LD_ZERO_SUPPRESSION = "I18N_LD_ZERO_SUPPRESSION";
oFF.LayoutDialogI18n.I18N_LD_POSITION_OF_TOTALS = "I18N_LD_POSITION_OF_TOTALS";
oFF.LayoutDialogI18n.I18N_LD_ABOVE = "I18N_LD_ABOVE";
oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW = "I18N_LD_ABOVE_AND_BELOW";
oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW_SHORT = "I18N_LD_ABOVE_AND_BELOW_SHORT";
oFF.LayoutDialogI18n.I18N_LD_BELOW = "I18N_LD_BELOW";
oFF.LayoutDialogI18n.I18N_LD_TECHNICAL = "I18N_LD_TECHNICAL";
oFF.LayoutDialogI18n.I18N_LD_SHOW_FREE = "I18N_LD_SHOW_FREE";
oFF.LayoutDialogI18n.I18N_LD_HIDE_FREE = "I18N_LD_HIDE_FREE";
oFF.LayoutDialogI18n.createLayoutDialogI18n = function()
{
	return new oFF.LayoutDialogI18n();
};
oFF.LayoutDialogI18n.staticSetupLd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_COLUMNS, "Columns");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ROWS, "Rows");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_FREE_AXIS, "Free Axis");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_COLUMNS, "Move to Columns");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_TO_ROWS, "Move to Rows");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_REMOVE_FROM_LAYOUT, "Remove From Layout");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_GRID_CONFIG, "Grid");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_COLUMN_LIMIT, "Column Limit");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ROW_LIMIT, "Row Limit");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ALLOW_INPUT, "Allow Input");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_DISPLAY_HIERARCHICALLY, "Display Hierarchically");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_PROPERTIES, "Properties");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SELECT_FILTER, "Select Filter");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_TOTALS_ZERO, "Suppress if totals are zero");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_ALL_ZERO, "Suppress if all values are zero");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_ALL_NULL, "Suppress if all values are null");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SUPPRESSION_NONE, "Don't suppress zeros");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_BOTTOM, "Move Item to Bottom");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_DOWN, "Move Down Item by 1");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_UP, "Move Up Item by 1");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_MOVE_TOP, "Move Item to Top");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ZERO_SUPPRESSION, "Zero Suppression");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_USE_DEFAULT_SETTING, "Use Default Setting");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_POSITION_OF_TOTALS, "Position of Totals");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ABOVE, "Above");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW, "Above And Below");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_ABOVE_AND_BELOW_SHORT, "A + B");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_BELOW, "Below");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_TECHNICAL, "Show Technical Names");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_SHOW_FREE, "Show Dimensions on Free Axis");
	oFF.OlapUiI18n.addDefaultValue(oFF.LayoutDialogI18n.I18N_LD_HIDE_FREE, "Hide Dimensions on Free Axis");
};

oFF.VariableDialogI18n = function() {};
oFF.VariableDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.VariableDialogI18n.prototype._ff_c = "VariableDialogI18n";

oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_FOR = "I18N_VD_SET_VARIABLES_FOR";
oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES = "I18N_VD_SET_VARIABLES";
oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_PS = "I18N_VD_SET_VARIABLES_PS";
oFF.VariableDialogI18n.I18N_VD_SET = "I18N_VD_SET";
oFF.VariableDialogI18n.I18N_VD_DELETE = "I18N_VD_DELETE";
oFF.VariableDialogI18n.I18N_VD_ENTER = "I18N_VD_ENTER";
oFF.VariableDialogI18n.I18N_VD_SELECT_MEMBER_FOR = "I18N_VD_SELECT_MEMBER_FOR";
oFF.VariableDialogI18n.I18N_VD_MEMBER_ID = "I18N_VD_MEMBER_ID";
oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NAME = "I18N_VD_HIERARCHY_NAME";
oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NODE = "I18N_VD_HIERARCHY_NODE";
oFF.VariableDialogI18n.I18N_VD_STRING = "I18N_VD_STRING";
oFF.VariableDialogI18n.I18N_VD_NUMBER = "I18N_VD_NUMBER";
oFF.VariableDialogI18n.I18N_VD_VALUE = "I18N_VD_VALUE";
oFF.VariableDialogI18n.I18N_VD_STORY_LEVEL = "I18N_VD_STORY_LEVEL";
oFF.VariableDialogI18n.I18N_VD_APP_LEVEL = "I18N_VD_APP_LEVEL";
oFF.VariableDialogI18n.I18N_VD_CHART_LEVEL = "I18N_VD_CHART_LEVEL";
oFF.VariableDialogI18n.I18N_VD_TABLE_LEVEL = "I18N_VD_TABLE_LEVEL";
oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY = "I18N_VD_FORCE_PROMPT_STORY";
oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY_INFO = "I18N_VD_FORCE_PROMPT_STORY_INFO";
oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_APP = "I18N_VD_FORCE_PROMPT_APP";
oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_PS = "I18N_VD_FORCE_PROMPT_PS";
oFF.VariableDialogI18n.I18N_VD_DISABLE_EXIT = "I18N_VD_DISABLE_EXIT";
oFF.VariableDialogI18n.I18N_VD_DISABLE_DYNAMIC = "I18N_VD_DISABLE_DYNAMIC";
oFF.VariableDialogI18n.I18N_VD_APPLY_VARIANT = "I18N_VD_APPLY_VARIANT";
oFF.VariableDialogI18n.I18N_VD_CHOOSE_VARIANT = "I18N_VD_CHOOSE_VARIANT";
oFF.VariableDialogI18n.I18N_VD_VALUE_HELP = "I18N_VD_VALUE_HELP";
oFF.VariableDialogI18n.I18N_VD_DYNAMIC_FILTER_INFO = "I18N_VD_DYNAMIC_FILTER_INFO";
oFF.VariableDialogI18n.I18N_VD_SET_FOR_ALL_PAGES = "I18N_VD_SET_FOR_ALL_PAGES";
oFF.VariableDialogI18n.I18N_VD_SET_FOR_CURRENT_PAGE = "I18N_VD_SET_FOR_CURRENT_PAGE";
oFF.VariableDialogI18n.I18N_VD_CLIPBOARD_INFO = "I18N_VD_CLIPBOARD_INFO";
oFF.VariableDialogI18n.I18N_VD_NULL = "I18N_VD_NULL";
oFF.VariableDialogI18n.I18N_VD_NO_VALUE = "I18N_VD_NO_VALUE";
oFF.VariableDialogI18n.I18N_VD_LINK_INFO_MESSAGE = "I18N_VD_LINK_INFO_MESSAGE";
oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_MANDATORY_VAR = "I18N_VD_ERROR_MSG_MANDATORY_VAR";
oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_VALUE_MISSING = "I18N_VD_ERROR_MSG_VALUE_MISSING";
oFF.VariableDialogI18n.I18N_VD_MEMBER_DOES_NOT_EXIST = "I18N_VD_MEMBER_DOES_NOT_EXIST";
oFF.VariableDialogI18n.I18N_VD_TEXT_VARIABLE_DISABLED = "I18N_VD_TEXT_VARIABLE_DISABLED";
oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_NUMBER_VALIDATION = "I18N_VD_ERROR_MSG_NUMBER_VALIDATION";
oFF.VariableDialogI18n.I18N_VD_WARNING_MSG_NUMBER_FORMAT = "I18N_VD_WARNING_MSG_NUMBER_FORMAT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL = "I18N_VD_COMPARISON_OPERATOR_EQUAL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL = "I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER = "I18N_VD_COMPARISON_OPERATOR_GREATER";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL = "I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS = "I18N_VD_COMPARISON_OPERATOR_LESS";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL = "I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN = "I18N_VD_COMPARISON_OPERATOR_BETWEEN";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN = "I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NULL = "I18N_VD_COMPARISON_OPERATOR_IS_NULL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NOT_NULL = "I18N_VD_COMPARISON_OPERATOR_IS_NOT_NULL";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH = "I18N_VD_COMPARISON_OPERATOR_MATCH";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH_TEXT = "I18N_VD_COMPARISON_OPERATOR_MATCH_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL_TEXT = "I18N_VD_COMPARISON_OPERATOR_EQUAL_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL_TEXT = "I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_TEXT = "I18N_VD_COMPARISON_OPERATOR_GREATER_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL_TEXT = "I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_TEXT = "I18N_VD_COMPARISON_OPERATOR_LESS_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL_TEXT = "I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN_TEXT = "I18N_VD_COMPARISON_OPERATOR_BETWEEN_TEXT";
oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN_TEXT = "I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN_TEXT";
oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_DATE_VALIDATION = "I18N_VD_ERROR_MSG_INVALID_DATE_VALUE";
oFF.VariableDialogI18n.I18N_VD_DYNAMIC_VARIABLE_INFO = "I18N_VD_DYNAMIC_VARIABLE_INFO";
oFF.VariableDialogI18n.I18N_VD_NO_VARIABLES = "I18N_VD_NO_VARIABLES";
oFF.VariableDialogI18n.I18N_VD_ERR_UNKNOWN_ERROR = "I18N_VD_ERR_UNKNOWN_ERROR";
oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR = "I18N_VD_ERR_VH_SERVER_ERROR";
oFF.VariableDialogI18n.I18N_VD_WARN_VH_VALUES_NOT_FOUND = "I18N_VD_WARN_VH_VALUES_NOT_FOUND";
oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT = "I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT";
oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_LONG = "I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_LONG";
oFF.VariableDialogI18n.I18N_VD_ERR_QUERIES_IN_PROCESSING = "I18N_VD_ERR_QUERIES_IN_PROCESSING";
oFF.VariableDialogI18n.I18N_VD_ERR_VAR_SUBMIT_IN_PROCESSING = "I18N_VD_ERR_VAR_SUBMIT_IN_PROCESSING";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_DATE_VIEW_SELECT_DATE = "I18N_VD_VH_MOBILE_DATE_VIEW_SELECT_DATE";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE = "I18N_VD_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE ";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_LIST_VIEW_SELECT = "I18N_VD_VH_MOBILE_LIST_VIEW_SELECT";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1 = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2 = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS_SELECTION = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS";
oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP = "I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP";
oFF.VariableDialogI18n.I18N_VD_MISSING_LINK_WARNING = "I18N_VD_MISSING_LINK_WARNING";
oFF.VariableDialogI18n.I18N_VD_LINKED_VARIABLE_NO_RESULTS = "I18N_VD_LINKED_VARIABLE_NO_DESCRIPTION";
oFF.VariableDialogI18n.I18N_VD_VARIABLE_VALUES_SET_TO = "I18N_VD_VARIABLE_VALUES_SET_TO";
oFF.VariableDialogI18n.I18N_VD_EMPTY_CURRENCY_OPTION_TEXT = "I18N_VD_EMPTY_CURRENCY_OPTION_TEXT";
oFF.VariableDialogI18n.I18N_VD_TRUE = "I18N_VD_TRUE";
oFF.VariableDialogI18n.I18N_VD_FALSE = "I18N_VD_FALSE";
oFF.VariableDialogI18n.createVariableDialogI18n = function()
{
	return new oFF.VariableDialogI18n();
};
oFF.VariableDialogI18n.staticSetupVd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_FOR, "Set Variables for");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES, "Set Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_PS, "Set Variables for BPC Planning Sequence");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET, "Set");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_DELETE, "Delete");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ENTER, "Enter {0}");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SELECT_MEMBER_FOR, "Select Member for {0}");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_MEMBER_ID, "Member ID");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NAME, "Hierarchy Name");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_HIERARCHY_NODE, "Hierarchy Node");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_STRING, "String");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_NUMBER, "Number");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VALUE, "Value");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_STORY_LEVEL, "Use Story Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_APP_LEVEL, "Use Analytic Application Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_CHART_LEVEL, "Set Chart Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_TABLE_LEVEL, "Set Table Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY, "Automatically open prompt when story opens");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY_INFO, "This prompt will not show if all variables have been set by linked variables in other prompts");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_APP, "Automatically open prompt when analytic application opens");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_PS, "Automatically open prompt when planning sequence is triggered.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_DISABLE_EXIT, "Disable exit variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_DISABLE_DYNAMIC, "Disable Dynamic Variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_APPLY_VARIANT, "Apply Variant");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_CHOOSE_VARIANT, "Choose variant to apply");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VALUE_HELP, "Value Help");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_FILTER_INFO, "This variable is a BW dynamic filter.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET_FOR_ALL_PAGES, "Set for All Pages");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SET_FOR_CURRENT_PAGE, "Set for Current Page");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_CLIPBOARD_INFO, "Range values can be separated with comma or semicolon.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_NULL, "(Null)");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_NO_VALUE, "(No Value)");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_LINK_INFO_MESSAGE, "This variable is linked with the following variables:");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_MANDATORY_VAR, "Please enter at least one member for {0}");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_VALUE_MISSING, "Value is missing");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_MEMBER_DOES_NOT_EXIST, "Member does not exist");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_TEXT_VARIABLE_DISABLED, "Text variables can only be set on story level.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_NUMBER_VALIDATION, "Please input a decimal value");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_WARNING_MSG_NUMBER_FORMAT, "The numeric value will be formatted to: {0}");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL, "=");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL, "\u2260");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER, ">");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL, ">=");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS, "<");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL, "<=");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN, "[ ]");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN, "![ ]");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NULL, "is null");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NOT_NULL, "is not null");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH, "*");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL_TEXT, "equal");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL_TEXT, "not equal");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_TEXT, "greater than");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL_TEXT, "greater than or equal");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_TEXT, "less than");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL_TEXT, "less than or equal");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN_TEXT, "between");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN_TEXT, "not between");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH_TEXT, "contains");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_DATE_VALIDATION, "Please input a valid date value.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_VARIABLE_INFO, "This Dynamic Variable will be updated automatically, unless dynamic variables are disabled");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_NO_VARIABLES, "There are no variables for this object.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERR_UNKNOWN_ERROR, "An unknown error has occurred.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR, "A server error has occurred, and the values cannot be processed. Please try again.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_WARN_VH_VALUES_NOT_FOUND, "Some values could not be found, and were not applied to the variable.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT, "Use saved prompts for dynamic variables");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_LONG, "This option lets you use saved variables instead of Customer Exit, SAP Exit, SAP HANA Exit, or Authorization variables.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERR_QUERIES_IN_PROCESSING, "Variable Dialog can not be opened until submit is done");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_ERR_VAR_SUBMIT_IN_PROCESSING, "Please wait until the ongoing variable submit is done.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_DATE_VIEW_SELECT_DATE, "Select a date");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE, "Select a date range");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_LIST_VIEW_SELECT, "Select for {0}");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR, "Select Operator");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER, "Select Member");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1, "Select Member 1/2");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2, "Select Member 2/2");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS_SELECTION, "Previous selection:");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP, "Continue to next page");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_MISSING_LINK_WARNING, "Variable links associated with the current variable are no longer valid. The selected value will not be set to other linked variables.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_LINKED_VARIABLE_NO_RESULTS, "There are no results for the searched member in the description section. It might be a fallback. Please try to search with ID.");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_VARIABLE_VALUES_SET_TO, "{0} set to:");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_EMPTY_CURRENCY_OPTION_TEXT, "Do not convert");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_TRUE, "True");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariableDialogI18n.I18N_VD_FALSE, "False");
};

oFF.VariantPopupI18n = function() {};
oFF.VariantPopupI18n.prototype = new oFF.OlapUiI18n();
oFF.VariantPopupI18n.prototype._ff_c = "VariantPopupI18n";

oFF.VariantPopupI18n.I18N_VARIANT_NAME = "I18N_VARIANT_NAME";
oFF.VariantPopupI18n.I18N_VARIANT_TYPE = "I18N_VARIANT_TYPE";
oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME = "I18N_VARIANT_TECHNICAL_NAME";
oFF.VariantPopupI18n.I18N_VARIANT_PERSONAL = "I18N_VARIANT_PERSONAL";
oFF.VariantPopupI18n.I18N_VARIANT_GLOBAL = "I18N_VARIANT_GLOBAL";
oFF.VariantPopupI18n.I18N_VARIANT_GENERATED_ID = "I18N_VARIANT_GENERATED_ID";
oFF.VariantPopupI18n.I18N_VARIANT_MANAGE = "I18N_VARIANT_MANAGE";
oFF.VariantPopupI18n.I18N_VARIANT_SAVE = "I18N_VARIANT_SAVE";
oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE = "I18N_VARIANT_OVERWRITE";
oFF.VariantPopupI18n.I18N_VARIANT_SAVE_CURRENT = "I18N_VARIANT_SAVE_CURRENT";
oFF.VariantPopupI18n.I18N_VARIANT_NAME_REQUIRED = "I18N_VARIANT_NAME_REQUIRED";
oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_REQUIRED = "I18N_VARIANT_TECHNICAL_NAME_REQUIRED";
oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_SAVE = "I18N_VARIANT_CANNOT_SAVE";
oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_DELETE = "I18N_VARIANT_CANNOT_DELETE";
oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_CHANGE = "I18N_VARIANT_CANNOT_CHANGE";
oFF.VariantPopupI18n.I18N_VARIANT_NAME_UNIQUE = "I18N_VARIANT_NAME_UNIQUE";
oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_UNIQUE = "I18N_VARIANT_TECHNICAL_NAME_UNIQUE";
oFF.VariantPopupI18n.I18N_VARIANT_POPUP_SAVE = "I18N_VARIANT_POPUP_SAVE";
oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL = "I18N_VARIANT_POPUP_CANCEL";
oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CLOSE = "I18N_VARIANT_POPUP_CLOSE";
oFF.VariantPopupI18n.I18N_VARIANT_POPUP_DELETE = "I18N_VARIANT_POPUP_DELETE";
oFF.VariantPopupI18n.I18N_VARIANT_EMPTY = "I18N_VARIANT_EMPTY";
oFF.VariantPopupI18n.I18N_VARIANT_NONE = "I18N_VARIANT_NONE";
oFF.VariantPopupI18n.I18N_VARIANT_SAVE_SUCCESS = "I18N_VARIANT_SAVE_SUCCESS";
oFF.VariantPopupI18n.I18N_VARIANT_WARNING = "I18N_VARIANT_WARNING";
oFF.VariantPopupI18n.I18N_VARIANT_DELETE_CONFIRMATION = "I18N_VARIANT_DELETE_CONFIRMATION";
oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE_CONFIRMATION = "I18N_VARIANT_OVERWRITE_CONFIRMATION";
oFF.VariantPopupI18n.staticSetupVp = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_NAME, "Name");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_TYPE, "Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME, "Technical Name");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_PERSONAL, "Personal");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_GLOBAL, "Global");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_GENERATED_ID, "Auto Generated");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_MANAGE, "Manage Variants");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_SAVE, "Save As Variant");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE, "Overwrite Variant with Current Settings");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_CURRENT, "Save Current Settings as New Variant");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_NAME_REQUIRED, "Name is required");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_REQUIRED, "Technical Name is required");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_NAME_UNIQUE, "Name needs to be unique");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_UNIQUE, "Technical Name needs to be unique");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_SAVE, "Variant could not be saved to due a server error");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_DELETE, "Variants could not be deleted to due a server error");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_CHANGE, "Variants could not be modified to due a server error");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_SAVE, "Save");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL, "Cancel");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CLOSE, "Done");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_DELETE, "Delete");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_EMPTY, "No variants available");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_NONE, "None");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_SUCCESS, "Successfully saved variant");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_WARNING, "Warning");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_DELETE_CONFIRMATION, "Are you sure you want to delete {0}?");
	oFF.OlapUiI18n.addDefaultValue(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE_CONFIRMATION, "Are you sure you want to overwrite {0} variant {1}?");
};

oFF.VdBackendStateHandler = function() {};
oFF.VdBackendStateHandler.prototype = new oFF.XObjectExt();
oFF.VdBackendStateHandler.prototype._ff_c = "VdBackendStateHandler";

oFF.VdBackendStateHandler.createHandler = function(varProcessor, uiContext)
{
	var obj = new oFF.VdBackendStateHandler();
	obj.setupExt(varProcessor, uiContext);
	return obj;
};
oFF.VdBackendStateHandler.prototype.m_uiContext = null;
oFF.VdBackendStateHandler.prototype.m_varProcessor = null;
oFF.VdBackendStateHandler.prototype.m_variables = null;
oFF.VdBackendStateHandler.prototype.m_submitValues = null;
oFF.VdBackendStateHandler.prototype.m_submitListener = null;
oFF.VdBackendStateHandler.prototype.m_savedValues = null;
oFF.VdBackendStateHandler.prototype.setupExt = function(varProcessor, uiContext)
{
	this.m_varProcessor = varProcessor;
	this.m_uiContext = uiContext;
	this.m_variables = this.m_varProcessor.getInputEnabledAndNonTechnicalVariables();
	this.m_savedValues = this.m_varProcessor.isDirectVariableTransferEnabled() || this.m_varProcessor.getVariableProcessorState().isTypeOf(oFF.VariableProcessorState.CHANGEABLE_REINIT) ? oFF.VdImportExport.getValuesFromProcessor(this.m_varProcessor) : oFF.XHashMapByString.create();
};
oFF.VdBackendStateHandler.prototype.getSubmitProcessor = function()
{
	return this.m_varProcessor;
};
oFF.VdBackendStateHandler.prototype.reinitVariables = function(listener, customIdentifier)
{
	if (this.m_varProcessor.getVariableProcessorState().isTypeOf(oFF.VariableProcessorState.PROCESSING))
	{
		this.doCallbackWithProcessingError(oFF.VariableDialogI18n.I18N_VD_ERR_QUERIES_IN_PROCESSING, listener, customIdentifier);
		return;
	}
	if (!this.m_varProcessor.isReinitNeeded())
	{
		listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
		return;
	}
	this.m_varProcessor.reInitVariablesAfterSubmit(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.VdBackendStateHandler.prototype.transferVariables = function(values, variable, listener, customIdentifier)
{
	var queryManager = variable.getQueryManager();
	if (oFF.notNull(queryManager))
	{
		this.transferWithProcessor(queryManager, values, variable, listener, customIdentifier);
	}
	else
	{
		this.transferWithProcessor(this.m_varProcessor, values, variable, listener, customIdentifier);
	}
};
oFF.VdBackendStateHandler.prototype.transferWithProcessor = function(processor, values, variable, listener, customIdentifier)
{
	if (this.isTransferRequired(values, variable))
	{
		this.saveValues(values);
		if (!processor.isDirectVariableTransferEnabled())
		{
			processor.transferVariables(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
			return;
		}
	}
	listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
};
oFF.VdBackendStateHandler.prototype.isTransferRequired = function(values, variableToTransfer)
{
	var queryManager = variableToTransfer.getQueryManager();
	var skipGivenVariable = oFF.notNull(queryManager) ? !queryManager.isDirectVariableTransferEnabled() : !this.m_varProcessor.isDirectVariableTransferEnabled();
	for (var i = 0; i < this.m_variables.size(); i++)
	{
		var variable = this.m_variables.get(i);
		if (variable === variableToTransfer && skipGivenVariable)
		{
			continue;
		}
		var varName = variable.getName();
		if (!oFF.XListUtils.isListEquals(values.getByKey(varName), this.m_savedValues.getByKey(varName)))
		{
			return true;
		}
	}
	return false;
};
oFF.VdBackendStateHandler.prototype.saveValues = function(allValues)
{
	for (var i = 0; i < this.m_variables.size(); i++)
	{
		var variable = this.m_variables.get(i);
		var varName = variable.getName();
		oFF.VdImportExport.setValuesToVariable(variable, allValues.getByKey(varName));
	}
	this.m_savedValues = oFF.VdValue.cloneValueMap(allValues);
};
oFF.VdBackendStateHandler.prototype.submitVariables = function(values, listener, customIdentifier)
{
	if (this.m_varProcessor.getVariableProcessorState().isTypeOf(oFF.VariableProcessorState.PROCESSING))
	{
		this.doCallbackWithProcessingError(oFF.VariableDialogI18n.I18N_VD_ERR_VAR_SUBMIT_IN_PROCESSING, listener, customIdentifier);
	}
	else if (this.m_varProcessor.isReinitNeeded())
	{
		this.m_submitValues = values;
		this.m_submitListener = listener;
		this.m_varProcessor.reInitVariablesAfterSubmit(oFF.OlapUiValueHelpAbstract.s_syncType, this, customIdentifier);
	}
	else if (this.m_varProcessor.isSubmitNeeded())
	{
		this.saveValues(values);
		this.m_varProcessor.submitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
	}
	else
	{
		this.saveValues(values);
		listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
	}
};
oFF.VdBackendStateHandler.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.submitVariables(this.m_submitValues, this.m_submitListener, customIdentifier);
	this.m_submitValues = null;
	this.m_submitListener = null;
};
oFF.VdBackendStateHandler.prototype.doCallbackWithProcessingError = function(i18nKey, listener, customIdentifier)
{
	var messages = oFF.MessageManagerSimple.createMessageManager();
	messages.setServerStatusCode(oFF.HttpStatusCode.SC_OK);
	messages.addError(oFF.ErrorCodes.VARIABLE_PROCESSOR_ALREADY_PROCESSING, this.m_uiContext.getLocalization().getText(i18nKey));
	listener.onVariableProcessorExecuted(oFF.ExtResult.create(null, messages), null, customIdentifier);
};
oFF.VdBackendStateHandler.prototype.cancelReinitVariables = function(startValues, listener, customIdentifier)
{
	this.saveValues(startValues);
	if (!this.m_varProcessor.isCancelNeeded())
	{
		listener.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, customIdentifier);
		return;
	}
	this.m_varProcessor.cancelReInitVariables(oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.VdBackendStateHandler.prototype.activateVariant = function(variant, listener, customIdentifier)
{
	var transferListener = oFF.VariableProcessorCallbackLambda.createSingleUse( function(transferResult){
		if (transferResult.hasErrors())
		{
			listener.onVariableProcessorExecuted(transferResult, null, customIdentifier);
			return;
		}
		var allValues = oFF.VdImportExport.getValuesFromProcessor(this.m_varProcessor);
		this.m_savedValues = oFF.VdValue.cloneValueMap(allValues);
		listener.onVariableProcessorExecuted(transferResult, transferResult.getData(), customIdentifier);
	}.bind(this));
	var activationListener = oFF.VariableProcessorCallbackLambda.createSingleUse( function(activateResult){
		if (activateResult.hasErrors())
		{
			listener.onVariableProcessorExecuted(activateResult, null, customIdentifier);
			return;
		}
		this.m_varProcessor.transferVariables(oFF.OlapUiValueHelpAbstract.s_syncType, transferListener, null);
	}.bind(this));
	this.m_varProcessor.activateVariableVariant(variant, oFF.OlapUiValueHelpAbstract.s_syncType, activationListener, null);
};
oFF.VdBackendStateHandler.prototype.saveVariant = function(values, variant, listener, customIdentifier)
{
	this.saveValues(values);
	this.m_varProcessor.updateVariableVariantValues(variant, oFF.OlapUiValueHelpAbstract.s_syncType, listener, customIdentifier);
};
oFF.VdBackendStateHandler.prototype.releaseObject = function()
{
	this.m_uiContext = null;
	this.m_varProcessor = null;
	this.m_variables = null;
	this.m_submitValues = null;
	this.m_submitListener = null;
	this.m_savedValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_savedValues);
	oFF.XObjectExt.prototype.releaseObject.call( this );
};

oFF.VdVariableForm = function() {};
oFF.VdVariableForm.prototype = new oFF.XObject();
oFF.VdVariableForm.prototype._ff_c = "VdVariableForm";

oFF.VdVariableForm.SUBMIT_IDENTIFIER = "submit";
oFF.VdVariableForm.CANCEL_SUBMIT_IDENTIFIER = "cancel_submit";
oFF.VdVariableForm.ACTIVATE_VARIANT_IDENTIFIER = "activate_variant";
oFF.VdVariableForm.SAVE_VARIANT_IDENTIFIER = "save_variant";
oFF.VdVariableForm.COMPONENT_NAME = "VariableDialog";
oFF.VdVariableForm.createAsToken = function(context, configuration)
{
	var obj = new oFF.VdVariableForm();
	obj.setupController(context, configuration);
	obj.m_embedded = true;
	return obj;
};
oFF.VdVariableForm.getVariantNameForDd = function(variant)
{
	var prefix = variant.getScope() === oFF.Scope.USER ? "User" : "Global";
	return oFF.XStringUtils.concatenate3(prefix, ":", variant.getName());
};
oFF.VdVariableForm.supportsStoryFilterOptimizationForDesktop = function(variableModel)
{
	if (!variableModel.supportsValueHelp() || variableModel.getValueType().isDateBased() || variableModel.isInterval())
	{
		return false;
	}
	return !variableModel.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE) && !variableModel.getVariableType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE);
};
oFF.VdVariableForm.areKeysDifferent = function(valuesFromDialog, valuesFromVariable, checkDisplayKey, isDateBased)
{
	if (valuesFromDialog.size() !== valuesFromVariable.size())
	{
		return true;
	}
	for (var i = 0; i < valuesFromDialog.size(); i++)
	{
		var valueFromDialog = valuesFromDialog.get(i);
		var valueFromVariable = valuesFromVariable.get(i);
		var operator = valueFromDialog.getOperator();
		if (operator !== valueFromVariable.getOperator())
		{
			return true;
		}
		if (operator.getNumberOfParameters() <= 0)
		{
			continue;
		}
		if (oFF.VdVariableForm.areKeysDifferent2(valueFromDialog.getFirstOperand(), valueFromVariable.getFirstOperand(), checkDisplayKey, isDateBased))
		{
			return true;
		}
		if (operator.getNumberOfParameters() >= 2 && oFF.VdVariableForm.areKeysDifferent2(valueFromDialog.getSecondOperand(), valueFromVariable.getSecondOperand(), checkDisplayKey, isDateBased))
		{
			return true;
		}
	}
	return false;
};
oFF.VdVariableForm.areKeysDifferent2 = function(dialog, variable, checkDisplayKey, isDateBased)
{
	var dialogKey = dialog.getKey();
	var variableKey = checkDisplayKey ? variable.getDisplayKey() : variable.getKey();
	if (isDateBased && oFF.XObjectExt.areEqual(oFF.XDate.createDateSafe(dialogKey), oFF.XDate.createDateSafe(variableKey)))
	{
		return false;
	}
	return !oFF.XString.isEqual(dialogKey, variableKey);
};
oFF.VdVariableForm.prototype.m_context = null;
oFF.VdVariableForm.prototype.m_config = null;
oFF.VdVariableForm.prototype.m_genesis = null;
oFF.VdVariableForm.prototype.m_variantDd = null;
oFF.VdVariableForm.prototype.m_variantDdOverwriteBtn = null;
oFF.VdVariableForm.prototype.m_variantDdSaveBtn = null;
oFF.VdVariableForm.prototype.m_variantDdManageBtn = null;
oFF.VdVariableForm.prototype.m_model = null;
oFF.VdVariableForm.prototype.m_view = null;
oFF.VdVariableForm.prototype.m_variableController = null;
oFF.VdVariableForm.prototype.m_maintainsVariants = false;
oFF.VdVariableForm.prototype.m_inputEnabled = false;
oFF.VdVariableForm.prototype.m_isClosing = false;
oFF.VdVariableForm.prototype.m_embedded = false;
oFF.VdVariableForm.prototype.m_preparingSubmit = false;
oFF.VdVariableForm.prototype.m_preparingTransfer = false;
oFF.VdVariableForm.prototype.m_transferModel = null;
oFF.VdVariableForm.prototype.m_transferCallback = null;
oFF.VdVariableForm.prototype.m_backendStateHandler = null;
oFF.VdVariableForm.prototype.m_externalStateHandler = null;
oFF.VdVariableForm.prototype.m_externalValueHelpProvider = null;
oFF.VdVariableForm.prototype.m_renderListener = null;
oFF.VdVariableForm.prototype.m_reinitListener = null;
oFF.VdVariableForm.prototype.m_submitListener = null;
oFF.VdVariableForm.prototype.setupController = function(context, configuration)
{
	this.m_context = context;
	this.m_config = configuration;
	this.m_inputEnabled = true;
	var varProcessor = this.m_config.getVarProcessor();
	var startValues = this.m_config.getStartValues();
	if (oFF.isNull(startValues))
	{
		var valueFormat = this.m_config.getValueJsonFormat();
		var startValueJson = this.m_config.getStartValueJson();
		if (oFF.notNull(valueFormat) && oFF.notNull(startValueJson))
		{
			startValues = valueFormat.getParser().deserialize(varProcessor, startValueJson);
		}
	}
	this.m_model = oFF.VdModel.create(varProcessor, startValues, this.m_context);
	this.m_model.addListener(this);
	this.m_backendStateHandler = oFF.VdBackendStateHandler.createHandler(varProcessor, this.m_context);
};
oFF.VdVariableForm.prototype.configureVariantSection = function()
{
	var hasVariants = oFF.XCollectionUtils.hasElements(this.m_model.getVariants());
	this.m_variantDd = oFF.UiContextDummy.getSingleton();
	this.m_variantDdOverwriteBtn = oFF.UiContextDummy.getSingleton();
	this.m_variantDdSaveBtn = oFF.UiContextDummy.getSingleton();
	this.m_variantDdManageBtn = oFF.UiContextDummy.getSingleton();
	var processor = this.getVariableProcessor();
	this.m_maintainsVariants = this.m_config.isVariantManagementEnabled() && processor.supportsMaintainsVariableVariants() && processor.getSession().hasFeature(oFF.FeatureToggleOlap.MAINTAIN_VARIABLE_VARIANTS);
	if (!this.m_model.hasVariables() || !hasVariants && !this.m_maintainsVariants)
	{
		this.m_view.getVariantSection().setVisible(false);
		return;
	}
	this.m_variantDd = this.m_view.getVariantDd();
	this.m_variantDd.setEnabled(this.m_inputEnabled);
	this.m_variantDd.registerOnSelect(this);
	if (this.m_maintainsVariants)
	{
		var i18n = this.m_context.getLocalization();
		this.m_variantDdOverwriteBtn = this.m_variantDd.addNewButton();
		this.m_variantDdOverwriteBtn.setName("VdVariantDdOverwriteBtn");
		this.m_variantDdOverwriteBtn.setHeight(oFF.UiCssLength.AUTO);
		this.m_variantDdOverwriteBtn.setText(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE));
		this.m_variantDdOverwriteBtn.setIcon("refresh");
		this.m_variantDdOverwriteBtn.registerOnPress(this);
		this.m_variantDdSaveBtn = this.m_variantDd.addNewButton();
		this.m_variantDdSaveBtn.setName("VdVariantDdSaveBtn");
		this.m_variantDdSaveBtn.setHeight(oFF.UiCssLength.AUTO);
		this.m_variantDdSaveBtn.setText(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_CURRENT));
		this.m_variantDdSaveBtn.setIcon("save");
		this.m_variantDdSaveBtn.registerOnPress(this);
		this.m_variantDdManageBtn = this.m_variantDd.addNewButton();
		this.m_variantDdManageBtn.setName("VdVariantDdManageBtn");
		this.m_variantDdManageBtn.setHeight(oFF.UiCssLength.AUTO);
		this.m_variantDdManageBtn.setText(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_MANAGE));
		this.m_variantDdManageBtn.setIcon("wrench");
		this.m_variantDdManageBtn.registerOnPress(this);
	}
	this.updateVariantSection(null);
};
oFF.VdVariableForm.prototype.updateVariantSection = function(selectedVariant)
{
	if (oFF.isNull(this.m_variantDd))
	{
		return;
	}
	var variants = this.m_model.getVariants();
	this.m_variantDd.clearItems();
	var emptyItem = this.m_variantDd.addNewItem();
	emptyItem.setName("emptyItem");
	emptyItem.setText(this.m_context.getLocalization().getText(oFF.VariantPopupI18n.I18N_VARIANT_NONE));
	var addToDd =  function(variant){
		var item = this.m_variantDd.addNewItem();
		item.setName(oFF.VdVariableForm.getVariantNameForDd(variant));
		item.setText(variant.getText());
		item.setCustomObject(variant);
	}.bind(this);
	oFF.XStream.of(variants).filter( function(usr1){
		return usr1.getScope() === oFF.Scope.USER;
	}.bind(this)).sorted(oFF.VdVariantComparator.getInstance()).forEach(addToDd);
	oFF.XStream.of(variants).filter( function(gbl1){
		return gbl1.getScope() === oFF.Scope.GLOBAL;
	}.bind(this)).sorted(oFF.VdVariantComparator.getInstance()).forEach(addToDd);
	this.m_variantDd.setSelectedName(oFF.notNull(selectedVariant) ? oFF.VdVariableForm.getVariantNameForDd(selectedVariant) : emptyItem.getName());
	this.m_variantDdOverwriteBtn.setEnabled(oFF.notNull(selectedVariant));
	this.m_variantDdManageBtn.setEnabled(oFF.XCollectionUtils.hasElements(variants));
};
oFF.VdVariableForm.prototype.createVariableControllers = function()
{
	var variablesToDisplay = this.m_config.getVariablesToDisplay();
	var hasSpecificVariables = oFF.XCollectionUtils.hasElements(variablesToDisplay);
	var variableModels = this.m_model.getVariableModels();
	for (var i = 0; i < variableModels.size(); i++)
	{
		var variableModel = variableModels.get(i);
		var varName = variableModel.getName();
		if (hasSpecificVariables && !variablesToDisplay.contains(varName))
		{
			continue;
		}
		var layout = this.m_view.addVariable(varName, variableModel.supportsMultipleValues());
		var variableController = oFF.VdVariableController.createVariableController(this.m_context, this.m_config, this, variableModel, layout);
		this.m_variableController.add(variableController);
	}
};
oFF.VdVariableForm.prototype.hasVariables = function()
{
	return this.m_model.hasVariables();
};
oFF.VdVariableForm.prototype.hasExitVariables = function()
{
	return this.m_model.hasExitVariables();
};
oFF.VdVariableForm.prototype.hasDynamicVariables = function()
{
	return this.m_model.hasDynamicVariables();
};
oFF.VdVariableForm.prototype.isUpdatingDynamicVariables = function()
{
	return this.m_config.isUpdatingDynamicVariables();
};
oFF.VdVariableForm.prototype.getVariableProcessor = function()
{
	return this.m_model.getVariableProcessor();
};
oFF.VdVariableForm.prototype.getCurrentValues = function()
{
	return this.m_model.getCurrentValues();
};
oFF.VdVariableForm.prototype.getCleanedValues = function()
{
	return this.m_model.getCleanedValues();
};
oFF.VdVariableForm.prototype.setValues = function(allValues)
{
	this.m_model.setValues(allValues);
};
oFF.VdVariableForm.prototype.resetValues = function()
{
	this.m_model.resetValues();
};
oFF.VdVariableForm.prototype.setValuesFromProcessor = function()
{
	this.m_model.setValuesFromProcessor();
};
oFF.VdVariableForm.prototype.isInputEnabled = function()
{
	return this.m_inputEnabled;
};
oFF.VdVariableForm.prototype.setInputEnabled = function(inputEnabled)
{
	if (this.m_inputEnabled === inputEnabled)
	{
		return;
	}
	this.m_inputEnabled = inputEnabled;
	if (oFF.notNull(this.m_variantDd))
	{
		this.m_variantDd.setEnabled(this.m_inputEnabled);
	}
	if (oFF.notNull(this.m_variableController))
	{
		var keys = this.m_variableController.getKeysAsIteratorOfString();
		while (keys.hasNext())
		{
			var variableController = this.m_variableController.getByKey(keys.next());
			variableController.update();
		}
	}
};
oFF.VdVariableForm.prototype.setSubmitButtonEnabled = function(enabled) {};
oFF.VdVariableForm.prototype.setVariantsSectionVisible = function(visible)
{
	var hasVariants = oFF.XCollectionUtils.hasElements(this.m_model.getVariants());
	this.m_view.getVariantSection().setVisible(this.m_model.hasVariables() && (hasVariants || this.m_maintainsVariants) && visible);
};
oFF.VdVariableForm.prototype.getView = function()
{
	return this.m_view;
};
oFF.VdVariableForm.prototype.getControllers = function()
{
	return this.m_variableController;
};
oFF.VdVariableForm.prototype.performValueHelpWithDialog = function(variableModel, currentSelection, selectionMode, listener)
{
	this.setBusy(true);
	this.prepareValuehelp(variableModel, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		this.setBusy(false);
		if (extResult.hasErrors() || extResult.hasSeverity(oFF.Severity.SEMANTICAL_ERROR))
		{
			this.postServerError(extResult);
			listener.onFilterDialogCancel();
			return;
		}
		this.executeVariableHelpWithDialog(variableModel, currentSelection, selectionMode, listener);
	}.bind(this)));
};
oFF.VdVariableForm.prototype.performStoryFilterOptimizationWorkflow = function(varName)
{
	this.performStoryFilterOptimizationWorkflowWithCallback(varName, null);
};
oFF.VdVariableForm.prototype.performStoryFilterOptimizationWorkflowWithCallback = function(varName, listener)
{
	if (!this.supportsStoryFilterOptimization(varName))
	{
		if (oFF.notNull(listener))
		{
			listener.onCancel();
		}
		return;
	}
	oFF.VdStartupAction.createAndRun(this,  function(){
		this.m_genesis = oFF.UiGenesis.create(oFF.UiContextDummy.getSingleton());
		this.render();
		var variableController = this.m_variableController.getByKey(varName);
		var submitOnCloseListener = oFF.SubmitOnCloseListener.createListener(this, variableController, listener);
		if (this.m_context.getUiManager().getDeviceInfo().isMobile())
		{
			var selectionModeMobile = variableController.getVariable().supportsMultipleValues() ? oFF.UiSelectionMode.MULTI_SELECT : oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
			this.performMobileValueHelpWithDialog(variableController.getModel(), variableController.getFirstValues(), selectionModeMobile, submitOnCloseListener);
		}
		else
		{
			var selectionMode = variableController.getVariable().supportsMultipleValues() ? oFF.UiSelectionMode.MULTI_SELECT : oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
			this.performValueHelpWithDialog(variableController.getModel(), variableController.getFirstValues(), selectionMode, submitOnCloseListener);
		}
	}.bind(this),  function(result){
		if (oFF.notNull(listener))
		{
			listener.onCancel();
		}
		this.callOnReinit(false, result);
	}.bind(this));
};
oFF.VdVariableForm.prototype.supportsStoryFilterOptimization = function(varName)
{
	var variableModel = this.m_model.getVariableModelByName(varName);
	if (oFF.isNull(variableModel))
	{
		return false;
	}
	if (this.m_context.getUiManager().getDeviceInfo().isMobile())
	{
		return oFF.VdVhMobileController.supportsMobileValueHelp(variableModel);
	}
	return oFF.VdVariableForm.supportsStoryFilterOptimizationForDesktop(variableModel);
};
oFF.VdVariableForm.prototype.performMobileValueHelpWithDialog = function(variableModel, currentSelection, selectionMode, listener)
{
	this.setBusy(true);
	this.prepareValuehelp(variableModel, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		this.setBusy(false);
		if (extResult.hasErrors() || extResult.hasSeverity(oFF.Severity.SEMANTICAL_ERROR))
		{
			this.postServerError(extResult);
			listener.onFilterDialogCancel();
			return;
		}
		var vhMobileCtrl = oFF.VdVhMobileController.createForVariableModel(variableModel, this, listener, this.m_config);
		if (vhMobileCtrl.mobileValueHelpViewAvailable())
		{
			vhMobileCtrl.performMobileValueHelp();
		}
		else
		{
			this.executeVariableHelpWithDialog(variableModel, currentSelection, selectionMode, listener);
		}
	}.bind(this)));
};
oFF.VdVariableForm.prototype.executeVariableHelpWithDialog = function(variableModel, currentSelection, selectionMode, listener)
{
	var variable = variableModel.getVariable();
	var title = this.m_context.getLocalization().getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_SELECT_MEMBER_FOR, variable.getText());
	var fdConfig = oFF.FdConfiguration.create(title, selectionMode, currentSelection);
	if (this.m_context.getDeviceInfo().isMobile())
	{
		fdConfig.setDialogWidth(100, oFF.UiCssSizeUnit.PERCENT);
		fdConfig.setDialogHeight(100, oFF.UiCssSizeUnit.PERCENT);
	}
	fdConfig.setDimensionDisplayInfo(this.m_config.getDimensionDisplayInfo(variable.getDimension().getName()));
	if (this.m_config.isFunctionalValuesEnabled())
	{
		fdConfig.addFilterType(oFF.FdFilterType.FUNCTIONAL_VALUES);
	}
	else
	{
		fdConfig.removeFilterType(oFF.FdFilterType.FUNCTIONAL_VALUES);
	}
	fdConfig.setResizable(false);
	if (oFF.notNull(this.m_externalValueHelpProvider))
	{
		fdConfig.setExternalValueHelpProcess(this.m_externalValueHelpProvider.getValueHelpProcessorForVariable(variableModel.getName()));
	}
	this.m_context.getFilterDialogFactory().newFilterDialogInstanceForVariable(variable, fdConfig, listener).openDialog();
};
oFF.VdVariableForm.prototype.performValueSearch = function(variableModel, input, listener, customIdentifier)
{
	this.prepareValuehelp(variableModel, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		if (extResult.hasErrors() || extResult.hasSeverity(oFF.Severity.SEMANTICAL_ERROR))
		{
			this.postServerError(extResult);
			listener.onValuehelpExecuted(oFF.ExtResult.create(null, extResult), null, customIdentifier);
			return;
		}
		this.executeValueSearch(variableModel, input, listener, customIdentifier);
	}.bind(this)));
};
oFF.VdVariableForm.prototype.executeValueSearch = function(variableModel, input, listener, customIdentifier)
{
	var variable = variableModel.getVariable();
	var valueHelpProcess = null;
	if (oFF.notNull(this.m_externalValueHelpProvider))
	{
		valueHelpProcess = this.m_externalValueHelpProvider.getValueHelpProcessorForVariable(variable.getName());
	}
	if (oFF.isNull(valueHelpProcess))
	{
		valueHelpProcess = oFF.OlapUiValueHelpVariable.create(variable);
	}
	var searchFields = oFF.XCollectionUtils.singletonList(variable.getDimension().getSelectorDisplayKeyField());
	valueHelpProcess.processSearch(input, searchFields, null, 10, false, oFF.OlapUiReadMode.MASTER, listener, customIdentifier);
};
oFF.VdVariableForm.prototype.prepareValuehelp = function(variableModel, callback)
{
	this.m_preparingTransfer = true;
	if (oFF.notNull(this.m_transferModel) && this.m_transferModel !== variableModel)
	{
		callback.onVariableProcessorExecuted(oFF.ExtResult.createWithInfoMessage("ok"), null, null);
		return;
	}
	this.m_transferModel = variableModel;
	this.m_transferCallback = callback;
	for (var i = 0; i < this.m_variableController.size(); i++)
	{
		var variableController = this.m_variableController.get(i);
		if (variableController.getModel() === variableModel)
		{
			continue;
		}
		if (!variableController.wrapUpState())
		{
			return;
		}
	}
	this.m_preparingTransfer = false;
	this.m_transferModel = null;
	this.m_transferCallback = null;
	var dimVar = variableModel.getVariable();
	this.getStateHandler().transferVariables(this.m_model.getCleanedValues(), dimVar, callback, null);
};
oFF.VdVariableForm.prototype.attemptSubmit = function()
{
	this.setBusy(true);
	this.m_preparingSubmit = true;
	for (var i = 0; i < this.m_variableController.size(); i++)
	{
		if (!this.m_variableController.get(i).wrapUpState())
		{
			return;
		}
	}
	if (this.m_model.validateValues())
	{
		this.m_isClosing = true;
		if (this.m_config.isFunctionalValuesEnabled())
		{
			this.m_model.resolveAndSaveValues(this, null);
		}
		else
		{
			this.submitInternal();
		}
	}
	else
	{
		this.setBusy(false);
		this.shake();
	}
	this.m_preparingSubmit = false;
};
oFF.VdVariableForm.prototype.submitInternal = function()
{
	var cleanedValues = this.m_model.getCleanedValues();
	if (this.m_config.useImplicitSubmit())
	{
		this.callOnBeforeSubmit();
		this.getStateHandler().submitVariables(cleanedValues, this, oFF.XStringValue.create(oFF.VdVariableForm.SUBMIT_IDENTIFIER));
	}
	else
	{
		var submitProcessor = this.getStateHandler().getSubmitProcessor();
		if (oFF.notNull(submitProcessor) && !submitProcessor.isDirectVariableTransferEnabled())
		{
			oFF.VdImportExport.setValuesToProcessor(submitProcessor, cleanedValues);
			submitProcessor.transferVariables(oFF.OlapUiValueHelpAbstract.s_syncType, oFF.VariableProcessorCallbackLambda.createSingleUse( function(result){
				this.syncValues(cleanedValues, false, false);
				this.m_model.setValues(cleanedValues);
				this.callOnBeforeSubmit();
			}.bind(this)), null);
			return;
		}
		this.callOnBeforeSubmit();
	}
};
oFF.VdVariableForm.prototype.onValuesResolvedAndSave = function(customIdentifier)
{
	this.submitInternal();
};
oFF.VdVariableForm.prototype.cancelReinit = function()
{
	if (!this.m_isClosing && this.isVisible())
	{
		this.m_isClosing = true;
		this.getStateHandler().cancelReinitVariables(this.m_model.getStartValues(), this, oFF.XStringValue.create(oFF.VdVariableForm.CANCEL_SUBMIT_IDENTIFIER));
	}
};
oFF.VdVariableForm.prototype.onSelect = function(event)
{
	if (event.getControl() === this.m_variantDd)
	{
		var variant = this.m_variantDd.getSelectedItem().getCustomObject();
		if (oFF.isNull(variant))
		{
			this.m_variantDdOverwriteBtn.setEnabled(false);
			this.resetValues();
			return;
		}
		this.m_variantDdOverwriteBtn.setEnabled(true);
		this.getStateHandler().activateVariant(variant, this, oFF.XStringValue.create(oFF.VdVariableForm.ACTIVATE_VARIANT_IDENTIFIER));
	}
};
oFF.VdVariableForm.prototype.onPress = function(event)
{
	var control = event.getControl();
	var parent = control.getParent();
	if (parent === this.m_variantDd)
	{
		if (control === this.m_variantDdOverwriteBtn)
		{
			var variant = this.m_variantDd.getSelectedItem().getCustomObject();
			if (oFF.notNull(variant))
			{
				this.openOverwriteConfirmation(variant);
			}
		}
		else if (control === this.m_variantDdSaveBtn)
		{
			oFF.VdImportExport.setValuesToProcessor(this.getVariableProcessor(), this.m_model.getCleanedValues());
			this.m_context.getVariantController().presentVariantSavePopup(this.getVariableProcessor(),  function(newVariant){
				this.updateVariantSection(newVariant);
			}.bind(this));
		}
		else if (control === this.m_variantDdManageBtn)
		{
			this.m_context.getVariantController().presentVariantsManagePopup(this.getVariableProcessor(),  function(){
				this.updateVariantSection(null);
			}.bind(this));
		}
	}
};
oFF.VdVariableForm.prototype.openOverwriteConfirmation = function(variant)
{
	var i18n = this.m_context.getLocalization();
	var title = i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_WARNING);
	var variantName = variant.getText();
	var scopeName = i18n.getText(variant.getScope() === oFF.Scope.USER ? oFF.VariantPopupI18n.I18N_VARIANT_PERSONAL : oFF.VariantPopupI18n.I18N_VARIANT_GLOBAL);
	var text = i18n.getTextWithPlaceholder2(oFF.VariantPopupI18n.I18N_VARIANT_OVERWRITE_CONFIRMATION, scopeName, variantName);
	var confirmPopup = oFF.UiConfirmPopup.create(this.m_genesis, title, text);
	confirmPopup.setConfirmButtonIcon(null);
	confirmPopup.setConfirmButtonText(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_SAVE));
	confirmPopup.setCancelButtonIcon(null);
	confirmPopup.setCancelButtonText(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL));
	confirmPopup.setConfirmProcedure( function(){
		this.getStateHandler().saveVariant(this.m_model.getCleanedValues(), variant, this, oFF.XStringValue.create(oFF.VdVariableForm.SAVE_VARIANT_IDENTIFIER));
	}.bind(this));
	confirmPopup.open();
};
oFF.VdVariableForm.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.setBusy(false);
	var step = customIdentifier.toString();
	if (extResult.hasErrors() || extResult.hasSeverity(oFF.Severity.SEMANTICAL_ERROR))
	{
		this.postServerError(extResult);
		switch (step)
		{
			case oFF.VdVariableForm.CANCEL_SUBMIT_IDENTIFIER:
				this.m_isClosing = false;
				break;

			case oFF.VdVariableForm.SUBMIT_IDENTIFIER:
				this.m_isClosing = false;
				this.callOnAfterSubmit(false, extResult);
				break;
		}
		return;
	}
	switch (step)
	{
		case oFF.VdVariableForm.SUBMIT_IDENTIFIER:
			if (!extResult.hasSeverity(oFF.Severity.SEMANTICAL_ERROR))
			{
				this.callOnAfterSubmit(true, extResult);
			}
			else
			{
				this.callOnAfterSubmit(false, extResult);
				this.postServerError(extResult);
			}
			break;

		case oFF.VdVariableForm.CANCEL_SUBMIT_IDENTIFIER:
			this.callOnCancelReinit();
			break;

		case oFF.VdVariableForm.ACTIVATE_VARIANT_IDENTIFIER:
			this.m_model.setValuesFromProcessor();
			break;

		case oFF.VdVariableForm.SAVE_VARIANT_IDENTIFIER:
			var msg = this.m_context.getLocalization().getText(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_SUCCESS);
			this.m_context.getMessageCenter().postMessage(oFF.UiMessageType.SUCCESS, msg, oFF.VdVariableForm.COMPONENT_NAME);
			this.m_variantDd.close();
			break;
	}
	oFF.XObjectExt.release(customIdentifier);
};
oFF.VdVariableForm.prototype.postServerError = function(messages)
{
	var msg = oFF.OlapUiMessageCenter.getInaErrorMessage(messages, this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR));
	var showWarning = oFF.OlapUiMessageCenter.getInaErrorCode(messages) === oFF.ErrorCodes.VARIABLE_PROCESSOR_ALREADY_PROCESSING;
	this.m_context.getMessageCenter().postMessage(showWarning ? oFF.UiMessageType.WARNING : oFF.UiMessageType.ERROR, msg, oFF.VdVariableForm.COMPONENT_NAME);
	this.shake();
};
oFF.VdVariableForm.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.setBusy(true);
	oFF.VdStartupAction.createAndRun(this,  function(){
		this.setBusy(false);
		this.render();
	}.bind(this),  function(result){
		this.postServerError(result);
		this.callOnReinit(false, result);
	}.bind(this));
};
oFF.VdVariableForm.prototype.render = function()
{
	if (oFF.isNull(this.m_genesis))
	{
		this.buildOlapDialogUi(oFF.UiGenesis.create(oFF.UiContextDummy.getSingleton()));
		return;
	}
	this.callOnReinit(true, null);
	this.m_view = oFF.VdView.create(this.m_context.getUiManager(), this.m_embedded);
	this.m_genesis.setRoot(this.m_view.getRoot());
	this.configureVariantSection();
	this.m_variableController = oFF.XListOfNameObject.create();
	this.createVariableControllers();
	this.callOnRenderDone();
};
oFF.VdVariableForm.prototype.onVariableModelsChanged = function()
{
	this.m_view.clearVariables();
	this.m_variableController.clear();
	this.createVariableControllers();
};
oFF.VdVariableForm.prototype.callOnReinit = function(success, extResult)
{
	if (oFF.notNull(this.m_reinitListener))
	{
		this.m_reinitListener.onReinit(success, extResult);
	}
};
oFF.VdVariableForm.prototype.callOnCancelReinit = function()
{
	if (oFF.notNull(this.m_reinitListener))
	{
		this.m_reinitListener.onCancelReinit();
	}
};
oFF.VdVariableForm.prototype.callOnBeforeSubmit = function()
{
	if (oFF.isNull(this.m_submitListener))
	{
		return;
	}
	var values = this.m_model.getCleanedValues();
	var valueFormat = this.m_config.getValueJsonFormat();
	var valuesJson = oFF.notNull(valueFormat) ? valueFormat.getParser().serialize(this.getVariableProcessor(), values) : null;
	this.m_submitListener.onBeforeSubmit(values, valuesJson);
};
oFF.VdVariableForm.prototype.callOnAfterSubmit = function(success, extResult)
{
	var values = this.m_model.getCleanedValues();
	this.syncValues(values, true, true);
	if (oFF.isNull(this.m_submitListener))
	{
		return;
	}
	var valueFormat = this.m_config.getValueJsonFormat();
	var valuesJson = oFF.notNull(valueFormat) ? valueFormat.getParser().serialize(this.getVariableProcessor(), values) : null;
	this.m_submitListener.onAfterSubmit(success, extResult, values, valuesJson);
};
oFF.VdVariableForm.prototype.syncValues = function(values, syncExits, postMessages)
{
	var submitProcessor = this.getStateHandler().getSubmitProcessor();
	if (oFF.isNull(submitProcessor))
	{
		return;
	}
	var variables = submitProcessor.getInputEnabledAndNonTechnicalVariables();
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		var varName = variable.getName();
		if (!this.isSyncCandidate(variable, syncExits))
		{
			continue;
		}
		var dateBased = variable.getValueType().isDateBased();
		var valuesFromDialog = values.containsKey(varName) ? values.getByKey(varName) : oFF.XList.create();
		var valuesFromVariable = oFF.VdImportExport.getValuesFromVariable(variable);
		if (oFF.VdVariableForm.areKeysDifferent(valuesFromDialog, valuesFromVariable, false, dateBased))
		{
			values.put(varName, valuesFromVariable);
			if (postMessages && !variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
			{
				this.postValueDifferenceMessage(variable, valuesFromVariable);
				continue;
			}
			var dimVar = variable;
			if (!dimVar.supportsValueHelp() || !dimVar.getDimension().getHasCheckTable())
			{
				continue;
			}
			if (postMessages && oFF.VdVariableForm.areKeysDifferent(valuesFromDialog, valuesFromVariable, true, dateBased))
			{
				this.postValueDifferenceMessage(variable, valuesFromVariable);
			}
		}
	}
};
oFF.VdVariableForm.prototype.isSyncCandidate = function(variable, syncExits)
{
	if (this.getVariableProcessor().getVariable(variable.getName()) === null)
	{
		return false;
	}
	if (syncExits && variable.isEnforcedDynamicValue())
	{
		return true;
	}
	if (!variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		return false;
	}
	var dimVar = variable;
	return !dimVar.supportsValueHelp() || !dimVar.getDimension().getHasCheckTable();
};
oFF.VdVariableForm.prototype.postValueDifferenceMessage = function(variable, valuesFromVariable)
{
	var i18n = this.m_context.getLocalization();
	var buffer = oFF.XStringBuffer.create();
	buffer.append(i18n.getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_VARIABLE_VALUES_SET_TO, variable.getText())).appendNewLine();
	buffer.append(this.prettyPrintVariableValues(valuesFromVariable));
	this.m_context.getMessageCenter().postMessage(oFF.UiMessageType.WARNING, buffer.toString(), oFF.VdVariableForm.COMPONENT_NAME);
};
oFF.VdVariableForm.prototype.prettyPrintVariableValues = function(values)
{
	var buffer = oFF.XStringBuffer.create();
	if (!oFF.XCollectionUtils.hasElements(values))
	{
		return buffer.toString();
	}
	for (var i = 0; i < values.size(); i++)
	{
		var value = values.get(i);
		if (value.getOperator().getNumberOfParameters() === 2)
		{
			var first = value.getFirstOperand();
			var second = value.getSecondOperand();
			var firstText = first.getText();
			var secondText = second.getText();
			if (oFF.isNull(firstText) || oFF.isNull(secondText))
			{
				firstText = first.getDisplayKey();
				secondText = second.getDisplayKey();
			}
			buffer.append(firstText).append(" - ").append(secondText);
		}
		else
		{
			var operand = value.getFirstOperand();
			var operandText = operand.getText();
			if (oFF.isNull(operandText))
			{
				operandText = operand.getDisplayKey();
			}
			buffer.append(operandText);
		}
		buffer.appendNewLine();
	}
	return buffer.toString();
};
oFF.VdVariableForm.prototype.callOnRenderDone = function()
{
	if (oFF.notNull(this.m_renderListener))
	{
		this.m_renderListener.onRenderDone(this.m_view.getRoot());
	}
};
oFF.VdVariableForm.prototype.setDynamicVariables = function(isInitial)
{
	var variablesToDisplay = this.m_config.getVariablesToDisplay();
	var hasSpecificVariables = oFF.XCollectionUtils.hasElements(variablesToDisplay);
	var variableModels = this.m_model.getVariableModels();
	for (var i = 0; i < variableModels.size(); i++)
	{
		var variableModel = variableModels.get(i);
		var variable = variableModel.getVariable();
		if (!variable.isDynamicVariable() || hasSpecificVariables && !variablesToDisplay.contains(variable.getName()))
		{
			continue;
		}
		var newValues = oFF.VdImportExport.getValuesFromVariable(variable);
		if (isInitial)
		{
			variableModel.setInitialValues(newValues);
		}
		else
		{
			variableModel.setValues(newValues);
		}
	}
};
oFF.VdVariableForm.prototype.updateDynamicVariables = function()
{
	if (this.hasDynamicVariables())
	{
		this.setBusy(true);
		var queryListener = oFF.OuQueryExecutionListenerLambda.createSingleUse( function(result){
			this.setBusy(false);
			if (result.isValid())
			{
				this.setDynamicVariables(false);
			}
		}.bind(this));
		this.getVariableProcessor().updateDynamicVariables(oFF.SyncType.NON_BLOCKING, queryListener, null);
	}
};
oFF.VdVariableForm.prototype.getModel = function()
{
	return this.m_model;
};
oFF.VdVariableForm.prototype.setExternalStateHandler = function(externalStateHandler)
{
	this.m_externalStateHandler = externalStateHandler;
};
oFF.VdVariableForm.prototype.getInternalStateHandler = function()
{
	return this.m_backendStateHandler;
};
oFF.VdVariableForm.prototype.getStateHandler = function()
{
	if (oFF.notNull(this.m_externalStateHandler))
	{
		return this.m_externalStateHandler;
	}
	return this.m_backendStateHandler;
};
oFF.VdVariableForm.prototype.setValueHelpProcessorProvider = function(processorProvider)
{
	this.m_externalValueHelpProvider = processorProvider;
};
oFF.VdVariableForm.prototype.setValueJson = function(valueJson)
{
	var valueFormat = this.m_config.getValueJsonFormat();
	if (oFF.isNull(valueFormat))
	{
		return;
	}
	var values = valueFormat.getParser().deserialize(this.getVariableProcessor(), valueJson);
	this.setValues(values);
};
oFF.VdVariableForm.prototype.setValueNativeJson = function(json)
{
	var parser = oFF.JsonParserFactory.newInstance();
	var prElement = parser.convertFromNative(json);
	this.setValueJson(prElement);
};
oFF.VdVariableForm.prototype.getContext = function()
{
	return this.m_context;
};
oFF.VdVariableForm.prototype.setBusy = function(busy)
{
	if (oFF.notNull(this.m_view))
	{
		this.m_view.getRoot().setBusy(busy);
	}
};
oFF.VdVariableForm.prototype.shake = function() {};
oFF.VdVariableForm.prototype.isVisible = function()
{
	return true;
};
oFF.VdVariableForm.prototype.registerRenderListener = function(listener)
{
	this.m_renderListener = listener;
};
oFF.VdVariableForm.prototype.registerReinitListener = function(listener)
{
	this.m_reinitListener = listener;
};
oFF.VdVariableForm.prototype.registerSubmitListener = function(listener)
{
	this.m_submitListener = listener;
};
oFF.VdVariableForm.prototype.notifyStateChange = function(state)
{
	if (this.m_preparingSubmit)
	{
		this.attemptSubmit();
	}
	else if (this.m_preparingTransfer)
	{
		this.prepareValuehelp(this.m_transferModel, this.m_transferCallback);
	}
};
oFF.VdVariableForm.prototype.releaseObject = function()
{
	this.m_context = null;
	this.m_backendStateHandler = null;
	this.m_externalStateHandler = null;
	this.m_externalValueHelpProvider = null;
	this.m_variableController = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_variableController);
	this.m_genesis = null;
	this.m_variantDd = null;
	this.m_variantDdOverwriteBtn = oFF.XObjectExt.release(this.m_variantDdOverwriteBtn);
	this.m_variantDdSaveBtn = oFF.XObjectExt.release(this.m_variantDdSaveBtn);
	this.m_variantDdManageBtn = oFF.XObjectExt.release(this.m_variantDdManageBtn);
	this.m_view = oFF.XObjectExt.release(this.m_view);
	this.m_model = oFF.XObjectExt.release(this.m_model);
	this.m_renderListener = null;
	this.m_reinitListener = null;
	this.m_submitListener = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdAbstractValueController = function() {};
oFF.VdAbstractValueController.prototype = new oFF.XObject();
oFF.VdAbstractValueController.prototype._ff_c = "VdAbstractValueController";

oFF.VdAbstractValueController.prototype.INDEX = null;
oFF.VdAbstractValueController.prototype.SEARCH_VALUE = null;
oFF.VdAbstractValueController.prototype.m_parent = null;
oFF.VdAbstractValueController.prototype.m_context = null;
oFF.VdAbstractValueController.prototype.m_config = null;
oFF.VdAbstractValueController.prototype.m_variableModel = null;
oFF.VdAbstractValueController.prototype.m_value = null;
oFF.VdAbstractValueController.prototype.m_renderer = null;
oFF.VdAbstractValueController.prototype.m_view = null;
oFF.VdAbstractValueController.prototype.m_control1 = null;
oFF.VdAbstractValueController.prototype.m_control2 = null;
oFF.VdAbstractValueController.prototype.m_focusedControl = null;
oFF.VdAbstractValueController.prototype.setupController = function(context, configuration, controller, variableModel, value)
{
	this.m_context = context;
	this.m_config = configuration;
	this.m_parent = controller;
	this.m_variableModel = variableModel;
	this.m_value = value;
	this.m_value.addValueStateListener(this);
	this.m_view = this.createView();
	this.m_view.getDropdown().registerOnSelect(this);
	this.m_view.getValueHelpButton1().registerOnPress(this);
	this.m_view.getValueHelpButton2().registerOnPress(this);
	this.m_view.getDeleteButton1().registerOnPress(this);
	this.m_view.getDeleteButton2().registerOnPress(this);
	this.m_view.getDeleteLineButton().registerOnPress(this);
	this.m_renderer = oFF.VdValueRenderer.create(context, configuration, this.m_view, variableModel, value);
	this.INDEX = "index";
	this.SEARCH_VALUE = "search_value";
};
oFF.VdAbstractValueController.prototype.update = function(labelMode, inputEnabled)
{
	this.m_renderer.update(labelMode, inputEnabled);
};
oFF.VdAbstractValueController.prototype.performValueSearch = function(index, searchValue)
{
	var properties = oFF.XProperties.create();
	properties.putInteger(this.INDEX, index);
	properties.putString(this.SEARCH_VALUE, searchValue);
	this.m_parent.performValueSearch(searchValue, this, properties);
};
oFF.VdAbstractValueController.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	var properties = customIdentifier;
	var searchedOnIndex = properties.getIntegerByKey(this.INDEX);
	var searchValue = properties.getStringByKey(this.SEARCH_VALUE);
	var i18n = this.m_context.getLocalization();
	if (extResult.hasErrors())
	{
		this.m_value.setError(searchedOnIndex, i18n.getText(oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR));
	}
	else
	{
		var result = extResult.getData();
		if (oFF.XCollectionUtils.hasElements(result))
		{
			var operand = this.getBestFittingValueHelpResult(result, searchValue);
			if (this.m_variableModel.getInputValue() === this.m_value || this.isNewValue(operand, searchedOnIndex))
			{
				var input = searchedOnIndex === 0 ? this.m_view.getInput1() : this.m_view.getInput2();
				this.m_parent.setEnableAutoFocus(input === this.m_focusedControl);
				this.m_value.setOperand(searchedOnIndex, operand);
				this.m_parent.setEnableAutoFocus(false);
			}
		}
		else
		{
			this.m_value.setError(searchedOnIndex, i18n.getText(oFF.VariableDialogI18n.I18N_VD_MEMBER_DOES_NOT_EXIST));
		}
	}
	this.onSearchDone(searchedOnIndex);
};
oFF.VdAbstractValueController.prototype.onSearchDone = function(index) {};
oFF.VdAbstractValueController.prototype.isNewValue = function(operand, operandIndex)
{
	var shallowCopy = this.m_value.createShallowCopy();
	shallowCopy.setOperand(operandIndex, operand);
	var isNewValue = this.m_variableModel.isNewValue(shallowCopy);
	oFF.XObjectExt.release(shallowCopy);
	return isNewValue;
};
oFF.VdAbstractValueController.prototype.getBestFittingValueHelpResult = function(result, searchText)
{
	var firstItem = null;
	for (var i = 0; i < result.size(); i++)
	{
		var node = result.get(i);
		var dim = node.getDimension();
		var hierarchyName = dim.isSelectorHierarchyActive() ? (oFF.XStringUtils.isNotNullAndNotEmpty(dim.getSelectorHierarchyName()) ? dim.getSelectorHierarchyName() : dim.getHierarchyName()) : null;
		var item = oFF.FdItemFactory.createValueHelpItem(node, hierarchyName);
		if (oFF.XString.isEqual(oFF.XString.toLowerCase(item.getDisplayKey()), oFF.XString.toLowerCase(searchText)))
		{
			oFF.XObjectExt.release(firstItem);
			return item;
		}
		if (oFF.isNull(firstItem))
		{
			firstItem = item;
			continue;
		}
		oFF.XObjectExt.release(item);
	}
	return firstItem;
};
oFF.VdAbstractValueController.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_view.getDeleteButton1())
	{
		if (this.m_variableModel.isInterval())
		{
			this.m_value.removeFirstOperand();
		}
		else
		{
			this.m_variableModel.removeValue(this.m_value);
		}
	}
	else if (control === this.m_view.getDeleteButton2())
	{
		this.m_value.removeSecondOperand();
	}
	else if (control === this.m_view.getDeleteLineButton())
	{
		this.m_variableModel.removeValue(this.m_value);
	}
	else if (control === this.m_view.getValueHelpButton1())
	{
		if (this.m_variableModel.isInterval())
		{
			this.m_parent.performValueHelpForValue(this.m_value, oFF.VdValue.FIRST);
		}
		else
		{
			this.m_parent.performValueHelpForVariable();
		}
	}
	else if (control === this.m_view.getValueHelpButton2())
	{
		this.m_parent.performValueHelpForValue(this.m_value, oFF.VdValue.SECOND);
	}
};
oFF.VdAbstractValueController.prototype.onSelect = function(event)
{
	var item = event.getControl().getSelectedItem();
	this.m_value.setOperator(this.getSelectedOperator(item));
};
oFF.VdAbstractValueController.prototype.getSelectedOperator = function(item)
{
	var operator = item.getCustomObject();
	var shallowCopy = this.m_value.createShallowCopy();
	shallowCopy.setOperator(operator);
	var isNewValue = this.m_variableModel.isNewValue(shallowCopy);
	oFF.XObjectExt.release(shallowCopy);
	return isNewValue ? operator : this.m_value.getOperator();
};
oFF.VdAbstractValueController.prototype.getView = function()
{
	return this.m_view;
};
oFF.VdAbstractValueController.prototype.getVarType = function()
{
	return this.m_variableModel.getVariableType();
};
oFF.VdAbstractValueController.prototype.wrapUpState = function()
{
	var state1 = this.getControlState(this.m_control1);
	var state2 = this.getControlState(this.m_control2);
	if (state1 === oFF.VdControllerState.PENDING || state2 === oFF.VdControllerState.PENDING)
	{
		return false;
	}
	if (state1 === oFF.VdControllerState.DIRTY)
	{
		this.processVariable(this.m_control1);
		return false;
	}
	else if (state2 === oFF.VdControllerState.DIRTY)
	{
		this.processVariable(this.m_control2);
		return false;
	}
	return true;
};
oFF.VdAbstractValueController.prototype.setState = function(control, state)
{
	control.setCustomObject(state);
	if (oFF.VdControllerState.isCompleted(this.m_control1.getCustomObject()) && oFF.VdControllerState.isCompleted(this.m_control2.getCustomObject()))
	{
		this.m_value.updateOperandOrder();
	}
	this.notifyStateChange();
};
oFF.VdAbstractValueController.prototype.notifyStateChange = function()
{
	var state1 = this.getControlState(this.m_control1);
	var state2 = this.getControlState(this.m_control2);
	this.m_parent.notifyStateChange(oFF.VdControllerState.getHigherPriority(state1, state2));
};
oFF.VdAbstractValueController.prototype.getControlState = function(control)
{
	if (control.getCustomObject() === null)
	{
		return oFF.VdControllerState.PRISTINE;
	}
	return control.getCustomObject();
};
oFF.VdAbstractValueController.prototype.onValueStateChanged = function() {};
oFF.VdAbstractValueController.prototype.releaseObject = function()
{
	this.m_control1 = null;
	this.m_control2 = null;
	this.m_view = oFF.XObjectExt.release(this.m_view);
	this.m_renderer = oFF.XObjectExt.release(this.m_renderer);
	this.m_config = null;
	if (oFF.notNull(this.m_value))
	{
		this.m_value.removeValueStateListener(this);
	}
	this.m_value = null;
	this.m_variableModel = null;
	this.m_parent = null;
	this.m_context = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVariableController = function() {};
oFF.VdVariableController.prototype = new oFF.XObject();
oFF.VdVariableController.prototype._ff_c = "VdVariableController";

oFF.VdVariableController.CLIPBOARD = "Clipboard";
oFF.VdVariableController.OPEN_CLIPBOARD = "OpenClipboard";
oFF.VdVariableController.MAX_VALUES = 50;
oFF.VdVariableController.createVariableController = function(context, configuration, master, variableModel, layout)
{
	var obj = new oFF.VdVariableController();
	obj.setupVariableController(context, configuration, master, variableModel, layout);
	return obj;
};
oFF.VdVariableController.prototype.m_context = null;
oFF.VdVariableController.prototype.m_config = null;
oFF.VdVariableController.prototype.m_master = null;
oFF.VdVariableController.prototype.m_model = null;
oFF.VdVariableController.prototype.m_view = null;
oFF.VdVariableController.prototype.m_controllers = null;
oFF.VdVariableController.prototype.m_valueHelpValue = null;
oFF.VdVariableController.prototype.m_valueHelpIndex = 0;
oFF.VdVariableController.prototype.m_enableAutoFocus = false;
oFF.VdVariableController.prototype.m_clipboardController = null;
oFF.VdVariableController.prototype.m_clipboardHelper = null;
oFF.VdVariableController.prototype.setupVariableController = function(context, configuration, master, variableModel, layout)
{
	this.m_context = context;
	this.m_config = configuration;
	this.m_master = master;
	this.m_model = variableModel;
	this.m_model.addListener(this);
	this.m_view = layout;
	this.m_view.getClearButton().registerOnPress(this);
	this.m_view.getClipboardButton().registerOnPress(this);
	if (this.m_model.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		var dimVar = this.m_model.getVariable();
		if (dimVar.isUsedInDynamicFilter() && dimVar.getDimension().getAxisType() !== oFF.AxisType.REPOSITORY)
		{
			this.m_view.showDynamicFilterInfoIcon();
		}
	}
	this.updateHead();
	this.m_controllers = oFF.XHashMapByString.create();
	this.setValueList(this.m_model.getValues());
};
oFF.VdVariableController.prototype.updateHead = function()
{
	var variableTitle = this.m_model.getText();
	if (oFF.XStringUtils.isNullOrEmpty(variableTitle))
	{
		variableTitle = this.m_model.getName();
	}
	var nameLabel = this.m_view.getNameLabel();
	nameLabel.setText(variableTitle);
	nameLabel.setTooltip(this.m_model.getName());
	nameLabel.setRequired(this.m_model.isMandatory());
	var inputEnabled = this.m_master.isInputEnabled();
	var clearButton = this.m_view.getClearButton();
	clearButton.setVisible(this.m_model.getValues().size() > 1);
	clearButton.setEnabled(inputEnabled);
	var clipboardButton = this.m_view.getClipboardButton();
	if (this.m_context.getDeviceInfo().isMobile())
	{
		clipboardButton.setVisible(false);
	}
	else
	{
		var isHierarchyNode = this.m_model.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NODE_VARIABLE);
		clipboardButton.setVisible(this.m_model.supportsMultipleValues() && this.m_model.supportsValueHelp() && !isHierarchyNode);
		clipboardButton.setEnabled(inputEnabled);
	}
	this.m_view.getMoreButton().setEnabled(inputEnabled);
};
oFF.VdVariableController.prototype.getName = function()
{
	return this.m_model.getName();
};
oFF.VdVariableController.prototype.getVariable = function()
{
	return this.m_model.getVariable();
};
oFF.VdVariableController.prototype.getView = function()
{
	return this.m_view;
};
oFF.VdVariableController.prototype.getModel = function()
{
	return this.m_model;
};
oFF.VdVariableController.prototype.update = function()
{
	this.updateHead();
	var values = this.m_model.getValues();
	for (var i = 0; i < values.size(); i++)
	{
		this.renderValue(values.get(i));
	}
	var inputValue = this.m_model.getInputValue();
	if (oFF.notNull(inputValue))
	{
		this.renderValue(inputValue);
	}
};
oFF.VdVariableController.prototype.addMoreButton = function()
{
	var button = this.m_view.showMoreButton();
	button.registerOnPress(oFF.UiLambdaPressListener.create( function(evt){
		var hiddenValues = this.getHiddenValues();
		this.insertValueList(this.m_view.getMoreButtonIndex(), hiddenValues);
		this.addInputFieldIfNecessary();
		if (this.m_model.getValues().size() <= this.m_controllers.size())
		{
			this.m_view.hideMoreButton();
		}
	}.bind(this)));
};
oFF.VdVariableController.prototype.getHiddenValues = function()
{
	return oFF.XStream.of(this.m_model.getValues()).filter( function(v1){
		return !this.m_controllers.containsKey(v1.getId()) && v1 !== this.m_model.getInputValue();
	}.bind(this)).collect(oFF.XStreamCollector.toList());
};
oFF.VdVariableController.prototype.addInputFieldIfNecessary = function()
{
	var values = this.m_model.getValues();
	if (values.isEmpty() || values.get(values.size() - 1).isFilled() && this.m_model.supportsMultipleValues())
	{
		var inputValue = this.m_model.getInputValue();
		if (oFF.notNull(inputValue))
		{
			if (!values.contains(inputValue) && inputValue.isFilled() && this.m_model.isNewValue(inputValue))
			{
				this.addCurrentInputValueToModel();
			}
			else if (!inputValue.isFilled())
			{
				var valueView = this.m_controllers.getByKey(inputValue.getId()).getView();
				this.m_view.removeValue(valueView);
				this.m_view.addValue(valueView);
				this.renderValue(inputValue);
			}
		}
		else
		{
			inputValue = this.m_model.createNewValue();
			this.m_model.setInputValue(inputValue);
			this.addValue(inputValue);
		}
	}
};
oFF.VdVariableController.prototype.addCurrentInputValueToModel = function()
{
	var inputValue = this.m_model.getInputValue();
	this.m_model.setInputValue(null);
	this.renderValue(inputValue);
	this.m_model.addValue(inputValue);
};
oFF.VdVariableController.prototype.insertValueList = function(index, values)
{
	for (var i = 0; i < values.size(); i++)
	{
		if (i >= oFF.VdVariableController.MAX_VALUES)
		{
			break;
		}
		this.insertValue(index + i, values.get(i));
	}
};
oFF.VdVariableController.prototype.setValueList = function(values)
{
	this.m_view.clearValues();
	this.m_controllers.clear();
	for (var i = 0; i < values.size(); i++)
	{
		if (i >= oFF.VdVariableController.MAX_VALUES)
		{
			this.addMoreButton();
			break;
		}
		this.addValue(values.get(i));
	}
	this.addInputFieldIfNecessary();
};
oFF.VdVariableController.prototype.insertValue = function(index, value)
{
	var valueId = value.getId();
	if (this.m_controllers.containsKey(valueId))
	{
		return;
	}
	var valueController = this.createValueController(value);
	if (index < 0)
	{
		this.m_view.addValue(valueController.getView());
	}
	else
	{
		this.m_view.insertValue(index, valueController.getView());
	}
	valueController.update(this.m_config.getLabelMode(), this.m_master.isInputEnabled());
	this.updateHead();
	this.m_controllers.put(valueId, valueController);
	value.addListener(this);
};
oFF.VdVariableController.prototype.addValue = function(value)
{
	this.insertValue(-1, value);
};
oFF.VdVariableController.prototype.createValueController = function(value)
{
	var variableType = this.m_model.getVariableType();
	if (this.m_model.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE) || this.m_model.getValueType().isBoolean())
	{
		return oFF.VdOptionValueController.create(this.m_context, this.m_config, this, this.m_model, value);
	}
	if (this.m_model.getValueType().isDateBased())
	{
		if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
		{
			return oFF.VdDateValueController.create(this.m_context, this.m_config, this, this.m_model, value);
		}
		if (this.m_config.useDatePicker())
		{
			return oFF.VdDateValueController.create(this.m_context, this.m_config, this, this.m_model, value);
		}
	}
	return oFF.VdInputValueController.create(this.m_context, this.m_config, this, this.m_model, value);
};
oFF.VdVariableController.prototype.removeValue = function(value)
{
	var valueId = value.getId();
	if (!this.m_controllers.containsKey(valueId))
	{
		return;
	}
	var removed = this.m_controllers.remove(valueId);
	this.m_view.removeValue(removed.getView());
	value.removeListener(this);
	this.updateHead();
};
oFF.VdVariableController.prototype.onValueChanged = function(value)
{
	if (this.m_model.isNewValue(value) || !value.isFilled())
	{
		if (this.m_model.getInputValue() === value && value.isFilled())
		{
			this.addCurrentInputValueToModel();
		}
		else
		{
			this.renderValue(value);
		}
		if (this.m_enableAutoFocus)
		{
			this.focusNextField(value);
		}
	}
};
oFF.VdVariableController.prototype.focusNextField = function(renderedValue)
{
	var renderedView = this.m_controllers.getByKey(renderedValue.getId()).getView();
	var valueViews = this.m_view.getValueViews();
	var index = this.m_model.getInputValue() === renderedValue ? valueViews.size() - 1 : valueViews.getIndex(renderedView);
	if (index !== -1 && !this.focusInput(valueViews.get(index).getInput2()))
	{
		for (var i = index + 1; i < valueViews.size(); i++)
		{
			var valueView = valueViews.get(i);
			if (this.focusInput(valueView.getInput1()) || this.focusInput(valueView.getInput2()))
			{
				return;
			}
		}
	}
};
oFF.VdVariableController.prototype.focusInput = function(input)
{
	if (oFF.notNull(input) && input.isVisible() && input.isEnabled() && input.isEditable())
	{
		input.focus();
		return true;
	}
	return false;
};
oFF.VdVariableController.prototype.renderValue = function(value)
{
	var renderer = this.m_controllers.getByKey(value.getId());
	if (oFF.notNull(renderer))
	{
		renderer.update(this.m_config.getLabelMode(), this.m_master.isInputEnabled());
	}
};
oFF.VdVariableController.prototype.performValueHelpForVariable = function()
{
	var selectionMode = this.m_model.supportsMultipleValues() ? oFF.UiSelectionMode.MULTI_SELECT : oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
	this.m_master.performValueHelpWithDialog(this.m_model, this.getFirstValues(), selectionMode, this);
};
oFF.VdVariableController.prototype.performValueHelpForValue = function(value, index)
{
	this.m_valueHelpValue = value;
	this.m_valueHelpIndex = index;
	var selectionMode = oFF.UiSelectionMode.SINGLE_SELECT_LEFT;
	this.m_master.performValueHelpWithDialog(this.m_model, oFF.XList.create(), selectionMode, this);
};
oFF.VdVariableController.prototype.getFirstValues = function()
{
	var selection = oFF.XList.create();
	var values = this.m_model.getValues();
	for (var i = 0; i < values.size(); i++)
	{
		selection.add(values.get(i).getFirstOperand());
	}
	return selection;
};
oFF.VdVariableController.prototype.performValueSearch = function(input, listener, customIdentifier)
{
	this.m_master.performValueSearch(this.m_model, input, listener, customIdentifier);
};
oFF.VdVariableController.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(selection))
	{
		if (oFF.notNull(this.m_valueHelpValue))
		{
			if (selection.hasElements())
			{
				var node = selection.get(0);
				if (this.isNewValue(this.m_valueHelpValue, node, this.m_valueHelpIndex))
				{
					if (node.isNull())
					{
						this.m_valueHelpValue.setOperator(oFF.VdComparisonOperator.IS_NULL);
					}
					this.m_valueHelpValue.setOperand(this.m_valueHelpIndex, node);
				}
				this.m_valueHelpValue = null;
				this.m_valueHelpIndex = -1;
			}
		}
		else
		{
			var values = oFF.XList.create();
			for (var i = 0; i < selection.size(); i++)
			{
				var node1 = selection.get(i);
				var value = this.m_model.createNewValue();
				if (node1.isNull())
				{
					value.setOperator(oFF.VdComparisonOperator.IS_NULL);
				}
				value.setFirstOperand(node1);
				values.add(value);
			}
			this.m_model.setValues(values);
		}
	}
};
oFF.VdVariableController.prototype.onFilterDialogCancel = function() {};
oFF.VdVariableController.prototype.isNewValue = function(value, operand, operandIndex)
{
	var shallowCopy = value.createShallowCopy();
	if (operand.isNull())
	{
		shallowCopy.setOperator(oFF.VdComparisonOperator.IS_NULL);
	}
	shallowCopy.setOperand(operandIndex, operand);
	var isNewValue = this.m_model.isNewValue(shallowCopy);
	oFF.XObjectExt.release(shallowCopy);
	return isNewValue;
};
oFF.VdVariableController.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_view.getClearButton())
	{
		this.m_view.hideMoreButton();
		this.m_model.clearValues();
	}
	else if (control === this.m_view.getClipboardButton())
	{
		this.m_clipboardController = this.m_context.getClipboardController();
		this.m_clipboardHelper = oFF.ClipboardHelperForVdValue.createHelper(this.m_context.getLocalization());
		var variable = this.m_model.getVariable();
		var infoText = null;
		if (this.m_model.isInterval())
		{
			infoText = this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_CLIPBOARD_INFO);
		}
		this.m_clipboardController.openLazyLoadClipboardDialog(infoText, this);
		oFF.VdValueHelp.searchValues(variable, false, false, this.m_model.getValues(), this, oFF.XStringValue.create(oFF.VdVariableController.OPEN_CLIPBOARD));
	}
};
oFF.VdVariableController.prototype.onClipboardOk = function(hasChanged, text)
{
	if (!hasChanged)
	{
		this.m_clipboardController.close();
		this.m_clipboardController = null;
		this.m_clipboardHelper = oFF.XObjectExt.release(this.m_clipboardHelper);
		return;
	}
	var supportedOperators = this.m_model.getSupportedComparisonOperators();
	var supportsNull = supportedOperators.contains(oFF.VdComparisonOperator.IS_NULL);
	var supportsNotNull = supportedOperators.contains(oFF.VdComparisonOperator.IS_NOT_NULL);
	var supportsBetween = supportedOperators.contains(oFF.VdComparisonOperator.BETWEEN);
	var values = this.m_clipboardHelper.parseFromClipboard(text, supportsNotNull, supportsBetween);
	var dimVar = this.m_model.getVariable();
	oFF.VdValueHelp.searchValues(dimVar, true, !supportsNull, values, this, oFF.XStringValue.create(oFF.VdVariableController.CLIPBOARD));
};
oFF.VdVariableController.prototype.onClipboardCancel = function()
{
	this.m_clipboardController.close();
	this.m_clipboardController = null;
	this.m_clipboardHelper = oFF.XObjectExt.release(this.m_clipboardHelper);
};
oFF.VdVariableController.prototype.onFillFieldsDone = function(variable, result, customObject)
{
	var step = customObject.toString();
	if (result.hasErrors())
	{
		var errorMSg = this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_ERR_UNKNOWN_ERROR);
		if (oFF.XString.isEqual(oFF.VdVariableController.CLIPBOARD, step) && result.getFirstError().getCode() === oFF.VdValueHelp.ERR_SERVER_ERROR)
		{
			errorMSg = this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_ERR_VH_SERVER_ERROR);
		}
		this.m_clipboardController.setIdle();
		this.m_context.getMessageCenter().postMessage(oFF.UiMessageType.ERROR, errorMSg, oFF.VdVariableForm.COMPONENT_NAME);
		return;
	}
	if (result.hasSeverity(oFF.Severity.WARNING))
	{
		if (result.getFirstWithSeverity(oFF.Severity.WARNING).getCode() === oFF.VdValueHelp.WARN_VALUE_NOT_FOUND)
		{
			this.m_context.getMessageCenter().postMessage(oFF.UiMessageType.WARNING, this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_WARN_VH_VALUES_NOT_FOUND), oFF.VdVariableForm.COMPONENT_NAME);
		}
	}
	var values = result.getData();
	switch (step)
	{
		case oFF.VdVariableController.CLIPBOARD:
			this.updateOperatorsOnClipboadValues(values);
			this.m_model.setValues(values);
			this.m_clipboardController.close();
			this.m_clipboardController = null;
			this.m_clipboardHelper = oFF.XObjectExt.release(this.m_clipboardHelper);
			break;

		case oFF.VdVariableController.OPEN_CLIPBOARD:
			var valueGrid = this.m_clipboardHelper.getValueGrid(values);
			this.m_clipboardController.setText(oFF.DialogGridParser.serializeWithFormat(oFF.DialogGridFormat.SEMICOLON, valueGrid));
			break;
	}
};
oFF.VdVariableController.prototype.updateOperatorsOnClipboadValues = function(clipboardValues)
{
	var size = clipboardValues.size();
	for (var i = 0; i < size; i++)
	{
		var clipboardValue = clipboardValues.get(i);
		if (clipboardValue.getOperator().isNullOperator())
		{
			continue;
		}
		var currentValue = this.getFromCurrentValues(clipboardValue.getFirstOperand(), clipboardValue.getSecondOperand());
		if (oFF.notNull(currentValue))
		{
			clipboardValue.setOperator(currentValue.getOperator());
		}
		else
		{
			var supportedOperators = this.m_model.getSupportedComparisonOperators();
			if (clipboardValue.isOperandFilled(oFF.VdValue.SECOND) && supportedOperators.contains(oFF.VdComparisonOperator.BETWEEN))
			{
				clipboardValue.setOperator(oFF.VdComparisonOperator.BETWEEN);
			}
			else
			{
				clipboardValue.setOperator(supportedOperators.contains(oFF.VdComparisonOperator.EQUAL) ? oFF.VdComparisonOperator.EQUAL : this.m_model.getDefaultOperator());
			}
		}
	}
};
oFF.VdVariableController.prototype.getFromCurrentValues = function(firstOperand, secondOperand)
{
	var currentValues = this.m_model.getValues();
	var size = currentValues.size();
	for (var i = 0; i < size; i++)
	{
		var value = currentValues.get(i);
		if (oFF.XObjectExt.areEqual(value.getFirstOperand(), firstOperand) && oFF.XObjectExt.areEqual(value.getSecondOperand(), secondOperand))
		{
			return value;
		}
	}
	return null;
};
oFF.VdVariableController.prototype.onValueAdded = function(value)
{
	this.addValue(value);
	this.addInputFieldIfNecessary();
};
oFF.VdVariableController.prototype.onValueRemoved = function(value)
{
	this.removeValue(value);
	this.addInputFieldIfNecessary();
};
oFF.VdVariableController.prototype.onValuesSet = function()
{
	this.setValueList(this.m_model.getValues());
};
oFF.VdVariableController.prototype.setEnableAutoFocus = function(enableAutoFocus)
{
	this.m_enableAutoFocus = enableAutoFocus;
};
oFF.VdVariableController.prototype.notifyStateChange = function(state)
{
	this.m_master.notifyStateChange(state);
};
oFF.VdVariableController.prototype.wrapUpState = function()
{
	var controllers = this.m_controllers.getValuesAsReadOnlyList();
	for (var i = 0; i < controllers.size(); i++)
	{
		if (!controllers.get(i).wrapUpState())
		{
			return false;
		}
	}
	return true;
};
oFF.VdVariableController.prototype.releaseObject = function()
{
	this.m_controllers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_controllers);
	this.m_view = oFF.XObjectExt.release(this.m_view);
	var values = this.m_model.getValues();
	for (var i = 0; i < values.size(); i++)
	{
		values.get(i).removeListener(this);
	}
	this.m_model.removeListener(this);
	this.m_model = null;
	this.m_master = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVariableModel = function() {};
oFF.VdVariableModel.prototype = new oFF.XObject();
oFF.VdVariableModel.prototype._ff_c = "VdVariableModel";

oFF.VdVariableModel.EMPTY_OPTIONS = null;
oFF.VdVariableModel.createVariableModel = function(variable, uiContext)
{
	var obj = new oFF.VdVariableModel();
	obj.setupVariableModel(variable, uiContext);
	return obj;
};
oFF.VdVariableModel.prototype.m_uiContext = null;
oFF.VdVariableModel.prototype.m_variable = null;
oFF.VdVariableModel.prototype.m_values = null;
oFF.VdVariableModel.prototype.m_inputValue = null;
oFF.VdVariableModel.prototype.m_interval = false;
oFF.VdVariableModel.prototype.m_defaultOperator = null;
oFF.VdVariableModel.prototype.m_supportedOperators = null;
oFF.VdVariableModel.prototype.m_listeners = null;
oFF.VdVariableModel.prototype.setupVariableModel = function(variable, uiContext)
{
	this.m_variable = variable;
	this.m_values = oFF.XList.create();
	this.m_listeners = oFF.XList.create();
	this.m_uiContext = uiContext;
	this.determineOperators();
};
oFF.VdVariableModel.prototype.determineOperators = function()
{
	this.m_supportedOperators = oFF.XListOfNameObject.create();
	var variableType = this.m_variable.getVariableType();
	if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		this.m_defaultOperator = oFF.VdComparisonOperator.EQUAL;
		return;
	}
	if (!variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		return;
	}
	var dimVar = this.m_variable;
	var filterCapability = dimVar.getFilterCapability();
	var including = filterCapability.getSupportedComparisonOperators(oFF.SetSign.INCLUDING);
	var excluding = filterCapability.getSupportedComparisonOperators(oFF.SetSign.EXCLUDING);
	if (oFF.notNull(including))
	{
		for (var i = 0; i < including.size(); i++)
		{
			var operator = including.get(i);
			if (operator.getNumberOfParameters() > 1)
			{
				this.m_interval = true;
			}
			var vdOperator = oFF.VdComparisonOperator.lookup(operator.getName(), false);
			if (oFF.notNull(vdOperator))
			{
				this.m_supportedOperators.add(vdOperator);
			}
		}
	}
	if (oFF.notNull(excluding) && excluding.contains(oFF.ComparisonOperator.IS_NULL))
	{
		this.m_supportedOperators.add(oFF.VdComparisonOperator.IS_NOT_NULL);
	}
	this.m_defaultOperator = this.m_supportedOperators.hasElements() ? this.m_supportedOperators.get(0) : oFF.VdComparisonOperator.UNDEFINED;
};
oFF.VdVariableModel.prototype.createNewValue = function()
{
	return oFF.VdValue.createValue(this.m_defaultOperator, null, null);
};
oFF.VdVariableModel.prototype.getName = function()
{
	return this.m_variable.getName();
};
oFF.VdVariableModel.prototype.getText = function()
{
	return this.m_variable.getText();
};
oFF.VdVariableModel.prototype.getOrder = function()
{
	return this.m_variable.getVariableOrder();
};
oFF.VdVariableModel.prototype.isMandatory = function()
{
	return this.m_variable.isMandatory();
};
oFF.VdVariableModel.prototype.getVariableType = function()
{
	return this.m_variable.getVariableType();
};
oFF.VdVariableModel.prototype.getValueType = function()
{
	return this.m_variable.getValueType();
};
oFF.VdVariableModel.prototype.supportsValueHelp = function()
{
	if (this.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		return this.m_variable.supportsValueHelp();
	}
	return false;
};
oFF.VdVariableModel.prototype.hasCheckTable = function()
{
	if (this.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		var dimVar = this.m_variable;
		var dimension = dimVar.getDimension();
		if (!dimension.isStructure() && !dimension.isHierarchyActive())
		{
			return dimension.getHasCheckTable();
		}
		return true;
	}
	return false;
};
oFF.VdVariableModel.prototype.supportsMultipleValues = function()
{
	var varType = this.getVariableType();
	return this.m_variable.supportsMultipleValues() && (varType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) || varType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE));
};
oFF.VdVariableModel.prototype.isInterval = function()
{
	return this.m_interval;
};
oFF.VdVariableModel.prototype.getValues = function()
{
	return this.m_values;
};
oFF.VdVariableModel.prototype.isNewValue = function(value)
{
	return this.isNewValueInList(this.getValues(), value);
};
oFF.VdVariableModel.prototype.isNewValueInList = function(values, value)
{
	var isValueFilled = value.isFilled();
	var size = values.size();
	for (var i = 0; i < size; i++)
	{
		var otherValue = values.get(i);
		if (!oFF.XString.isEqual(value.getId(), otherValue.getId()))
		{
			if (value.getOperator() === oFF.VdComparisonOperator.IS_NULL && otherValue.getOperator() === oFF.VdComparisonOperator.IS_NOT_NULL || value.getOperator() === oFF.VdComparisonOperator.IS_NOT_NULL && otherValue.getOperator() === oFF.VdComparisonOperator.IS_NULL)
			{
				continue;
			}
			if (isValueFilled && value.operandsEqualTo(otherValue) || !isValueFilled && value.isEqualTo(otherValue))
			{
				return false;
			}
		}
	}
	return true;
};
oFF.VdVariableModel.prototype.getInputValue = function()
{
	return this.m_inputValue;
};
oFF.VdVariableModel.prototype.setInputValue = function(inputValue)
{
	this.m_inputValue = inputValue;
};
oFF.VdVariableModel.prototype.setInitialValues = function(values)
{
	this.m_values.clear();
	if (oFF.XCollectionUtils.hasElements(values))
	{
		this.formatValues(values);
		this.setValues(values);
	}
	else
	{
		this.setDefaultOption();
	}
};
oFF.VdVariableModel.prototype.formatValues = function(values)
{
	if (!this.m_variable.getVariableType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE) || !this.m_variable.getValueType().isTypeOf(oFF.XValueType.NUMBER))
	{
		return;
	}
	var numberFormatter = oFF.UiNumberFormatterCenter.getCenter();
	for (var i = 0; i < values.size(); i++)
	{
		var value = values.get(i);
		var key = value.getFirstOperand().getKey();
		var formatted = numberFormatter.format(key);
		if (oFF.XStringUtils.isNullOrEmpty(formatted))
		{
			continue;
		}
		value.setFirstOperand(oFF.FdSimpleItem.create(key, formatted, null));
	}
};
oFF.VdVariableModel.prototype.setValues = function(values)
{
	this.m_inputValue = null;
	this.m_values = values;
	if (oFF.isNull(this.m_values))
	{
		this.m_values = oFF.XList.create();
	}
	for (var i = this.m_listeners.size() - 1; i >= 0; i--)
	{
		this.m_listeners.get(i).onValuesSet();
	}
};
oFF.VdVariableModel.prototype.addValue = function(value)
{
	this.m_values.add(value);
	for (var i = this.m_listeners.size() - 1; i >= 0; i--)
	{
		this.m_listeners.get(i).onValueAdded(value);
	}
};
oFF.VdVariableModel.prototype.removeValue = function(value)
{
	if (value === this.m_inputValue)
	{
		this.m_inputValue.clear();
		return;
	}
	for (var i = this.m_values.size() - 1; i >= 0; i--)
	{
		if (this.m_values.get(i) === value)
		{
			this.m_values.removeAt(i);
			for (var k = this.m_listeners.size() - 1; k >= 0; k--)
			{
				this.m_listeners.get(k).onValueRemoved(value);
			}
			oFF.XObjectExt.release(value);
			return;
		}
	}
};
oFF.VdVariableModel.prototype.clearValues = function()
{
	this.setValues(null);
	this.setDefaultOption();
};
oFF.VdVariableModel.prototype.setDefaultOption = function()
{
	if (this.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE) && this.isMandatory())
	{
		var options = this.getOptions();
		if (oFF.XCollectionUtils.hasElements(options))
		{
			var defaultValue = this.createNewValue();
			defaultValue.setFirstOperand(oFF.FdItemFactory.createItemByKey(options.get(0).getName(), null, null));
			this.m_values.add(defaultValue);
		}
	}
};
oFF.VdVariableModel.prototype.getSupportedComparisonOperators = function()
{
	return this.m_supportedOperators;
};
oFF.VdVariableModel.prototype.getOptions = function()
{
	if (this.m_variable.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		return this.m_variable.getOptions();
	}
	if (oFF.isNull(oFF.VdVariableModel.EMPTY_OPTIONS))
	{
		oFF.VdVariableModel.EMPTY_OPTIONS = oFF.XListOfNameObject.create();
	}
	return oFF.VdVariableModel.EMPTY_OPTIONS;
};
oFF.VdVariableModel.prototype.getDefaultOperator = function()
{
	return this.m_defaultOperator;
};
oFF.VdVariableModel.prototype.validateValues = function()
{
	var valid = true;
	var empty = true;
	var variableType = this.m_variable.getVariableType();
	var localization = this.m_uiContext.getLocalization();
	if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		for (var i = 0; i < this.m_values.size(); i++)
		{
			var value = this.m_values.get(i);
			if (value.isEmpty())
			{
				continue;
			}
			if (value.hasErrors())
			{
				valid = false;
			}
			else if (!value.isFilled() && !this.isOperatorSwitchPossible(value))
			{
				var index = !value.isOperandFilled(0) ? 0 : 1;
				value.setError(index, localization.getText(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_VALUE_MISSING));
				valid = false;
			}
			else
			{
				empty = false;
			}
		}
	}
	else if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE) || variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		for (var j = 0; j < this.m_values.size(); j++)
		{
			if (this.m_values.get(j).hasErrors())
			{
				valid = false;
			}
			else
			{
				empty = false;
			}
		}
	}
	if (oFF.notNull(this.m_inputValue) && this.m_inputValue.hasErrors())
	{
		valid = false;
	}
	if (valid && this.m_variable.isMandatory() && empty)
	{
		valid = false;
		var target = oFF.notNull(this.m_inputValue) || this.m_values.isEmpty() ? this.m_inputValue : this.m_values.get(this.m_values.size() - 1);
		if (oFF.notNull(target))
		{
			target.setError(-1, localization.getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_MANDATORY_VAR, this.m_variable.getText()));
		}
	}
	return valid;
};
oFF.VdVariableModel.prototype.getCleanedValues = function()
{
	var result = oFF.XList.create();
	for (var i = 0; i < this.m_values.size(); i++)
	{
		oFF.XCollectionUtils.addIfNotNull(result, this.getCleanedValue(this.m_values.get(i)));
	}
	var cleanedValue = this.getCleanedValue(this.m_inputValue);
	if (oFF.notNull(cleanedValue) && this.isNewValueInList(result, cleanedValue))
	{
		result.add(cleanedValue);
	}
	return result;
};
oFF.VdVariableModel.prototype.getCleanedValue = function(original)
{
	if (oFF.isNull(original) || !original.isFilled() && !this.isOperatorSwitchPossible(original))
	{
		return null;
	}
	var value = original.clone();
	var operator = value.getOperator();
	if ((operator === oFF.VdComparisonOperator.BETWEEN && this.m_supportedOperators.contains(oFF.VdComparisonOperator.EQUAL) || operator === oFF.VdComparisonOperator.NOT_BETWEEN && this.m_supportedOperators.contains(oFF.VdComparisonOperator.NOT_EQUAL)) && value.isOperandFilled(oFF.VdValue.FIRST) && !value.isOperandFilled(oFF.VdValue.SECOND))
	{
		value.setOperator(operator === oFF.VdComparisonOperator.BETWEEN ? oFF.VdComparisonOperator.EQUAL : oFF.VdComparisonOperator.NOT_EQUAL);
	}
	return value;
};
oFF.VdVariableModel.prototype.validateSimpleTypeInput = function(value, inputValue, inputIndex)
{
	if (this.getVariableType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		var localization = this.m_uiContext.getLocalization();
		var numberFormatter = oFF.UiNumberFormatterCenter.getCenter();
		if (this.m_variable.isMandatory() && !this.m_variable.supportsMultipleValues() && oFF.XStringUtils.isNullOrEmpty(inputValue))
		{
			value.setError(inputIndex, localization.getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_MANDATORY_VAR, this.m_variable.getText()));
			return;
		}
		if (oFF.XStringUtils.isNullOrEmpty(inputValue))
		{
			return;
		}
		var valueType = this.getValueType();
		if (valueType.isTypeOf(oFF.XValueType.NUMBER))
		{
			var formattedValue = numberFormatter.format(numberFormatter.parseFormattedNumber(inputValue));
			if (oFF.XStringUtils.isNotNullAndNotEmpty(formattedValue))
			{
				if (!oFF.XString.isEqual(formattedValue, inputValue))
				{
					value.setWarning(inputIndex, localization.getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_WARNING_MSG_NUMBER_FORMAT, formattedValue));
				}
			}
			else
			{
				value.setError(inputIndex, localization.getText(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_NUMBER_VALIDATION));
			}
		}
	}
};
oFF.VdVariableModel.prototype.validateSimpleType = function(value, index)
{
	this.validateSimpleTypeInput(value, value.getOperand(index).getDisplayKey(), index);
};
oFF.VdVariableModel.prototype.isOperatorSwitchPossible = function(value)
{
	var operator = value.getOperator();
	return (operator === oFF.VdComparisonOperator.BETWEEN && this.m_supportedOperators.contains(oFF.VdComparisonOperator.EQUAL) || operator === oFF.VdComparisonOperator.NOT_BETWEEN && this.m_supportedOperators.contains(oFF.VdComparisonOperator.NOT_EQUAL)) && value.isOperandFilled(oFF.VdValue.FIRST) && !value.isOperandFilled(oFF.VdValue.SECOND);
};
oFF.VdVariableModel.prototype.getVariable = function()
{
	return this.m_variable;
};
oFF.VdVariableModel.prototype.addListener = function(listener)
{
	this.m_listeners.add(listener);
};
oFF.VdVariableModel.prototype.removeListener = function(listener)
{
	this.m_listeners.removeElement(listener);
};
oFF.VdVariableModel.prototype.toString = function()
{
	if (oFF.isNull(this.m_variable))
	{
		return "";
	}
	var buffer = oFF.XStringBuffer.create();
	buffer.append(this.m_variable.getName()).append("=[");
	for (var i = 0; i < this.m_values.size(); i++)
	{
		buffer.append("{");
		var value = this.m_values.get(i);
		buffer.append(value.toString());
		buffer.append("}");
		if (i + 1 < this.m_values.size())
		{
			buffer.append(", ");
		}
	}
	buffer.append("]");
	return buffer.toString();
};
oFF.VdVariableModel.prototype.releaseObject = function()
{
	this.m_variable = null;
	this.m_uiContext = null;
	this.m_values = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_values);
	this.m_inputValue = oFF.XObjectExt.release(this.m_inputValue);
	this.m_listeners = oFF.XObjectExt.release(this.m_listeners);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.VdVhMobileTester = function() {};
oFF.VdVhMobileTester.prototype = new oFF.XObject();
oFF.VdVhMobileTester.prototype._ff_c = "VdVhMobileTester";

oFF.VdVhMobileTester.testCalendarSingle = function(application)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		tmpApp = oFF.ApplicationFactory.createDefaultApplication();
	}
	var obj = new oFF.VdVhMobileTester();
	obj.testSingleCalendarView(tmpApp);
	return obj;
};
oFF.VdVhMobileTester.testCalendarRange = function(application)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		tmpApp = oFF.ApplicationFactory.createDefaultApplication();
	}
	var obj = new oFF.VdVhMobileTester();
	obj.testRangeCalendarView(tmpApp);
	return obj;
};
oFF.VdVhMobileTester.testOperatorList = function(application)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		tmpApp = oFF.ApplicationFactory.createDefaultApplication();
	}
	var obj = new oFF.VdVhMobileTester();
	obj.testOperatorListView(tmpApp);
	return obj;
};
oFF.VdVhMobileTester.testSimpleList = function(application)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		tmpApp = oFF.ApplicationFactory.createDefaultApplication();
	}
	var obj = new oFF.VdVhMobileTester();
	obj.testSimpleListView(tmpApp);
	return obj;
};
oFF.VdVhMobileTester.testMemberSelector = function(application, variable)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		var session = oFF.DefaultSession.createWithVersion(oFF.XVersion.MAX);
		session.getEnvironment().put("ff_sdk", "${ff_network_dir}/");
		var url = oFF.XUri.createFromFilePath(session, "${ff_sdk}/production/systems/SystemLandscapeAllWithPwds.json", oFF.PathFormat.AUTO_DETECT, oFF.VarResolveMode.DOLLAR, null);
		var systemLandscapePath = url.getUrl();
		var extResult = oFF.ApplicationFactory.createApplicationWithVersionAndLandscape(session, oFF.XVersion.MAX, systemLandscapePath);
		tmpApp = extResult.getData();
	}
	var tmpVariable = variable;
	if (oFF.isNull(tmpVariable))
	{
		var serviceConfig = oFF.QueryServiceConfig.createWithDataSourceName(tmpApp, "KIW", "query:[0BOC_TEST_VARIABLE_TYPES_1]");
		var syncAction = serviceConfig.processQueryManagerCreation(oFF.SyncType.BLOCKING, null, null);
		var queryManager = syncAction.getData();
		tmpVariable = queryManager.getVariables().get(1);
	}
	var obj = new oFF.VdVhMobileTester();
	obj.testMemberSelectorView(tmpApp, tmpVariable);
	return obj;
};
oFF.VdVhMobileTester.testOperatorWorkflow = function(application, variable)
{
	var tmpApp = application;
	if (oFF.isNull(tmpApp))
	{
		var session = oFF.DefaultSession.createWithVersion(oFF.XVersion.MAX);
		session.getEnvironment().put("ff_sdk", "${ff_network_dir}/");
		var url = oFF.XUri.createFromFilePath(session, "${ff_sdk}/production/systems/SystemLandscapeAllWithPwds.json", oFF.PathFormat.AUTO_DETECT, oFF.VarResolveMode.DOLLAR, null);
		var systemLandscapePath = url.getUrl();
		var extResult = oFF.ApplicationFactory.createApplicationWithVersionAndLandscape(session, oFF.XVersion.MAX, systemLandscapePath);
		tmpApp = extResult.getData();
	}
	var tmpVariable = variable;
	if (oFF.isNull(tmpVariable))
	{
		var serviceConfig = oFF.QueryServiceConfig.createWithDataSourceName(tmpApp, "KIW", "query:[0BOC_TEST_VARIABLE_TYPES_1]");
		var syncAction = serviceConfig.processQueryManagerCreation(oFF.SyncType.BLOCKING, null, null);
		var queryManager = syncAction.getData();
		tmpVariable = queryManager.getVariables().get(1);
	}
	var obj = new oFF.VdVhMobileTester();
	obj.prepareOperatorWorkflow(tmpApp, tmpVariable);
	return obj;
};
oFF.VdVhMobileTester.prototype.m_genesis = null;
oFF.VdVhMobileTester.prototype.m_dialog = null;
oFF.VdVhMobileTester.prototype.testSingleCalendarView = function(application)
{
	var tmpCal = oFF.VdVhMobileCalendar.create(application.getUiManager(), "yyyy-MM-dd", "2016-03-11", this);
	tmpCal.setIsMandatory(false);
	this.setupExt(application.getUiManager(), tmpCal, "Please select a date");
	this.m_dialog.setName("VdVhMobileDialogSingleDate");
	this.m_dialog.setCustomObject(tmpCal);
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.testRangeCalendarView = function(application)
{
	var tmpRangeCal = oFF.VdVhMobileRangeCalendar.create(application.getUiManager(), "yyyy-MM-dd", "2016-03-11", "2016-03-15", this);
	tmpRangeCal.setIsMandatory(true);
	this.setupExt(application.getUiManager(), tmpRangeCal, "Please select a date range");
	this.m_dialog.setName("vdVhMobileDialogRangeDate");
	this.m_dialog.setCustomObject(tmpRangeCal);
	var okButton = this.m_dialog.addNewDialogButton();
	okButton.setName("vdVhMobileDialogOkBtn");
	okButton.setText("Ok");
	okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	okButton.registerOnPress(this);
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.testOperatorListView = function(application)
{
	var tmpUiMgr = application.getUiManager();
	var testOperators = oFF.XList.create();
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.IS_NULL.getName(), oFF.VdComparisonOperator.IS_NULL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.IS_NULL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.IS_NOT_NULL.getName(), oFF.VdComparisonOperator.IS_NOT_NULL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.IS_NOT_NULL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.EQUAL.getName(), oFF.VdComparisonOperator.EQUAL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.EQUAL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.NOT_EQUAL.getName(), oFF.VdComparisonOperator.NOT_EQUAL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.NOT_EQUAL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.GREATER_THAN.getName(), oFF.VdComparisonOperator.GREATER_THAN.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.GREATER_THAN));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.GREATER_EQUAL.getName(), oFF.VdComparisonOperator.GREATER_EQUAL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.GREATER_EQUAL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.LESS_THAN.getName(), oFF.VdComparisonOperator.LESS_THAN.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.LESS_THAN));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.LESS_EQUAL.getName(), oFF.VdComparisonOperator.LESS_EQUAL.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.LESS_EQUAL));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.BETWEEN.getName(), oFF.VdComparisonOperator.BETWEEN.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.BETWEEN));
	testOperators.add(oFF.VdVhMobileListItem.create(oFF.VdComparisonOperator.NOT_BETWEEN.getName(), oFF.VdComparisonOperator.NOT_BETWEEN.getLongText(tmpUiMgr.getLocalization()), oFF.VdComparisonOperator.NOT_BETWEEN));
	var tmpList = oFF.VdVhMobileList.create(tmpUiMgr, testOperators, oFF.VdComparisonOperator.EQUAL.getName(), this);
	this.setupExt(application.getUiManager(), tmpList, "Select Operator of Type");
	this.m_dialog.setName("vdVhMobileDialogOperatorList");
	this.m_dialog.setCustomObject(tmpList);
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("0px"));
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.testSimpleListView = function(application)
{
	var tmpUiMgr = application.getUiManager();
	var testItems = oFF.XList.create();
	testItems.add(oFF.VdVhMobileListItem.create("one_time", "1x", null));
	testItems.add(oFF.VdVhMobileListItem.create("two_times", "2x", null));
	testItems.add(oFF.VdVhMobileListItem.create("x_times", "x", null));
	var tmpList = oFF.VdVhMobileList.create(tmpUiMgr, testItems, null, this);
	this.setupExt(application.getUiManager(), tmpList, "Select for Input Multiplier");
	this.m_dialog.setName("vdVhMobileDialogSimpleList");
	this.m_dialog.setCustomObject(tmpList);
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("0px"));
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.testMemberSelectorView = function(application, variable)
{
	var tmpUiMgr = application.getUiManager();
	var tmpContext = oFF.OlapUiContext.createContext(tmpUiMgr, oFF.OlapUiDisplayFactory.createFactoryForDialog(tmpUiMgr));
	var tmpMemberSelector = oFF.VdVhMobileMemberSelector.create(tmpContext, variable, null, null, this);
	this.setupExt(application.getUiManager(), tmpMemberSelector, "Select Member");
	this.m_dialog.setName("vdVhMobileDialogMemberSelector");
	this.m_dialog.setCustomObject(tmpMemberSelector);
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("0px"));
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.prepareOperatorWorkflow = function(application, variable)
{
	var tmpUiMgr = application.getUiManager();
	var tmpContext = oFF.OlapUiContext.createContext(tmpUiMgr, oFF.OlapUiDisplayFactory.createFactoryForDialog(tmpUiMgr));
	var newVarModel = oFF.VdVariableModel.createVariableModel(variable, tmpContext);
	var operatorWorkflow = oFF.VdVhMobileOperatorWorkflow.createWithVariableModel(tmpContext, newVarModel, null, this);
	this.setupExt(application.getUiManager(), null, variable.getText());
	this.m_dialog.setName("vdVhMobileDialogOperatorList");
	this.m_dialog.setCustomObject(operatorWorkflow);
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("0px"));
	this.m_dialog.setContent(operatorWorkflow.getWorkflowView());
	var okButton = this.m_dialog.addNewDialogButton();
	okButton.setName("vdVhMobileDialogWorkflowOkBtn");
	okButton.setText("Ok");
	okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	okButton.setEnabled(false);
	okButton.setVisible(false);
	okButton.registerOnPress(this);
	var closeButton = this.m_dialog.addNewDialogButton();
	closeButton.setName("vdVhMobileDialogCloseBtn");
	closeButton.setText("Cancel");
	closeButton.registerOnPress(this);
	operatorWorkflow.start();
	this.m_dialog.open();
};
oFF.VdVhMobileTester.prototype.setupExt = function(uiMgr, mobileview, title)
{
	this.m_genesis = uiMgr.getFreeGenesis();
	this.m_dialog = this.m_genesis.newControl(oFF.UiType.DIALOG);
	this.m_dialog.useMaxSpace();
	this.m_dialog.setTitle(title);
	if (oFF.notNull(mobileview))
	{
		this.m_dialog.setContent(mobileview.getPage());
	}
};
oFF.VdVhMobileTester.prototype.releaseObject = function()
{
	this.m_dialog = oFF.XObjectExt.release(this.m_dialog);
	this.m_genesis = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileTester.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, "vdVhMobileDialogCloseBtn"))
	{
		this.m_dialog.close();
	}
	if (oFF.XString.isEqual(controlName, "vdVhMobileDialogOkBtn"))
	{
		this.m_dialog.close();
		var tmpCalView = event.getControl().getParent().getCustomObject();
		var startDate = oFF.XStringUtils.concatenate2("startDate: ", tmpCalView.getStartDate());
		var endDate = oFF.XStringUtils.concatenate2("endDate: ", tmpCalView.getEndDate());
		var selValuesStr = oFF.XStringUtils.concatenate3(startDate, " ", endDate);
		this.m_genesis.showSuccessToast(selValuesStr);
	}
	if (oFF.XString.isEqual(controlName, "vdVhMobileDialogMemberSelectorOkBtn"))
	{
		this.m_dialog.close();
		var tmpMemberSelectorView = event.getControl().getParent().getCustomObject();
		tmpMemberSelectorView.triggerSelection();
	}
	if (oFF.XString.isEqual(controlName, "vdVhMobileDialogWorkflowOkBtn"))
	{
		this.m_dialog.close();
		var tmpWorkflowView = this.m_dialog.getCustomObject();
		var tmpStr = "Operator workflow finished! Operator: ";
		if (oFF.XStringUtils.isNotNullAndNotEmpty(tmpWorkflowView.getSelectedOperatorItem().getName()) === true)
		{
			tmpStr = oFF.XStringUtils.concatenate3(tmpStr, tmpWorkflowView.getSelectedOperatorItem().getName(), ",");
		}
		if (tmpWorkflowView.getSelectedFromItem() !== null)
		{
			tmpStr = oFF.XStringUtils.concatenate3(tmpStr, " Item1:", tmpWorkflowView.getSelectedFromItem().getText());
		}
		if (tmpWorkflowView.getSelectedToItem() !== null)
		{
			tmpStr = oFF.XStringUtils.concatenate3(tmpStr, ", Item2:", tmpWorkflowView.getSelectedToItem().getText());
		}
		this.m_genesis.showSuccessToast(tmpStr);
	}
};
oFF.VdVhMobileTester.prototype.onVhMobileValuesSelected = function(view)
{
	var selValuesStr = "result missing";
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileCalendar.VIEW_NAME))
	{
		this.m_dialog.close();
		var tmpCalView = view;
		selValuesStr = tmpCalView.getStartDate();
	}
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileRangeCalendar.VIEW_NAME))
	{
		var tmpRangeCalView = view;
		selValuesStr = oFF.XStringUtils.concatenate4("startDate:", tmpRangeCalView.getStartDate(), " endDate:", tmpRangeCalView.getEndDate());
	}
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileList.VIEW_NAME))
	{
		this.m_dialog.close();
		var tmpListView = view;
		selValuesStr = tmpListView.getSelectedItem().getName();
	}
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileMemberSelector.VIEW_NAME))
	{
		this.m_dialog.close();
		var tmpMemberSelView = view;
		selValuesStr = tmpMemberSelView.getSelectedItem().getText();
	}
	this.m_genesis.showSuccessToast(selValuesStr);
};
oFF.VdVhMobileTester.prototype.onVhMobileOperatorWorkflowFinished = function(operatorItem, itemFrom, itemTo)
{
	if (this.m_dialog.getDialogButtonByName("vdVhMobileDialogWorkflowOkBtn").isEnabled() === false)
	{
		this.m_dialog.getDialogButtonByName("vdVhMobileDialogWorkflowOkBtn").setEnabled(true);
	}
};
oFF.VdVhMobileTester.prototype.onVhMobileOperatorWorkflowNavigate = function(currentPageIndex, pageCount)
{
	this.m_dialog.getDialogButtonByName("vdVhMobileDialogWorkflowOkBtn").setVisible(currentPageIndex === pageCount - 1);
};

oFF.VdVhMobileController = function() {};
oFF.VdVhMobileController.prototype = new oFF.XObject();
oFF.VdVhMobileController.prototype._ff_c = "VdVhMobileController";

oFF.VdVhMobileController.VD_MOBILE_VH_ISO_DATE_FORMAT = "yyyy-MM-dd";
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_NOT_SUPPORTED = 0;
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_CALENDAR = 1;
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_RANGE_CALENDAR = 2;
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPTION_LIST = 3;
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_SINGLE_DIMENSION_MEMBER = 4;
oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPERATOR_WORKFLOW = 5;
oFF.VdVhMobileController.createForVariableModel = function(variableModel, vdVariableForm, listener, vdConfiguration)
{
	var obj = new oFF.VdVhMobileController();
	obj.setupController(variableModel, vdVariableForm, listener, vdConfiguration);
	return obj;
};
oFF.VdVhMobileController.supportsMobileValueHelp = function(variableModel)
{
	if (variableModel.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		return true;
	}
	if (variableModel.getValueType().isDateBased())
	{
		if (variableModel.supportsMultipleValues() && variableModel.isInterval())
		{
			return false;
		}
		return true;
	}
	if (variableModel.supportsValueHelp())
	{
		if (variableModel.supportsMultipleValues() && variableModel.isInterval())
		{
			return false;
		}
		return true;
	}
	return false;
};
oFF.VdVhMobileController.prototype.m_variableModel = null;
oFF.VdVhMobileController.prototype.m_vdVariableForm = null;
oFF.VdVhMobileController.prototype.m_closeListener = null;
oFF.VdVhMobileController.prototype.m_vdConfig = null;
oFF.VdVhMobileController.prototype.m_uiMgr = null;
oFF.VdVhMobileController.prototype.m_containerDialog = null;
oFF.VdVhMobileController.prototype.m_valueHelpType = 0;
oFF.VdVhMobileController.prototype.setupController = function(variableModel, vdVariableForm, listener, vdConfiguration)
{
	this.m_variableModel = variableModel;
	this.m_vdVariableForm = vdVariableForm;
	this.m_closeListener = listener;
	this.m_vdConfig = vdConfiguration;
	this.m_uiMgr = vdVariableForm.getContext().getUiManager();
	this.m_valueHelpType = this.getValueHelpType();
	if (this.mobileValueHelpViewAvailable())
	{
		this.setupContainerDialog();
	}
};
oFF.VdVhMobileController.prototype.releaseObject = function()
{
	this.m_variableModel = null;
	this.m_vdVariableForm = null;
	this.m_closeListener = null;
	this.m_uiMgr = null;
	this.m_containerDialog = oFF.XObjectExt.release(this.m_containerDialog);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileController.prototype.performMobileValueHelp = function()
{
	if (this.mobileValueHelpViewAvailable() && oFF.notNull(this.m_containerDialog))
	{
		this.m_containerDialog.open();
	}
};
oFF.VdVhMobileController.prototype.mobileValueHelpViewAvailable = function()
{
	return this.m_valueHelpType !== oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_NOT_SUPPORTED;
};
oFF.VdVhMobileController.prototype.getValueHelpType = function()
{
	if (!this.m_variableModel.supportsMultipleValues())
	{
		if (this.m_variableModel.getValueType().isDateBased() && (this.m_vdConfig.useDatePicker() || this.m_variableModel.getVariableType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE)))
		{
			if (this.m_variableModel.isInterval())
			{
				return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_RANGE_CALENDAR;
			}
			return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_CALENDAR;
		}
		if (this.m_variableModel.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			if (this.m_variableModel.isInterval())
			{
				return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPERATOR_WORKFLOW;
			}
			return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_SINGLE_DIMENSION_MEMBER;
		}
	}
	if (this.m_variableModel.getVariableType().isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPTION_LIST;
	}
	return oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_NOT_SUPPORTED;
};
oFF.VdVhMobileController.prototype.setupContainerDialog = function()
{
	this.m_containerDialog = this.m_uiMgr.newControl(oFF.UiType.DIALOG);
	this.m_containerDialog.addCssClass("ffVdVhMobileDialog");
	this.m_containerDialog.useMaxSpace();
	var closeButton = this.m_containerDialog.addNewDialogButton();
	closeButton.setName("VdVhMobileDialogCloseBtn");
	closeButton.setText(this.m_uiMgr.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	closeButton.registerOnPress(this);
	switch (this.m_valueHelpType)
	{
		case oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_CALENDAR:
			this.createCalendarValueHelp();
			break;

		case oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_RANGE_CALENDAR:
			this.createRangeCalendarValueHelp();
			break;

		case oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPTION_LIST:
			this.createOptionListValueHelp();
			break;

		case oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_SINGLE_DIMENSION_MEMBER:
			this.createSingleDimensionMemberValueHelp();
			break;

		case oFF.VdVhMobileController.VD_MOBILE_VH_TYPE_OPERATOR_WORKFLOW:
			this.createOperatorWorkflowValueHelp();
			break;

		default:
			break;
	}
};
oFF.VdVhMobileController.prototype.formatDateToIsoFormat = function(dateStr)
{
	var tmpDate = oFF.XDate.createDateSafe(dateStr);
	if (oFF.notNull(tmpDate))
	{
		return tmpDate.toIsoFormat();
	}
	return dateStr;
};
oFF.VdVhMobileController.prototype.submitValues = function(valuesList)
{
	this.m_containerDialog.close();
	this.m_variableModel.setValues(valuesList);
	if (oFF.notNull(this.m_closeListener))
	{
		this.m_closeListener.onFilterDialogOk(null);
	}
	else
	{
		this.m_vdVariableForm.attemptSubmit();
	}
};
oFF.VdVhMobileController.prototype.cancelSubmit = function()
{
	this.m_containerDialog.close();
	if (oFF.notNull(this.m_closeListener))
	{
		this.m_closeListener.onFilterDialogCancel();
	}
	else
	{
		this.m_vdVariableForm.cancelReinit();
	}
};
oFF.VdVhMobileController.prototype.createCalendarValueHelp = function()
{
	var selectedDate = null;
	if (this.m_variableModel.getValues().size() > 0)
	{
		selectedDate = this.m_variableModel.getValues().get(0).getFirstOperand().getKey();
		selectedDate = this.formatDateToIsoFormat(selectedDate);
	}
	var vhMobileCalendar = oFF.VdVhMobileCalendar.create(this.m_uiMgr, oFF.VdVhMobileController.VD_MOBILE_VH_ISO_DATE_FORMAT, selectedDate, this);
	vhMobileCalendar.setIsMandatory(this.m_variableModel.isMandatory());
	this.m_containerDialog.setName("VdVhMobileDialogSingleDate");
	this.m_containerDialog.setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_DATE_VIEW_SELECT_DATE));
	this.m_containerDialog.setContent(vhMobileCalendar.getPage());
	this.m_containerDialog.setCustomObject(vhMobileCalendar);
	if (!this.m_variableModel.isMandatory())
	{
		var okSingleMemberButton = this.m_containerDialog.addNewDialogButton();
		okSingleMemberButton.setName("VdVhMobileSingleCalendarDialogOkBtn");
		okSingleMemberButton.setText(this.m_uiMgr.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
		okSingleMemberButton.setButtonType(oFF.UiButtonType.PRIMARY);
		okSingleMemberButton.registerOnPress(this);
	}
};
oFF.VdVhMobileController.prototype.createRangeCalendarValueHelp = function()
{
	var startDate = null;
	var endDate = null;
	if (this.m_variableModel.getValues().size() > 0)
	{
		startDate = this.m_variableModel.getValues().get(0).getFirstOperand().getKey();
		endDate = this.m_variableModel.getValues().get(0).getSecondOperand().getKey();
		startDate = this.formatDateToIsoFormat(startDate);
		endDate = this.formatDateToIsoFormat(endDate);
	}
	var vhMobileRangeCalendar = oFF.VdVhMobileRangeCalendar.create(this.m_uiMgr, oFF.VdVhMobileController.VD_MOBILE_VH_ISO_DATE_FORMAT, startDate, endDate, this);
	vhMobileRangeCalendar.setIsMandatory(this.m_variableModel.isMandatory());
	this.m_containerDialog.setName("VdVhMobileDialogRangeDate");
	this.m_containerDialog.setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_RANGE_DATE_VIEW_SELECT_DATE_RANGE));
	this.m_containerDialog.setContent(vhMobileRangeCalendar.getPage());
	this.m_containerDialog.setCustomObject(vhMobileRangeCalendar);
	var okButton = this.m_containerDialog.addNewDialogButton();
	okButton.setName("VdVhMobileRangeCalendarDialogOkBtn");
	okButton.setText(this.m_uiMgr.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	okButton.registerOnPress(this);
};
oFF.VdVhMobileController.prototype.createOptionListValueHelp = function()
{
	var optionsList = oFF.XList.create();
	var selectedOptionName = null;
	if (!this.m_variableModel.isMandatory())
	{
		optionsList.add(oFF.VdVhMobileListItem.create(oFF.VdConstants.EMPTY_OPTION, "", null));
	}
	if (this.m_variableModel.getOptions().size() > 0)
	{
		oFF.XCollectionUtils.forEach(this.m_variableModel.getOptions(),  function(nameTextObj){
			var newItem = oFF.VdVhMobileListItem.create(nameTextObj.getName(), nameTextObj.getText(), null);
			optionsList.add(newItem);
		}.bind(this));
	}
	if (this.m_variableModel.getValues() !== null && this.m_variableModel.getValues().size() > 0)
	{
		selectedOptionName = this.m_variableModel.getValues().get(0).getFirstOperand().getKey();
	}
	else if (optionsList.size() > 0)
	{
		selectedOptionName = optionsList.get(0).getName();
	}
	var vhMobileList = oFF.VdVhMobileList.create(this.m_uiMgr, optionsList, selectedOptionName, this);
	this.m_containerDialog.setName("VdVhMobileDialogSimpleList");
	this.m_containerDialog.setTitle(this.m_uiMgr.getLocalization().getTextWithPlaceholder(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_LIST_VIEW_SELECT, this.m_variableModel.getVariable().getText()));
	this.m_containerDialog.setContent(vhMobileList.getPage());
	this.m_containerDialog.setCustomObject(vhMobileList);
};
oFF.VdVhMobileController.prototype.createSingleDimensionMemberValueHelp = function()
{
	var selectedItem = null;
	if (this.m_variableModel.getValues().size() > 0)
	{
		var selectedValue = this.m_variableModel.getValues().get(0);
		selectedItem = selectedValue.getFirstOperand();
	}
	var vhMobileMemberSelector = oFF.VdVhMobileMemberSelector.create(this.m_vdVariableForm.getContext(), this.m_variableModel.getVariable(), this.m_vdConfig, selectedItem, this);
	this.m_containerDialog.setName("VdVhMobileDialogSingleDimensionMember");
	this.m_containerDialog.setTitle(this.m_variableModel.getVariable().getText());
	this.m_containerDialog.setContent(vhMobileMemberSelector.getPage());
	this.m_containerDialog.setCustomObject(vhMobileMemberSelector);
	if (!this.m_variableModel.isMandatory())
	{
		var okSingleMemberButton = this.m_containerDialog.addNewDialogButton();
		okSingleMemberButton.setName("VdVhMobileDialogSingleDimensionMemberOkBtn");
		okSingleMemberButton.setText(this.m_uiMgr.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
		okSingleMemberButton.setButtonType(oFF.UiButtonType.PRIMARY);
		okSingleMemberButton.registerOnPress(this);
	}
};
oFF.VdVhMobileController.prototype.createOperatorWorkflowValueHelp = function()
{
	var vhMobileOperatorWorkflow = oFF.VdVhMobileOperatorWorkflow.createWithVariableModel(this.m_vdVariableForm.getContext(), this.m_variableModel, this.m_vdConfig, this);
	this.m_containerDialog.setName("VdVhMobileDialogOperatorWorkflow");
	this.m_containerDialog.setTitle(this.m_variableModel.getVariable().getText());
	this.m_containerDialog.setContent(vhMobileOperatorWorkflow.getWorkflowView());
	this.m_containerDialog.setCustomObject(vhMobileOperatorWorkflow);
	var okOperatorButton = this.m_containerDialog.addNewDialogButton();
	okOperatorButton.setName("VdVhMobileDialogWorkflowOkBtn");
	okOperatorButton.setText(this.m_uiMgr.getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	okOperatorButton.setButtonType(oFF.UiButtonType.PRIMARY);
	okOperatorButton.setEnabled(false);
	okOperatorButton.setVisible(false);
	okOperatorButton.registerOnPress(this);
	vhMobileOperatorWorkflow.start();
};
oFF.VdVhMobileController.prototype.handleSingleDateSelect = function(vhCalendarView)
{
	var selectedDate = vhCalendarView.getStartDate();
	var tmpList = null;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(selectedDate))
	{
		var dateItem = oFF.FdSimpleItem.createWithType(selectedDate, null, null, oFF.XValueType.DATE);
		var dateValue = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, dateItem, null);
		tmpList = oFF.XCollectionUtils.singletonList(dateValue);
	}
	this.submitValues(tmpList);
};
oFF.VdVhMobileController.prototype.handleRangeDateSelect = function(vhRangeCalendarView)
{
	var startDate = vhRangeCalendarView.getStartDate();
	var endDate = vhRangeCalendarView.getEndDate();
	var tmpList = null;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(startDate))
	{
		var startItem = oFF.FdSimpleItem.createWithType(startDate, null, null, oFF.XValueType.DATE);
		var endItem = oFF.FdSimpleItem.createWithType(endDate, null, null, oFF.XValueType.DATE);
		var rangeValue = oFF.VdValue.createValue(oFF.VdComparisonOperator.BETWEEN, startItem, endItem);
		tmpList = oFF.XCollectionUtils.singletonList(rangeValue);
	}
	this.submitValues(tmpList);
};
oFF.VdVhMobileController.prototype.handleListSelect = function(vhListView)
{
	var selectedItem = vhListView.getSelectedItem();
	var tmpList = null;
	if (oFF.notNull(selectedItem))
	{
		var optionItem = oFF.FdSimpleItem.create(selectedItem.getName(), null, selectedItem.getText());
		var optionValue = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, optionItem, null);
		tmpList = oFF.XCollectionUtils.singletonList(optionValue);
	}
	this.submitValues(tmpList);
};
oFF.VdVhMobileController.prototype.handleSingleDimensionMemberSelect = function(vhSingleDimensionMember)
{
	var selectedItem = vhSingleDimensionMember.getSelectedItem();
	var tmpList = null;
	if (oFF.notNull(selectedItem))
	{
		var singleDimensionMemberValue = oFF.VdValue.createValue(oFF.VdComparisonOperator.EQUAL, selectedItem, null);
		tmpList = oFF.XCollectionUtils.singletonList(singleDimensionMemberValue);
	}
	this.submitValues(tmpList);
};
oFF.VdVhMobileController.prototype.handleOperatorWorkflowSelect = function(vhOperatorWorkflow)
{
	var firstOperatorItem = vhOperatorWorkflow.getSelectedFromItem();
	var secondOperatorItem = vhOperatorWorkflow.getSelectedToItem();
	var selectedOperator = vhOperatorWorkflow.getSelectedOperatorItem().getCustomObject();
	var tmpList = null;
	if (oFF.notNull(firstOperatorItem))
	{
		var operatorWorkflowValue = this.m_variableModel.createNewValue();
		if (firstOperatorItem.isNull())
		{
			operatorWorkflowValue.setOperator(oFF.VdComparisonOperator.IS_NULL);
		}
		else
		{
			operatorWorkflowValue.setOperator(selectedOperator);
		}
		operatorWorkflowValue.setFirstOperand(firstOperatorItem);
		if (oFF.notNull(secondOperatorItem))
		{
			operatorWorkflowValue.setSecondOperand(secondOperatorItem);
		}
		tmpList = oFF.XCollectionUtils.singletonList(operatorWorkflowValue);
	}
	this.submitValues(tmpList);
};
oFF.VdVhMobileController.prototype.onVhMobileValuesSelected = function(view)
{
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileCalendar.VIEW_NAME))
	{
		this.handleSingleDateSelect(view);
	}
	else if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileList.VIEW_NAME))
	{
		this.handleListSelect(view);
	}
	else if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileMemberSelector.VIEW_NAME))
	{
		this.handleSingleDimensionMemberSelect(view);
	}
};
oFF.VdVhMobileController.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, "VdVhMobileDialogCloseBtn"))
	{
		this.cancelSubmit();
	}
	else if (oFF.XString.isEqual(controlName, "VdVhMobileSingleCalendarDialogOkBtn"))
	{
		var tmpCalView = event.getControl().getParent().getCustomObject();
		this.handleSingleDateSelect(tmpCalView);
	}
	else if (oFF.XString.isEqual(controlName, "VdVhMobileRangeCalendarDialogOkBtn"))
	{
		var tmpRangeCalView = event.getControl().getParent().getCustomObject();
		this.handleRangeDateSelect(tmpRangeCalView);
	}
	else if (oFF.XString.isEqual(controlName, "VdVhMobileDialogWorkflowOkBtn"))
	{
		var tmpOperatorWorkflow = this.m_containerDialog.getCustomObject();
		this.handleOperatorWorkflowSelect(tmpOperatorWorkflow);
	}
	else if (oFF.XString.isEqual(controlName, "VdVhMobileDialogSingleDimensionMemberOkBtn"))
	{
		var tmpView = this.m_containerDialog.getCustomObject();
		tmpView.triggerSelection();
	}
};
oFF.VdVhMobileController.prototype.onVhMobileOperatorWorkflowFinished = function(operatorItem, itemFrom, itemTo)
{
	this.m_containerDialog.getDialogButtonByName("VdVhMobileDialogWorkflowOkBtn").setEnabled(true);
};
oFF.VdVhMobileController.prototype.onVhMobileOperatorWorkflowNavigate = function(currentPageIndex, pageCount)
{
	var isLastPage = currentPageIndex === pageCount - 1;
	this.m_containerDialog.getDialogButtonByName("VdVhMobileDialogWorkflowOkBtn").setVisible(isLastPage);
	if (isLastPage && !this.m_variableModel.isMandatory())
	{
		this.m_containerDialog.getDialogButtonByName("VdVhMobileDialogWorkflowOkBtn").setEnabled(true);
	}
};

oFF.VdVhMobileCalendar = function() {};
oFF.VdVhMobileCalendar.prototype = new oFF.XObject();
oFF.VdVhMobileCalendar.prototype._ff_c = "VdVhMobileCalendar";

oFF.VdVhMobileCalendar.VIEW_NAME = "vhMobileSingleDate";
oFF.VdVhMobileCalendar.create = function(uiMgr, valueFormat, selectedDate, listener)
{
	var obj = new oFF.VdVhMobileCalendar();
	obj.setupExt(uiMgr);
	obj.setSelectionFinishedListener(listener);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(valueFormat))
	{
		obj.setValueFormat(valueFormat);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(selectedDate))
	{
		obj.setStartDate(selectedDate);
	}
	return obj;
};
oFF.VdVhMobileCalendar.prototype.m_listener = null;
oFF.VdVhMobileCalendar.prototype.m_page = null;
oFF.VdVhMobileCalendar.prototype.m_calendar = null;
oFF.VdVhMobileCalendar.prototype.m_clearSelectionBtn = null;
oFF.VdVhMobileCalendar.prototype.setupExt = function(uiMgr)
{
	var genesis = uiMgr.getFreeGenesis();
	this.m_page = genesis.newControl(oFF.UiType.PAGE);
	this.m_page.setName("VdVhMobileCalendarView");
	this.m_page.addCssClass("ffVdVhMobileViewWrapperPage");
	this.m_page.setShowNavButton(false);
	this.m_page.setShowHeader(false);
	var wrapperLayout = this.m_page.setNewContent(oFF.UiType.FLEX_LAYOUT);
	wrapperLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	wrapperLayout.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	wrapperLayout.useMaxSpace();
	wrapperLayout.setPadding(oFF.UiCssBoxEdges.create("8px"));
	this.m_calendar = wrapperLayout.addNewItemOfType(oFF.UiType.CALENDAR);
	this.m_calendar.setName("VdVhMobileCalendarViewCalendar");
	this.m_calendar.setWidth(oFF.UiCssLength.create("100%"));
	this.m_calendar.setPadding(oFF.UiCssBoxEdges.create("0px"));
	this.m_calendar.registerOnChange(this);
	this.m_clearSelectionBtn = wrapperLayout.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_clearSelectionBtn.setName("VdVhMobileCalendarClearSelectionBtn");
	this.m_clearSelectionBtn.setText(uiMgr.getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_clearSelectionBtn.setHeight(oFF.UiCssLength.create("40px"));
	this.m_clearSelectionBtn.setPadding(oFF.UiCssBoxEdges.create("0px"));
	this.m_clearSelectionBtn.setVisible(false);
	this.m_clearSelectionBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_clearSelectionBtn.registerOnPress(this);
};
oFF.VdVhMobileCalendar.prototype.releaseObject = function()
{
	this.m_clearSelectionBtn = oFF.XObjectExt.release(this.m_clearSelectionBtn);
	this.m_calendar = oFF.XObjectExt.release(this.m_calendar);
	this.m_page = oFF.XObjectExt.release(this.m_page);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileCalendar.prototype.getPage = function()
{
	return this.m_page;
};
oFF.VdVhMobileCalendar.prototype.getViewName = function()
{
	return oFF.VdVhMobileCalendar.VIEW_NAME;
};
oFF.VdVhMobileCalendar.prototype.setSelectionFinishedListener = function(listener)
{
	this.m_listener = listener;
};
oFF.VdVhMobileCalendar.prototype.setValueFormat = function(valueFormat)
{
	if (oFF.notNull(this.m_calendar))
	{
		this.m_calendar.setValueFormat(valueFormat);
	}
};
oFF.VdVhMobileCalendar.prototype.setStartDate = function(startDate)
{
	if (oFF.notNull(this.m_calendar))
	{
		this.m_calendar.setStartDate(startDate);
	}
};
oFF.VdVhMobileCalendar.prototype.getStartDate = function()
{
	if (oFF.notNull(this.m_calendar))
	{
		return this.m_calendar.getStartDate();
	}
	return null;
};
oFF.VdVhMobileCalendar.prototype.setIsMandatory = function(isMandatory)
{
	this.m_clearSelectionBtn.setVisible(!isMandatory);
};
oFF.VdVhMobileCalendar.prototype.onChange = function(event)
{
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onVhMobileValuesSelected(this);
	}
};
oFF.VdVhMobileCalendar.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, "VdVhMobileCalendarClearSelectionBtn"))
	{
		this.setStartDate(null);
	}
};

oFF.VdVhMobileList = function() {};
oFF.VdVhMobileList.prototype = new oFF.XObject();
oFF.VdVhMobileList.prototype._ff_c = "VdVhMobileList";

oFF.VdVhMobileList.VIEW_NAME = "vhMobileList";
oFF.VdVhMobileList.create = function(uiMgr, items, selectedItemName, listener)
{
	var obj = new oFF.VdVhMobileList();
	obj.setupExt(uiMgr);
	obj.setItems(items);
	obj.setSelectionFinishedListener(listener);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(selectedItemName))
	{
		obj.setSelectedItemName(selectedItemName);
	}
	return obj;
};
oFF.VdVhMobileList.prototype.m_listener = null;
oFF.VdVhMobileList.prototype.m_page = null;
oFF.VdVhMobileList.prototype.m_list = null;
oFF.VdVhMobileList.prototype.m_items = null;
oFF.VdVhMobileList.prototype.setupExt = function(uiMgr)
{
	var genesis = uiMgr.getFreeGenesis();
	this.m_page = genesis.newControl(oFF.UiType.PAGE);
	this.m_page.setName("VdVhMobileListView");
	this.m_page.addCssClass("ffVdVhMobileViewWrapperPage");
	this.m_page.setShowNavButton(false);
	this.m_page.setShowHeader(false);
	this.m_list = this.m_page.setNewContent(oFF.UiType.LIST);
	this.m_list.setName("VdVhMobileListViewList");
	this.m_list.useMaxSpace();
	this.m_list.setBorderWidth(oFF.UiCssBoxEdges.create("0px"));
	this.m_list.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
};
oFF.VdVhMobileList.prototype.releaseObject = function()
{
	this.m_list = oFF.XObjectExt.release(this.m_list);
	this.m_page = oFF.XObjectExt.release(this.m_page);
	if (oFF.notNull(this.m_items) && this.m_items.hasElements())
	{
		this.m_items.clear();
	}
	this.m_items = oFF.XObjectExt.release(this.m_items);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileList.prototype.getPage = function()
{
	return this.m_page;
};
oFF.VdVhMobileList.prototype.getViewName = function()
{
	return oFF.VdVhMobileList.VIEW_NAME;
};
oFF.VdVhMobileList.prototype.setSelectionFinishedListener = function(listener)
{
	this.m_listener = listener;
};
oFF.VdVhMobileList.prototype.setItems = function(items)
{
	this.generateListItems(items);
};
oFF.VdVhMobileList.prototype.setSelectedItemName = function(selectedName)
{
	if (oFF.notNull(this.m_list) && this.m_list.hasItems() === true)
	{
		this.m_list.setSelectedName(selectedName);
	}
};
oFF.VdVhMobileList.prototype.getSelectedItem = function()
{
	if (oFF.notNull(this.m_list) && this.m_list.getSelectedItem() !== null)
	{
		return this.m_list.getSelectedItem().getCustomObject();
	}
	return null;
};
oFF.VdVhMobileList.prototype.generateListItems = function(items)
{
	if (oFF.notNull(this.m_list))
	{
		this.m_list.clearItems();
		if (oFF.notNull(items) && items.hasElements())
		{
			var itemIterator = items.getIterator();
			while (itemIterator.hasNext())
			{
				var tmpItem = itemIterator.next();
				var tmpListItem = this.m_list.addNewItem();
				tmpListItem.setName(tmpItem.getName());
				tmpListItem.setText(tmpItem.getText());
				tmpListItem.setCustomObject(tmpItem);
				tmpListItem.registerOnClick(this);
			}
		}
	}
};
oFF.VdVhMobileList.prototype.onClick = function(event)
{
	var selectedItem = this.m_list.getSelectedItem();
	if (oFF.notNull(selectedItem))
	{
		this.m_listener.onVhMobileValuesSelected(this);
	}
};

oFF.VdVhMobileOperatorWorkflow = function() {};
oFF.VdVhMobileOperatorWorkflow.prototype = new oFF.XObject();
oFF.VdVhMobileOperatorWorkflow.prototype._ff_c = "VdVhMobileOperatorWorkflow";

oFF.VdVhMobileOperatorWorkflow.NAVIGATION_CONTAINER_NAME = "VdVhMobileWorkflowOperatorNavContainer";
oFF.VdVhMobileOperatorWorkflow.NEXT_PAGE_BUTTON_TAG = "ffVdVhOperatorWorkflowPageNextButton";
oFF.VdVhMobileOperatorWorkflow.PREV_MEMBER_LABEL_NAME = "VdVhMobileWorkflowOperatorPrevMemberNameLbl";
oFF.VdVhMobileOperatorWorkflow.WORKFLOW_NAME = "vhMobileWorkflowOperator";
oFF.VdVhMobileOperatorWorkflow.createWithVariableModel = function(context, variableModel, vdConfiguration, listener)
{
	var obj = new oFF.VdVhMobileOperatorWorkflow();
	obj.setupWithVariableModel(context, variableModel, vdConfiguration);
	obj.setListener(listener);
	return obj;
};
oFF.VdVhMobileOperatorWorkflow.prototype.m_uiMgr = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_navContainer = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_views = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_currentViewIndex = 0;
oFF.VdVhMobileOperatorWorkflow.prototype.m_operatorListView = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_fromMemberSelectorView = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_toMemberSelectorView = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_listener = null;
oFF.VdVhMobileOperatorWorkflow.prototype.m_isSingleSelectionWorkflow = false;
oFF.VdVhMobileOperatorWorkflow.prototype.m_isVariableMandatory = false;
oFF.VdVhMobileOperatorWorkflow.prototype.setupWithVariableModel = function(context, variableModel, vdConfiguration)
{
	this.m_views = oFF.XList.create();
	this.m_currentViewIndex = 0;
	this.m_isSingleSelectionWorkflow = true;
	this.m_isVariableMandatory = variableModel.isMandatory();
	this.m_uiMgr = context.getUiManager();
	var genesis = this.m_uiMgr.getFreeGenesis();
	this.m_navContainer = genesis.newControl(oFF.UiType.NAVIGATION_CONTAINER);
	this.m_navContainer.setName(oFF.VdVhMobileOperatorWorkflow.NAVIGATION_CONTAINER_NAME);
	this.m_navContainer.registerOnBack(this);
	var supportedOperatorsList = oFF.XList.create();
	var supportedOperatorsIterator = variableModel.getSupportedComparisonOperators().getIterator();
	while (supportedOperatorsIterator.hasNext())
	{
		var tmpOperator = supportedOperatorsIterator.next();
		var newItem = oFF.VdVhMobileListItem.create(tmpOperator.getName(), tmpOperator.getLongText(this.m_uiMgr.getLocalization()), tmpOperator);
		supportedOperatorsList.add(newItem);
	}
	var selectedFromItem = null;
	var selectedToItem = null;
	var selectedOperatorName = null;
	if (variableModel.getValues().size() > 0)
	{
		var selectedValue = variableModel.getValues().get(0);
		selectedOperatorName = selectedValue.getOperator().getName();
		selectedFromItem = selectedValue.getFirstOperand();
		selectedToItem = selectedValue.getSecondOperand();
	}
	this.m_operatorListView = oFF.VdVhMobileList.create(this.m_uiMgr, supportedOperatorsList, selectedOperatorName, this);
	this.m_operatorListView.getPage().setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_OPERATOR));
	var operatorNextPageBtn = this.m_operatorListView.getPage().addNewPageButton();
	operatorNextPageBtn.setTag(oFF.VdVhMobileOperatorWorkflow.NEXT_PAGE_BUTTON_TAG);
	operatorNextPageBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	operatorNextPageBtn.setIcon("navigation-right-arrow");
	operatorNextPageBtn.setTooltip(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP));
	operatorNextPageBtn.registerOnPress(this);
	operatorNextPageBtn.setVisible(false);
	this.addView(this.m_operatorListView);
	this.m_fromMemberSelectorView = oFF.VdVhMobileMemberSelector.create(context, variableModel.getVariable(), vdConfiguration, selectedFromItem, this);
	this.m_fromMemberSelectorView.getPage().setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER));
	var firstMemberNextPageBtn = this.m_fromMemberSelectorView.getPage().addNewPageButton();
	firstMemberNextPageBtn.setTag(oFF.VdVhMobileOperatorWorkflow.NEXT_PAGE_BUTTON_TAG);
	firstMemberNextPageBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	firstMemberNextPageBtn.setIcon("navigation-right-arrow");
	firstMemberNextPageBtn.setTooltip(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_NEXT_PAGE_TOOLTIP));
	firstMemberNextPageBtn.registerOnPress(this);
	firstMemberNextPageBtn.setVisible(false);
	this.addView(this.m_fromMemberSelectorView);
	this.m_toMemberSelectorView = oFF.VdVhMobileMemberSelector.create(context, variableModel.getVariable(), vdConfiguration, selectedToItem, this);
	this.m_toMemberSelectorView.getPage().setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER2));
	var subHeaderFlexLayout = this.m_toMemberSelectorView.getPage().setNewSubHeader(oFF.UiType.FLEX_LAYOUT);
	subHeaderFlexLayout.setPadding(oFF.UiCssBoxEdges.create("10px"));
	subHeaderFlexLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	var previousLbl = subHeaderFlexLayout.addNewItemOfType(oFF.UiType.LABEL);
	previousLbl.setText(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_PREVIOUS_SELECTION));
	subHeaderFlexLayout.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("5px"));
	var prevMemberNameLbl = subHeaderFlexLayout.addNewItemOfType(oFF.UiType.LABEL);
	prevMemberNameLbl.setName(oFF.VdVhMobileOperatorWorkflow.PREV_MEMBER_LABEL_NAME);
	prevMemberNameLbl.setFontWeight(oFF.UiFontWeight.BOLD);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(selectedOperatorName))
	{
		operatorNextPageBtn.setVisible(true);
	}
	if (oFF.notNull(selectedFromItem))
	{
		firstMemberNextPageBtn.setVisible(true);
		prevMemberNameLbl.setText(selectedFromItem.getText());
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.releaseObject = function()
{
	this.m_uiMgr = null;
	this.m_views.clear();
	this.m_views = oFF.XObjectExt.release(this.m_views);
	this.m_operatorListView = oFF.XObjectExt.release(this.m_operatorListView);
	this.m_fromMemberSelectorView = oFF.XObjectExt.release(this.m_fromMemberSelectorView);
	this.m_toMemberSelectorView = oFF.XObjectExt.release(this.m_toMemberSelectorView);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileOperatorWorkflow.prototype.start = function()
{
	if (this.m_views.hasElements())
	{
		var tmpView = this.m_views.get(0);
		var viewPage = tmpView.getPage();
		viewPage.setShowHeader(true);
		viewPage.setShowNavButton(false);
		this.m_navContainer.pushPage(viewPage);
		this.m_currentViewIndex = 0;
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.getWorkflowView = function()
{
	return this.m_navContainer;
};
oFF.VdVhMobileOperatorWorkflow.prototype.addView = function(view)
{
	this.m_views.add(view);
};
oFF.VdVhMobileOperatorWorkflow.prototype.getViews = function()
{
	return this.m_views;
};
oFF.VdVhMobileOperatorWorkflow.prototype.getSelectedOperatorItem = function()
{
	return this.m_operatorListView.getSelectedItem();
};
oFF.VdVhMobileOperatorWorkflow.prototype.getSelectedFromItem = function()
{
	return this.m_fromMemberSelectorView.getSelectedItem();
};
oFF.VdVhMobileOperatorWorkflow.prototype.getSelectedToItem = function()
{
	if (!this.m_isSingleSelectionWorkflow)
	{
		return this.m_toMemberSelectorView.getSelectedItem();
	}
	return null;
};
oFF.VdVhMobileOperatorWorkflow.prototype.triggerSelection = function()
{
	if (oFF.notNull(this.m_fromMemberSelectorView))
	{
		this.m_fromMemberSelectorView.triggerSelection();
	}
	if (!this.m_isSingleSelectionWorkflow && oFF.notNull(this.m_toMemberSelectorView))
	{
		this.m_toMemberSelectorView.triggerSelection();
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.setListener = function(listener)
{
	this.m_listener = listener;
};
oFF.VdVhMobileOperatorWorkflow.prototype.goToNextPage = function()
{
	if (this.m_currentViewIndex === 0)
	{
		this.checkWorkflowType();
		this.adjustViewsToWorkflowType();
	}
	if (this.m_currentViewIndex === 1)
	{
		this.updatePreviousSelectionLabel();
	}
	this.toggleNextButtons();
	this.m_currentViewIndex++;
	var tmpView = this.m_views.get(this.m_currentViewIndex);
	var viewPage = tmpView.getPage();
	viewPage.setShowHeader(true);
	viewPage.setShowNavButton(true);
	this.m_navContainer.pushPage(viewPage);
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onVhMobileOperatorWorkflowNavigate(this.m_currentViewIndex, this.m_views.size());
	}
	this.finishWorkflow();
};
oFF.VdVhMobileOperatorWorkflow.prototype.checkWorkflowType = function()
{
	var selectedOperator = this.m_operatorListView.getSelectedItem().getCustomObject();
	if (selectedOperator === oFF.VdComparisonOperator.BETWEEN || selectedOperator === oFF.VdComparisonOperator.NOT_BETWEEN)
	{
		this.m_isSingleSelectionWorkflow = false;
	}
	else
	{
		this.m_isSingleSelectionWorkflow = true;
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.adjustViewsToWorkflowType = function()
{
	if (this.m_isSingleSelectionWorkflow === false && this.m_views.size() === 2)
	{
		this.addView(this.m_toMemberSelectorView);
		this.m_fromMemberSelectorView.getPage().setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER1));
	}
	else if (this.m_isSingleSelectionWorkflow === true && this.m_views.size() === 3 && this.m_views.get(2) === this.m_toMemberSelectorView)
	{
		this.m_views.removeAt(2);
		this.m_fromMemberSelectorView.getPage().setTitle(this.m_uiMgr.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_VH_MOBILE_OPERATOR_WORKFLOW_SELECT_MEMBER));
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.toggleNextButtons = function()
{
	this.m_operatorListView.getPage().getPageButton(0).setVisible(this.m_operatorListView.getSelectedItem() !== null);
	var hasMorePages = this.getViews().size() > 2;
	if (this.m_isVariableMandatory)
	{
		var hasFromSelectedItem = this.m_fromMemberSelectorView.getSelectedItem() !== null;
		this.m_fromMemberSelectorView.getPage().getPageButton(0).setVisible(hasFromSelectedItem && hasMorePages);
	}
	else
	{
		this.m_fromMemberSelectorView.getPage().getPageButton(0).setVisible(hasMorePages);
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.updatePreviousSelectionLabel = function()
{
	var fdItem = this.m_fromMemberSelectorView.getSelectedItem();
	var subHeaderFlexLayout = this.m_toMemberSelectorView.getPage().getSubHeader();
	var prevMemberNameLbl = subHeaderFlexLayout.getItemByName(oFF.VdVhMobileOperatorWorkflow.PREV_MEMBER_LABEL_NAME);
	if (oFF.notNull(fdItem))
	{
		prevMemberNameLbl.setText(fdItem.getText());
	}
	else
	{
		prevMemberNameLbl.setText("-");
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.finishWorkflow = function()
{
	if (this.m_currentViewIndex === this.m_views.size() - 1 && this.m_views.size() === 2 && this.m_fromMemberSelectorView.getSelectedItem() !== null)
	{
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onVhMobileOperatorWorkflowFinished(this.m_operatorListView.getSelectedItem(), this.m_fromMemberSelectorView.getSelectedItem(), null);
		}
	}
	else if (this.m_currentViewIndex === this.m_views.size() - 1 && this.m_views.size() === 3 && this.m_toMemberSelectorView.getSelectedItem() !== null)
	{
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onVhMobileOperatorWorkflowFinished(this.m_operatorListView.getSelectedItem(), this.m_fromMemberSelectorView.getSelectedItem(), this.m_toMemberSelectorView.getSelectedItem());
		}
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.onVhMobileValuesSelected = function(view)
{
	if (oFF.XString.isEqual(view.getViewName(), oFF.VdVhMobileMemberSelector.VIEW_NAME) && this.m_currentViewIndex === 1)
	{
		this.updatePreviousSelectionLabel();
	}
	if (this.m_currentViewIndex === this.m_views.size() - 1)
	{
		this.finishWorkflow();
	}
	else
	{
		this.goToNextPage();
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.onBack = function(event)
{
	this.m_currentViewIndex = this.m_currentViewIndex - 1;
	this.toggleNextButtons();
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onVhMobileOperatorWorkflowNavigate(this.m_currentViewIndex, this.m_views.size());
	}
};
oFF.VdVhMobileOperatorWorkflow.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (oFF.XString.isEqual(control.getTag(), oFF.VdVhMobileOperatorWorkflow.NEXT_PAGE_BUTTON_TAG))
	{
		this.goToNextPage();
	}
};

oFF.VdVhMobileRangeCalendar = function() {};
oFF.VdVhMobileRangeCalendar.prototype = new oFF.XObject();
oFF.VdVhMobileRangeCalendar.prototype._ff_c = "VdVhMobileRangeCalendar";

oFF.VdVhMobileRangeCalendar.VIEW_NAME = "vhMobileRangeCalendar";
oFF.VdVhMobileRangeCalendar.create = function(uiMgr, valueFormat, startDate, endDate, listener)
{
	var obj = new oFF.VdVhMobileRangeCalendar();
	obj.setupExt(uiMgr);
	obj.setSelectionFinishedListener(listener);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(valueFormat))
	{
		obj.setValueFormat(valueFormat);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(startDate))
	{
		obj.setStartDate(startDate);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(endDate))
	{
		obj.setEndDate(endDate);
	}
	return obj;
};
oFF.VdVhMobileRangeCalendar.prototype.m_listener = null;
oFF.VdVhMobileRangeCalendar.prototype.m_page = null;
oFF.VdVhMobileRangeCalendar.prototype.m_calendar = null;
oFF.VdVhMobileRangeCalendar.prototype.m_clearSelectionBtn = null;
oFF.VdVhMobileRangeCalendar.prototype.setupExt = function(uiMgr)
{
	var genesis = uiMgr.getFreeGenesis();
	this.m_page = genesis.newControl(oFF.UiType.PAGE);
	this.m_page.setName("VdVhMobileRangeCalendarView");
	this.m_page.addCssClass("ffVdVhMobileViewWrapperPage");
	this.m_page.setShowNavButton(false);
	this.m_page.setShowHeader(false);
	var wrapperLayout = this.m_page.setNewContent(oFF.UiType.FLEX_LAYOUT);
	wrapperLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	wrapperLayout.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	wrapperLayout.useMaxSpace();
	wrapperLayout.setPadding(oFF.UiCssBoxEdges.create("8px"));
	this.m_calendar = wrapperLayout.addNewItemOfType(oFF.UiType.CALENDAR);
	this.m_calendar.setName("VdVhMobileRangeCalendarViewCalendar");
	this.m_calendar.setWidth(oFF.UiCssLength.create("100%"));
	this.m_calendar.setPadding(oFF.UiCssBoxEdges.create("0px"));
	this.m_calendar.setIntervalSelection(true);
	this.m_calendar.registerOnChange(this);
	this.m_clearSelectionBtn = wrapperLayout.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_clearSelectionBtn.setName("VdVhMobileRangeCalendarClearSelectionBtn");
	this.m_clearSelectionBtn.setText(uiMgr.getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION));
	this.m_clearSelectionBtn.setHeight(oFF.UiCssLength.create("40px"));
	this.m_clearSelectionBtn.setPadding(oFF.UiCssBoxEdges.create("0px"));
	this.m_clearSelectionBtn.setVisible(false);
	this.m_clearSelectionBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_clearSelectionBtn.registerOnPress(this);
};
oFF.VdVhMobileRangeCalendar.prototype.releaseObject = function()
{
	this.m_clearSelectionBtn = oFF.XObjectExt.release(this.m_clearSelectionBtn);
	this.m_calendar = oFF.XObjectExt.release(this.m_calendar);
	this.m_page = oFF.XObjectExt.release(this.m_page);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileRangeCalendar.prototype.getPage = function()
{
	return this.m_page;
};
oFF.VdVhMobileRangeCalendar.prototype.getViewName = function()
{
	return oFF.VdVhMobileRangeCalendar.VIEW_NAME;
};
oFF.VdVhMobileRangeCalendar.prototype.setSelectionFinishedListener = function(listener)
{
	this.m_listener = listener;
};
oFF.VdVhMobileRangeCalendar.prototype.setValueFormat = function(valueFormat)
{
	if (oFF.notNull(this.m_calendar))
	{
		this.m_calendar.setValueFormat(valueFormat);
	}
};
oFF.VdVhMobileRangeCalendar.prototype.setStartDate = function(startDate)
{
	if (oFF.notNull(this.m_calendar))
	{
		this.m_calendar.setStartDate(startDate);
	}
};
oFF.VdVhMobileRangeCalendar.prototype.getStartDate = function()
{
	if (oFF.notNull(this.m_calendar))
	{
		return this.m_calendar.getStartDate();
	}
	return null;
};
oFF.VdVhMobileRangeCalendar.prototype.setEndDate = function(endDate)
{
	if (oFF.notNull(this.m_calendar))
	{
		this.m_calendar.setEndDate(endDate);
	}
};
oFF.VdVhMobileRangeCalendar.prototype.getEndDate = function()
{
	if (oFF.notNull(this.m_calendar))
	{
		return this.m_calendar.getEndDate();
	}
	return null;
};
oFF.VdVhMobileRangeCalendar.prototype.setIsMandatory = function(isMandatory)
{
	this.m_clearSelectionBtn.setVisible(!isMandatory);
};
oFF.VdVhMobileRangeCalendar.prototype.onChange = function(event)
{
	if (oFF.notNull(this.m_listener))
	{
		var endDate = this.m_calendar.getEndDate();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(endDate) === true)
		{
			this.m_listener.onVhMobileValuesSelected(this);
		}
	}
};
oFF.VdVhMobileRangeCalendar.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, "VdVhMobileRangeCalendarClearSelectionBtn"))
	{
		this.setStartDate(null);
		this.setEndDate(null);
	}
};

oFF.VdOrcaFacade = function() {};
oFF.VdOrcaFacade.prototype = new oFF.XObject();
oFF.VdOrcaFacade.prototype._ff_c = "VdOrcaFacade";

oFF.VdOrcaFacade.ANCHOR_NAME = "VdTokenRoot";
oFF.VdOrcaFacade.createFacadeToken = function(token, helper, linkedVariableNames)
{
	var obj = new oFF.VdOrcaFacade();
	obj.setToken(token);
	obj.setupExt(helper, linkedVariableNames);
	return obj;
};
oFF.VdOrcaFacade.createFacadeDisplay = function(display, helper, linkedVariableNames)
{
	var obj = new oFF.VdOrcaFacade();
	obj.setDisplay(display);
	obj.setupExt(helper, linkedVariableNames);
	return obj;
};
oFF.VdOrcaFacade.configureVariantManagement = function(processor, config)
{
	var application = processor.getApplication();
	var dataSource = processor.getDataSource();
	if (oFF.notNull(dataSource))
	{
		var systemDescription = application.getSystemLandscape().getSystemDescription(dataSource.getSystemName());
		if (oFF.notNull(systemDescription))
		{
			var isS4 = systemDescription.getProperties().getBooleanByKeyExt("FPA_IS_S4_HANA", false);
			var isCloud = oFF.XString.isEqual(systemDescription.getProperties().getStringByKeyExt("FPA_CONNECTION_TYPE", null), "CLOUD");
			var sacEmbedded = oFF.UiIntegrationInfoCenter.getCenter().isEmbedded();
			var disableManagement = isS4 && (isCloud || sacEmbedded);
			config.setVariantManagementEnabled(!disableManagement);
		}
	}
};
oFF.VdOrcaFacade.prototype.m_vdController = null;
oFF.VdOrcaFacade.prototype.m_vdToken = null;
oFF.VdOrcaFacade.prototype.m_vdDisplay = null;
oFF.VdOrcaFacade.prototype.m_uiHelper = null;
oFF.VdOrcaFacade.prototype.m_linkedVariableNames = null;
oFF.VdOrcaFacade.prototype.m_tokenGenesis = null;
oFF.VdOrcaFacade.prototype.m_originalRenderListener = null;
oFF.VdOrcaFacade.prototype.m_originalSubmitListener = null;
oFF.VdOrcaFacade.prototype.setupExt = function(helper, linkedVariableNames)
{
	this.m_vdController.registerRenderListener(this);
	this.m_vdController.registerSubmitListener(this);
	this.m_uiHelper = helper;
	this.m_linkedVariableNames = linkedVariableNames;
};
oFF.VdOrcaFacade.prototype.setToken = function(token)
{
	this.m_vdController = this.m_vdToken = token;
};
oFF.VdOrcaFacade.prototype.setDisplay = function(display)
{
	this.m_vdController = this.m_vdDisplay = display;
};
oFF.VdOrcaFacade.prototype.releaseObject = function()
{
	this.m_vdController = oFF.XObjectExt.release(this.m_vdController);
	this.m_vdToken = null;
	this.m_vdDisplay = null;
	this.m_uiHelper = oFF.XObjectExt.release(this.m_uiHelper);
	this.m_tokenGenesis = oFF.XObjectExt.release(this.m_tokenGenesis);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdOrcaFacade.prototype.isOpen = function()
{
	return oFF.notNull(this.m_vdDisplay) && this.m_vdDisplay.isOpen();
};
oFF.VdOrcaFacade.prototype.open = function()
{
	if (oFF.notNull(this.m_vdDisplay))
	{
		this.m_vdDisplay.open();
	}
};
oFF.VdOrcaFacade.prototype.close = function()
{
	if (oFF.notNull(this.m_vdDisplay))
	{
		this.m_vdDisplay.close();
	}
};
oFF.VdOrcaFacade.prototype.render = function()
{
	if (oFF.notNull(this.m_vdToken))
	{
		this.m_vdToken.render();
	}
};
oFF.VdOrcaFacade.prototype.buildUiOnControl = function(control)
{
	if (oFF.notNull(this.m_vdToken))
	{
		this.m_tokenGenesis = oFF.UiGenesis.create(control);
		this.m_vdToken.buildOlapDialogUi(this.m_tokenGenesis);
	}
};
oFF.VdOrcaFacade.prototype.buildUiOnAnchorId = function(anchorId)
{
	if (oFF.notNull(this.m_vdToken))
	{
		var childProcess = this.m_vdToken.getContext().getUiManager().getProcess().newChildProcess(oFF.ProcessType.SERVICE);
		var subUiMgr = oFF.UiManagerFactory.newInstance(childProcess);
		subUiMgr.setNativeAnchor(oFF.VdOrcaFacade.ANCHOR_NAME, anchorId, null);
		this.m_tokenGenesis = subUiMgr.getGenesis();
		this.m_vdToken.buildOlapDialogUi(this.m_tokenGenesis);
	}
};
oFF.VdOrcaFacade.prototype.buildUiOnAnchorObject = function(anchor)
{
	if (oFF.notNull(this.m_vdToken))
	{
		var childProcess = this.m_vdToken.getContext().getUiManager().getProcess().newChildProcess(oFF.ProcessType.SERVICE);
		var subUiMgr = oFF.UiManagerFactory.newInstance(childProcess);
		subUiMgr.setNativeAnchor(oFF.VdOrcaFacade.ANCHOR_NAME, null, anchor);
		this.m_tokenGenesis = subUiMgr.getGenesis();
		this.m_vdToken.buildOlapDialogUi(this.m_tokenGenesis);
	}
};
oFF.VdOrcaFacade.prototype.getController = function()
{
	return this.m_vdController;
};
oFF.VdOrcaFacade.prototype.getView = function()
{
	return this.m_vdController.getView();
};
oFF.VdOrcaFacade.prototype.getVariableProcessor = function()
{
	return this.m_vdController.getVariableProcessor();
};
oFF.VdOrcaFacade.prototype.attemptSubmit = function()
{
	this.m_vdController.attemptSubmit();
};
oFF.VdOrcaFacade.prototype.onRenderDone = function(root)
{
	this.m_uiHelper.addOrcaSpecificUi();
	if (oFF.notNull(this.m_originalRenderListener))
	{
		this.m_originalRenderListener.onRenderDone(root);
	}
};
oFF.VdOrcaFacade.prototype.exportVariablesAsString = function()
{
	return oFF.PrUtils.serialize(this.exportVariablesAsJson(), false, false, 0);
};
oFF.VdOrcaFacade.prototype.exportVariablesAsJson = function()
{
	return oFF.VdOrcaValueParser.exportVariables(this.m_vdController.getVariableProcessor(), this.m_vdController.getCleanedValues(), this.m_linkedVariableNames);
};
oFF.VdOrcaFacade.prototype.isWidgetSelected = function()
{
	return this.m_uiHelper.isWidgetSelected();
};
oFF.VdOrcaFacade.prototype.isForcePrompt = function()
{
	return this.m_uiHelper.isForcePrompt();
};
oFF.VdOrcaFacade.prototype.isDisablingExitVariables = function()
{
	return this.m_uiHelper.isDisablingExitVariables();
};
oFF.VdOrcaFacade.prototype.isDisablingDynamicVariables = function()
{
	return this.m_uiHelper.isDisablingDynamicVariables();
};
oFF.VdOrcaFacade.prototype.supportsStoryFilterOptimization = function(varName)
{
	return this.m_vdController.supportsStoryFilterOptimization(varName);
};
oFF.VdOrcaFacade.prototype.performStoryFilterOptimizationWorkflow = function(varName)
{
	this.m_vdController.performStoryFilterOptimizationWorkflow(varName);
};
oFF.VdOrcaFacade.prototype.performStoryFilterOptimizationWorkflowWithCallback = function(varName, listener)
{
	this.m_vdController.performStoryFilterOptimizationWorkflowWithCallback(varName, listener);
};
oFF.VdOrcaFacade.prototype.registerRenderListener = function(listener)
{
	this.m_originalRenderListener = listener;
};
oFF.VdOrcaFacade.prototype.registerReinitListener = function(listener)
{
	this.m_vdController.registerReinitListener(listener);
};
oFF.VdOrcaFacade.prototype.registerSubmitListener = function(listener)
{
	this.m_originalSubmitListener = listener;
};
oFF.VdOrcaFacade.prototype.getSubmitListener = function()
{
	return this.m_originalSubmitListener;
};
oFF.VdOrcaFacade.prototype.onBeforeSubmit = function(values, valuesJson)
{
	this.getSubmitListener().onBeforeSubmit(values, valuesJson);
};
oFF.VdOrcaFacade.prototype.onAfterSubmit = function(success, extResult, values, valuesJson)
{
	this.getSubmitListener().onAfterSubmit(success, extResult, values, valuesJson);
};

oFF.OrcaLinkVarSubmitCallback = function() {};
oFF.OrcaLinkVarSubmitCallback.prototype = new oFF.XObjectExt();
oFF.OrcaLinkVarSubmitCallback.prototype._ff_c = "OrcaLinkVarSubmitCallback";

oFF.OrcaLinkVarSubmitCallback.createCallback = function(original, queryManager)
{
	var obj = new oFF.OrcaLinkVarSubmitCallback();
	obj.m_original = original;
	obj.m_queryManager = queryManager;
	return obj;
};
oFF.OrcaLinkVarSubmitCallback.prototype.m_original = null;
oFF.OrcaLinkVarSubmitCallback.prototype.m_queryManager = null;
oFF.OrcaLinkVarSubmitCallback.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.m_original.onQueryManagerSubmit(this, this.m_queryManager, extResult, result, customIdentifier);
};
oFF.OrcaLinkVarSubmitCallback.prototype.releaseObject = function()
{
	this.m_original = null;
	this.m_queryManager = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};

oFF.OrcaLinkVarValueHelpAbstract = function() {};
oFF.OrcaLinkVarValueHelpAbstract.prototype = new oFF.OlapUiValueHelpVariable();
oFF.OrcaLinkVarValueHelpAbstract.prototype._ff_c = "OrcaLinkVarValueHelpAbstract";

oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT = 4000;
oFF.OrcaLinkVarValueHelpAbstract.ID_MAIN = "main";
oFF.OrcaLinkVarValueHelpAbstract.ID_LINK = "link";
oFF.OrcaLinkVarValueHelpAbstract.prototype.m_linkedVariables = null;
oFF.OrcaLinkVarValueHelpAbstract.prototype.m_nodeRepo = null;
oFF.OrcaLinkVarValueHelpAbstract.prototype.setupLink = function(mainVariable, linkedVariables)
{
	oFF.OlapUiValueHelpVariable.prototype.setupExt.call( this , mainVariable);
	this.m_linkedVariables = linkedVariables;
	this.m_nodeRepo = oFF.XHashMapByString.create();
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.releaseObject = function()
{
	this.m_linkedVariables = oFF.XObjectExt.release(this.m_linkedVariables);
	this.m_nodeRepo = oFF.XObjectExt.release(this.m_nodeRepo);
	oFF.OlapUiValueHelpVariable.prototype.releaseObject.call( this );
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.getRepoMapping = function(keyValue)
{
	var mapping = this.m_nodeRepo.getByKey(keyValue);
	if (oFF.isNull(mapping))
	{
		mapping = oFF.XList.create();
		this.m_nodeRepo.put(keyValue, mapping);
	}
	return mapping;
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.supportsAdditionalPresentations = function()
{
	return false;
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.getNoResultMessageTag = function()
{
	return oFF.VariableDialogI18n.I18N_VD_LINKED_VARIABLE_NO_RESULTS;
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.processValueHelp = function(startPage, endPage, pageSize, fields, readMode, listener, customIdentifier)
{
	var data = oFF.OrcaLinkValueHelpProxyData.createForValueHelp(listener, customIdentifier);
	var pageCount = oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT / pageSize;
	if (oFF.XMath.mod(oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT, pageSize) !== 0)
	{
		pageCount = pageCount + 1;
	}
	var newEndPage = startPage + pageCount - 1;
	data.increaseRequestCount();
	var identifier = oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_MAIN, data);
	oFF.OlapUiValueHelpVariable.prototype.processValueHelp.call( this , startPage, newEndPage, pageSize, fields, readMode, this, identifier);
	for (var i = 0; i < this.m_linkedVariables.size(); i++)
	{
		data.increaseRequestCount();
		var variable = this.m_linkedVariables.get(i);
		var linkFields = this.getRequestedFields(variable.getDimension());
		var ident = oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_LINK, data);
		this.processValueHelpForVariable(variable, startPage, newEndPage, pageSize, linkFields, readMode, this, ident);
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.processSearch = function(searchPattern, searchFields, fields, pageSize, loadParentNodes, readMode, listener, customIdentifier)
{
	var mainVariable = this.m_valueRequestObject;
	var mainVarDimension = mainVariable.getDimension();
	var readModeInternal = readMode === oFF.OlapUiReadMode.MASTER && (!this.getSystemType(mainVarDimension).isTypeOf(oFF.SystemType.ABAP) || mainVarDimension.getHasCheckTable()) ? oFF.OlapUiReadMode.MASTER : oFF.OlapUiReadMode.BOOKED;
	var data = oFF.OrcaLinkValueHelpProxyData.createForValueHelp(listener, customIdentifier);
	data.setSearch(true);
	data.increaseRequestCount();
	var identifier = oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_MAIN, data);
	oFF.OlapUiValueHelpVariable.prototype.processSearch.call( this , searchPattern, searchFields, fields, oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT, false, readModeInternal, this, identifier);
	var isSearchForKey = searchFields.contains(mainVarDimension.getSelectorKeyField());
	var isSearchForDisplayKey = searchFields.contains(mainVarDimension.getSelectorDisplayKeyField());
	var isSearchForText = searchFields.contains(mainVarDimension.getSelectorTextField());
	for (var i = 0; i < this.m_linkedVariables.size(); i++)
	{
		var variable = this.m_linkedVariables.get(i);
		var dimension = variable.getDimension();
		var searchLinkFields = oFF.XList.create();
		if (isSearchForKey && !searchLinkFields.contains(dimension.getSelectorKeyField()))
		{
			searchLinkFields.add(dimension.getSelectorKeyField());
		}
		if (isSearchForDisplayKey && !searchLinkFields.contains(dimension.getSelectorDisplayKeyField()))
		{
			searchLinkFields.add(dimension.getSelectorDisplayKeyField());
		}
		if (isSearchForText && !searchLinkFields.contains(dimension.getSelectorTextField()))
		{
			searchLinkFields.add(dimension.getSelectorTextField());
		}
		data.increaseRequestCount();
		var linkFields = this.getRequestedFields(variable.getDimension());
		this.processSearchForVariable(variable, searchPattern, searchLinkFields, linkFields, oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT, false, readModeInternal, this, oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_LINK, data));
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.processChildFetch = function(node, offset, amount, fields, readMode, listener, customIdentifier)
{
	var data = oFF.OrcaLinkValueHelpProxyData.createForValueHelp(listener, customIdentifier);
	data.increaseRequestCount();
	var identifier = oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_MAIN, data);
	oFF.OlapUiValueHelpVariable.prototype.processChildFetch.call( this , node, offset, oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT, fields, readMode, this, identifier);
	var linkedNodes = this.m_nodeRepo.getByKey(this.getMergeKeyValue(node));
	if (oFF.notNull(linkedNodes))
	{
		for (var i = 0; i < this.m_linkedVariables.size(); i++)
		{
			var linkedVariable = this.m_linkedVariables.get(i);
			var linkedNode = this.findNodeToVariable(linkedVariable, linkedNodes, node);
			if (oFF.isNull(linkedNode))
			{
				continue;
			}
			data.increaseRequestCount();
			var linkFields = this.getRequestedFields(node.getDimension());
			this.processChildFetchForVariable(linkedVariable, linkedNode, offset, oFF.OrcaLinkVarValueHelpAbstract.FETCHED_MEMBER_COUNT, linkFields, readMode, this, oFF.XNameGenericPair.create(oFF.OrcaLinkVarValueHelpAbstract.ID_LINK, data));
		}
	}
	data.finishProgress();
	this.checkIfDone(data);
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.findNodeToVariable = function(linkedVariable, linkedNodes, mainNode)
{
	for (var j = 0; j < linkedNodes.size(); j++)
	{
		var linkedNode = linkedNodes.get(j);
		if (linkedVariable.getDimension() === linkedNode.getDimension() && oFF.XString.isEqual(this.getNodePath(mainNode), this.getNodePath(linkedNode)))
		{
			return linkedNode;
		}
	}
	return null;
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	var pair = customIdentifier;
	var data = pair.getObject();
	if (oFF.isNull(data) || data.isReleased())
	{
		return;
	}
	if (extResult.hasErrors())
	{
		data.getOriginalListener().onValuehelpExecuted(extResult, resultSetContainer, data.getOriginalObject());
		oFF.XObjectExt.release(data);
		return;
	}
	data.increaseCallbackCount();
	switch (pair.getName())
	{
		case oFF.OrcaLinkVarValueHelpAbstract.ID_MAIN:
			data.setMain(extResult.getData());
			break;

		case oFF.OrcaLinkVarValueHelpAbstract.ID_LINK:
			data.addLinked(extResult.getData());
			break;
	}
	oFF.XObjectExt.release(pair);
	this.checkIfDone(data);
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.checkIfDone = function(data)
{
	if (data.isDone())
	{
		var result = this.joinNodes(data.getMain(), data.getLinked(), data.isSearch());
		var extResult = oFF.ExtResult.create(result, oFF.MessageManagerSimple.createMessageManager());
		data.getOriginalListener().onValuehelpExecuted(extResult, null, data.getOriginalObject());
		oFF.XObjectExt.release(data);
	}
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.getMergeKeyValue = function(node)
{
	var mergeKeyField = node.getDimension().getDisplayKeyField();
	var fieldValue = node.getDimensionMember().getFieldValue(mergeKeyField);
	return oFF.isNull(fieldValue) ? null : fieldValue.getString();
};
oFF.OrcaLinkVarValueHelpAbstract.prototype.getNodePath = function(node)
{
	var result = oFF.XStringBuffer.create();
	var parentNode = node.getParentNode();
	while (oFF.notNull(parentNode))
	{
		result.append(this.getMergeKeyValue(parentNode)).append("/");
		parentNode = parentNode.getParentNode();
	}
	return result.toString();
};

oFF.OrcaLinkValueHelpProxyData = function() {};
oFF.OrcaLinkValueHelpProxyData.prototype = new oFF.OrcaLinkVarProxyData();
oFF.OrcaLinkValueHelpProxyData.prototype._ff_c = "OrcaLinkValueHelpProxyData";

oFF.OrcaLinkValueHelpProxyData.createForValueHelp = function(listener, customIdentifier)
{
	var obj = new oFF.OrcaLinkValueHelpProxyData();
	obj.setupExt(null, listener, customIdentifier);
	obj.m_linked = oFF.XList.create();
	return obj;
};
oFF.OrcaLinkValueHelpProxyData.prototype.m_main = null;
oFF.OrcaLinkValueHelpProxyData.prototype.m_linked = null;
oFF.OrcaLinkValueHelpProxyData.prototype.m_isSearch = false;
oFF.OrcaLinkValueHelpProxyData.prototype.releaseObject = function()
{
	this.m_main = oFF.XObjectExt.release(this.m_main);
	this.m_linked = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_linked);
	oFF.OrcaLinkVarProxyData.prototype.releaseObject.call( this );
};
oFF.OrcaLinkValueHelpProxyData.prototype.setMain = function(main)
{
	this.m_main = main;
};
oFF.OrcaLinkValueHelpProxyData.prototype.addLinked = function(linked)
{
	this.m_linked.add(linked);
};
oFF.OrcaLinkValueHelpProxyData.prototype.getMain = function()
{
	return this.m_main;
};
oFF.OrcaLinkValueHelpProxyData.prototype.getLinked = function()
{
	return this.m_linked;
};
oFF.OrcaLinkValueHelpProxyData.prototype.setSearch = function(search)
{
	this.m_isSearch = search;
};
oFF.OrcaLinkValueHelpProxyData.prototype.isSearch = function()
{
	return this.m_isSearch;
};

oFF.VdOrcaUiHelper = function() {};
oFF.VdOrcaUiHelper.prototype = new oFF.XObject();
oFF.VdOrcaUiHelper.prototype._ff_c = "VdOrcaUiHelper";

oFF.VdOrcaUiHelper.createUiHelper = function(controller, config)
{
	var obj = new oFF.VdOrcaUiHelper();
	obj.setupUiHelper(controller, config);
	return obj;
};
oFF.VdOrcaUiHelper.showLinkIconForVariable = function(variableController, tooltipLines, context)
{
	if (oFF.isNull(variableController) || oFF.isNull(context) || oFF.isNull(tooltipLines))
	{
		return null;
	}
	var uiManager = context.getUiManager();
	var localization = context.getLocalization();
	var linkIcon = variableController.getView().addNewHeaderIcon();
	linkIcon.setName("VariableLinkIco");
	linkIcon.setIcon("chain-link");
	var popoverInner = uiManager.newControl(oFF.UiType.FLEX_LAYOUT);
	popoverInner.setDirection(oFF.UiFlexDirection.COLUMN);
	popoverInner.setAlignContent(oFF.UiFlexAlignContent.START);
	popoverInner.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.VariableDialogI18n.I18N_VD_LINK_INFO_MESSAGE)).setWrapping(true);
	popoverInner.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("10px"));
	for (var j = 0; j < tooltipLines.size(); j++)
	{
		var pair = tooltipLines.get(j);
		var line = popoverInner.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		line.addNewItemOfType(oFF.UiType.LABEL).setText(pair.getFirstString()).setTooltip(pair.getFirstString()).setWrapping(true);
		line.addNewItemOfType(oFF.UiType.ICON).setIcon("product").setWidth(oFF.UiCssLength.createExt(30, oFF.UiCssSizeUnit.PIXEL)).setEnabled(false);
		line.addNewItemOfType(oFF.UiType.LABEL).setText(pair.getSecondString()).setTooltip(pair.getSecondString()).setWrapping(true);
		if (j < tooltipLines.size() - 1)
		{
			popoverInner.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("5px"));
		}
	}
	return oFF.OlapUiIconPopover.createPopoverWithContent(uiManager, "VariableLinkPop", linkIcon, popoverInner);
};
oFF.VdOrcaUiHelper.addTextVariableInfoSection = function(controller, infoText)
{
	if (controller.getVariable().getVariableType() !== oFF.VariableType.TEXT_VARIABLE)
	{
		return null;
	}
	var layout = controller.getView().getRoot();
	var infoSection = layout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	infoSection.setDirection(oFF.UiFlexDirection.COLUMN);
	infoSection.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.createExt(5, oFF.UiCssSizeUnit.PIXEL));
	var horizontal = infoSection.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	var infoIcon = horizontal.addNewItemOfType(oFF.UiType.ICON);
	infoIcon.setIcon("message-information");
	infoIcon.setEnabled(false);
	horizontal.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.createExt(5, oFF.UiCssSizeUnit.PIXEL));
	var infoLabel = horizontal.addNewItemOfType(oFF.UiType.LABEL);
	infoLabel.setName("VariableDialogTextVariableDisabledLbl");
	infoLabel.setText(infoText);
	infoLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	infoLabel.setFontStyle(oFF.UiFontStyle.ITALIC);
	infoLabel.setWrapping(true);
	infoLabel.setEnabled(false);
	return infoSection;
};
oFF.VdOrcaUiHelper.supportsStoryFilterOptimization = function(variable, isMobile)
{
	if (oFF.isNull(variable))
	{
		return false;
	}
	var variableModel = oFF.VdVariableModel.createVariableModel(variable, null);
	var result = isMobile ? oFF.VdVhMobileController.supportsMobileValueHelp(variableModel) : oFF.VdVariableForm.supportsStoryFilterOptimizationForDesktop(variableModel);
	oFF.XObjectExt.release(variableModel);
	return result;
};
oFF.VdOrcaUiHelper.prototype.m_uiContext = null;
oFF.VdOrcaUiHelper.prototype.m_vdController = null;
oFF.VdOrcaUiHelper.prototype.m_config = null;
oFF.VdOrcaUiHelper.prototype.m_uiMgr = null;
oFF.VdOrcaUiHelper.prototype.m_i18n = null;
oFF.VdOrcaUiHelper.prototype.m_scenario = null;
oFF.VdOrcaUiHelper.prototype.m_level = null;
oFF.VdOrcaUiHelper.prototype.m_orcaLayout = null;
oFF.VdOrcaUiHelper.prototype.m_forceCb = null;
oFF.VdOrcaUiHelper.prototype.m_storyRb = null;
oFF.VdOrcaUiHelper.prototype.m_widgetRb = null;
oFF.VdOrcaUiHelper.prototype.m_disableExitCb = null;
oFF.VdOrcaUiHelper.prototype.m_disableDynamicCb = null;
oFF.VdOrcaUiHelper.prototype.m_textVariableDisableInfos = null;
oFF.VdOrcaUiHelper.prototype.m_popovers = null;
oFF.VdOrcaUiHelper.prototype.m_useBottomLevelVariables = false;
oFF.VdOrcaUiHelper.prototype.setupUiHelper = function(controller, config)
{
	this.m_vdController = controller;
	this.m_config = config;
	this.m_uiContext = this.m_vdController.getContext();
	this.m_uiMgr = this.m_uiContext.getUiManager();
	this.m_i18n = this.m_uiContext.getLocalization();
	this.m_scenario = this.m_config.getScenario();
	this.m_level = this.m_config.getLevel();
	this.m_useBottomLevelVariables = this.m_config.useBottomLevelVariables();
	this.m_textVariableDisableInfos = oFF.XList.create();
	this.m_popovers = oFF.XList.create();
	this.m_forceCb = oFF.UiContextDummy.getSingleton();
	this.m_storyRb = oFF.UiContextDummy.getSingleton();
	this.m_widgetRb = oFF.UiContextDummy.getSingleton();
	this.m_disableExitCb = oFF.UiContextDummy.getSingleton();
	this.m_disableDynamicCb = oFF.UiContextDummy.getSingleton();
};
oFF.VdOrcaUiHelper.prototype.releaseObject = function()
{
	this.m_uiContext = null;
	this.m_vdController = null;
	oFF.XObjectExt.release(this.m_config);
	this.m_uiMgr = null;
	this.m_i18n = null;
	this.m_scenario = null;
	this.m_level = null;
	this.m_forceCb = null;
	this.m_storyRb = null;
	this.m_widgetRb = null;
	this.m_disableExitCb = null;
	this.m_disableDynamicCb = null;
	oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_popovers);
	oFF.XObjectExt.release(this.m_textVariableDisableInfos);
	oFF.XObjectExt.release(this.m_orcaLayout);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.VdOrcaUiHelper.prototype.addOrcaSpecificUi = function()
{
	if (oFF.isNull(this.m_scenario) || oFF.isNull(this.m_level))
	{
		return;
	}
	this.m_orcaLayout = this.m_vdController.getView().getCustomSection();
	this.m_orcaLayout.setAlignItems(oFF.UiFlexAlignItems.START);
	this.m_orcaLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	var offerVariants = this.m_scenario !== oFF.VdOrcaScenario.LINKED_VARIABLE;
	offerVariants = offerVariants && (this.m_level.isTypeOf(oFF.VdOrcaLevel.DEFAULT) || this.m_useBottomLevelVariables);
	offerVariants = offerVariants || this.m_config.showVariantSection();
	this.m_vdController.setVariantsSectionVisible(offerVariants);
	if (this.m_scenario !== oFF.VdOrcaScenario.BOARD_ROOM && this.m_level.isTypeOf(oFF.VdOrcaLevel.WIDGET))
	{
		this.m_vdController.setInputEnabled(!this.m_config.isReadOnly() && this.m_useBottomLevelVariables);
	}
	else
	{
		this.m_vdController.setInputEnabled(!this.m_config.isReadOnly());
	}
	this.m_vdController.setSubmitButtonEnabled(!this.m_config.isReadOnly());
	if (this.m_level !== oFF.VdOrcaLevel.FILTER)
	{
		if (!this.m_vdController.hasVariables())
		{
			var infoText = this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_NO_VARIABLES);
			this.addInfoMessageSection(infoText);
		}
		else
		{
			this.addLinkedVariableInfoSection();
			this.addInfoMessageSection(this.m_config.getInfoText());
			this.addLevelSection();
			this.addForceSection();
			this.addDisableDynamicSection();
			this.addDisableExitSection();
		}
	}
	if (this.m_orcaLayout.hasItems())
	{
		this.m_orcaLayout.setPadding(oFF.UiCssBoxEdges.create("0 0 0.75rem 0"));
	}
	this.addVariableUi();
};
oFF.VdOrcaUiHelper.prototype.addLinkedVariableInfoSection = function()
{
	var text = this.m_config.getLinkedModelsText();
	if (this.m_scenario !== oFF.VdOrcaScenario.LINKED_VARIABLE || oFF.XStringUtils.isNullOrEmpty(text))
	{
		return;
	}
	var linkedModels = this.m_orcaLayout.addNewItemOfType(oFF.UiType.LABEL);
	linkedModels.setName("VariableDialogLinkLbl");
	linkedModels.setText(text);
	this.m_orcaLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.createExt(15, oFF.UiCssSizeUnit.PIXEL));
};
oFF.VdOrcaUiHelper.prototype.addInfoMessageSection = function(text)
{
	if (oFF.XStringUtils.isNullOrEmpty(text))
	{
		return;
	}
	var infoSection = this.m_orcaLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	infoSection.useMaxWidth();
	infoSection.setMinHeight(oFF.UiCssLength.create("40px"));
	infoSection.setDirection(oFF.UiFlexDirection.ROW);
	infoSection.setJustifyContent(oFF.UiFlexJustifyContent.START);
	infoSection.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	infoSection.setPadding(oFF.UiCssBoxEdges.create("0 0 0.75rem 0"));
	var infoIcon = infoSection.addNewItemOfType(oFF.UiType.ICON);
	infoIcon.setIcon("message-information");
	infoIcon.setEnabled(false);
	if (this.m_uiContext.getDeviceInfo().isMobile())
	{
		infoIcon.setMargin(oFF.UiCssBoxEdges.create("0 0.5rem 0 2rem"));
	}
	else
	{
		infoIcon.setMargin(oFF.UiCssBoxEdges.create("0 0.5rem 0 0.5rem"));
	}
	var infoLabel = infoSection.addNewItemOfType(oFF.UiType.LABEL);
	infoLabel.useMaxWidth();
	infoLabel.setName("VariableDialogInfoLbl");
	infoLabel.setText(text);
	infoLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	infoLabel.setFontStyle(oFF.UiFontStyle.ITALIC);
	infoLabel.setTextAlign(oFF.UiTextAlign.LEFT);
	infoLabel.setWrapping(true);
};
oFF.VdOrcaUiHelper.prototype.addLevelSection = function()
{
	if (this.m_config.hideLevelSection() || this.m_level !== oFF.VdOrcaLevel.CHART && this.m_level !== oFF.VdOrcaLevel.TABLE || this.m_scenario === oFF.VdOrcaScenario.ANALYTIC_APP && !this.m_config.isStoryEditable())
	{
		return;
	}
	var group = this.m_orcaLayout.addNewItemOfType(oFF.UiType.RADIO_BUTTON_GROUP);
	group.setColumnCount(2);
	group.setWidth(oFF.UiCssLength.create("100%"));
	this.m_storyRb = group.addNewRadioButton();
	this.m_storyRb.setText(this.getStoryText());
	this.m_storyRb.setName("VariableDialogStoryRb");
	this.m_storyRb.setSelected(!this.m_useBottomLevelVariables);
	this.m_storyRb.setEnabled(!this.m_config.isReadOnly());
	this.m_widgetRb = group.addNewRadioButton();
	this.m_widgetRb.setText(this.getWidgetText());
	this.m_widgetRb.setName("VariableDialogWidgetRb");
	this.m_widgetRb.setSelected(this.m_useBottomLevelVariables);
	this.m_widgetRb.setEnabled(!this.m_config.isReadOnly());
	this.m_widgetRb.registerOnChange(this);
	this.m_orcaLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.createExt(15, oFF.UiCssSizeUnit.PIXEL));
};
oFF.VdOrcaUiHelper.prototype.addForceSection = function()
{
	if (!this.m_config.isStoryEditable() || this.m_scenario === oFF.VdOrcaScenario.LINKED_VARIABLE || this.m_level.isTypeOf(oFF.VdOrcaLevel.WIDGET))
	{
		return;
	}
	var forceCbLayout = this.m_orcaLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	forceCbLayout.setName("VariableDialogForceLayout");
	forceCbLayout.useMaxWidth();
	forceCbLayout.setDirection(oFF.UiFlexDirection.ROW);
	forceCbLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	forceCbLayout.setJustifyContent(oFF.UiFlexJustifyContent.START);
	forceCbLayout.setPadding(oFF.UiCssBoxEdges.create("0 0 0.75rem 0"));
	this.m_forceCb = forceCbLayout.addNewItemOfType(oFF.UiType.CHECKBOX);
	this.m_forceCb.setName("VariableDialogForceCb");
	this.m_forceCb.setWrapping(true);
	this.m_forceCb.setChecked(this.m_config.isForcePrompt());
	this.m_forceCb.setEnabled(!this.m_config.isReadOnly());
	var label = forceCbLayout.addNewItemOfType(oFF.UiType.LABEL);
	label.setText(this.getForceText());
	label.setTooltip(this.getForceText());
	label.setLabelFor(this.m_forceCb);
	if (oFF.XCollectionUtils.hasElements(this.m_config.getLinkTooltips()))
	{
		var infoIcon = forceCbLayout.addNewItemOfType(oFF.UiType.ICON);
		infoIcon.setName("VariableDialogForceIco");
		infoIcon.setIcon("message-information");
		infoIcon.setIconSize(oFF.UiCssLength.create("1rem"));
		infoIcon.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
		if (this.m_uiMgr.getDeviceInfo().isMobile())
		{
			infoIcon.setIconSize(oFF.UiCssLength.create(oFF.VdVariableView.MOBILE_ICON_FONT_SIZE));
		}
		var text = this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY_INFO);
		this.m_popovers.add(oFF.OlapUiIconPopover.createPopoverWithText(this.m_uiMgr, "VariableDialogForcePop", infoIcon, text));
	}
};
oFF.VdOrcaUiHelper.prototype.addDisableDynamicSection = function()
{
	var isScheduling = this.m_uiContext.getFeatureToggle().isActive(oFF.OlapUiFeatureToggle.ENABLE_PUBLICATION_EXIT_VARIABLE_CHECK) && this.m_scenario === oFF.VdOrcaScenario.SCHEDULING;
	if (this.m_vdController.hasDynamicVariables() && (this.m_config.isStoryEditable() || isScheduling) && this.m_scenario !== oFF.VdOrcaScenario.LINKED_VARIABLE)
	{
		this.m_disableDynamicCb = this.m_orcaLayout.addNewItemOfType(oFF.UiType.CHECKBOX);
		this.m_disableDynamicCb.setText(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_DISABLE_DYNAMIC));
		this.m_disableDynamicCb.setName("VariableDialogDynamicCb");
		this.m_disableDynamicCb.setEnabled(!this.m_config.isReadOnly() && (this.m_level === oFF.VdOrcaLevel.DEFAULT || this.m_useBottomLevelVariables));
		this.m_disableDynamicCb.setChecked(this.getDisableDynamicInitialValue());
		this.m_disableDynamicCb.registerOnChange(this);
		this.m_orcaLayout.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.createExt(5, oFF.UiCssSizeUnit.PIXEL));
	}
};
oFF.VdOrcaUiHelper.prototype.addDisableExitSection = function()
{
	var isScheduling = this.m_uiContext.getFeatureToggle().isActive(oFF.OlapUiFeatureToggle.ENABLE_PUBLICATION_EXIT_VARIABLE_CHECK) && this.m_scenario === oFF.VdOrcaScenario.SCHEDULING;
	if (this.m_vdController.hasExitVariables() && (this.m_config.isStoryEditable() || isScheduling))
	{
		var disableExitLayout = this.m_orcaLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		disableExitLayout.setName("VariableDialogExitLayout");
		disableExitLayout.useMaxWidth();
		disableExitLayout.setDirection(oFF.UiFlexDirection.ROW);
		disableExitLayout.setAlignItems(oFF.UiFlexAlignItems.CENTER);
		disableExitLayout.setJustifyContent(oFF.UiFlexJustifyContent.START);
		disableExitLayout.setPadding(oFF.UiCssBoxEdges.create("0 0 0.75rem 0"));
		this.m_disableExitCb = disableExitLayout.addNewItemOfType(oFF.UiType.CHECKBOX);
		this.m_disableExitCb.setName("VariableDialogExitCb");
		this.m_disableExitCb.setChecked(this.m_config.isDisableExit());
		var label = disableExitLayout.addNewItemOfType(oFF.UiType.LABEL);
		label.setText(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT));
		label.setTooltip(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_SHORT));
		label.setLabelFor(this.m_disableExitCb);
		if (this.m_scenario !== oFF.VdOrcaScenario.BOARD_ROOM && this.m_level.isTypeOf(oFF.VdOrcaLevel.WIDGET))
		{
			this.m_disableExitCb.setEnabled(!this.m_config.isReadOnly() && this.m_useBottomLevelVariables);
		}
		else
		{
			this.m_disableExitCb.setEnabled(!this.m_config.isReadOnly());
		}
		var infoIcon = disableExitLayout.addNewItemOfType(oFF.UiType.ICON);
		infoIcon.setName("VariableDialogExitIco");
		infoIcon.setIcon("message-information");
		infoIcon.setIconSize(oFF.UiCssLength.create("1rem"));
		infoIcon.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
		var text = this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SAVED_PROMPTS_FOR_DYNAMIC_LONG);
		this.m_popovers.add(oFF.OlapUiIconPopover.createPopoverWithText(this.m_uiMgr, "VariableDialogExitPop", infoIcon, text));
	}
};
oFF.VdOrcaUiHelper.prototype.addVariableUi = function()
{
	var controllers = this.m_vdController.getControllers();
	for (var i = 0; i < controllers.size(); i++)
	{
		var controller = controllers.get(i);
		this.addLinkIconForVariable(controller);
		this.addDynamicVariableIcon(controller);
		this.addTextVariableInfo(controller);
	}
};
oFF.VdOrcaUiHelper.prototype.addLinkIconForVariable = function(variableController)
{
	var tooltipLines = this.m_config.getLinkTooltips().getByKey(variableController.getName());
	if (!oFF.XCollectionUtils.hasElements(tooltipLines))
	{
		return;
	}
	oFF.XCollectionUtils.addIfNotNull(this.m_popovers, oFF.VdOrcaUiHelper.showLinkIconForVariable(variableController, tooltipLines, this.m_uiContext));
};
oFF.VdOrcaUiHelper.prototype.addDynamicVariableIcon = function(controller)
{
	if (!controller.getVariable().isDynamicVariable())
	{
		return;
	}
	var dynamicIcon = controller.getView().addNewHeaderIcon();
	dynamicIcon.setName("DynamicVariableInfoIco");
	dynamicIcon.setIcon("synchronize");
	dynamicIcon.setEnabled(!this.m_config.isReadOnly());
	var text = this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_DYNAMIC_VARIABLE_INFO);
	this.m_popovers.add(oFF.OlapUiIconPopover.createPopoverWithText(this.m_uiMgr, "DynamicVariableInfoPop", dynamicIcon, text));
};
oFF.VdOrcaUiHelper.prototype.addTextVariableInfo = function(controller)
{
	if (!this.m_level.isTypeOf(oFF.VdOrcaLevel.WIDGET))
	{
		return;
	}
	var infoSection = oFF.VdOrcaUiHelper.addTextVariableInfoSection(controller, this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_TEXT_VARIABLE_DISABLED));
	if (oFF.isNull(infoSection))
	{
		return;
	}
	infoSection.setVisible(this.m_useBottomLevelVariables);
	this.m_textVariableDisableInfos.add(infoSection);
};
oFF.VdOrcaUiHelper.prototype.onChange = function(event)
{
	var control = event.getControl();
	if (control === this.m_widgetRb)
	{
		if (this.m_scenario !== oFF.VdOrcaScenario.BOARD_ROOM)
		{
			this.m_useBottomLevelVariables = this.m_widgetRb.isSelected();
			this.m_vdController.setInputEnabled(this.m_useBottomLevelVariables);
			this.m_vdController.setVariantsSectionVisible(this.m_useBottomLevelVariables);
			this.m_disableExitCb.setEnabled(this.m_useBottomLevelVariables);
			this.m_disableDynamicCb.setEnabled(this.m_useBottomLevelVariables);
			this.m_disableDynamicCb.setChecked(this.getDisableDynamicInitialValue());
			for (var i = 0; i < this.m_textVariableDisableInfos.size(); i++)
			{
				this.m_textVariableDisableInfos.get(i).setVisible(this.m_useBottomLevelVariables);
			}
			this.updateValues();
		}
	}
	else if (control === this.m_disableDynamicCb)
	{
		if (!this.m_disableDynamicCb.isChecked() && this.m_scenario !== oFF.VdOrcaScenario.PLANNING_SEQUENCE)
		{
			this.m_vdController.updateDynamicVariables();
		}
	}
};
oFF.VdOrcaUiHelper.prototype.updateValues = function()
{
	if (this.m_useBottomLevelVariables)
	{
		var bottomLevelValues = this.m_config.getBottomLevelValues();
		if (oFF.notNull(bottomLevelValues))
		{
			this.m_vdController.setValues(bottomLevelValues);
		}
	}
	else
	{
		var topLevelValues = this.m_config.getTopLevelValues();
		if (oFF.notNull(topLevelValues))
		{
			this.m_vdController.setValues(topLevelValues);
		}
		else
		{
			this.m_vdController.resetValues();
		}
	}
};
oFF.VdOrcaUiHelper.prototype.isWidgetSelected = function()
{
	return this.m_useBottomLevelVariables;
};
oFF.VdOrcaUiHelper.prototype.isForcePrompt = function()
{
	if (this.m_forceCb === oFF.UiContextDummy.getSingleton())
	{
		return this.m_config.isForcePrompt();
	}
	return this.m_forceCb.isChecked();
};
oFF.VdOrcaUiHelper.prototype.isDisablingExitVariables = function()
{
	if (this.m_disableExitCb === oFF.UiContextDummy.getSingleton())
	{
		return this.m_config.isDisableExit();
	}
	return this.m_disableExitCb.isChecked();
};
oFF.VdOrcaUiHelper.prototype.isDisablingDynamicVariables = function()
{
	if (this.m_disableDynamicCb === oFF.UiContextDummy.getSingleton())
	{
		return this.getDisableDynamicInitialValue();
	}
	return this.m_disableDynamicCb.isChecked();
};
oFF.VdOrcaUiHelper.prototype.getDisableDynamicInitialValue = function()
{
	return this.m_useBottomLevelVariables ? !this.m_config.isBottomLevelUsingDynamicVariables() : !this.m_config.isTopLevelUsingDynamicVariables();
};
oFF.VdOrcaUiHelper.prototype.getForceText = function()
{
	if (this.m_scenario === oFF.VdOrcaScenario.ANALYTIC_APP)
	{
		return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_APP);
	}
	else if (this.m_scenario === oFF.VdOrcaScenario.PLANNING_SEQUENCE)
	{
		return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_PS);
	}
	return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_FORCE_PROMPT_STORY);
};
oFF.VdOrcaUiHelper.prototype.getWidgetText = function()
{
	if (this.m_scenario === oFF.VdOrcaScenario.BOARD_ROOM)
	{
		return this.m_config.getBoardRoomChildLevelText();
	}
	else if (this.m_level === oFF.VdOrcaLevel.TABLE)
	{
		return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_TABLE_LEVEL);
	}
	return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_CHART_LEVEL);
};
oFF.VdOrcaUiHelper.prototype.getStoryText = function()
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_config.getCustomStoryButtonText()))
	{
		return this.m_config.getCustomStoryButtonText();
	}
	else if (this.m_scenario === oFF.VdOrcaScenario.BOARD_ROOM)
	{
		return this.m_config.getBoardRoomParentLevelText();
	}
	else if (this.m_scenario === oFF.VdOrcaScenario.ANALYTIC_APP)
	{
		return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_APP_LEVEL);
	}
	return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_STORY_LEVEL);
};

oFF.CtDialogI18n = function() {};
oFF.CtDialogI18n.prototype = new oFF.OlapUiI18n();
oFF.CtDialogI18n.prototype._ff_c = "CtDialogI18n";

oFF.CtDialogI18n.I18N_QCT_OK = "I18N_QCT_OK";
oFF.CtDialogI18n.I18N_QCT_CANCEL = "I18N_QCT_CANCEL";
oFF.CtDialogI18n.I18N_QCT_DEFINE_CURRENCY_TRANSLATION = "I18N_QCT_DEFINE_CURRENCY_TRANSLATION";
oFF.CtDialogI18n.I18N_QCT_CURRENCY_TRANSLATION_TYPE = "I18N_QCT_CURRENCY_TRANSLATION_TYPE";
oFF.CtDialogI18n.I18N_QCT_TARGET_CURRENCY = "I18N_QCT_TARGET_CURRENCY";
oFF.CtDialogI18n.I18N_QCT_CCTF_QUERY_DEFINITION = "I18N_QCT_CCTF_QUERY_DEFINITION";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE = "I18N_QCT_REFERENCE_DATE";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED = "I18N_QCT_REFERENCE_DATE_FIXED";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_BOOKING = "I18N_QCT_REFERENCE_DATE_BOOKING";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_DAY = "I18N_QCT_REFERENCE_DATE_DAY";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_WEEK = "I18N_QCT_REFERENCE_DATE_WEEK";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_MONTH = "I18N_QCT_REFERENCE_DATE_MONTH";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_QUARTER = "I18N_QCT_REFERENCE_DATE_QUARTER";
oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_YEAR = "I18N_QCT_REFERENCE_DATE_YEAR";
oFF.CtDialogI18n.I18N_QCT_RATE_TYPE = "I18N_QCT_RATE_TYPE";
oFF.CtDialogI18n.I18N_QCT_RATE_VERSION = "I18N_QCT_RATE_VERSION";
oFF.CtDialogI18n.I18N_QCT_CATEGORY = "I18N_QCT_CATEGORY";
oFF.CtDialogI18n.I18N_QCT_DYNAMIC = "I18N_QCT_DYNAMIC";
oFF.CtDialogI18n.I18N_QCT_CUSTOM = "I18N_QCT_CUSTOM";
oFF.CtDialogI18n.I18N_QCT_PROPERTIES = "I18N_QCT_PROPERTIES";
oFF.CtDialogI18n.I18N_QCT_TECHNICAL = "I18N_QCT_TECHNICAL";
oFF.CtDialogI18n.createCtDialogI18n = function()
{
	return new oFF.CtDialogI18n();
};
oFF.CtDialogI18n.staticSetupCtd = function()
{
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_OK, "Ok");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_CANCEL, "Cancel");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_DEFINE_CURRENCY_TRANSLATION, "Define Currency Translation");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_CURRENCY_TRANSLATION_TYPE, "Currency Translation Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_TARGET_CURRENCY, "Target Currency");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_CCTF_QUERY_DEFINITION, "Consider Currency Translation from Query Definition");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE, "Reference Date");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_BOOKING, "Booking Date");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED, "Fixed Date");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_DAY, "Day(s)");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_WEEK, "Week(s)");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_MONTH, "Month(s)");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_QUARTER, "Quarter(s)");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_YEAR, "Year(s)");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_RATE_TYPE, "Rate Type");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_RATE_VERSION, "Rate Version");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_CATEGORY, "Category");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_DYNAMIC, "Dynamic");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_CUSTOM, "Custom");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_PROPERTIES, "Properties");
	oFF.OlapUiI18n.addDefaultValue(oFF.CtDialogI18n.I18N_QCT_TECHNICAL, "Show Technical Names");
};

oFF.QctController = function() {};
oFF.QctController.prototype = new oFF.XObject();
oFF.QctController.prototype._ff_c = "QctController";

oFF.QctController.OK_BUTTON = "okButton";
oFF.QctController.CANCEL_BUTTON = "cancelButton";
oFF.QctController.CURRENCY_DROPDOWN = "currencyDropdown";
oFF.QctController.CATEGORY_DROPDOWN = "categoryDropdown";
oFF.QctController.CURRENCY_TRANSLATION_DROPDOWN = "currencyTranslationDropdown";
oFF.QctController.RATE_TYPE_DROPDOWN = "rateTypeDropdown";
oFF.QctController.RATE_VERSION_DROPDOWN = "rateVersionDropdown";
oFF.QctController.TRANSLATION_DEFINITON_SWITCH = "translationDefinitionSwitch";
oFF.QctController.QUERY_DEFINITON_SWITCH = "queryDefinitionSwitch";
oFF.QctController.DATE_OFFSET_GRANULARITY_RBG = "dateOffsetGranularityRBG";
oFF.QctController.REFERENCE_DATE_PICKER = "referenceDatePicker";
oFF.QctController.PLUS_MINUS_SWITCH = "plusMinusSwitch";
oFF.QctController.PLUS = "plus";
oFF.QctController.MINUS = "minus";
oFF.QctController.OFFSET_SWITCH = "offsetSwitch";
oFF.QctController.DATE_MODE_SWITCH = "dateModeSwitch";
oFF.QctController.OFFSET_DROPDOWN = "offsetDropdown";
oFF.QctController.TECHNICAL_BUTTON = "technicalButton";
oFF.QctController.create = function(context)
{
	var obj = new oFF.QctController();
	obj.m_context = context;
	return obj;
};
oFF.QctController.prototype.m_context = null;
oFF.QctController.prototype.m_display = null;
oFF.QctController.prototype.m_okButton = null;
oFF.QctController.prototype.m_cancelButton = null;
oFF.QctController.prototype.m_isClosing = false;
oFF.QctController.prototype.m_currencyTranslationDropDown = null;
oFF.QctController.prototype.m_currencyDropDown = null;
oFF.QctController.prototype.m_categoryDropdown = null;
oFF.QctController.prototype.m_rateVersionDropdown = null;
oFF.QctController.prototype.m_rateTypeDropdown = null;
oFF.QctController.prototype.m_offsetDropdown = null;
oFF.QctController.prototype.m_offsetSwitch = null;
oFF.QctController.prototype.m_dateModeButton = null;
oFF.QctController.prototype.m_referenceDatePicker = null;
oFF.QctController.prototype.m_plusMinus = null;
oFF.QctController.prototype.m_dateGranularityRadioGroup = null;
oFF.QctController.prototype.m_dateOffsetGroup = null;
oFF.QctController.prototype.m_queryDefinitionSwitch = null;
oFF.QctController.prototype.m_translationDefinitionSwitch = null;
oFF.QctController.prototype.m_dialogCloseListener = null;
oFF.QctController.prototype.m_ccdLayout = null;
oFF.QctController.prototype.m_model = null;
oFF.QctController.prototype.m_currencyTranslationManager = null;
oFF.QctController.prototype.m_rdFlex = null;
oFF.QctController.prototype.releaseObject = function()
{
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_ccdLayout = oFF.XObjectExt.release(this.m_ccdLayout);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_queryDefinitionSwitch = oFF.XObjectExt.release(this.m_queryDefinitionSwitch);
	this.m_translationDefinitionSwitch = oFF.XObjectExt.release(this.m_translationDefinitionSwitch);
	this.m_currencyDropDown = oFF.XObjectExt.release(this.m_currencyDropDown);
	this.m_categoryDropdown = oFF.XObjectExt.release(this.m_categoryDropdown);
	this.m_rateVersionDropdown = oFF.XObjectExt.release(this.m_rateVersionDropdown);
	this.m_rateTypeDropdown = oFF.XObjectExt.release(this.m_rateTypeDropdown);
	this.m_dateModeButton = oFF.XObjectExt.release(this.m_dateModeButton);
	this.m_referenceDatePicker = oFF.XObjectExt.release(this.m_referenceDatePicker);
	this.m_plusMinus = oFF.XObjectExt.release(this.m_plusMinus);
	this.m_offsetDropdown = oFF.XObjectExt.release(this.m_offsetDropdown);
	this.m_offsetSwitch = oFF.XObjectExt.release(this.m_offsetSwitch);
	this.m_dateGranularityRadioGroup = oFF.XObjectExt.release(this.m_dateGranularityRadioGroup);
	this.m_currencyTranslationDropDown = oFF.XObjectExt.release(this.m_currencyTranslationDropDown);
	this.m_dateOffsetGroup = oFF.XObjectExt.release(this.m_dateOffsetGroup);
	this.m_rdFlex = oFF.XObjectExt.release(this.m_rdFlex);
	this.m_model = oFF.XObjectExt.release(this.m_model);
	this.m_context = null;
};
oFF.QctController.prototype.openDialog = function(title, currencyTranslationManager, dialogCloseListener)
{
	this.m_dialogCloseListener = dialogCloseListener;
	this.m_model = oFF.QctModel.createFrom(currencyTranslationManager);
	this.m_model.addListener(this);
	this.m_currencyTranslationManager = currencyTranslationManager;
	this.setupController(title);
	if (oFF.notNull(this.m_currencyTranslationDropDown))
	{
		this.m_currencyTranslationDropDown.clearItems();
		this.m_currencyTranslationDropDown.setEnabled(false);
	}
	if (oFF.notNull(this.m_currencyDropDown))
	{
		this.m_currencyDropDown.clearItems();
		this.m_currencyDropDown.setEnabled(false);
	}
	if (oFF.notNull(this.m_categoryDropdown))
	{
		this.m_categoryDropdown.clearItems();
		this.m_categoryDropdown.setEnabled(false);
	}
	if (oFF.notNull(this.m_rateVersionDropdown))
	{
		this.m_rateVersionDropdown.clearItems();
		this.m_rateVersionDropdown.setEnabled(false);
	}
	if (oFF.notNull(this.m_rateTypeDropdown))
	{
		this.m_rateTypeDropdown.clearItems();
		this.m_rateTypeDropdown.setEnabled(false);
	}
	currencyTranslationManager.setupBwCatalogs(oFF.SyncType.NON_BLOCKING, this);
};
oFF.QctController.prototype.setupController = function(title)
{
	this.m_isClosing = false;
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.setName("Catalog Dialog");
	this.m_display.setTitle(title);
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(30, oFF.UiCssSizeUnit.EM));
	this.m_display.setWidth(oFF.UiCssLength.createExt(50, oFF.UiCssSizeUnit.EM));
	var genesis = this.m_display.getGenesis();
	var localization = genesis.getUiManager().getLocalization();
	this.m_ccdLayout = oFF.CtLayout.createWithGenesis(genesis);
	var dctFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	dctFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_DEFINE_CURRENCY_TRANSLATION)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
	dctFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
	this.m_translationDefinitionSwitch = dctFlex.addNewItemOfType(oFF.UiType.SWITCH).setName(oFF.QctController.TRANSLATION_DEFINITON_SWITCH).setWidth(oFF.UiCssLength.create("100%"));
	this.m_translationDefinitionSwitch.setOffText(" ").setOnText(" ");
	this.m_translationDefinitionSwitch.registerOnChange(this);
	var cctFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	cctFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_CURRENCY_TRANSLATION_TYPE)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
	cctFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
	this.m_currencyTranslationDropDown = cctFlex.addNewItemOfType(oFF.UiType.COMBO_BOX).setName(oFF.QctController.CURRENCY_TRANSLATION_DROPDOWN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_currencyTranslationDropDown.registerOnChange(this);
	if (this.m_currencyTranslationManager.getModelCapabilities().supportsQueryCurrencyTranslation() || oFF.XCollectionUtils.hasElements(this.m_currencyTranslationManager.getAvailableCurrencies()))
	{
		var tcFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		tcFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_TARGET_CURRENCY)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		tcFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_currencyDropDown = tcFlex.addNewItemOfType(oFF.UiType.COMBO_BOX).setName(oFF.QctController.CURRENCY_DROPDOWN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_currencyDropDown.registerOnChange(this);
	}
	if (oFF.XCollectionUtils.hasElements(this.m_currencyTranslationManager.getAvailableCategories()))
	{
		var ccFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		ccFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_CATEGORY)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		ccFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_categoryDropdown = ccFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.QctController.CATEGORY_DROPDOWN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_categoryDropdown.registerOnSelect(this);
	}
	if (oFF.XCollectionUtils.hasElements(this.m_currencyTranslationManager.getAvailableRateVersions()))
	{
		var rvFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		rvFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_RATE_VERSION)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		rvFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_rateVersionDropdown = rvFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.QctController.RATE_VERSION_DROPDOWN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_rateVersionDropdown.registerOnSelect(this);
	}
	if (oFF.XCollectionUtils.hasElements(this.m_currencyTranslationManager.getAvailableRateTypes()))
	{
		var rtFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		rtFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_RATE_TYPE)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		rtFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_rateTypeDropdown = rtFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.QctController.RATE_TYPE_DROPDOWN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_rateTypeDropdown.registerOnSelect(this);
	}
	if (this.m_currencyTranslationManager.supportsMeasureBasedCurrencyTranslation())
	{
		this.m_rdFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		this.m_rdFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		this.m_rdFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_dateModeButton = this.m_rdFlex.addNewItemOfType(oFF.UiType.SEGMENTED_BUTTON).setName(oFF.QctController.DATE_MODE_SWITCH).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_dateModeButton.addNewItem().setName(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_BOOKING).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_BOOKING));
		this.m_dateModeButton.addNewItem().setName(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED));
		this.m_dateModeButton.registerOnSelectionChange(this);
		var preFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		preFlex.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		preFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_referenceDatePicker = preFlex.addNewItemOfType(oFF.UiType.DATE_PICKER).setValueFormat("YYYY-MM-dd").setName(oFF.QctController.REFERENCE_DATE_PICKER).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		this.m_referenceDatePicker.registerOnChange(this);
		this.m_dateOffsetGroup = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		this.m_dateOffsetGroup.addNewItemOfType(oFF.UiType.LABEL).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		this.m_dateOffsetGroup.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		var subFlex = this.m_dateOffsetGroup.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_offsetSwitch = subFlex.addNewItemOfType(oFF.UiType.SWITCH).setName(oFF.QctController.OFFSET_SWITCH).setAlignItems(oFF.UiFlexAlignItems.CENTER).setOffText(" ").setOnText(" ");
		this.m_offsetSwitch.registerOnChange(this);
		this.m_plusMinus = subFlex.addNewItemOfType(oFF.UiType.SEGMENTED_BUTTON).setName(oFF.QctController.PLUS_MINUS_SWITCH).setAlignItems(oFF.UiFlexAlignItems.CENTER).setOffText(" ").setOnText(" ");
		this.m_plusMinus.addNewItem().setName(oFF.QctController.MINUS).setText("-");
		this.m_plusMinus.addNewItem().setName(oFF.QctController.PLUS).setText("+");
		this.m_plusMinus.registerOnSelectionChange(this);
		this.m_offsetDropdown = subFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setName(oFF.QctController.OFFSET_DROPDOWN);
		this.m_offsetDropdown.addNewItem().setText("0").setName("0").setCustomObject(oFF.XIntegerValue.create(0));
		this.m_offsetDropdown.addNewItem().setText("1").setName("1").setCustomObject(oFF.XIntegerValue.create(1));
		this.m_offsetDropdown.addNewItem().setText("2").setName("2").setCustomObject(oFF.XIntegerValue.create(2));
		this.m_offsetDropdown.addNewItem().setText("3").setName("3").setCustomObject(oFF.XIntegerValue.create(3));
		this.m_offsetDropdown.addNewItem().setText("4").setName("4").setCustomObject(oFF.XIntegerValue.create(4));
		this.m_offsetDropdown.addNewItem().setText("5").setName("5").setCustomObject(oFF.XIntegerValue.create(5));
		this.m_offsetDropdown.registerOnSelect(this);
		this.m_dateGranularityRadioGroup = subFlex.addNewItemOfType(oFF.UiType.RADIO_BUTTON_GROUP).setName(oFF.QctController.DATE_OFFSET_GRANULARITY_RBG);
		this.m_dateGranularityRadioGroup.addNewRadioButton().setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_DAY)).setName(oFF.DateOffsetGranularity.DAY.getName()).setCustomObject(oFF.DateOffsetGranularity.DAY);
		this.m_dateGranularityRadioGroup.addNewRadioButton().setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_WEEK)).setName(oFF.DateOffsetGranularity.WEEK.getName()).setCustomObject(oFF.DateOffsetGranularity.WEEK);
		this.m_dateGranularityRadioGroup.addNewRadioButton().setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_MONTH)).setName(oFF.DateOffsetGranularity.MONTH.getName()).setCustomObject(oFF.DateOffsetGranularity.MONTH);
		this.m_dateGranularityRadioGroup.addNewRadioButton().setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_QUARTER)).setName(oFF.DateOffsetGranularity.QUARTER.getName()).setCustomObject(oFF.DateOffsetGranularity.QUARTER);
		this.m_dateGranularityRadioGroup.addNewRadioButton().setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_YEAR)).setName(oFF.DateOffsetGranularity.YEAR.getName()).setCustomObject(oFF.DateOffsetGranularity.YEAR);
		this.m_dateGranularityRadioGroup.registerOnSelect(this);
	}
	if (this.m_currencyTranslationManager.getModelCapabilities().supportsQueryCurrencyTranslation())
	{
		var qdFlex = this.m_ccdLayout.getContent().addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		qdFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.CtDialogI18n.I18N_QCT_CCTF_QUERY_DEFINITION)).setWidth(oFF.UiCssLength.create("100%")).setTextAlign(oFF.UiTextAlign.RIGHT).setAlignItems(oFF.UiFlexAlignItems.CENTER).setPadding(oFF.UiCssBoxEdges.create("10px"));
		qdFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("3em"));
		this.m_queryDefinitionSwitch = qdFlex.addNewItemOfType(oFF.UiType.SWITCH).setName(oFF.QctController.QUERY_DEFINITON_SWITCH).setWidth(oFF.UiCssLength.create("100%")).setAlignItems(oFF.UiFlexAlignItems.CENTER);
		this.m_queryDefinitionSwitch.setOffText(" ").setOnText(" ");
		this.m_queryDefinitionSwitch.registerOnChange(this);
	}
	this.m_ccdLayout.buildOlapDialogUi(this.m_display.getGenesis());
	this.m_okButton = this.m_display.addNewButton();
	this.m_okButton.setName(oFF.QctController.OK_BUTTON);
	this.m_okButton.setText(this.m_context.getLocalization().getText(oFF.CtDialogI18n.I18N_QCT_OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(this);
	this.m_cancelButton = this.m_display.addNewButton();
	this.m_cancelButton.setName(oFF.QctController.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.m_context.getLocalization().getText(oFF.CtDialogI18n.I18N_QCT_CANCEL));
	this.m_cancelButton.registerOnPress(this);
	this.m_display.getGenesis().setRoot(this.m_ccdLayout.buildTree(genesis));
	this.m_display.open();
};
oFF.QctController.prototype.onBeforeClose = function(event)
{
	this.closeDialog();
};
oFF.QctController.prototype.closeDialog = function()
{
	if (!this.m_isClosing)
	{
		this.m_isClosing = true;
		if (oFF.notNull(this.m_display) && this.m_display.isOpen())
		{
			this.m_display.close();
		}
	}
	if (oFF.notNull(this.m_dialogCloseListener))
	{
		this.m_dialogCloseListener.onClose();
	}
};
oFF.QctController.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.QctController.TECHNICAL_BUTTON:
			this.m_model.setShowTechnical(event.getControl().isPressed());
			return;

		case oFF.QctController.OK_BUTTON:
			this.m_model.applyToQueryModel(this.m_currencyTranslationManager.getQueryModel());
			if (oFF.notNull(this.m_dialogCloseListener))
			{
				this.m_dialogCloseListener.onSubmit();
			}
			break;

		case oFF.QctController.CANCEL_BUTTON:
			break;
	}
	this.closeDialog();
};
oFF.QctController.prototype.onAfterOpen = function(event) {};
oFF.QctController.prototype.updateSettings = function()
{
	var cto;
	if (this.m_model.getCurrencyTranslationType() === null)
	{
		if (this.m_currencyTranslationDropDown.getItemCount() > 0)
		{
			cto = this.m_currencyTranslationDropDown.getItem(0).getCustomObject();
			this.m_model.setCurrencyTranslationType(cto);
		}
	}
	var co;
	if (oFF.XStringUtils.isNullOrEmpty(this.m_model.getTargetCurrency()) && oFF.notNull(this.m_currencyDropDown))
	{
		if (this.m_currencyDropDown.getItemCount() > 0)
		{
			co = this.m_currencyDropDown.getItem(0).getCustomObject();
			this.m_model.setTargetCurrency(co.getName());
		}
	}
	if (this.m_model.getCategory() === null && oFF.notNull(this.m_categoryDropdown))
	{
		if (this.m_categoryDropdown.getItemCount() > 0)
		{
			this.m_model.setCategory(this.m_categoryDropdown.getItem(0).getCustomObject());
		}
	}
	if (oFF.XStringUtils.isNullOrEmpty(this.m_model.getRateVersion()) && oFF.notNull(this.m_rateVersionDropdown))
	{
		if (this.m_rateVersionDropdown.getItemCount() > 0)
		{
			co = this.m_rateVersionDropdown.getItem(0).getCustomObject();
			this.m_model.setRateVersion(co.getName());
		}
	}
	if (this.m_model.getRateType() === null && oFF.notNull(this.m_rateTypeDropdown))
	{
		if (this.m_rateTypeDropdown.getItemCount() > 0)
		{
			this.m_model.setRateType(this.m_rateTypeDropdown.getItem(0).getCustomObject());
		}
	}
	if (this.m_model.getReferenceDate() === null && this.m_model.isFixedDate())
	{
		this.m_model.setReferenceDate(oFF.XDate.createDateFromIsoFormat("2020-05-05"));
	}
	if (oFF.notNull(this.m_queryDefinitionSwitch))
	{
		this.m_queryDefinitionSwitch.setOn(this.m_model.isConsiderCurrencyTranslationFromQueryDefinition());
		this.m_queryDefinitionSwitch.setEnabled(this.m_model.isMayConsiderOriginalCurrencyTranslation());
	}
	if (oFF.notNull(this.m_translationDefinitionSwitch))
	{
		this.m_translationDefinitionSwitch.setOn(this.m_model.isDefineCurrencyTranslation());
		this.m_translationDefinitionSwitch.setEnabled(oFF.notNull(this.m_currencyTranslationDropDown) && this.m_currencyTranslationDropDown.hasItems());
	}
	var i;
	var itemSize;
	var item;
	if (oFF.notNull(this.m_currencyTranslationDropDown))
	{
		if (this.m_model.getCurrencyTranslationType() !== null)
		{
			this.m_currencyTranslationDropDown.setSelectedName(this.m_model.getCurrencyTranslationType().getName());
		}
		itemSize = this.m_currencyTranslationDropDown.getItemCount();
		this.m_currencyTranslationDropDown.setEnabled(itemSize > 0 && this.m_model.isDefineCurrencyTranslation());
		for (i = 0; i < itemSize; i++)
		{
			item = this.m_currencyTranslationDropDown.getItem(i);
			cto = item.getCustomObject();
			item.setText(this.m_model.isShowTechnical() ? cto.getName() : cto.getText());
		}
	}
	if (oFF.notNull(this.m_currencyDropDown))
	{
		this.m_currencyDropDown.setSelectedName(this.m_model.getTargetCurrency());
		this.m_currencyDropDown.setEnabled(this.m_model.isMayDefineTargetCurrency());
		itemSize = this.m_currencyDropDown.getItemCount();
		for (i = 0; i < itemSize; i++)
		{
			item = this.m_currencyDropDown.getItem(i);
			co = item.getCustomObject();
			item.setText(this.m_model.isShowTechnical() ? co.getName() : co.getText());
		}
	}
	if (oFF.notNull(this.m_categoryDropdown))
	{
		var category = this.m_model.getCategory();
		this.m_categoryDropdown.setSelectedName(oFF.isNull(category) ? oFF.QctModel.DYNAMIC : category.getName());
		this.m_categoryDropdown.setEnabled(this.m_model.isMayDefinePlanningParameters());
	}
	if (oFF.notNull(this.m_rateVersionDropdown))
	{
		this.m_rateVersionDropdown.setSelectedName(this.m_model.getRateVersion());
		this.m_rateVersionDropdown.setEnabled(this.m_model.isMayDefinePlanningParameters());
		itemSize = this.m_rateVersionDropdown.getItemCount();
		for (i = 0; i < itemSize; i++)
		{
			item = this.m_rateVersionDropdown.getItem(i);
			co = item.getCustomObject();
			item.setText(this.m_model.isShowTechnical() ? co.getName() : co.getText());
		}
	}
	if (oFF.notNull(this.m_rateTypeDropdown))
	{
		var rt = this.m_model.getRateType();
		this.m_rateTypeDropdown.setSelectedName(oFF.isNull(rt) ? oFF.QctModel.DYNAMIC : rt.getName());
		this.m_rateTypeDropdown.setEnabled(this.m_model.isMayDefinePlanningParameters());
	}
	if (oFF.notNull(this.m_dateModeButton))
	{
		this.m_rdFlex.setVisible(this.m_model.isMayDefineFixedDate() || this.m_model.isMayDefineOffsetInMonths());
		this.m_dateModeButton.setSelectedName(this.m_model.isFixedDate() ? oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED : oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_BOOKING);
		this.m_dateModeButton.setEnabled(this.m_model.isMayDefineFixedDate() && this.m_model.isMayDefineOffsetInMonths());
	}
	if (oFF.notNull(this.m_referenceDatePicker) && this.m_model.isFixedDate())
	{
		this.m_referenceDatePicker.setVisible(this.m_model.isMayDefineFixedDate());
		this.m_dateOffsetGroup.setVisible(false);
		this.m_referenceDatePicker.setEnabled(this.m_model.isMayDefineFixedDate());
		if (this.m_model.getReferenceDate() !== null)
		{
			this.m_referenceDatePicker.setValue(this.m_model.getReferenceDate().getStringRepresentation());
		}
	}
	if (oFF.notNull(this.m_dateOffsetGroup) && !this.m_model.isFixedDate())
	{
		this.m_referenceDatePicker.setVisible(false);
		this.m_dateOffsetGroup.setVisible(this.m_model.isMayDefineOffsetInMonths());
		this.m_offsetSwitch.setEnabled(this.m_model.isMayDefineOffsetInMonths());
		this.m_offsetSwitch.setOn(this.m_model.isOffset());
		this.m_plusMinus.setEnabled(this.m_model.isMayDefineOffsetInMonths() && this.m_model.isOffset());
		this.m_plusMinus.setSelectedName(this.m_model.isNegativeOffset() ? oFF.QctController.MINUS : oFF.QctController.PLUS);
		this.m_offsetDropdown.setEnabled(this.m_model.isMayDefineOffsetInMonths() && this.m_model.isOffset());
		this.m_offsetDropdown.setSelectedName(oFF.XInteger.convertToString(this.m_model.getReferenceDateOffset()));
		this.m_dateGranularityRadioGroup.setEnabled(this.m_model.isMayDefineOffsetInMonths() && this.m_model.isOffset());
		this.m_dateGranularityRadioGroup.getRadioButtonByName(oFF.DateOffsetGranularity.DAY.getName()).setEnabled(this.m_model.isMayDefineOffsetInDays());
		this.m_dateGranularityRadioGroup.getRadioButtonByName(oFF.DateOffsetGranularity.WEEK.getName()).setEnabled(this.m_model.isMayDefineOffsetInDays());
		if (this.m_model.getReferenceOffsetGranularity() !== null)
		{
			this.m_dateGranularityRadioGroup.setSelectedName(this.m_model.getReferenceOffsetGranularity().getName());
		}
	}
};
oFF.QctController.prototype.onChange = function(event)
{
	var control = event.getControl();
	var valueItem = null;
	switch (control.getName())
	{
		case oFF.QctController.CURRENCY_DROPDOWN:
			valueItem = control.getSelectedItem().getCustomObject();
			this.m_model.setTargetCurrency(valueItem.getName());
			break;

		case oFF.QctController.CURRENCY_TRANSLATION_DROPDOWN:
			valueItem = control.getSelectedItem().getCustomObject();
			this.m_model.setCurrencyTranslationType(valueItem);
			break;

		case oFF.QctController.QUERY_DEFINITON_SWITCH:
			this.m_model.setConsiderCurrencyTranslationFromQueryDefinition(control.isOn());
			break;

		case oFF.QctController.TRANSLATION_DEFINITON_SWITCH:
			this.m_model.setDefineCurrencyTranslation(control.isOn());
			break;

		case oFF.QctController.OFFSET_SWITCH:
			this.m_model.setOffset(control.isOn());
			break;

		case oFF.QctController.REFERENCE_DATE_PICKER:
			this.m_model.setReferenceDate(oFF.XDate.createDateSafe(control.getValue()));
			break;
	}
	this.updateSettings();
};
oFF.QctController.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var selectedItem = control.getSelectedItem();
	var valueItem = selectedItem.getCustomObject();
	switch (control.getName())
	{
		case oFF.QctController.CATEGORY_DROPDOWN:
			this.m_model.setCategory(valueItem);
			break;

		case oFF.QctController.RATE_TYPE_DROPDOWN:
			this.m_model.setRateType(valueItem);
			break;

		case oFF.QctController.RATE_VERSION_DROPDOWN:
			this.m_model.setRateVersion(valueItem.getName());
			break;

		case oFF.QctController.OFFSET_DROPDOWN:
			this.m_model.setReferenceDateOffset(valueItem.getInteger());
			break;

		case oFF.QctController.DATE_OFFSET_GRANULARITY_RBG:
			this.m_model.setReferenceOffsetGranularity(valueItem);
			break;
	}
	this.updateSettings();
};
oFF.QctController.prototype.onCatalogsLoaded = function()
{
	var currencyTranslationObjects = this.m_currencyTranslationManager.getAvailableCurrencyTranslationObjects();
	var i;
	var size;
	var cto;
	var genesis = this.m_display.getGenesis();
	var localization = genesis.getUiManager().getLocalization();
	var dynamicText = localization.getText(oFF.CtDialogI18n.I18N_QCT_DYNAMIC);
	var customText = localization.getText(oFF.CtDialogI18n.I18N_QCT_CUSTOM);
	if (this.m_currencyTranslationManager.getQueryModel().getModelCapabilities().supportsCurrencyTranslation() && this.m_currencyTranslationManager.getMeasureCurrencyTranslation(oFF.QctModel.CUSTOM) === null && oFF.XCollectionUtils.hasElements(this.m_currencyTranslationManager.getAvailableCurrencies()))
	{
		this.m_currencyTranslationManager.addNewMeasureCurrencyTranslation(oFF.QctModel.CUSTOM, customText);
	}
	if (oFF.XCollectionUtils.hasElements(currencyTranslationObjects))
	{
		size = currencyTranslationObjects.size();
		for (i = 0; i < size; i++)
		{
			cto = currencyTranslationObjects.get(i);
			this.m_currencyTranslationDropDown.addNewItem().setText(cto.getText()).setCustomObject(cto).setName(cto.getName());
		}
	}
	var co;
	var currencyObjects = this.m_currencyTranslationManager.getAvailableCurrencies();
	if (oFF.XCollectionUtils.hasElements(currencyObjects))
	{
		size = currencyObjects.size();
		for (i = 0; i < size; i++)
		{
			co = currencyObjects.get(i);
			this.m_currencyDropDown.addNewItem().setText(co.getText()).setCustomObject(co).setName(co.getName());
		}
	}
	var categoryObjects = this.m_currencyTranslationManager.getAvailableCategories();
	if (oFF.XCollectionUtils.hasElements(categoryObjects) && oFF.notNull(this.m_categoryDropdown))
	{
		size = categoryObjects.size();
		this.m_categoryDropdown.addNewItem().setText(dynamicText).setCustomObject(null).setName(oFF.QctModel.DYNAMIC);
		for (i = 0; i < size; i++)
		{
			var cat = categoryObjects.get(i);
			this.m_categoryDropdown.addNewItem().setText(cat.getName()).setCustomObject(cat).setName(cat.getName());
		}
	}
	var rateVersionObjects = this.m_currencyTranslationManager.getAvailableRateVersions();
	if (oFF.XCollectionUtils.hasElements(rateVersionObjects) && oFF.notNull(this.m_rateVersionDropdown))
	{
		size = rateVersionObjects.size();
		co = oFF.QCurrencyObject.create(null, dynamicText);
		this.m_rateVersionDropdown.addNewItem().setText(co.getText()).setCustomObject(co).setName(co.getName());
		for (i = 0; i < size; i++)
		{
			co = rateVersionObjects.get(i);
			this.m_rateVersionDropdown.addNewItem().setText(co.getText()).setCustomObject(co).setName(co.getName());
		}
	}
	var rateTypeObjects = this.m_currencyTranslationManager.getAvailableRateTypes();
	if (oFF.XCollectionUtils.hasElements(rateTypeObjects) && oFF.notNull(this.m_rateTypeDropdown))
	{
		size = rateTypeObjects.size();
		this.m_rateTypeDropdown.addNewItem().setText(dynamicText).setCustomObject(null).setName(oFF.QctModel.DYNAMIC);
		for (i = 0; i < size; i++)
		{
			var rt = rateTypeObjects.get(i);
			this.m_rateTypeDropdown.addNewItem().setText(rt.getName()).setCustomObject(rt).setName(rt.getName());
		}
	}
	this.updateSettings();
};
oFF.QctController.prototype.onSelectionChange = function(event)
{
	var control = event.getControl();
	var selectedItem = control.getSelectedItem();
	switch (control.getName())
	{
		case oFF.QctController.PLUS_MINUS_SWITCH:
			this.m_model.setNegativeOffset(oFF.XString.isEqual(selectedItem.getName(), oFF.QctController.MINUS));
			break;

		case oFF.QctController.DATE_MODE_SWITCH:
			this.m_model.setFixedDate(oFF.XString.isEqual(selectedItem.getName(), oFF.CtDialogI18n.I18N_QCT_REFERENCE_DATE_FIXED));
			break;
	}
	this.updateSettings();
};
oFF.QctController.prototype.onObservableModelChange = function(model)
{
	this.updateSettings();
};

oFF.FAReflectionEngine = function() {};
oFF.FAReflectionEngine.prototype = new oFF.XObjectExt();
oFF.FAReflectionEngine.prototype._ff_c = "FAReflectionEngine";

oFF.FAReflectionEngine.createEngine = function(target)
{
	var obj = new oFF.FAReflectionEngine();
	obj.m_target = target;
	return obj;
};
oFF.FAReflectionEngine.prototype.m_target = null;
oFF.FAReflectionEngine.prototype.setTarget = function(target)
{
	this.m_target = target;
};
oFF.FAReflectionEngine.prototype.getTarget = function()
{
	return this.m_target;
};
oFF.FAReflectionEngine.prototype.getMethodNames = function()
{
	return this.getMethodNamesOf(this.m_target);
};
oFF.FAReflectionEngine.prototype.getMethodNamesOfLastObject = function(commandString)
{
	var lastObject = this.getLastObject(commandString);
	if (lastObject.hasErrors())
	{
		return oFF.ExtResult.createWithExternalMessages(null, lastObject);
	}
	var methodNames = this.getMethodNamesOf(lastObject.getData().getValue());
	return oFF.ExtResult.create(methodNames, lastObject);
};
oFF.FAReflectionEngine.prototype.getMethodNamesOf = function(object)
{
	var methodNames = oFF.XHashSetOfString.create();
	if (oFF.isNull(object))
	{
		return methodNames;
	}
	var className = oFF.XClass.getCanonicalClassName(object);
	var clazz = oFF.XClass.createByName(className);
	if (oFF.isNull(clazz))
	{
		return methodNames;
	}
	var methods = oFF.XReflection.getMethods(clazz);
	for (var i = 0; i < methods.size(); i++)
	{
		methodNames.add(methods.get(i).getName());
	}
	return methodNames;
};
oFF.FAReflectionEngine.prototype.invoke = function(commandString)
{
	var lastObject = this.getLastObject(commandString);
	if (lastObject.hasErrors())
	{
		return oFF.ExtResult.createWithExternalMessages(null, lastObject);
	}
	var value = lastObject.getData().getValue();
	if (oFF.isNull(value))
	{
		return oFF.ExtResult.create(oFF.XStringValue.create("null"), lastObject);
	}
	return oFF.ExtResult.create(oFF.XStringValue.create(value.toString()), lastObject);
};
oFF.FAReflectionEngine.prototype.getLastObject = function(commandString)
{
	if (oFF.XStringUtils.isNullOrEmpty(commandString))
	{
		return oFF.ExtResult.createWithErrorMessage("commandString was empty");
	}
	var currentTarget = this.m_target;
	var currentResult = null;
	var commands = oFF.XStringTokenizer.splitString(commandString, ".");
	for (var i = 0; i < commands.size(); i++)
	{
		var command = commands.get(i);
		if (oFF.XStringUtils.isNullOrEmpty(command))
		{
			continue;
		}
		try
		{
			var methodName = this.extractMethodName(command);
			var params = this.extractParams(command);
			currentResult = oFF.XReflection.invokeMethodWithArgs(currentTarget, methodName, params);
			currentTarget = currentResult.getValue();
		}
		catch (t)
		{
			return oFF.ExtResult.createWithErrorMessage("error in command chain");
		}
	}
	if (oFF.isNull(currentResult))
	{
		return oFF.ExtResult.createWithErrorMessage("no result");
	}
	return oFF.ExtResult.create(currentResult, null);
};
oFF.FAReflectionEngine.prototype.extractMethodName = function(command)
{
	var open = oFF.XString.indexOf(command, "(");
	return open !== -1 ? oFF.XString.substring(command, 0, open) : command;
};
oFF.FAReflectionEngine.prototype.extractParams = function(command)
{
	var params = oFF.XList.create();
	var open = oFF.XString.indexOf(command, "(");
	var close = oFF.XString.indexOf(command, ")");
	if (open === -1 && close === -1)
	{
		return params;
	}
	var paramString = oFF.XString.substring(command, open + 1, close);
	if (oFF.XStringUtils.isNullOrEmpty(paramString))
	{
		return params;
	}
	var paramStrings = oFF.XStringTokenizer.splitString(paramString, ",");
	for (var i = 0; i < paramStrings.size(); i++)
	{
		var s = oFF.XString.trim(paramStrings.get(i));
		params.add(this.tryParseValue(s));
	}
	return params;
};
oFF.FAReflectionEngine.prototype.tryParseValue = function(s)
{
	if (oFF.XString.startsWith(s, "\"") && oFF.XString.endsWith(s, "\""))
	{
		var sub = oFF.XString.substring(s, 1, oFF.XString.size(s) - 1);
		return oFF.XReflectionParam.createString(sub);
	}
	try
	{
		var intValue = oFF.XInteger.convertFromString(s);
		return oFF.XReflectionParam.createInteger(intValue);
	}
	catch (t1)
	{
		try
		{
			var boolValue = oFF.XBoolean.convertFromString(s);
			return oFF.XReflectionParam.createBoolean(boolValue);
		}
		catch (t2)
		{
			try
			{
				var doubleValue = oFF.XDouble.convertFromString(s);
				return oFF.XReflectionParam.createDouble(doubleValue);
			}
			catch (t3)
			{
				var msg = oFF.XStringUtils.concatenate3("parameter ", s, " cannot be parsed");
				throw oFF.XException.createIllegalArgumentException(msg);
			}
		}
	}
};

oFF.FirstAid = function() {};
oFF.FirstAid.prototype = new oFF.XObjectExt();
oFF.FirstAid.prototype._ff_c = "FirstAid";

oFF.FirstAid.createFirstAid = function(application)
{
	var obj = new oFF.FirstAid();
	obj.setupExt(application);
	return obj;
};
oFF.FirstAid.prototype.m_application = null;
oFF.FirstAid.prototype.m_allAreaQueryManager = null;
oFF.FirstAid.prototype.m_qms = null;
oFF.FirstAid.prototype.m_input = null;
oFF.FirstAid.prototype.m_output = null;
oFF.FirstAid.prototype.m_oldLastDot = 0;
oFF.FirstAid.prototype.m_currentQm = null;
oFF.FirstAid.prototype.m_currentEngine = null;
oFF.FirstAid.prototype.setupExt = function(application)
{
	this.m_application = application;
	this.m_oldLastDot = -1;
};
oFF.FirstAid.prototype.buildOlapDialogUi = function(genesis)
{
	var kernel = this.m_application.getProcess().getKernel();
	var selectedProcesses = kernel.selectProcesses(oFF.ProcessEntity.OLAP_ENVIRONMENT, null);
	var olapEnvironment = null;
	if (selectedProcesses.size() > 0)
	{
		var firstProcess = selectedProcesses.get(0);
		olapEnvironment = firstProcess.getEntity(oFF.ProcessEntity.OLAP_ENVIRONMENT);
		this.m_allAreaQueryManager = olapEnvironment.getAllAreaQueryManager();
	}
	else
	{
		this.m_allAreaQueryManager = oFF.XList.create();
	}
	var root = genesis.newRoot(oFF.UiType.FLEX_LAYOUT);
	root.useMaxSpace();
	root.setDirection(oFF.UiFlexDirection.ROW);
	root.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	root.setJustifyContent(oFF.UiFlexJustifyContent.CENTER);
	root.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_qms = root.addNewItemOfType(oFF.UiType.LIST);
	this.m_qms.setWidth(oFF.UiCssLength.create("30%"));
	this.m_qms.useMaxHeight();
	this.m_qms.setPadding(oFF.UiCssBoxEdges.create("4px"));
	this.m_qms.setBorderWidth(oFF.UiCssBoxEdges.create("0px"));
	this.m_qms.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
	this.m_qms.registerOnSelect(this);
	var midSpacer = root.addNewItemOfType(oFF.UiType.SPACER);
	midSpacer.setWidth(oFF.UiCssLength.create("1px"));
	midSpacer.setHeight(oFF.UiCssLength.create("100%"));
	midSpacer.setBackgroundColor(oFF.UiColor.GREY);
	var flex = root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	flex.useMaxSpace();
	flex.setPadding(oFF.UiCssBoxEdges.create("4px"));
	flex.setDirection(oFF.UiFlexDirection.COLUMN);
	var consoleLbl = flex.addNewItemOfType(oFF.UiType.LABEL);
	consoleLbl.setFlex("0 1 auto");
	consoleLbl.setText("Console: ");
	this.m_input = flex.addNewItemOfType(oFF.UiType.INPUT);
	this.m_input.useMaxWidth();
	this.m_input.registerOnEnter(this);
	this.m_input.registerOnLiveChange(this);
	this.m_input.registerOnSuggestionSelect(this);
	this.m_output = flex.addNewItemOfType(oFF.UiType.TEXT_AREA);
	this.m_output.useMaxSpace();
	this.m_output.setFlex("0 1 auto");
	for (var i = 0; i < this.m_allAreaQueryManager.size(); i++)
	{
		var qm = this.m_allAreaQueryManager.get(i);
		var item = this.m_qms.addNewItem();
		item.setText(qm.getName());
		item.setDescription(qm.getDataSource().getFullQualifiedName());
		item.setCustomObject(qm);
		if (i === 0)
		{
			item.setSelected(true);
			this.selectQm(qm);
		}
	}
};
oFF.FirstAid.prototype.onSelect = function(event)
{
	var control = event.getControl();
	if (control === this.m_qms)
	{
		this.selectQm(this.m_qms.getSelectedItem().getCustomObject());
	}
};
oFF.FirstAid.prototype.selectQm = function(queryManager)
{
	this.m_currentQm = queryManager;
	this.m_currentEngine = oFF.FAReflectionEngine.createEngine(this.m_currentQm);
	this.updateSuggestions(this.m_currentEngine.getMethodNames(), null);
};
oFF.FirstAid.prototype.onSuggestionSelect = function(event)
{
	if (event.getControl() === this.m_input)
	{
		this.handleInput(event.getSelectedItem().getText());
	}
};
oFF.FirstAid.prototype.onEnter = function(event)
{
	if (event.getControl() === this.m_input)
	{
		if (oFF.isNull(this.m_currentEngine))
		{
			return;
		}
		this.handleInput(this.m_input.getText());
	}
};
oFF.FirstAid.prototype.handleInput = function(text)
{
	var result = this.m_currentEngine.invoke(text);
	if (result.hasErrors())
	{
		this.m_output.setText(result.getSummary());
	}
	else
	{
		this.m_output.setText(result.getData().toString());
	}
};
oFF.FirstAid.prototype.onLiveChange = function(event)
{
	if (event.getControl() === this.m_input)
	{
		var text = this.m_input.getText();
		if (oFF.isNull(this.m_currentEngine))
		{
			return;
		}
		var lastDot = oFF.XString.lastIndexOf(text, ".");
		if (lastDot !== this.m_oldLastDot)
		{
			if (lastDot === -1)
			{
				this.updateSuggestions(this.m_currentEngine.getMethodNames(), null);
			}
			else
			{
				var result = this.m_currentEngine.getMethodNamesOfLastObject(text);
				if (result.isValid())
				{
					this.updateSuggestions(result.getData(), text);
				}
			}
			this.m_oldLastDot = lastDot;
		}
	}
};
oFF.FirstAid.prototype.updateSuggestions = function(methodNames, prefix)
{
	var hasPrefix = oFF.XStringUtils.isNotNullAndNotEmpty(prefix);
	this.m_input.clearSuggestions();
	var iterator = methodNames.getIterator();
	while (iterator.hasNext())
	{
		var methodName = iterator.next();
		var suggestionItem = this.m_input.addNewSuggestion();
		suggestionItem.setText(hasPrefix ? oFF.XStringUtils.concatenate2(prefix, methodName) : methodName);
	}
	oFF.XObjectExt.release(iterator);
};

oFF.FirstAidDialog = function() {};
oFF.FirstAidDialog.prototype = new oFF.XObjectExt();
oFF.FirstAidDialog.prototype._ff_c = "FirstAidDialog";

oFF.FirstAidDialog.createFirstAidDialog = function(application, uiMgr)
{
	var obj = new oFF.FirstAidDialog();
	obj.setupExt(application, uiMgr);
	return obj;
};
oFF.FirstAidDialog.prototype.m_firstAid = null;
oFF.FirstAidDialog.prototype.m_dialog = null;
oFF.FirstAidDialog.prototype.m_closeBtn = null;
oFF.FirstAidDialog.prototype.setupExt = function(application, uiMgr)
{
	this.m_dialog = uiMgr.newControl(oFF.UiType.DIALOG);
	this.m_dialog.setTitle("FirstAid - QueryManager Overview");
	this.m_dialog.setWidth(oFF.UiCssLength.create("1400px"));
	this.m_dialog.setHeight(oFF.UiCssLength.create("600px"));
	this.m_dialog.setPadding(oFF.UiCssBoxEdges.create("5px"));
	this.m_dialog.registerOnAfterClose(this);
	this.m_closeBtn = this.m_dialog.addNewDialogButton();
	this.m_closeBtn.setText("Close");
	this.m_closeBtn.registerOnPress(this);
	var dialogGenesis = oFF.UiGenesis.create(this.m_dialog);
	this.m_firstAid = oFF.FirstAid.createFirstAid(application);
	this.m_firstAid.buildOlapDialogUi(dialogGenesis);
};
oFF.FirstAidDialog.prototype.open = function()
{
	return this.m_dialog.open();
};
oFF.FirstAidDialog.prototype.onAfterClose = function(event) {};
oFF.FirstAidDialog.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_closeBtn)
	{
		this.m_dialog.close();
	}
};
oFF.FirstAidDialog.prototype.releaseObject = function()
{
	this.m_closeBtn = oFF.XObjectExt.release(this.m_closeBtn);
	this.m_dialog = oFF.XObjectExt.release(this.m_dialog);
	this.m_firstAid = oFF.XObjectExt.release(this.m_firstAid);
	oFF.XObjectExt.prototype.releaseObject.call( this );
};

oFF.OlapUiPropertyListHelper = function() {};
oFF.OlapUiPropertyListHelper.prototype = new oFF.XObject();
oFF.OlapUiPropertyListHelper.prototype._ff_c = "OlapUiPropertyListHelper";

oFF.OlapUiPropertyListHelper.create = function(createOperations)
{
	var obj = new oFF.OlapUiPropertyListHelper();
	obj.setupExt(createOperations);
	return obj;
};
oFF.OlapUiPropertyListHelper.prototype.m_values = null;
oFF.OlapUiPropertyListHelper.prototype.m_layout = null;
oFF.OlapUiPropertyListHelper.prototype.m_inputs = null;
oFF.OlapUiPropertyListHelper.prototype.m_checkboxes = null;
oFF.OlapUiPropertyListHelper.prototype.setupExt = function(createOperations)
{
	this.m_values = oFF.XHashMapByString.create();
	this.m_layout = createOperations.newControl(oFF.UiType.VERTICAL_LAYOUT);
	this.m_inputs = oFF.XHashMapByString.create();
	this.m_checkboxes = oFF.XHashMapByString.create();
};
oFF.OlapUiPropertyListHelper.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.OlapUiPropertyListHelper.prototype.buildOlapDialogUi = function(genesis)
{
	genesis.setRoot(this.m_layout);
};
oFF.OlapUiPropertyListHelper.prototype.addNewLine = function(name, text)
{
	var line = this.m_layout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	line.setName(oFF.XStringUtils.concatenate2(name, "Container"));
	line.setJustifyContent(oFF.UiFlexJustifyContent.SPACE_BETWEEN);
	var label = line.addNewItemOfType(oFF.UiType.LABEL);
	label.setText(text);
	label.setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
	return line;
};
oFF.OlapUiPropertyListHelper.prototype.addBooleanProperty = function(name, text, value)
{
	this.m_values.put(name, oFF.XBooleanValue.create(value));
	var line = this.addNewLine(name, text);
	var checkbox = line.addNewItemOfType(oFF.UiType.CHECKBOX);
	checkbox.setName(name);
	checkbox.setChecked(value);
	checkbox.registerOnChange(this);
	this.m_checkboxes.put(name, checkbox);
	return checkbox;
};
oFF.OlapUiPropertyListHelper.prototype.addStringProperty = function(name, text, value)
{
	this.m_values.put(name, oFF.XStringValue.create(value));
	var line = this.addNewLine(name, text);
	var input = line.addNewItemOfType(oFF.UiType.INPUT);
	input.setName(name);
	input.setText(value);
	input.registerOnEditingEnd(this);
	this.m_inputs.put(name, input);
	return input;
};
oFF.OlapUiPropertyListHelper.prototype.getBooleanValue = function(name)
{
	return this.m_values.getByKey(name).getBoolean();
};
oFF.OlapUiPropertyListHelper.prototype.setBooleanValue = function(name, value)
{
	this.m_values.getByKey(name).setBoolean(value);
	this.m_checkboxes.getByKey(name).setChecked(value);
};
oFF.OlapUiPropertyListHelper.prototype.getStringValue = function(name)
{
	return this.m_values.getByKey(name).getString();
};
oFF.OlapUiPropertyListHelper.prototype.getInput = function(name)
{
	return this.m_inputs.getByKey(name);
};
oFF.OlapUiPropertyListHelper.prototype.setStringValue = function(name, value)
{
	this.m_values.getByKey(name).setString(value);
	return this.m_inputs.getByKey(name).setText(value);
};
oFF.OlapUiPropertyListHelper.prototype.onChange = function(event)
{
	var control = event.getControl();
	var value = this.m_values.getByKey(control.getName());
	if (oFF.isNull(value))
	{
		return;
	}
	value.setBoolean(control.isChecked());
};
oFF.OlapUiPropertyListHelper.prototype.onEditingEnd = function(event)
{
	var control = event.getControl();
	var value = this.m_values.getByKey(control.getName());
	if (oFF.isNull(value))
	{
		return;
	}
	value.setString(control.getText());
};

oFF.OlapUiDatePicker = function() {};
oFF.OlapUiDatePicker.prototype = new oFF.XObject();
oFF.OlapUiDatePicker.prototype._ff_c = "OlapUiDatePicker";

oFF.OlapUiDatePicker.create = function(uiManager)
{
	var obj = new oFF.OlapUiDatePicker();
	obj.setupExt(uiManager);
	return obj;
};
oFF.OlapUiDatePicker.prototype.m_input = null;
oFF.OlapUiDatePicker.prototype.m_calendarIcon = null;
oFF.OlapUiDatePicker.prototype.m_calendarPop = null;
oFF.OlapUiDatePicker.prototype.m_calendar = null;
oFF.OlapUiDatePicker.prototype.m_listenerOnChange = null;
oFF.OlapUiDatePicker.prototype.setupExt = function(uiManager)
{
	this.m_input = uiManager.newControl(oFF.UiType.INPUT);
	this.m_calendarIcon = this.m_input.addNewEndIcon();
	this.m_calendarIcon.setIcon("appointment-2");
	this.m_calendarIcon.registerOnPress(this);
	this.m_calendarPop = uiManager.newControl(oFF.UiType.POPOVER);
	this.m_calendarPop.setPlacement(oFF.UiPlacementType.BOTTOM);
	this.m_calendar = this.m_calendarPop.setNewContent(oFF.UiType.CALENDAR);
	this.m_calendar.registerOnChange(this);
};
oFF.OlapUiDatePicker.prototype.releaseObject = function()
{
	this.m_input = oFF.XObjectExt.release(this.m_input);
	this.m_calendar = oFF.XObjectExt.release(this.m_calendar);
	this.m_calendarPop = oFF.XObjectExt.release(this.m_calendarPop);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapUiDatePicker.prototype.getInput = function()
{
	return this.m_input;
};
oFF.OlapUiDatePicker.prototype.getCalendar = function()
{
	return this.m_calendar;
};
oFF.OlapUiDatePicker.prototype.getCalendarIcon = function()
{
	return this.m_calendarIcon;
};
oFF.OlapUiDatePicker.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_calendarIcon)
	{
		this.m_calendarPop.openAt(control);
	}
};
oFF.OlapUiDatePicker.prototype.onChange = function(event)
{
	var control = event.getControl();
	if (control === this.m_calendar)
	{
		this.m_input.setText(this.m_calendar.getStartDate());
		this.m_calendarPop.close();
		if (oFF.notNull(this.m_listenerOnChange))
		{
			this.m_listenerOnChange.onChange(event);
		}
	}
};
oFF.OlapUiDatePicker.prototype.registerOnChange = function(listener)
{
	this.m_listenerOnChange = listener;
	return this.m_input;
};
oFF.OlapUiDatePicker.prototype.getListenerOnChange = function()
{
	return this.m_listenerOnChange;
};

oFF.OlapUiIconPopover = function() {};
oFF.OlapUiIconPopover.prototype = new oFF.XObject();
oFF.OlapUiIconPopover.prototype._ff_c = "OlapUiIconPopover";

oFF.OlapUiIconPopover.createPopoverWithText = function(uiManager, name, anchor, text)
{
	var obj = new oFF.OlapUiIconPopover();
	var label = uiManager.newControl(oFF.UiType.LABEL);
	label.setWrapping(true);
	label.setText(text);
	obj.setupExt(uiManager, name, anchor, label);
	return obj;
};
oFF.OlapUiIconPopover.createPopoverWithContent = function(uiManager, name, anchor, content)
{
	var obj = new oFF.OlapUiIconPopover();
	obj.setupExt(uiManager, name, anchor, content);
	return obj;
};
oFF.OlapUiIconPopover.prototype.m_anchor = null;
oFF.OlapUiIconPopover.prototype.m_popover = null;
oFF.OlapUiIconPopover.prototype.m_keepOpen = false;
oFF.OlapUiIconPopover.prototype.setupExt = function(uiManager, name, anchor, content)
{
	this.m_anchor = anchor;
	this.m_anchor.registerOnPress(this);
	this.m_anchor.registerOnHover(this);
	this.m_anchor.registerOnHoverEnd(this);
	this.m_popover = uiManager.newControl(oFF.UiType.POPOVER);
	this.m_popover.setName(name);
	this.m_popover.registerOnAfterClose(this);
	var inner = this.m_popover.setNewContent(oFF.UiType.VERTICAL_LAYOUT);
	inner.setPadding(oFF.UiCssBoxEdges.create("15px"));
	inner.setWidth(oFF.UiCssLength.create("320px"));
	inner.addItem(content);
	if (uiManager.getDeviceInfo().isSmartphone())
	{
		this.m_popover.setPlacement(oFF.UiPlacementType.BOTTOM);
	}
	else
	{
		this.m_popover.setPlacement(oFF.UiPlacementType.RIGHT);
	}
};
oFF.OlapUiIconPopover.prototype.releaseObject = function()
{
	this.m_anchor = null;
	this.m_popover = oFF.XObjectExt.release(this.m_popover);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapUiIconPopover.prototype.onAfterClose = function(event)
{
	this.m_keepOpen = false;
};
oFF.OlapUiIconPopover.prototype.onPress = function(event)
{
	this.onHover(event);
	this.m_keepOpen = true;
};
oFF.OlapUiIconPopover.prototype.onHover = function(event)
{
	this.m_popover.openAt(event.getControl());
};
oFF.OlapUiIconPopover.prototype.onHoverEnd = function(event)
{
	if (!this.m_keepOpen)
	{
		this.m_popover.close();
	}
};

oFF.OlapUiSideTab = function() {};
oFF.OlapUiSideTab.prototype = new oFF.XObject();
oFF.OlapUiSideTab.prototype._ff_c = "OlapUiSideTab";

oFF.OlapUiSideTab.create = function(createOperations)
{
	var obj = new oFF.OlapUiSideTab();
	obj.setupExt(createOperations);
	return obj;
};
oFF.OlapUiSideTab.prototype.m_tabList = null;
oFF.OlapUiSideTab.prototype.m_contentPage = null;
oFF.OlapUiSideTab.prototype.m_selected = 0;
oFF.OlapUiSideTab.prototype.m_listener = null;
oFF.OlapUiSideTab.prototype.setupExt = function(createOperations)
{
	this.m_listener = oFF.XList.create();
	this.m_tabList = createOperations.newControl(oFF.UiType.LIST);
	this.m_tabList.setSelectionMode(oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
	this.m_tabList.setSize(oFF.UiSize.createByCss("25%", "100%"));
	this.m_tabList.setFlex("1 1 150px");
	this.m_tabList.setBorderWidth(oFF.UiCssBoxEdges.create("0px"));
	this.m_tabList.registerOnSelect(this);
	this.m_contentPage = createOperations.newControl(oFF.UiType.PAGE);
	this.m_contentPage.setShowHeader(false);
	this.m_contentPage.setSize(oFF.UiSize.createByCss("75%", "100%"));
	this.m_contentPage.setFlex("1 1 auto");
};
oFF.OlapUiSideTab.prototype.releaseObject = function()
{
	this.m_contentPage = oFF.XObjectExt.release(this.m_contentPage);
	this.m_tabList = oFF.XObjectExt.release(this.m_tabList);
	this.m_listener = oFF.XObjectExt.release(this.m_listener);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapUiSideTab.prototype.buildOlapDialogUi = function(genesis)
{
	var root = genesis.newRoot(oFF.UiType.FLEX_LAYOUT);
	root.setSize(oFF.UiSize.createByCss("100%", "100%"));
	root.addItem(this.m_tabList);
	root.addItem(this.m_contentPage);
	if (this.m_tabList.getItemCount() > 0)
	{
		this.m_selected = 0;
		this.m_tabList.setSelectedItemByIndex(this.m_selected);
		this.m_listener.get(this.m_selected).onTabSelected(this.m_contentPage);
	}
};
oFF.OlapUiSideTab.prototype.onSelect = function(event)
{
	this.m_listener.get(this.m_selected).onTabDeselected();
	this.m_selected = this.m_tabList.getIndexOfItem(this.m_tabList.getSelectedItem());
	this.m_listener.get(this.m_selected).onTabSelected(this.m_contentPage);
};
oFF.OlapUiSideTab.prototype.getActiveTabName = function()
{
	return this.m_tabList.getSelectedItem().getName();
};
oFF.OlapUiSideTab.prototype.addTab = function(key, text, listener)
{
	if (oFF.isNull(listener))
	{
		throw oFF.XException.createIllegalArgumentException("Listener cannot be null");
	}
	var newItem = this.m_tabList.addNewItem();
	newItem.setName(key).setText(text);
	newItem.setCustomObject(listener);
	this.m_listener.add(listener);
};
oFF.OlapUiSideTab.prototype.registerOnSelect = function(listener)
{
	return this.m_tabList.registerOnSelect(listener);
};
oFF.OlapUiSideTab.prototype.getListenerOnSelect = function()
{
	return this.m_tabList.getListenerOnSelect();
};

oFF.DfOuOlapView = function() {};
oFF.DfOuOlapView.prototype = new oFF.DfUiContentView();
oFF.DfOuOlapView.prototype._ff_c = "DfOuOlapView";

oFF.DfOuOlapView.prototype.m_queryManager = null;
oFF.DfOuOlapView.prototype.initOlapView = function(genesis, queryManager)
{
	if (oFF.isNull(queryManager))
	{
		throw oFF.XException.createRuntimeException("Error while creating a olap ui view. Missing query manager!");
	}
	this.m_queryManager = queryManager;
	oFF.DfUiContentView.prototype.initView.call( this , genesis);
};
oFF.DfOuOlapView.prototype.setupView = function()
{
	this.setupOlapView(this.m_queryManager);
};
oFF.DfOuOlapView.prototype.releaseObject = function()
{
	this.m_queryManager = null;
	oFF.DfUiContentView.prototype.releaseObject.call( this );
};
oFF.DfOuOlapView.prototype.getQueryManager = function()
{
	return this.m_queryManager;
};
oFF.DfOuOlapView.prototype.setQueryManager = function(queryManager)
{
	this.m_queryManager = queryManager;
};
oFF.DfOuOlapView.prototype.getLocalization = function()
{
	return oFF.UiLocalizationCenter.getCenter();
};
oFF.DfOuOlapView.prototype.getTheme = function()
{
	return oFF.UiTheme.getCurrentTheme();
};

oFF.OuLocalizationMessages = function() {};
oFF.OuLocalizationMessages.prototype = new oFF.OuLocalization();
oFF.OuLocalizationMessages.prototype._ff_c = "OuLocalizationMessages";

oFF.OuLocalizationMessages.staticSetupLocalizationMessages = function() {};

oFF.OuLocalizationTexts = function() {};
oFF.OuLocalizationTexts.prototype = new oFF.OuLocalization();
oFF.OuLocalizationTexts.prototype._ff_c = "OuLocalizationTexts";

oFF.OuLocalizationTexts.I18N_SAVE = null;
oFF.OuLocalizationTexts.I18N_CREATE = null;
oFF.OuLocalizationTexts.I18N_DELETE = null;
oFF.OuLocalizationTexts.I18N_DISPLAY = null;
oFF.OuLocalizationTexts.I18N_CHANGE = null;
oFF.OuLocalizationTexts.I18N_CLEAR = null;
oFF.OuLocalizationTexts.I18N_MESSAGES = null;
oFF.OuLocalizationTexts.I18N_MESSAGE_SEVERITY = null;
oFF.OuLocalizationTexts.I18N_MESSAGE_TEXT = null;
oFF.OuLocalizationTexts.staticSetupLocalizationTexts = function()
{
	oFF.OuLocalizationTexts.I18N_SAVE = oFF.OuLocalization.createLocalization("I18N_SAVE", "Save");
	oFF.OuLocalizationTexts.I18N_CREATE = oFF.OuLocalization.createLocalization("I18N_CREATE", "Create");
	oFF.OuLocalizationTexts.I18N_DELETE = oFF.OuLocalization.createLocalization("I18N_DELETE", "Delete");
	oFF.OuLocalizationTexts.I18N_DISPLAY = oFF.OuLocalization.createLocalization("I18N_DISPLAY", "Display");
	oFF.OuLocalizationTexts.I18N_CHANGE = oFF.OuLocalization.createLocalization("I18N_CHANGE", "Change");
	oFF.OuLocalizationTexts.I18N_CLEAR = oFF.OuLocalization.createLocalization("I18N_CLEAR", "Clear");
	oFF.OuLocalizationTexts.I18N_MESSAGES = oFF.OuLocalization.createLocalization("I18N_MESSAGES", "Messages");
	oFF.OuLocalizationTexts.I18N_MESSAGE_SEVERITY = oFF.OuLocalization.createLocalization("I18N_MESSAGE_SEVERITY", "Severity");
	oFF.OuLocalizationTexts.I18N_MESSAGE_TEXT = oFF.OuLocalization.createLocalization("I18N_MESSAGE_TEXT", "Message");
};

oFF.OuModelAQuery = function() {};
oFF.OuModelAQuery.prototype = new oFF.OuModel();
oFF.OuModelAQuery.prototype._ff_c = "OuModelAQuery";

oFF.OuModelAQuery.SOURCE_QUERY_MODEL = null;
oFF.OuModelAQuery.staticSetupQueryModel = function()
{
	oFF.OuModelAQuery.SOURCE_QUERY_MODEL = oFF.COuPropertySource.sCreateSourceProperty("QueryModel");
};
oFF.OuModelAQuery.prototype.handleSetSourceProperties = function(oSourceProperties)
{
	var loQueryModel = oSourceProperties.getProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL);
	this.getSourceProperties().setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, loQueryModel);
};
oFF.OuModelAQuery.prototype.getSourceQuery = function()
{
	var loQueryModel = this.getSourceProperties().getProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL);
	return oFF.OuSourceQuery.sCreateQuery(loQueryModel);
};
oFF.OuModelAQuery.prototype.getName = function()
{
	var lName = null;
	var loQuery = this.getSourceQuery();
	if (oFF.notNull(loQuery))
	{
		lName = loQuery.getName();
	}
	return lName;
};
oFF.OuModelAQuery.prototype.releaseObject = function()
{
	oFF.OuModel.prototype.releaseObject.call( this );
};

oFF.CurrencyCatalogController = function() {};
oFF.CurrencyCatalogController.prototype = new oFF.AbstractCatalogController();
oFF.CurrencyCatalogController.prototype._ff_c = "CurrencyCatalogController";

oFF.CurrencyCatalogController.create = function(context)
{
	var obj = new oFF.CurrencyCatalogController();
	obj.m_context = context;
	return obj;
};
oFF.CurrencyCatalogController.prototype.addItemToSelectionList = function(selectionList, catalogItem)
{
	var row = selectionList.addNewRow().setName(catalogItem.getCurrencyKey()).setCustomObject(catalogItem);
	var cell = row.addNewCell();
	cell.setText(catalogItem.getCurrencyKey()).setCustomObject(catalogItem);
	cell = row.addNewCell();
	cell.setText(catalogItem.getCurrencyText()).setCustomObject(catalogItem);
};

oFF.CurrencyTranslationCatalogController = function() {};
oFF.CurrencyTranslationCatalogController.prototype = new oFF.AbstractCatalogController();
oFF.CurrencyTranslationCatalogController.prototype._ff_c = "CurrencyTranslationCatalogController";

oFF.CurrencyTranslationCatalogController.create = function(context)
{
	var obj = new oFF.CurrencyTranslationCatalogController();
	obj.m_context = context;
	return obj;
};
oFF.CurrencyTranslationCatalogController.prototype.addItemToSelectionList = function(selectionList, catalogItem)
{
	var row = selectionList.addNewRow().setName(catalogItem.getCurrencyKey()).setCustomObject(catalogItem);
	var cell = row.addNewCell();
	cell.setText(catalogItem.getCurrencyTranslationNameKey()).setCustomObject(catalogItem);
	cell = row.addNewCell();
	cell.setText(catalogItem.getCurrencyTranslationNameText()).setCustomObject(catalogItem);
	cell = row.addNewCell();
	cell.setText(catalogItem.getCurrencyTargetKey()).setCustomObject(catalogItem);
};

oFF.OuCurrencyConversionDialogI18n = function() {};
oFF.OuCurrencyConversionDialogI18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.OuCurrencyConversionDialogI18n.prototype._ff_c = "OuCurrencyConversionDialogI18n";

oFF.OuCurrencyConversionDialogI18n.TITLE = "FF_CURR_DIALOG_TITLE";
oFF.OuCurrencyConversionDialogI18n.TARGET_CURRENCY_LABEL = "FF_CURR_DIALOG_TARGET_CURRENCY_LABEL";
oFF.OuCurrencyConversionDialogI18n.TRANSLATION_TYPE_LABEL = "FF_CURR_DIALOG_TRANSLATION_TYPE_LABEL";
oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_DEFAULT_VALUE = "FF_CURR_DIALOG_TARGET_DROPDOWN_DEFAULT_VALUE";
oFF.OuCurrencyConversionDialogI18n.TYPE_DROPDOWN_DEFAULT_VALUE = "FF_CURR_DIALOG_TYPE_DROPDOWN_DEFAULT_VALUE";
oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_VALUE = "FF_CURR_DIALOG_TARGET_DROPDOWN_VALUE";
oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_SUPPORTED = "FF_CURR_DIALOG_TOAST_ERROR_TRANSLATION_NOT_SUPPORTED";
oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_ENABLED = "FF_CURR_DIALOG_TOAST_ERROR_TRANSLATION_NOT_ENABLED";
oFF.OuCurrencyConversionDialogI18n.staticSetup = function()
{
	var tmpProvider = new oFF.OuCurrencyConversionDialogI18n();
	tmpProvider.setupProvider(oFF.OuCurrencyConversionDialog.DEFAULT_PROGRAM_NAME, false);
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TITLE, "Select Conversions");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TARGET_CURRENCY_LABEL, "Target Currency");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TRANSLATION_TYPE_LABEL, "Currency Translation Type");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_DEFAULT_VALUE, "Display Original Currency");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TYPE_DROPDOWN_DEFAULT_VALUE, "No Conversion");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_VALUE, "{0} | {1}");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_SUPPORTED, "The query does not support Currency Translation.");
	tmpProvider.addText(oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_ENABLED, "A Currency Translation cannot be applied on this query.");
	return tmpProvider;
};

oFF.OuDimensionDialog2I18n = function() {};
oFF.OuDimensionDialog2I18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.OuDimensionDialog2I18n.prototype._ff_c = "OuDimensionDialog2I18n";

oFF.OuDimensionDialog2I18n.TITLE = "FF_DD_TITLE";
oFF.OuDimensionDialog2I18n.DIMENSION = "FF_DD_DIMENSION";
oFF.OuDimensionDialog2I18n.DISPLAY = "FF_DD_DISPLAY";
oFF.OuDimensionDialog2I18n.SORTING = "FF_DD_SORTING";
oFF.OuDimensionDialog2I18n.HIERARCHIES = "FF_DD_HIERARCHIES";
oFF.OuDimensionDialog2I18n.CONTENT = "FF_DD_CONTENT";
oFF.OuDimensionDialog2I18n.KEY = "FF_DD_CONTENT_KEY";
oFF.OuDimensionDialog2I18n.TEXT = "FF_DD_CONTENT_TEXT";
oFF.OuDimensionDialog2I18n.KEY_AND_TEXT = "FF_DD_CONTENT_KEY_AND_TEXT";
oFF.OuDimensionDialog2I18n.TEXT_AND_KEY = "FF_DD_CONTENT_TEXT_AND_KEY";
oFF.OuDimensionDialog2I18n.TEXT_TYPE = "FF_DD_TYPE";
oFF.OuDimensionDialog2I18n.TEXT_TYPE_SHORT = "FF_DD_TYPE_SHORT";
oFF.OuDimensionDialog2I18n.TEXT_TYPE_MEDIUM = "FF_DD_TYPE_MEDIUM";
oFF.OuDimensionDialog2I18n.TEXT_TYPE_LONG = "FF_DD_TYPE_LONG";
oFF.OuDimensionDialog2I18n.TEXT_TYPE_XXL = "FF_DD_TYPE_XXL";
oFF.OuDimensionDialog2I18n.TOTALS = "FF_DD_TOTALS";
oFF.OuDimensionDialog2I18n.TOTALS_VISIBLE = "FF_DD_TOTALS_VISIBLE";
oFF.OuDimensionDialog2I18n.TOTALS_HIDDEN = "FF_DD_TOTALS_HIDDEN";
oFF.OuDimensionDialog2I18n.TOTALS_MORE_THAN_ONE = "FF_DD_TOTALS_MORE_THAN_ONE";
oFF.OuDimensionDialog2I18n.TOTALS_POSITION = "FF_DD_TOTALS_POSITION";
oFF.OuDimensionDialog2I18n.TOTALS_POSITION_TOP = "FF_DD_TOTALS_POSITION_TOP";
oFF.OuDimensionDialog2I18n.TOTALS_POSITION_BOT = "FF_DD_TOTALS_POSITION_BOT";
oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED = "FF_DD_INCLUDE_UNBOOKED";
oFF.OuDimensionDialog2I18n.SORT_DIRECTION = "FF_DD_SORT_DIRECTION";
oFF.OuDimensionDialog2I18n.SORT_DIRECTION_NONE = "FF_DD_SORT_DIRECTION_NONE";
oFF.OuDimensionDialog2I18n.SORT_DIRECTION_ASCENDING = "FF_DD_SORT_DIRECTION_ASCENDING";
oFF.OuDimensionDialog2I18n.SORT_DIRECTION_DESCENDING = "FF_DD_SORT_DIRECTION_DESCENDING";
oFF.OuDimensionDialog2I18n.SORT_BY = "FF_DD_SORT_BY";
oFF.OuDimensionDialog2I18n.SORT_BY_HIERARCHY = "FF_DD_SORT_BY_HIERARCHY";
oFF.OuDimensionDialog2I18n.SORT_BY_FILTER = "FF_DD_SORT_BY_FILTER";
oFF.OuDimensionDialog2I18n.BREAK_GROUPING = "FF_DD_BREAK_GROUPING";
oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY = "FF_DD_DISPLAY_HIERARCHICALLY";
oFF.OuDimensionDialog2I18n.CONDENSE_NODES = "FF_DD_CONDENSE_NODES";
oFF.OuDimensionDialog2I18n.HIERARCHY = "FF_DD_HIERARCHY";
oFF.OuDimensionDialog2I18n.ENTER_HIERARCHY_NAME = "FF_DD_ENTER_HIERARCHY_NAME";
oFF.OuDimensionDialog2I18n.NODES_TO_SHOW = "FF_DD_NODES_TO_SHOW";
oFF.OuDimensionDialog2I18n.ALL_NODES = "FF_DD_ALL_NODES";
oFF.OuDimensionDialog2I18n.ONLY_ROOT_NODES = "FF_DD_ONLY_ROOT_NODES";
oFF.OuDimensionDialog2I18n.ROOT_AND_X_CHILD_LEVEL = "FF_DD_ROOT_AND_X_CHILD_LEVEL";
oFF.OuDimensionDialog2I18n.NODE_POSITION = "FF_DD_NODE_POSITION";
oFF.OuDimensionDialog2I18n.NODE_POSITION_ABOVE = "FF_DD_NODE_POSITION_ABOVE";
oFF.OuDimensionDialog2I18n.NODE_POSITION_BELOW = "FF_DD_NODE_POSITION_BELOW";
oFF.OuDimensionDialog2I18n.staticSetup = function()
{
	var tmpProvider = new oFF.OuDimensionDialog2I18n();
	tmpProvider.setupProvider(oFF.OuDimensionDialog2.DEFAULT_PROGRAM_NAME, false);
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TITLE, "Properties for {0}");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TITLE, "#XTIT: Title of the dialog for dimension settings (Placeholder is dimension name)");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.DIMENSION, "Dimension");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.DIMENSION, "#XTIT: A generic fallback for the title placeholder, if no dimension name is available");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.DISPLAY, "Display");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.DISPLAY, "#XTBS: A label on the tab for the display settings (e.g. presentation type)");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORTING, "Sorting");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORTING, "#XTBS: A label on the tab for the sorting settings");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.HIERARCHIES, "Hierarchies");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.HIERARCHIES, "#XTBS: A label on the tab for the hierarchy settings");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.CONTENT, "Content:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.CONTENT, "#XFLD: Title of a dropdown to set how a dimension should be shown");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.KEY, "ID");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.KEY, "#XSEL: Dropdown item to configure that dimension should be shown by their id");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT, "Description");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT, "#XSEL: Dropdown item to configure that dimension should be shown by their description");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.KEY_AND_TEXT, "ID (Description)");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.KEY_AND_TEXT, "#XSEL: Dropdown item to configure that dimension should be shown by their id and description");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_AND_KEY, "Description (ID)");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_AND_KEY, "#XSEL: Dropdown item to configure that dimension should be shown by their id and description");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_TYPE, "Description Type:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_TYPE, "#XFLD: Title of a dropdown to set the type of texts");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_SHORT, "Short");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_TYPE_SHORT, "#XSEL: Dropdown item to set that short text attributes should be used");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_MEDIUM, "Medium");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_TYPE_MEDIUM, "#XSEL: Dropdown item to set that medium text attributes should be used");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_LONG, "Long");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_TYPE_LONG, "#XSEL: Dropdown item to set that long text attributes should be used");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TEXT_TYPE_XXL, "XXL");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TEXT_TYPE_XXL, "#XSEL: Dropdown item to set that xxl text attributes should be used");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS, "Totals:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS, "#XFLD: Title of a dropdown to set the representation of totals in a table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_VISIBLE, "Visible");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_VISIBLE, "#XSEL: Dropdown item to make totals visible in the table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_HIDDEN, "Hidden");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_HIDDEN, "#XSEL: Dropdown item to hide totals in the table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_MORE_THAN_ONE, "When more than 1 value");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_MORE_THAN_ONE, "#XSEL: Dropdown item to hide totals in the table if there is only one value");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION, "Totals Position:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_POSITION, "#XFLD: Title of a dropdown to set the position of totals in a table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_TOP, "Top");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_TOP, "#XSEL: Dropdown item put the totals on top of the table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_BOT, "Bottom");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.TOTALS_POSITION_BOT, "#XSEL: Dropdown item put the totals on bottom of the table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED, "Include unbooked values");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.INCLUDE_UNBOOKED, "#XCKL: A checkbox to determine if unbooked values should show up in the table");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION, "Direction:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_DIRECTION, "#XFLD: Title of a dropdown to change the sorting direction");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_NONE, "None");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_NONE, "#XSEL: Dropdown item to disable the sorting");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_ASCENDING, "Ascending");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_ASCENDING, "#XSEL: Dropdown item to set the sort direction to ascending");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_DESCENDING, "Descending");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_DIRECTION_DESCENDING, "#XSEL: Dropdown item to set the sort direction to descending");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_BY, "Sort by:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_BY, "#XFLD: Title of a dropdown to define how a sort operation is done");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_BY_HIERARCHY, "Hierarchy");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_BY_HIERARCHY, "#XSEL: Dropdown item to let the sort be done by hierarchy");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.SORT_BY_FILTER, "Filter");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.SORT_BY_FILTER, "#XSEL: Dropdown item to let the sort be done by filter");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.BREAK_GROUPING, "Break grouping");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.BREAK_GROUPING, "#XCKL: A checkbox to allow the sorting to break up groups");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY, "Display hierarchically");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.DISPLAY_HIERARCHICALLY, "#XCKL: A checkbox to enable or disable the hierarchy");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.CONDENSE_NODES, "Condense nodes with only 1 child");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.CONDENSE_NODES, "#XCKL: A checkbox to set if nodes in a hierarchy can be condensed if they only have one child");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.HIERARCHY, "Hierarchy:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.HIERARCHY, "#XFLD: The title of a input field for hierarchy names");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.ENTER_HIERARCHY_NAME, "Hierarchy Name");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.ENTER_HIERARCHY_NAME, "#XFLD: An input placeholder to let the user know to enter a hierarchy name");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW, "Nodes to show:");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.NODES_TO_SHOW, "XFLD: Title of a dropdown to which level of nodes should be displayed");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.ALL_NODES, "All nodes");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.ALL_NODES, "#XSEL: A dropdown item to set that all nodes should be shown");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.ONLY_ROOT_NODES, "Only root nodes");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.ONLY_ROOT_NODES, "#XSEL: A dropdown item to set that only nodes on root level are to be displayed");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.ROOT_AND_X_CHILD_LEVEL, "From root to level {0}");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.ROOT_AND_X_CHILD_LEVEL, "#XSEL: A dropdown item to set that the amount of the placeholder number levels should be shown");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.NODE_POSITION, "Position of child nodes");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.NODE_POSITION, "#XFLD: The description of a segmented button to select where hierarchy nodes are positioned");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.NODE_POSITION_ABOVE, "Above");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.NODE_POSITION_ABOVE, "#XBUT: Segment button text to let child nodes be shown above their parents");
	tmpProvider.addText(oFF.OuDimensionDialog2I18n.NODE_POSITION_BELOW, "Below");
	tmpProvider.addComment(oFF.OuDimensionDialog2I18n.NODE_POSITION_BELOW, "#XBUT: Segment button text to let child nodes be shown below their parents");
	return tmpProvider;
};

oFF.FdHierarchyCatalogItem = function() {};
oFF.FdHierarchyCatalogItem.prototype = new oFF.FdItem();
oFF.FdHierarchyCatalogItem.prototype._ff_c = "FdHierarchyCatalogItem";

oFF.FdHierarchyCatalogItem.createHierarchyCatalogItem = function(catalogItem)
{
	var obj = new oFF.FdHierarchyCatalogItem();
	obj.m_catalogItem = catalogItem;
	return obj;
};
oFF.FdHierarchyCatalogItem.prototype.m_catalogItem = null;
oFF.FdHierarchyCatalogItem.prototype.releaseObject = function()
{
	this.m_catalogItem = null;
	oFF.FdItem.prototype.releaseObject.call( this );
};
oFF.FdHierarchyCatalogItem.prototype.getType = function()
{
	return oFF.FdItemType.HIERARCHY_CATALOG;
};
oFF.FdHierarchyCatalogItem.prototype.getName = function()
{
	return this.getHierarchyName();
};
oFF.FdHierarchyCatalogItem.prototype.getHierarchyName = function()
{
	return this.m_catalogItem.getHierarchyName();
};
oFF.FdHierarchyCatalogItem.prototype.getText = function()
{
	var text = this.m_catalogItem.getHierarchyShortText();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		return text;
	}
	text = this.m_catalogItem.getHierarchyMediumText();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		return text;
	}
	text = this.m_catalogItem.getHierarchyLongText();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		return text;
	}
	return text;
};
oFF.FdHierarchyCatalogItem.prototype.getValueByField = function(field)
{
	return null;
};
oFF.FdHierarchyCatalogItem.prototype.getFormattedValueByPresentation = function(presentation, i18n)
{
	if (oFF.isNull(presentation))
	{
		return null;
	}
	if (presentation.getCustomObject() !== null)
	{
		var additional = presentation.getCustomObject().toString();
		switch (additional)
		{
			case oFF.FdContentProviderHierarchyCatalog.VERSION:
				return presentation.isKey() ? this.m_catalogItem.getVersionDisplayKey() : this.m_catalogItem.getVersionDescription();

			case oFF.FdContentProviderHierarchyCatalog.OBJECT_VERSION:
				return this.m_catalogItem.getObjectVersion();

			case oFF.FdContentProviderHierarchyCatalog.DATE_FROM:
				return this.getDateStringToDisplay(this.m_catalogItem.getDateFrom());

			case oFF.FdContentProviderHierarchyCatalog.DATE_TO:
				return this.getDateStringToDisplay(this.m_catalogItem.getDateTo());
		}
	}
	if (presentation.isKey())
	{
		return this.getDisplayKey();
	}
	var text = this.getText();
	if (oFF.XStringUtils.isNullOrEmpty(text))
	{
		return this.getDisplayKey();
	}
	return text;
};
oFF.FdHierarchyCatalogItem.prototype.getDateStringToDisplay = function(date)
{
	if (oFF.isNull(date) || date.isEqualTo(oFF.XDate.createEmptyDate()))
	{
		return null;
	}
	var dateIso = date.toIsoFormat();
	return oFF.UiNumberFormatterCenter.getCenter().formatTextForDateTimeKey(dateIso, dateIso, oFF.XValueType.DATE);
};
oFF.FdHierarchyCatalogItem.prototype.getValueType = function()
{
	return oFF.XValueType.STRING;
};
oFF.FdHierarchyCatalogItem.prototype.getKey = function()
{
	return this.getName();
};
oFF.FdHierarchyCatalogItem.prototype.getDisplayKey = function()
{
	return this.getName();
};
oFF.FdHierarchyCatalogItem.prototype.hasDisplayKey = function()
{
	return false;
};
oFF.FdHierarchyCatalogItem.prototype.isNull = function()
{
	return false;
};
oFF.FdHierarchyCatalogItem.prototype.toString = function()
{
	return this.m_catalogItem.getHierarchyName();
};

oFF.FdValueHelpItem = function() {};
oFF.FdValueHelpItem.prototype = new oFF.FdItem();
oFF.FdValueHelpItem.prototype._ff_c = "FdValueHelpItem";

oFF.FdValueHelpItem.create = function(node, hierarchyName)
{
	var fdValueHelpItem = new oFF.FdValueHelpItem();
	fdValueHelpItem.m_node = node;
	fdValueHelpItem.setHierarchyName(hierarchyName);
	return fdValueHelpItem;
};
oFF.FdValueHelpItem.getByKey = function(items, requiredItem, ignoreVhItemOperator)
{
	if (oFF.isNull(requiredItem))
	{
		return null;
	}
	var key = requiredItem.getKey();
	var displayKey = requiredItem.hasDisplayKey() ? requiredItem.getDisplayKey() : null;
	var isNull = requiredItem.isNull();
	var hasKey = oFF.XStringUtils.isNotNullAndNotEmpty(key);
	var hasDisplayKey = oFF.XStringUtils.isNotNullAndNotEmpty(displayKey);
	var size = oFF.notNull(items) ? items.size() : 0;
	for (var i = 0; i < size; i++)
	{
		var item = items.get(i);
		if (ignoreVhItemOperator || item.getComparisonOperator() === requiredItem.getComparisonOperator())
		{
			if (hasKey && oFF.XString.isEqual(item.getKey(), key) || hasDisplayKey && item.hasDisplayKey() && oFF.XString.isEqual(item.getDisplayKey(), displayKey))
			{
				return item;
			}
			if (!hasKey && oFF.XStringUtils.isNullOrEmpty(item.getKey()) && !hasDisplayKey && oFF.XStringUtils.isNullOrEmpty(item.getDisplayKey()) && item.isNull() === isNull)
			{
				return item;
			}
		}
		var children = item.getChildren();
		if (oFF.XCollectionUtils.hasElements(children))
		{
			var cachedChild = oFF.FdValueHelpItem.getByKey(children, item, ignoreVhItemOperator);
			if (oFF.notNull(cachedChild))
			{
				return cachedChild;
			}
		}
	}
	return null;
};
oFF.FdValueHelpItem.prototype.m_node = null;
oFF.FdValueHelpItem.prototype.m_children = null;
oFF.FdValueHelpItem.prototype.releaseObject = function()
{
	oFF.FdItem.prototype.releaseObject.call( this );
	this.m_node = null;
	this.m_children = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_children);
};
oFF.FdValueHelpItem.prototype.getType = function()
{
	return oFF.FdItemType.VALUEHELP;
};
oFF.FdValueHelpItem.prototype.getValueType = function()
{
	return this.getDimensionMember().getValueType();
};
oFF.FdValueHelpItem.prototype.getDimension = function()
{
	return this.m_node.getDimension();
};
oFF.FdValueHelpItem.prototype.getDimensionMember = function()
{
	return this.m_node.getDimensionMember();
};
oFF.FdValueHelpItem.prototype.isNull = function()
{
	return this.getDimensionMember().getDimensionMemberNameValueException() === oFF.ValueException.NULL_VALUE;
};
oFF.FdValueHelpItem.prototype.getName = function()
{
	return this.m_node.getName();
};
oFF.FdValueHelpItem.prototype.isHierarchyNode = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyName());
};
oFF.FdValueHelpItem.prototype.getKeyField = function()
{
	var dim = this.getDimension();
	return this.isHierarchyNode() ? dim.getHierarchyKeyField() : dim.getFlatKeyField();
};
oFF.FdValueHelpItem.prototype.getDisplayKeyField = function()
{
	var dim = this.getDimension();
	return this.isHierarchyNode() ? dim.getHierarchyDisplayKeyField() : dim.getFlatDisplayKeyField();
};
oFF.FdValueHelpItem.prototype.getTextField = function()
{
	var dim = this.getDimension();
	return this.isHierarchyNode() ? dim.getHierarchyTextField() : dim.getFlatTextField();
};
oFF.FdValueHelpItem.prototype.getKey = function()
{
	return this.getValueByField(this.getKeyField());
};
oFF.FdValueHelpItem.prototype.getDisplayKey = function()
{
	return this.getValueByField(this.getDisplayKeyField());
};
oFF.FdValueHelpItem.prototype.hasDisplayKey = function()
{
	var keyField = this.getKeyField();
	var displayKeyField = this.getDisplayKeyField();
	return oFF.notNull(displayKeyField) && displayKeyField !== keyField && this.getDimensionMember().getFieldValue(displayKeyField) !== null;
};
oFF.FdValueHelpItem.prototype.getText = function()
{
	return this.getValueByField(this.getTextField());
};
oFF.FdValueHelpItem.prototype.getTextFormatted = function()
{
	if (!this.isNull())
	{
		var keyField = this.hasDisplayKey() ? this.getDisplayKeyField() : this.getKeyField();
		var formatter = oFF.UiNumberFormatterCenter.getCenter();
		if (oFF.notNull(keyField) && keyField.getValueType().isDateTime())
		{
			return formatter.formatTextForDateTimeKey(this.getText(), this.getValueByField(keyField), keyField.getValueType());
		}
		var textField = this.getTextField();
		if (oFF.notNull(textField) && textField.getValueType().isTypeOf(oFF.XValueType.NUMBER))
		{
			return formatter.format(this.getText());
		}
	}
	return this.getText();
};
oFF.FdValueHelpItem.prototype.getFormattedValueByPresentation = function(presentation, i18n)
{
	if (this.isNull())
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_NULL);
	}
	var value = null;
	if (oFF.notNull(presentation))
	{
		var field = presentation.getCustomObject();
		value = this.getValueByField(field);
		if (oFF.isNull(value))
		{
			var presentationType = field.getPresentationType();
			if (presentationType.isTypeOf(oFF.PresentationType.KEY))
			{
				value = this.getKey();
			}
			else if (presentationType.isTypeOf(oFF.PresentationType.DISPLAY_KEY))
			{
				value = this.getDisplayKey();
			}
			else if (presentationType.isTypeOf(oFF.PresentationType.TEXT))
			{
				value = this.getText();
			}
		}
		if (oFF.XString.isEqual(value, "") && !presentation.isKey())
		{
			var keyFieldValue = this.getValueByField(this.getKeyFieldForTextPresentation(presentation));
			if (oFF.XStringUtils.isNotNullAndNotEmpty(keyFieldValue))
			{
				value = keyFieldValue;
			}
		}
		if (!presentation.isKey())
		{
			if (field.getValueType().isTypeOf(oFF.XValueType.NUMBER))
			{
				value = oFF.UiNumberFormatterCenter.getCenter().format(value);
			}
			else
			{
				var keyField = this.getKeyFieldForTextPresentation(presentation);
				if (oFF.notNull(keyField) && keyField.getValueType().isDateTime())
				{
					var keyValue = this.getValueByField(keyField);
					value = oFF.UiNumberFormatterCenter.getCenter().formatTextForDateTimeKey(value, oFF.notNull(keyValue) ? keyValue : value, keyField.getValueType());
				}
			}
		}
	}
	if (oFF.XString.isEqual(value, ""))
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_NO_VALUE);
	}
	return value;
};
oFF.FdValueHelpItem.prototype.getKeyFieldForTextPresentation = function(presentation)
{
	var keyPresentation = presentation.getParent().getKeyPresentation();
	if (oFF.notNull(keyPresentation))
	{
		return keyPresentation.getCustomObject();
	}
	else if (presentation.getCustomObject() === this.getTextField())
	{
		return this.hasDisplayKey() ? this.getDisplayKeyField() : this.getKeyField();
	}
	return null;
};
oFF.FdValueHelpItem.prototype.getValueByField = function(field)
{
	var fieldValue = this.getDimensionMember().getFieldValue(field);
	return oFF.isNull(fieldValue) ? null : fieldValue.getString();
};
oFF.FdValueHelpItem.prototype.hasChildren = function()
{
	return this.isHierarchyNode() && this.m_node.getChildSetState() !== oFF.ChildSetState.NONE;
};
oFF.FdValueHelpItem.prototype.getChildren = function()
{
	if (oFF.isNull(this.m_children))
	{
		this.m_children = oFF.XList.create();
	}
	if (this.m_node.hasChildren())
	{
		var children = this.m_node.getChildren();
		var size = children.size();
		for (var i = 0; i < size; i++)
		{
			if (this.m_children.size() <= i)
			{
				this.m_children.add(oFF.FdValueHelpItem.create(children.get(i), this.getHierarchyName()));
			}
		}
	}
	return this.m_children;
};
oFF.FdValueHelpItem.prototype.isRootNode = function()
{
	return this.m_node.getParentNode() === null;
};
oFF.FdValueHelpItem.prototype.getNode = function()
{
	return this.m_node;
};
oFF.FdValueHelpItem.prototype.compareTo = function(objectToCompare)
{
	if (oFF.isNull(objectToCompare))
	{
		return 1;
	}
	var key = this.getKey();
	var otherKey = objectToCompare.getKey();
	var valueType = this.getValueType();
	if (valueType.isNumber())
	{
		try
		{
			var comparison = oFF.XDouble.convertFromString(key) - oFF.XDouble.convertFromString(otherKey);
			return comparison < 0 ? -1 : comparison > 0 ? 1 : 0;
		}
		catch (e)
		{
			return oFF.XString.compare(key, otherKey);
		}
	}
	else if (valueType === oFF.XValueType.DATE)
	{
		var thisDate = oFF.XDate.createDateSafe(key);
		var otherDate = oFF.XDate.createDateSafe(otherKey);
		if (oFF.notNull(thisDate) && oFF.notNull(otherDate))
		{
			key = thisDate.toIsoFormat();
			otherKey = otherDate.toIsoFormat();
		}
	}
	return oFF.XString.compare(key, otherKey);
};
oFF.FdValueHelpItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdItem.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	if (this.isNull() && otherItem.isNull())
	{
		return true;
	}
	var key = this.getKey();
	if (!oFF.XString.isEqual(key, otherItem.getKey()))
	{
		return false;
	}
	if (oFF.isNull(key) && !oFF.XString.isEqual(this.getDisplayKey(), otherItem.getDisplayKey()))
	{
		return false;
	}
	var text = this.getText();
	var otherText = otherItem.getText();
	return oFF.isNull(text) || oFF.isNull(otherText) || oFF.XString.isEqual(text, otherText);
};
oFF.FdValueHelpItem.prototype.toString = function()
{
	return this.m_node.toString();
};

oFF.FdController = function() {};
oFF.FdController.prototype = new oFF.XObject();
oFF.FdController.prototype._ff_c = "FdController";

oFF.FdController.IDENTIFIER_INITIAL_LOAD = "IdentifierInitialLoad";
oFF.FdController.IDENTIFIER_INITIAL_LOAD_RANGE = "IdentifierInitialLoadRange";
oFF.FdController.IDENTIFIER_INITIAL_LOAD_FUNCTIONS = "IdentifierInitialLoadFunctions";
oFF.FdController.IDENTIFIER_REFRESH = "IdentifierRefresh";
oFF.FdController.IDENTIFIER_RELOAD = "IdentifierReload";
oFF.FdController.IDENTIFIER_RELOAD_RANGE = "IdentifierReloadRange";
oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES = "IdentifierLoadAttributes";
oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES_AND_REFRESH = "IdentifierLoadAttributesAndRefresh";
oFF.FdController.IDENTIFIER_PRELOAD = "IdentifierPreload";
oFF.FdController.IDENTIFIER_PRELOAD_SELECTION = "IdentifierPreloadSelection";
oFF.FdController.IDENTIFIER_SELECT_ALL = "IdentifierSelectAll";
oFF.FdController.IDENTIFIER_NEW_SELECTION = "IdentifierNewSelection";
oFF.FdController.COMPONENT_NAME = "FilterDialog";
oFF.FdController.create = function(fdContext, context)
{
	var obj = new oFF.FdController();
	obj.setupController(fdContext, context);
	return obj;
};
oFF.FdController.prototype.m_context = null;
oFF.FdController.prototype.m_fdContext = null;
oFF.FdController.prototype.m_fdDialogLayout = null;
oFF.FdController.prototype.m_contentProvider = null;
oFF.FdController.prototype.m_model = null;
oFF.FdController.prototype.m_filterTypes = null;
oFF.FdController.prototype.m_view = null;
oFF.FdController.prototype.m_isClosed = false;
oFF.FdController.prototype.m_initialLoadIdentifiers = null;
oFF.FdController.prototype.setupController = function(fdContext, context)
{
	oFF.XObjectExt.assertNotNullExt(fdContext, "Context must be set");
	this.m_fdContext = fdContext;
	this.m_context = context;
	var config = fdContext.getConfiguration();
	if (fdContext.getContentType() === oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP)
	{
		var dimension = fdContext.getDimension();
		oFF.XObjectExt.assertNotNullExt(dimension, "Dimension must be set");
		if (!oFF.XCollectionUtils.hasElements(config.getSelection()) && config.isDetermineSelectionFromContext())
		{
			config.setSelection(config.getItemFactory().createSelectionFromFilter(dimension, dimension.getFilter()));
		}
		this.m_contentProvider = oFF.FdContentProviderValueHelp.create(dimension, fdContext.getContentType(), config, oFF.UiFeatureToggleCenter.getCenter().isActive(oFF.OlapUiFeatureToggle.MEMBERSELECTOR_READMODE_SWITCH));
	}
	else if (fdContext.getContentType() === oFF.FdContentType.VARIABLE_VALUE_HELP)
	{
		var variable = fdContext.getVariable();
		oFF.XObjectExt.assertNotNullExt(variable, "Variable must be set");
		if (!oFF.XCollectionUtils.hasElements(config.getSelection()) && config.isDetermineSelectionFromContext())
		{
			config.setSelection(config.getItemFactory().createSelectionFromVariable(variable));
		}
		this.m_contentProvider = oFF.FdContentProviderValueHelp.create(variable, fdContext.getContentType(), config, oFF.UiFeatureToggleCenter.getCenter().isActive(oFF.OlapUiFeatureToggle.MEMBERSELECTOR_READMODE_SWITCH));
	}
	else if (fdContext.getContentType() === oFF.FdContentType.HIERARCHY_CATALOG)
	{
		oFF.XObjectExt.assertNotNullExt(fdContext.getDimension(), "Dimension must be set");
		this.m_contentProvider = oFF.FdContentProviderHierarchyCatalog.createForHierarchy(fdContext.getDimension());
	}
	else if (fdContext.getContentType() === oFF.FdContentType.MEASURE_BASED_FILTER)
	{
		var mbf = fdContext.getFilterMeasureBased();
		oFF.XObjectExt.assertNotNullExt(mbf, "Measure based filter must be set");
		oFF.XObjectExt.assertTrue(mbf.getFormula() !== null || fdContext.getStructureMember() !== null);
		this.m_contentProvider = oFF.FdContentProviderMeasureBasedFilter.create(mbf, fdContext.getStructureMember());
	}
};
oFF.FdController.prototype.releaseObject = function()
{
	if (this.isOpen())
	{
		this.m_fdDialogLayout.close();
	}
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_context = null;
	this.m_fdDialogLayout = null;
	this.m_view = oFF.XObjectExt.release(this.m_view);
	this.m_model = oFF.XObjectExt.release(this.m_model);
	this.m_contentProvider = oFF.XObjectExt.release(this.m_contentProvider);
	this.m_fdContext = oFF.XObjectExt.release(this.m_fdContext);
	this.m_filterTypes = oFF.XObjectExt.release(this.m_filterTypes);
	this.m_initialLoadIdentifiers = oFF.XObjectExt.release(this.m_initialLoadIdentifiers);
};
oFF.FdController.prototype.openDialog = function()
{
	this.m_isClosed = false;
	var configuration = this.m_fdContext.getConfiguration();
	var readModeSwitchVisible = this.m_contentProvider.supportsReadModeSwitch();
	var hierarchyChangeVisible = configuration.isOfferingHierarchyChange() && this.m_fdContext.getContentType() === oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP;
	var mainPresentations = this.m_contentProvider.getMainPresentations(this.m_fdContext.getI18n());
	var additionalPresentations = this.m_contentProvider.supportsAdditionalPresentations() ? this.m_contentProvider.getAdditionalPresentations(this.m_fdContext.getI18n()) : oFF.XList.create();
	var sessionData = this.getSessionData();
	var displayInfoInSession = sessionData.getMainPresentationDisplayInfo();
	var displayInfo = oFF.notNull(displayInfoInSession) ? displayInfoInSession : configuration.getDimensionDisplayInfo();
	this.m_model = oFF.FdModel.create(configuration, sessionData);
	this.m_model.setPresentations(mainPresentations, additionalPresentations, this.m_contentProvider.getPresentationByDisplayInfo(mainPresentations, displayInfo), sessionData.getAdditionalPresentations(additionalPresentations));
	this.m_model.setFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH, readModeSwitchVisible);
	this.m_model.setFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE, readModeSwitchVisible && this.m_contentProvider.supportsMasterAndBookedReadModes());
	this.m_model.setFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT, this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE) && this.m_contentProvider.supportsQueryDefaultReadMode());
	this.m_model.initReadMode(this.m_contentProvider.getReadMode() === oFF.OlapUiReadMode.MASTER, this.m_contentProvider.getQueryDefaultReadMode() === oFF.OlapUiReadMode.MASTER, this.m_contentProvider.getReadMode() === oFF.OlapUiReadMode.QUERY_DEFAULT);
	this.m_model.setFeatureEnabled(oFF.FdFeature.ALWAYS_SHOW_SELECTION_CONTAINER, configuration.isAlwaysShowSelectionContainer());
	this.m_model.setFeatureEnabled(oFF.FdFeature.CLIPBOARD, configuration.isOfferingClipboard());
	this.m_model.setFeatureEnabled(oFF.FdFeature.EQUAL_IN_RANGE_VIEW, configuration.isOfferingEqualInRangeView());
	this.m_model.setFeatureEnabled(oFF.FdFeature.EXCLUDE, configuration.isOfferingExclude() && this.m_contentProvider.getSupportedComparisonOperators().contains(oFF.FdComparisonOperator.NOT_EQUAL));
	this.m_model.setFeatureEnabled(oFF.FdFeature.HIERARCHY_CHANGE, hierarchyChangeVisible);
	if (this.m_model.isFeatureEnabled(oFF.FdFeature.EXCLUDE) && oFF.XCollectionUtils.hasElements(this.m_model.getSelectedItems()) && oFF.XStream.of(this.m_model.getSelectedItems()).allMatch( function(item){
		return item.isExcluded();
	}.bind(this)))
	{
		this.m_model.setExcludeSwitchOn(true);
	}
	this.m_contentProvider.setupModel(this.m_model);
	this.m_filterTypes = this.m_contentProvider.getSupportedFilterTypes(configuration.getFilterTypes().createListCopy());
	if (this.m_filterTypes.contains(oFF.FdFilterType.LIST))
	{
		this.initHierarchyModel(hierarchyChangeVisible);
		if (this.m_contentProvider.isSystemTypeBw() && this.m_fdContext.getContentType() === oFF.FdContentType.VARIABLE_VALUE_HELP && (oFF.UiConfigurationCenter.getCenter().isActive("SIMPLIFY_VARIABLE_CHANGE") || oFF.UiFeatureToggleCenter.getCenter().isActive(oFF.OlapUiFeatureToggle.MEMBERSELECTOR_STORY_FILTER_OPTIMIZATION_FOR_DESKTOP)) && !this.m_fdContext.isMobile())
		{
			this.m_contentProvider.setDefaultDrillLevelEnabled(true);
			this.m_model.setDefaultExpandLevel(this.m_fdContext.getVariable().getDimension().getDefaultInitialDrillLevel());
		}
	}
	if (this.m_filterTypes.contains(oFF.FdFilterType.RANGE) || this.m_filterTypes.contains(oFF.FdFilterType.MEASURE_BASED_FILTER))
	{
		this.m_model.getRangeModel().setInputValueType(this.m_contentProvider.getInputValueType());
		this.m_model.getRangeModel().setSupportedComparisonOperators(this.m_contentProvider.getSupportedComparisonOperators());
	}
	this.m_fdDialogLayout = oFF.FdDialogLayout.create(this.m_fdContext);
	this.m_fdDialogLayout.open(this.m_context, this, configuration);
};
oFF.FdController.prototype.initHierarchyModel = function(hierarchyChangeVisible)
{
	var hierarchyModel = this.m_model.getHierarchyModel();
	hierarchyModel.setActiveHierarchy(this.m_contentProvider.isHierarchical() ? this.m_contentProvider.getHierarchyName() : null);
	if (this.m_fdContext.getContentType().isValueHelp() && hierarchyChangeVisible)
	{
		var catalogProvider = oFF.FdContentProviderHierarchyCatalog.createForHierarchy(this.m_fdContext.getContentType() === oFF.FdContentType.VARIABLE_VALUE_HELP ? this.m_fdContext.getVariable().getDimension() : this.m_fdContext.getDimension());
		catalogProvider.processFetchHierarchyNames( function(hierarchies){
			hierarchyModel.setHierarchies(hierarchies);
		}.bind(this), true, this.getSessionData(), this.m_fdContext.getContentType());
		hierarchyModel.registerOnActiveHierarchyChange(this);
	}
};
oFF.FdController.prototype.onHierarchyChanged = function(activeHierarchy, hierarchicalStateChanged)
{
	if (this.m_fdContext.getContentType().isValueHelp())
	{
		this.m_contentProvider.changeHierarchy(activeHierarchy);
		this.m_model.setFeatureEnabled(oFF.FdFeature.EXCLUDE, this.m_fdContext.getConfiguration().isOfferingExclude() && this.m_contentProvider.getSupportedComparisonOperators().contains(oFF.FdComparisonOperator.NOT_EQUAL));
		if (hierarchicalStateChanged)
		{
			this.m_model.setPresentations(this.m_contentProvider.getMainPresentations(this.m_fdContext.getI18n()), this.m_contentProvider.getAdditionalPresentations(this.m_fdContext.getI18n()), null, null);
			this.m_view.publishAvailablePresentations();
		}
	}
	this.m_model.setExcludeSwitchOn(false);
	this.m_model.clearSelection();
};
oFF.FdController.prototype.onAfterOpen = function(event)
{
	var requestData = this.m_filterTypes.contains(oFF.FdFilterType.LIST);
	var requestDataRange = this.m_filterTypes.contains(oFF.FdFilterType.RANGE);
	var requestFunctions = this.m_filterTypes.contains(oFF.FdFilterType.FUNCTIONAL_VALUES) && this.m_contentProvider.supportsFunctionalValueHelp();
	this.m_initialLoadIdentifiers = oFF.XListOfString.create();
	oFF.XCollectionUtils.addIfNotPresent(this.m_initialLoadIdentifiers, requestData ? oFF.FdController.IDENTIFIER_INITIAL_LOAD : null);
	oFF.XCollectionUtils.addIfNotPresent(this.m_initialLoadIdentifiers, requestDataRange ? oFF.FdController.IDENTIFIER_INITIAL_LOAD_RANGE : null);
	oFF.XCollectionUtils.addIfNotPresent(this.m_initialLoadIdentifiers, requestFunctions ? oFF.FdController.IDENTIFIER_INITIAL_LOAD_FUNCTIONS : null);
	if (requestData)
	{
		this.requestData();
	}
	if (requestDataRange)
	{
		this.m_contentProvider.processDataRange(this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_INITIAL_LOAD_RANGE));
	}
	if (requestFunctions)
	{
		this.m_contentProvider.fetchValueHelpFunctions(this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_INITIAL_LOAD_FUNCTIONS));
	}
	this.onInitialLoadFinished(null);
};
oFF.FdController.prototype.requestData = function()
{
	var isHierarchicalValueHelp = this.m_contentProvider.isHierarchical();
	var isTreeViewDesktop = isHierarchicalValueHelp && !this.m_fdContext.isMobile();
	var presentationValues = oFF.FdPresentationUtils.flattenPresentations(isTreeViewDesktop ? this.m_model.getAdditionalPresentations() : this.m_model.getSelectedAdditionalPresentations());
	var preloadPages = isHierarchicalValueHelp ? -1 : this.m_fdContext.getConfiguration().getPreloadedPages();
	this.m_contentProvider.processData(0, preloadPages, presentationValues, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_INITIAL_LOAD));
};
oFF.FdController.prototype.isOpen = function()
{
	return oFF.notNull(this.m_fdDialogLayout) && !this.isReleased() && this.m_fdDialogLayout.isOpen();
};
oFF.FdController.prototype.cancelSelection = function()
{
	this.closeDialog(true, null);
};
oFF.FdController.prototype.confirmSelection = function()
{
	this.closeDialog(false, this.m_model.getSelectedItems());
};
oFF.FdController.prototype.onBeforeClose = function(event)
{
	this.cancelSelection();
};
oFF.FdController.prototype.closeDialog = function(isCancel, selection)
{
	if (!this.m_isClosed)
	{
		if (!isCancel && !this.checkSelectionValid(selection))
		{
			this.m_fdDialogLayout.shake();
			return;
		}
		this.m_isClosed = true;
		if (!isCancel && this.m_fdContext.getDimension() !== null)
		{
			this.m_fdContext.getConfiguration().getEvents().triggerOnDisplayChange(this.m_fdContext.getDimension().getName(), this.m_model);
		}
		else if (!isCancel && this.m_fdContext.getVariable() !== null)
		{
			this.m_fdContext.getConfiguration().getEvents().triggerOnDisplayChange(this.m_fdContext.getVariable().getName(), this.m_model);
		}
		if (this.m_fdContext.getCloseListener() !== null && isCancel)
		{
			this.m_fdContext.getCloseListener().onFilterDialogCancel();
		}
		else
		{
			this.m_contentProvider.closeWithSelectedContent(selection, this.m_model, this.m_fdContext.getCloseListener());
		}
		this.releaseObject();
	}
};
oFF.FdController.prototype.checkSelectionValid = function(selection)
{
	var selectionValid = this.m_view.validate();
	if (this.m_fdContext.getConfiguration().isSelectionRequired() && !oFF.XCollectionUtils.hasElements(selection))
	{
		this.m_view.publishSelectedItems();
		return false;
	}
	return selectionValid;
};
oFF.FdController.prototype.onProcessFinished = function(items, startPage, customIdentifier)
{
	var processType = customIdentifier.toString();
	if (oFF.notNull(this.m_fdDialogLayout) && oFF.notNull(items) && !this.m_isClosed)
	{
		switch (processType)
		{
			case oFF.FdController.IDENTIFIER_INITIAL_LOAD_FUNCTIONS:
				var functionalValuesModel = this.m_model.getFunctionalValuesModel();
				if (items.hasElements())
				{
					oFF.XCollectionUtils.forEach(items,  function(functionItem){
						functionalValuesModel.addFunctionController(oFF.FdVhFunctionController.create(this.m_fdContext, functionItem.getFunction(), this.m_model));
					}.bind(this));
				}
				else
				{
					this.m_filterTypes.removeElement(oFF.FdFilterType.FUNCTIONAL_VALUES);
				}
				this.onInitialLoadFinished(oFF.FdController.IDENTIFIER_INITIAL_LOAD_FUNCTIONS);
				break;

			case oFF.FdController.IDENTIFIER_INITIAL_LOAD:
				this.m_model.addItems(items, 0);
				if (this.m_fdContext.getContentType().isBackendDriven())
				{
					this.m_contentProvider.syncSelectionListWithKnownItems(this.m_model.getSelectedItems(), items, null, false, false, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_PRELOAD_SELECTION));
				}
				this.onInitialLoadFinished(oFF.FdController.IDENTIFIER_INITIAL_LOAD);
				break;

			case oFF.FdController.IDENTIFIER_INITIAL_LOAD_RANGE:
				this.m_model.getRangeModel().setRange(items);
				this.onInitialLoadFinished(oFF.FdController.IDENTIFIER_INITIAL_LOAD_RANGE);
				break;

			case oFF.FdController.IDENTIFIER_REFRESH:
				this.m_view.publishMembersList(items);
				break;

			case oFF.FdController.IDENTIFIER_RELOAD:
				this.m_model.addItems(items, 0);
				this.m_view.publishMembersList(this.m_model.getItemsOnCurrentPage());
				break;

			case oFF.FdController.IDENTIFIER_RELOAD_RANGE:
				this.m_model.getRangeModel().setRange(items);
				break;

			case oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES:
				this.m_view.publishPresentations();
				break;

			case oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES_AND_REFRESH:
				this.m_view.publishMembersList(this.m_model.getItemsOnCurrentPage());
				break;

			case oFF.FdController.IDENTIFIER_PRELOAD:
				this.m_model.addItems(items, startPage);
				break;

			case oFF.FdController.IDENTIFIER_PRELOAD_SELECTION:
				if (oFF.notNull(this.m_view))
				{
					this.m_view.publishSelectedItems();
				}
				break;

			case oFF.FdController.IDENTIFIER_SELECT_ALL:
				this.m_model.addItems(items, startPage);
				this.m_model.selectAll();
				this.m_view.publishSelectedItems();
				break;

			case oFF.FdController.IDENTIFIER_NEW_SELECTION:
				this.m_model.changeSelection(items, this.m_model.getSelectedItems());
				this.m_view.publishSelectedItems();
				this.m_view.publishMembersList(this.m_model.getItemsOnCurrentPage());
				break;

			default:
		}
	}
};
oFF.FdController.prototype.onInitialLoadFinished = function(loadIdentifier)
{
	if (!this.isReleased() && oFF.isNull(this.m_view))
	{
		this.m_initialLoadIdentifiers.removeElement(loadIdentifier);
		if (this.m_initialLoadIdentifiers.isEmpty())
		{
			this.m_view = oFF.FdView.createView(this, this.m_model, this.m_fdContext, this.m_filterTypes,  function(){
				this.onViewTypeChanged();
			}.bind(this));
			this.m_fdDialogLayout.onViewCreated(this.m_view);
			this.m_view.publishSelectedItems();
			this.m_view.publishMembersList(this.m_model.getItemsOnCurrentPage());
			this.m_view.setInitialFocus();
		}
	}
};
oFF.FdController.prototype.onViewTypeChanged = function()
{
	this.m_fdDialogLayout.onViewChanged();
	this.m_view.publishAvailablePresentations();
	this.m_view.publishPresentations();
	this.m_view.publishSelectedItems();
	this.m_view.publishMembersList(this.m_model.getItemsOnCurrentPage());
	this.m_view.setInitialFocus();
};
oFF.FdController.prototype.search = function(searchPattern, searchPresentations, presentations, loadParentNodes, listener, customIdentifier)
{
	if (this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE))
	{
		this.m_contentProvider.setReadMode(this.m_model.isUseReadModeDefault() ? oFF.OlapUiReadMode.QUERY_DEFAULT : this.m_model.isReadModeSwitchOn() ? oFF.OlapUiReadMode.MASTER : oFF.OlapUiReadMode.BOOKED);
	}
	this.m_contentProvider.search(searchPattern, searchPresentations, presentations, loadParentNodes, listener, customIdentifier);
};
oFF.FdController.prototype.isReloadRequired = function(item, requiredPresentations)
{
	return oFF.isNull(item) || oFF.XCollectionUtils.hasElements(this.m_contentProvider.getMissingPresentations(oFF.XCollectionUtils.singletonList(item), requiredPresentations));
};
oFF.FdController.prototype.refreshList = function(presentations, refreshAttributesOnly, currentPageOnly)
{
	if (this.reloadDataRequired(presentations))
	{
		return;
	}
	var items = currentPageOnly ? this.m_model.getItemsOnCurrentPage() : this.m_model.getItems(0, this.m_model.getPage());
	var currentPage = this.m_model.getPage();
	if (oFF.XCollectionUtils.hasElements(items) && this.m_fdContext.getContentType().isBackendDriven())
	{
		var missingPresentations = this.m_contentProvider.getMissingPresentations(items, presentations);
		if (oFF.XCollectionUtils.hasElements(missingPresentations))
		{
			var identifier = oFF.XStringValue.create(refreshAttributesOnly ? oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES : oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES_AND_REFRESH);
			this.m_contentProvider.loadMissingPresentations(this.m_model.getItems(0, -1), missingPresentations, this, identifier);
		}
		else
		{
			this.onProcessFinished(items, currentPage, oFF.XStringValue.create(refreshAttributesOnly ? oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES : oFF.FdController.IDENTIFIER_REFRESH));
		}
		this.m_contentProvider.preloadNextPages(this.getNextPageWithoutItemsLoaded(currentPage), presentations, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_PRELOAD));
	}
	else
	{
		this.onProcessFinished(oFF.XList.create(), currentPage, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_REFRESH));
	}
};
oFF.FdController.prototype.refreshTree = function(presentations, refreshAttributesOnly, parentNode)
{
	if (this.reloadDataRequired(presentations))
	{
		return;
	}
	var identifier = oFF.XStringValue.create(refreshAttributesOnly ? oFF.FdController.IDENTIFIER_LOAD_ATTRIBUTES : oFF.FdController.IDENTIFIER_REFRESH);
	var items = oFF.notNull(parentNode) ? parentNode.getChildren() : this.m_model.getItemsOnCurrentPage();
	if (oFF.XCollectionUtils.hasElements(items) && this.m_fdContext.getContentType().isBackendDriven())
	{
		var missingPresentations = this.m_contentProvider.getMissingPresentations(items, presentations);
		if (oFF.XCollectionUtils.hasElements(missingPresentations))
		{
			this.m_contentProvider.loadMissingPresentations(items, missingPresentations, this, identifier);
			return;
		}
	}
	this.onProcessFinished(oFF.notNull(items) ? items : oFF.XList.create(), 0, identifier);
};
oFF.FdController.prototype.reloadDataRequired = function(presentations)
{
	if (this.m_model.isInitial() && this.m_fdContext.getContentType().isValueHelp())
	{
		if (this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE))
		{
			this.m_contentProvider.setReadMode(this.m_model.isUseReadModeDefault() ? oFF.OlapUiReadMode.QUERY_DEFAULT : this.m_model.isReadModeSwitchOn() ? oFF.OlapUiReadMode.MASTER : oFF.OlapUiReadMode.BOOKED);
		}
		if (this.m_filterTypes.contains(oFF.FdFilterType.LIST))
		{
			var pageCount = this.m_contentProvider.isHierarchical() ? -1 : this.m_fdContext.getConfiguration().getPreloadedPages();
			var isTreeViewDesktop = this.m_contentProvider.isHierarchical() && !this.m_fdContext.isMobile();
			this.m_contentProvider.processData(0, pageCount, isTreeViewDesktop ? oFF.FdPresentationUtils.flattenPresentations(this.m_model.getAdditionalPresentations()) : presentations, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_RELOAD));
		}
		if (this.m_filterTypes.contains(oFF.FdFilterType.RANGE))
		{
			this.m_contentProvider.processDataRange(this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_RELOAD_RANGE));
		}
		return true;
	}
	return false;
};
oFF.FdController.prototype.getNextPageWithoutItemsLoaded = function(currentPage)
{
	for (var i = 1; i <= oFF.FdConfiguration.MIN_PRELOAD_PAGE_COUNT; i++)
	{
		if (!oFF.XCollectionUtils.hasElements(this.m_model.getItemsByPage(currentPage + i)))
		{
			return currentPage + i;
		}
	}
	return -1;
};
oFF.FdController.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.FdDialogLayout.OK_BUTTON:
			this.confirmSelection();
			break;

		case oFF.FdDialogLayout.CANCEL_BUTTON:
			this.cancelSelection();
			break;

		default:
	}
};
oFF.FdController.prototype.onNewSelection = function(items)
{
	this.m_model.updateExcludeState(items);
	this.m_contentProvider.syncSelectionListWithKnownItems(items, this.m_model.getItems(0, -1), null, true, true, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_NEW_SELECTION));
};
oFF.FdController.prototype.fetchChildren = function(node, offset, amount, presentations, listener, customIdentifier)
{
	if (this.m_fdContext.getContentType().isValueHelp())
	{
		this.m_contentProvider.fetchChildren(node, offset, amount, presentations, listener, customIdentifier);
	}
};
oFF.FdController.prototype.loadAndSelectAllMembers = function(presentations)
{
	if (this.m_fdContext.getContentType().isValueHelp())
	{
		var currentMaxPage = this.m_model.getPageCount();
		var itemsOnLastPage = this.m_model.getItemsByPage(currentMaxPage - 1);
		if (oFF.notNull(itemsOnLastPage) && itemsOnLastPage.size() >= this.m_fdContext.getConfiguration().getPageSize())
		{
			this.m_contentProvider.processData(currentMaxPage, -1, presentations, this, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_SELECT_ALL));
		}
		else
		{
			this.onProcessFinished(oFF.XList.create(), 0, oFF.XStringValue.create(oFF.FdController.IDENTIFIER_SELECT_ALL));
		}
	}
};
oFF.FdController.prototype.onError = function(messages, customIdentifier)
{
	if (oFF.XString.isEqual(customIdentifier.toString(), oFF.FdController.IDENTIFIER_INITIAL_LOAD) && this.m_fdContext.getContentType().isValueHelp() && this.m_contentProvider.isSystemTypeHana() && (this.m_contentProvider.getReadMode() === oFF.OlapUiReadMode.BOOKED || this.m_contentProvider.getReadMode() === oFF.OlapUiReadMode.QUERY_DEFAULT && this.m_contentProvider.getQueryDefaultReadMode() !== oFF.OlapUiReadMode.BOOKED) && this.m_model.isFeatureEnabled(oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE))
	{
		this.m_model.setReadModeSwitchOn(true);
		this.m_contentProvider.setReadMode(oFF.OlapUiReadMode.MASTER);
		this.requestData();
		return;
	}
	if (this.m_fdDialogLayout.isActivityIndicatorVisible())
	{
		this.postMessages(messages);
		this.cancelSelection();
	}
	else if (oFF.notNull(this.m_view))
	{
		this.m_view.onError(messages, customIdentifier);
	}
};
oFF.FdController.prototype.postMessages = function(messages)
{
	if (this.m_fdContext.getContentType().isValueHelp() && this.m_contentProvider.isMissingValueForMandatoryVariableError(oFF.OlapUiMessageCenter.getInaErrorCode(messages)))
	{
		var noValuesMsg = this.m_fdContext.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_ERR_NO_VALUES_FOR_MANDATORY_VARIABLES);
		this.m_fdContext.getMessagePoster().postMessage(oFF.UiMessageType.WARNING, noValuesMsg, oFF.FdController.COMPONENT_NAME);
	}
	else
	{
		var msg = oFF.OlapUiMessageCenter.getInaErrorMessage(messages, this.m_fdContext.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_ERR_VH_SERVER_ERROR));
		this.m_fdContext.getMessagePoster().postMessage(oFF.UiMessageType.ERROR, msg, oFF.FdController.COMPONENT_NAME);
	}
};
oFF.FdController.prototype.getSessionData = function()
{
	return this.m_fdContext.getContentType().isValueHelp() ? this.m_contentProvider.getSessionData() : oFF.FdSessionBasedSettings.createEmpty();
};
oFF.FdController.prototype.getClipboardController = function()
{
	return this.m_context.getClipboardController();
};

oFF.FdVhFunctionItem = function() {};
oFF.FdVhFunctionItem.prototype = new oFF.FdItem();
oFF.FdVhFunctionItem.prototype._ff_c = "FdVhFunctionItem";

oFF.FdVhFunctionItem.create = function(_function)
{
	var obj = new oFF.FdVhFunctionItem();
	obj.m_function = _function;
	return obj;
};
oFF.FdVhFunctionItem.prototype.m_function = null;
oFF.FdVhFunctionItem.prototype.releaseObject = function()
{
	this.m_function = null;
	oFF.FdItem.prototype.releaseObject.call( this );
};
oFF.FdVhFunctionItem.prototype.getType = function()
{
	return oFF.FdItemType.VALUEHELP_FUNCTION;
};
oFF.FdVhFunctionItem.prototype.getFunction = function()
{
	return this.m_function;
};
oFF.FdVhFunctionItem.prototype.getName = function()
{
	return this.m_function.getName();
};
oFF.FdVhFunctionItem.prototype.getText = function()
{
	return this.m_function.getDescription();
};
oFF.FdVhFunctionItem.prototype.getValueByField = function(field)
{
	return null;
};
oFF.FdVhFunctionItem.prototype.getKey = function()
{
	return null;
};
oFF.FdVhFunctionItem.prototype.getDisplayKey = function()
{
	return null;
};
oFF.FdVhFunctionItem.prototype.hasDisplayKey = function()
{
	return false;
};
oFF.FdVhFunctionItem.prototype.isNull = function()
{
	return false;
};
oFF.FdVhFunctionItem.prototype.getValueType = function()
{
	return this.m_function.getDimension().getValueType();
};

oFF.FdVhResultItem = function() {};
oFF.FdVhResultItem.prototype = new oFF.FdItem();
oFF.FdVhResultItem.prototype._ff_c = "FdVhResultItem";

oFF.FdVhResultItem.create = function(_function, values)
{
	var obj = new oFF.FdVhResultItem();
	obj.setupExt(_function, values);
	return obj;
};
oFF.FdVhResultItem.prototype.m_function = null;
oFF.FdVhResultItem.prototype.m_values = null;
oFF.FdVhResultItem.prototype.m_name = null;
oFF.FdVhResultItem.prototype.m_text = null;
oFF.FdVhResultItem.prototype.setupExt = function(_function, values)
{
	this.m_function = _function;
	this.m_values = values;
	if (this.m_values.size() === 0)
	{
		this.m_name = this.m_function.getName();
		this.m_text = this.m_function.getDescription();
	}
	else
	{
		var nameSb = oFF.XStringBuffer.create();
		var textSb = oFF.XStringBuffer.create();
		for (var i = 0; i < this.m_values.size(); i++)
		{
			if (i > 0)
			{
				nameSb.append(", ");
				textSb.append(", ");
			}
			var value = this.m_values.get(i);
			nameSb.append(value.getName());
			textSb.append(value.getDescription());
		}
		this.m_name = nameSb.toString();
		this.m_text = textSb.toString();
	}
};
oFF.FdVhResultItem.prototype.releaseObject = function()
{
	this.m_values = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_values);
	this.m_function = oFF.XObjectExt.release(this.m_function);
	oFF.FdItem.prototype.releaseObject.call( this );
};
oFF.FdVhResultItem.prototype.getType = function()
{
	return oFF.FdItemType.VALUEHELP_FUNCTION;
};
oFF.FdVhResultItem.prototype.getFunction = function()
{
	return this.m_function;
};
oFF.FdVhResultItem.prototype.getValues = function()
{
	return this.m_values;
};
oFF.FdVhResultItem.prototype.getName = function()
{
	return this.m_name;
};
oFF.FdVhResultItem.prototype.getText = function()
{
	return this.m_text;
};
oFF.FdVhResultItem.prototype.getValueByField = function(field)
{
	if (field.getPresentationType().isTypeOf(oFF.PresentationType.ABSTRACT_KEY))
	{
		return this.getKey();
	}
	if (field.getPresentationType().isTypeOf(oFF.PresentationType.ABSTRACT_TEXT))
	{
		return this.getText();
	}
	return null;
};
oFF.FdVhResultItem.prototype.getKey = function()
{
	return this.m_name;
};
oFF.FdVhResultItem.prototype.getDisplayKey = function()
{
	return this.m_text;
};
oFF.FdVhResultItem.prototype.hasDisplayKey = function()
{
	return oFF.notNull(this.m_text);
};
oFF.FdVhResultItem.prototype.isNull = function()
{
	return false;
};
oFF.FdVhResultItem.prototype.toString = function()
{
	return this.getName();
};
oFF.FdVhResultItem.prototype.getValueType = function()
{
	return this.m_function.getDimension().getValueType();
};

oFF.FilterDialogI18n = function() {};
oFF.FilterDialogI18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.FilterDialogI18n.prototype._ff_c = "FilterDialogI18n";

oFF.FilterDialogI18n.I18N_FD_OK = "I18N_FD_OK";
oFF.FilterDialogI18n.I18N_FD_CANCEL = "I18N_FD_CANCEL";
oFF.FilterDialogI18n.I18N_FD_SETTINGS = "I18N_FD_SETTINGS";
oFF.FilterDialogI18n.I18N_FD_NO_RESULTS = "I18N_FD_NO_RESULTS";
oFF.FilterDialogI18n.I18N_FD_MAX_RESULTS = "I18N_FD_MAX_RESULTS";
oFF.FilterDialogI18n.I18N_FD_SELECTED_MEMBERS = "I18N_FD_SELECTED_MEMBERS";
oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION = "I18N_FD_CLEAR_SELECTION";
oFF.FilterDialogI18n.I18N_FD_SHOW_PRESENTATION = "I18N_FD_SHOW_PRESENTATION";
oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID = "I18N_FD_PRESENTATION_ID";
oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION = "I18N_FD_PRESENTATION_DESCRIPTION";
oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID_AND_DESCRIPTION = "I18N_FD_PRESENTATION_ID_AND_DESCRIPTION";
oFF.FilterDialogI18n.I18N_FD_ATTRIBUTES = "I18N_FD_ATTRIBUTES";
oFF.FilterDialogI18n.I18N_FD_SELECT_ATTRIBUTE = "I18N_FD_SELECT_ATTRIBUTE";
oFF.FilterDialogI18n.I18N_FD_HIERARCHY = "I18N_FD_HIERARCHY";
oFF.FilterDialogI18n.I18N_FD_HIERARCHY_FLAT_PRESENTATION = "I18N_FD_HIERARCHY_FLAT_PRESENTATION";
oFF.FilterDialogI18n.I18N_FD_LOADING = "I18N_FD_LOADING";
oFF.FilterDialogI18n.I18N_FD_SEARCH = "I18N_FD_SEARCH";
oFF.FilterDialogI18n.I18N_FD_SEARCH_TOOLTIP = "I18N_FD_SEARCH_TOOLTIP";
oFF.FilterDialogI18n.I18N_FD_PREVIOUS = "I18N_FD_PREVIOUS";
oFF.FilterDialogI18n.I18N_FD_NEXT = "I18N_FD_NEXT";
oFF.FilterDialogI18n.I18N_FD_NULL = "I18N_FD_NULL";
oFF.FilterDialogI18n.I18N_FD_NO_VALUE = "I18N_FD_NO_VALUE";
oFF.FilterDialogI18n.I18N_FD_ERR_VH_SERVER_ERROR = "I18N_ERR_VH_SERVER_ERROR";
oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS = "I18N_FD_UNBOOKED_MEMBERS";
oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT = "I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT";
oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT_TOOLTIP = "I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT_TOOLTIP";
oFF.FilterDialogI18n.I18N_FD_EXCLUDE_MEMBERS = "I18N_FD_EXCLUDE_MEMBERS";
oFF.FilterDialogI18n.I18N_FD_ERR_NO_VALUES_FOR_MANDATORY_VARIABLES = "I18N_FD_ERR_NO_VALUES_FOR_MANDATORY_VARIABLES";
oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_BOOKED_DISABLED = "I18N_FD_READMODE_SWITCH_BOOKED_DISABLED";
oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_UNBOOKED_DISABLED = "I18N_FD_READMODE_SWITCH_UNBOOKED_DISABLED";
oFF.FilterDialogI18n.I18N_FD_SHOW_ONLY_SELECTED_MEMBERS = "I18N_FD_SHOW_ONLY_SELECTED_MEMBERS";
oFF.FilterDialogI18n.I18N_FD_SELECT_MEMBER_FOR = "I18N_FD_SELECT_MEMBER_FOR";
oFF.FilterDialogI18n.I18N_FD_FVH_DESCRIPTION = "I18N_FD_FVH_DESCRIPTION";
oFF.FilterDialogI18n.I18N_FD_FVH_SELECT_VALUE_FOR = "I18N_FD_FVH_SELECT_VALUE_FOR";
oFF.FilterDialogI18n.I18N_FD_FVH_NO_PARAMETERS = "I18N_FD_FVH_NO_PARAMETERS";
oFF.FilterDialogI18n.I18N_FD_FVH_ERROR_MSG_VALUE_MISSING = "I18N_FD_ERROR_MSG_VALUE_MISSING";
oFF.FilterDialogI18n.I18N_FD_HIER_VERSION = "I18N_FD_HIER_VERSION";
oFF.FilterDialogI18n.I18N_FD_HIER_OBJECT_VERSION = "I18N_FD_HIER_OBJECT_VERSION";
oFF.FilterDialogI18n.I18N_FD_HIER_DATE_FROM = "I18N_FD_HIER_DATE_FROM";
oFF.FilterDialogI18n.I18N_FD_HIER_DATE_TO = "I18N_FD_HIER_DATE_TO";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_EQUAL = "I18N_FD_COMPARISON_OPERATOR_EQUAL";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_EQUAL = "I18N_FD_COMPARISON_OPERATOR_NOT_EQUAL";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER = "I18N_FD_COMPARISON_OPERATOR_GREATER";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER_EQUAL = "I18N_FD_COMPARISON_OPERATOR_GREATER_EQUAL";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS = "I18N_FD_COMPARISON_OPERATOR_LESS";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS_EQUAL = "I18N_FD_COMPARISON_OPERATOR_LESS_EQUAL";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_BETWEEN = "I18N_FD_COMPARISON_OPERATOR_BETWEEN";
oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_BETWEEN = "I18N_FD_COMPARISON_OPERATOR_NOT_BETWEEN";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER = "I18N_FD_RANGES_HEADER";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_EQUAL = "I18N_FD_RANGES_HEADER_OPERATOR_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_EQUAL = "I18N_FD_RANGES_HEADER_OPERATOR_NOT_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER = "I18N_FD_RANGES_HEADER_OPERATOR_GREATER";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER_EQUAL = "I18N_FD_RANGES_HEADER_OPERATOR_GREATER_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS = "I18N_FD_RANGES_HEADER_OPERATOR_LESS";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS_EQUAL = "I18N_FD_RANGES_HEADER_OPERATOR_LESS_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_BETWEEN = "I18N_FD_RANGES_HEADER_OPERATOR_BETWEEN";
oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_BETWEEN = "I18N_FD_RANGES_HEADER_OPERATOR_NOT_BETWEEN";
oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_LIST = "I18N_FD_FILTER_TYPE_LIST";
oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_RANGE = "I18N_FD_FILTER_TYPE_RANGE";
oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_MBF = "I18N_FD_FILTER_TYPE_RANGE";
oFF.FilterDialogI18n.I18N_FD_RANGES_INFO = "I18N_FD_RANGES_INFO";
oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW = "I18N_FD_RANGES_ADD_NEW";
oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW_DISABLED_TOOLTIP = "I18N_FD_RANGES_ADD_NEW_DISABLED_TOOLTIP";
oFF.FilterDialogI18n.I18N_FD_RANGES_SELECT_OPERATOR = "I18N_FD_RANGES_SELECT_OPERATOR";
oFF.FilterDialogI18n.I18N_FD_RANGES_BETWEEN_LABEL = "I18N_FD_RANGES_BETWEEN_LABEL";
oFF.FilterDialogI18n.I18N_FD_RANGES_REMOVE_RANGE = "I18N_FD_RANGES_REMOVE_RANGE";
oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MIN = "I18N_FD_RANGES_PLACEHOLDER_MIN";
oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MAX = "I18N_FD_RANGES_PLACEHOLDER_MAX";
oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_EQUAL = "I18N_FD_RANGES_PLACEHOLDER_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_NOT_EQUAL = "I18N_FD_RANGES_PLACEHOLDER_NOT_EQUAL";
oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_NUMBER = "I18N_FD_RANGES_ERROR_ENTER_NUMER";
oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_VALUE = "I18N_FD_RANGES_ERROR_ENTER_VALUE";
oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_NOT_VALID = "I18N_FD_RANGES_NOT_VALID";
oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_MIN_GREATER_MAX = "I18N_FD_RANGES_MIN_GREATER_MAX";
oFF.FilterDialogI18n.I18N_FD_RANGES_WARN_VALUE_OUTSIDE_RANGE = "I18N_FD_RANGES_WARN_VALUE_OUTSIDE_RANGE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_DATE = "I18N_FD_DATE_RANGE_CURRENT_DATE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_SYSTEM_DATE = "I18N_FD_DATE_RANGE_SYSTEM_DATE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_HIERARCHY = "I18N_FD_DATE_RANGE_HIERARCHY";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_HEADER = "I18N_FD_DATE_RANGE_HEADER";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FIXED = "I18N_FD_DATE_RANGE_FIXED";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_DYNAMIC = "I18N_FD_DATE_RANGE_DYNAMIC";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_EXCLUDE = "I18N_FD_DATE_RANGE_EXCLUDE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TYPE = "I18N_FD_DATE_RANGE_TYPE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_GRANULARITY = "I18N_FD_DATE_RANGE_GRANULARITY";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_BACK = "I18N_FD_DATE_RANGE_LOOK_BACK";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_AHEAD = "I18N_FD_DATE_RANGE_LOOK_AHEAD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_PERIOD = "I18N_FD_DATE_RANGE_CURRENT_PERIOD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_PERIOD = "I18N_FD_DATE_RANGE_OFFSET_PERIOD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_DIRECTION = "I18N_FD_DATE_RANGE_OFFSET_DIRECTION";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_GRANULARITY = "I18N_FD_DATE_RANGE_OFFSET_GRANULARITY";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_AMOUNT = "I18N_FD_DATE_RANGE_OFFSET_AMOUNT";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_CURRENT_PERIOD = "I18N_FD_DATE_RANGE_INCLUDE_UP_TO_CURRENT_PERIOD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_OFFSET_PERIOD = "I18N_FD_DATE_RANGE_INCLUDE_UP_TO_OFFSET_PERIOD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FROM = "I18N_FD_DATE_RANGE_FROM";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TO = "I18N_FD_DATE_RANGE_TO";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_MIN_GREATER_MAX = "I18N_FD_DATE_RANGE_ERROR_MIN_GREATER_MAX";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_INVALID_DATE_FORMAT = "I18N_FD_DATE_RANGE_ERROR_INVALID_DATE_FORMAT";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_START_DATE_OUTSIDE_RANGE = "I18N_FD_DATE_RANGE_ERROR_START_DATE_OUTSIDE_RANGE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_END_DATE_OUTSIDE_RANGE = "I18N_FD_DATE_RANGE_ERROR_END_DATE_OUTSIDE_RANGE";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_NUMBER_BETWEEN = "I18N_FD_DATE_RANGE_ERROR_NUMBER_BETWEEN";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_STANDARD = "I18N_FD_DATE_RANGE_STANDARD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_OFFSET = "I18N_FD_DATE_RANGE_OFFSET";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_BACK = "I18N_FD_DATE_RANGE_OFFSET_DIRECTION_LOOK_BACK";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_AHEAD = "I18N_FD_DATE_RANGE_OFFSET_DIRECTION_LOOK_AHEAD";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR = "I18N_FD_DATE_RANGE_YEAR";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER = "I18N_FD_DATE_RANGE_QUARTER";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH = "I18N_FD_DATE_RANGE_MONTH";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY = "I18N_FD_DATE_RANGE_DAY";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_YEAR = "I18N_FD_DATE_RANGE_CURRENT_YEAR";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_QUARTER = "I18N_FD_DATE_RANGE_CURRENT_QUARTER";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_MONTH = "I18N_FD_DATE_RANGE_CURRENT_MONTH";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START = "I18N_FD_DATE_RANGE_START";
oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END = "I18N_FD_DATE_RANGE_END";
oFF.FilterDialogI18n.I18N_FD_QUARTER1 = "I18N_FD_QUARTER1";
oFF.FilterDialogI18n.I18N_FD_QUARTER2 = "I18N_FD_QUARTER2";
oFF.FilterDialogI18n.I18N_FD_QUARTER3 = "I18N_FD_QUARTER3";
oFF.FilterDialogI18n.I18N_FD_QUARTER4 = "I18N_FD_QUARTER4";
oFF.FilterDialogI18n.I18N_FD_MONTH1 = "I18N_FD_MONTH1";
oFF.FilterDialogI18n.I18N_FD_MONTH2 = "I18N_FD_MONTH2";
oFF.FilterDialogI18n.I18N_FD_MONTH3 = "I18N_FD_MONTH3";
oFF.FilterDialogI18n.I18N_FD_MONTH4 = "I18N_FD_MONTH4";
oFF.FilterDialogI18n.I18N_FD_MONTH5 = "I18N_FD_MONTH5";
oFF.FilterDialogI18n.I18N_FD_MONTH6 = "I18N_FD_MONTH6";
oFF.FilterDialogI18n.I18N_FD_MONTH7 = "I18N_FD_MONTH7";
oFF.FilterDialogI18n.I18N_FD_MONTH8 = "I18N_FD_MONTH8";
oFF.FilterDialogI18n.I18N_FD_MONTH9 = "I18N_FD_MONTH9";
oFF.FilterDialogI18n.I18N_FD_MONTH10 = "I18N_FD_MONTH10";
oFF.FilterDialogI18n.I18N_FD_MONTH11 = "I18N_FD_MONTH11";
oFF.FilterDialogI18n.I18N_FD_MONTH12 = "I18N_FD_MONTH12";
oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT = "I18N_FD_MBF_DIMENSION_CONTEXT";
oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_INFO = "I18N_FD_MBF_DIMENSION_CONTEXT_INFO";
oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_ERROR_NO_SELECTION = "I18N_FD_MBF_DIMENSION_CONTEXT_ERROR_NO_SELECTION";
oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT = "I18N_FD_MBF_MEASURE_CONTEXT";
oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT_INFO = "I18N_FD_MBF_MEASURE_CONTEXT_INFO";
oFF.FilterDialogI18n.staticSetup = function()
{
	var provider = new oFF.FilterDialogI18n();
	provider.setupProvider("FilterDialogProgram", true);
	provider.add(oFF.FilterDialogI18n.I18N_FD_OK, "OK", "#XBUT: The text of the ok button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_CANCEL, "Cancel", "#XBUT: The text of the cancel button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SETTINGS, "Settings", "#XTIT: The title of the settings panel");
	provider.add(oFF.FilterDialogI18n.I18N_FD_NO_RESULTS, "No available members", "#XMSG: Message shown when no members are available for selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MAX_RESULTS, "This list is restricted to {0} results. Please refine your search criteria.", "#XMSG: Message shown when a search responds with too many members");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SELECTED_MEMBERS, "Selected Members", "#XTIT: The title of the list showing the selected members");
	provider.add(oFF.FilterDialogI18n.I18N_FD_CLEAR_SELECTION, "Clear selection", "#XBUT: The text of the clear selection button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SHOW_PRESENTATION, "Display", "#XFLD: The label of the id and description dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID, "ID", "#XSEL: The ID presentation value");
	provider.add(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_DESCRIPTION, "Description", "#XSEL: The description presentation value");
	provider.add(oFF.FilterDialogI18n.I18N_FD_PRESENTATION_ID_AND_DESCRIPTION, "ID and Description", "#XSEL: The ID and description presentation value");
	provider.add(oFF.FilterDialogI18n.I18N_FD_ATTRIBUTES, "Attributes", "#XFLD: The label of the attributes combobox");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SELECT_ATTRIBUTE, "Select Attribute", "#XTOL: A placeholder for the attributes combobox");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIERARCHY, "Hierarchy", "#XFLD: The label of the hierarchy dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIERARCHY_FLAT_PRESENTATION, "Flat presentation", "#XSEL: The hierarchy dropdown value for flat presentation, i.e. no hierarchy");
	provider.add(oFF.FilterDialogI18n.I18N_FD_LOADING, "Loading...", "#XSEL: An indicator shown in the tree to while child members of an expanded node are currently loading");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SEARCH, "Search in...", "#XTOL: A placeholder for the search field");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SEARCH_TOOLTIP, "Select the option in which to search", "#XTOL: A tooltip for the search in attributes dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_PREVIOUS, "Previous", "#XTOL: A tooltip for the previous page button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_NEXT, "Next", "#XTOL: A tooltip for the next page button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_NULL, "(Null)", "#XSEL: A text for representing a NULL member");
	provider.add(oFF.FilterDialogI18n.I18N_FD_NO_VALUE, "(No Value)", "#XSEL: A text for representing an empy member");
	provider.add(oFF.FilterDialogI18n.I18N_FD_ERR_VH_SERVER_ERROR, "A server error has occurred, and the values cannot be processed. Please try again.", "#XMSG: A message displayed when the value help response contains an error");
	provider.add(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS, "Show unbooked members", "#XFLD: A label for the unbooked members switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT, "Use Default", "#XCKL: A label for the default read mode usage");
	provider.add(oFF.FilterDialogI18n.I18N_FD_UNBOOKED_MEMBERS_USE_DEFAULT_TOOLTIP, "Applies type for filter value selection as defined in BW query", "#XTOL: A label for the default read mode usage");
	provider.add(oFF.FilterDialogI18n.I18N_FD_EXCLUDE_MEMBERS, "Exclude selected members", "#XFLD: A label for the exclude switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_ERR_NO_VALUES_FOR_MANDATORY_VARIABLES, "Please set values for all mandatory variables", "#XMSG: A message shown when the mandatory variables must be set first before opening the filter dialog for the current variable");
	provider.add(oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_BOOKED_DISABLED, "Showing unbooked members is not supported", "#XTOL: A tooltip for the unbooked members switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_READMODE_SWITCH_UNBOOKED_DISABLED, "Showing booked members only is not supported", "#XTOL: A tooltip for the unbooked members switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SHOW_ONLY_SELECTED_MEMBERS, "Show only selected members", "#XBUT: A text for a button showing only the selected members in the list");
	provider.add(oFF.FilterDialogI18n.I18N_FD_SELECT_MEMBER_FOR, "Select Member for {0}", "#XTIT: A dialog title for selecting a member for a specific variable");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FVH_DESCRIPTION, "Description", "#XTIT: A title a table column in functional value help");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FVH_SELECT_VALUE_FOR, "Select value for {0}", "#XFLD: A label for functional value help");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FVH_NO_PARAMETERS, "No parameters", "#XMSG: A message shown in functional value help");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FVH_ERROR_MSG_VALUE_MISSING, "Value is missing", "#XMSG: An error shown in functional value help");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIER_VERSION, "Version", "#XSEL: A presentation value in hierarchy catalog");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIER_OBJECT_VERSION, "Object Version", "#XSEL: A presentation value in hierarchy catalog");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIER_DATE_FROM, "Date from", "#XSEL: A presentation value in hierarchy catalog");
	provider.add(oFF.FilterDialogI18n.I18N_FD_HIER_DATE_TO, "Date to", "#XSEL: A presentation value in hierarchy catalog");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_EQUAL, "Equal", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_EQUAL, "Not Equal", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER, "Greater Than", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER_EQUAL, "Greater Than or Equal To", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS, "Less Than", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS_EQUAL, "Less Than or Equal To", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_BETWEEN, "Between", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_BETWEEN, "Not Between", "#XSEL: An item in the comparison operator dropdown for range selection");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_LIST, "Select from list", "#XTIT: A tab title for list view");
	provider.add(oFF.FilterDialogI18n.I18N_FD_FILTER_TYPE_RANGE, "Set ranges", "#XTIT: A tab title for range view");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER, "Range {0}: {1}", "#XTIT: A basic title for a range containing the range number and the range description");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_EQUAL, "Equal To {0}", "#XTIT: The range title description for comparison operator equal");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_EQUAL, "Not Equal To {0}", "#XTIT: The range title description for comparison operator not-equal");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER, "Greater Than {0}", "#XTIT: The range title description for comparison operator greater");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER_EQUAL, "Greater Than or Equal To {0}", "#XTIT: The range title description for comparison operator greater-equal");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS, "Less Than {0}", "#XTIT: The range title description for comparison operator less");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS_EQUAL, "Less Than or Equal To {0}", "#XTIT: The range title description for comparison operator less-equal");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_BETWEEN, "Between {0} and {1}", "#XTIT: The range title description for comparison operator between");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_BETWEEN, "Not Between {0} and {1}", "#XTIT: The range title description for comparison operator not-between");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_INFO, "Available range: {0} - {1}", "#XMSG: A message describing the available numeric range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW, "Add a new range", "#XBUT: The text of the add new range button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW_DISABLED_TOOLTIP, "Range {0} is not valid.", "#XTOL: A button tooltip describing the disabled state");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_SELECT_OPERATOR, "Operator:", "#XFLD: The label of the comparison operator dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_BETWEEN_LABEL, "and", "#XFLD: A label shown between the 2 ranges fields for min and max values");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_REMOVE_RANGE, "Remove", "#XTOL: A tooltip for the remove range button");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MIN, "Min", "#XTOL: A placeholder for the min value in a range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MAX, "Max", "#XTOL: A placeholder for the max value in a range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_EQUAL, "Equal To", "#XTOL: A placeholder shown in the input field when the equal comparison operator is chosen in a range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_NOT_EQUAL, "Not Equal To", "#XTOL: A placeholder shown in the input field when the not-equal comparison operator is chosen in a range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_NUMBER, "Please enter a number.", "#XMSG: Error message shown when a number is not valid");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_VALUE, "Please enter a value.", "#XMSG: Error shown when no value is provided in an input field in a range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_NOT_VALID, "The value is not valid.", "#XMSG: Error shown when a provided non-numeric value is not valid");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_MIN_GREATER_MAX, "The start value cannot be bigger than the end value.", "#XSG: Error shown when the start value is bigger the end value");
	provider.add(oFF.FilterDialogI18n.I18N_FD_RANGES_WARN_VALUE_OUTSIDE_RANGE, "Input value is outside the available value range.", "#XMSG: Warning shown when the provided range is outside the available range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_DATE, "Current Date", "#XTIT: The title of the current date information in a date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_SYSTEM_DATE, "System Date / Period", "#XTIT: Describing that the current system date is used for date calculation");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_HIERARCHY, "Hierarchy:", "#XFLD: A label of the hierarchy dropdown in a date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_HEADER, "From {0} to {1}", "#XTIT: A title for a date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FIXED, "Fixed Date", "#XBUT: A text for selecting a fixed range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_DYNAMIC, "Dynamic Date", "#XBUT: A text for selecting a dynamic range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_EXCLUDE, "Exclude this range:", "#XFLD: A label for the exclude switch in a date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TYPE, "Range Type:", "#XFLD: A label for the date range type dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_GRANULARITY, "Granularity:", "#XFLD: A label for the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_BACK, "Look Back:", "#XFLD: A label for the date range look back input");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_AHEAD, "Look Ahead:", "XFLD: A label for the date range look ahead input");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_PERIOD, "Current Period:", "XFLD: A label for the date range current period description");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_PERIOD, "Offset Period:", "#XFLD: A label for the date range offset period description");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_DIRECTION, "Offset Direction:", "XFLD: A label for the date range offset direction dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_GRANULARITY, "Offset Granularity:", "XFLD: A label for the date range offset granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_AMOUNT, "Offset Amount:", "XFLD: A label for the date range offset amount input");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_CURRENT_PERIOD, "Include Range up to Current Period:", "#XFLD: A label for the up-to-current-period switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_OFFSET_PERIOD, "Include Range up to Offset Period:", "#XFLD: A label for the up-to-offset-period switch");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FROM, "From:", "#XFLD: A label for the from date selection in a fixed date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TO, "To:", "#XFLD: A label for the to date selection in a fixed date range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_MIN_GREATER_MAX, "The start date cannot be later than the end date.", "#XMSG: Error shown when the start date is later than the end date");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_INVALID_DATE_FORMAT, "The input is not a valid date format ({0}).", "#XMSG: Error shown when the date valid is not in a valid format");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_START_DATE_OUTSIDE_RANGE, "The start date is outside the selectable range.", "#XMSG: Error shown when the start date range is outside the available range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_END_DATE_OUTSIDE_RANGE, "The end date is outside the selectable range.", "#XMSG: Error shown when the end date range is outside the available range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_ERROR_NUMBER_BETWEEN, "Please enter a number between {0} and {1}.", "#XMSG: Error shown when the provided number of years/months/etc. for look back or ahead is outside the supported range");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_STANDARD, "Standard", "#XSEL: A value in the date range type dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_OFFSET, "Offset", "#XSEL: A value in the date range type dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_BACK, "Look Back", "#XSEL:A value in the date range offset direction dropdown ");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_AHEAD, "Look Ahead", "#XSEL: A value in the date range offset direction dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR, "Year", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER, "Quarter", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH, "Month", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY, "Day", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_YEAR, "Current Year", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_QUARTER, "Current Quarter", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_MONTH, "Current Month", "#XSEL: A value in the date range granularity dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START, "Start", "#XSEL: A value in the fixed date range year dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END, "End", "#XSEL: A value in the fixed date range year dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_QUARTER1, "Q1", "#XSEL: A value in the date range quarter dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_QUARTER2, "Q2", "#XSEL: A value in the date range quarter dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_QUARTER3, "Q3", "#XSEL: A value in the date range quarter dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_QUARTER4, "Q4", "#XSEL: A value in the date range quarter dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH1, "Jan", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH2, "Feb", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH3, "Mar", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH4, "Apr", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH5, "May", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH6, "Jun", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH7, "Jul", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH8, "Aug", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH9, "Sep", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH10, "Oct", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH11, "Nov", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MONTH12, "Dec", "#XSEL: A value in the date range month dropdown");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT, "Dimension Context:", "#XFLD: A label for the dimension context dropdown for measure based filters");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_INFO, "Edit dimension context for aggregation.", "#XACT: A text shown in a popover for the dimension context dropdown for measure based filters");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_ERROR_NO_SELECTION, "At least one dimension must be selected.", "#XMSG: Error shown when no dimension context has been selected for a measure based filter");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT, "Measure Context:", "#XFLD: A label for the measure context dropdown for measure based filters");
	provider.add(oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT_INFO, "A measure selection is required for this model.", "#XACT:  A text shown in a popover for the measure context dropdown for measure based filters");
	return provider;
};
oFF.FilterDialogI18n.getQuarterText = function(quarter, i18n)
{
	switch (quarter)
	{
		case 1:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER1);

		case 2:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER2);

		case 3:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER3);

		case 4:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER4);

		default:
			return "";
	}
};
oFF.FilterDialogI18n.getMonthText = function(month, i18n)
{
	switch (month)
	{
		case 1:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH1);

		case 2:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH2);

		case 3:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH3);

		case 4:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH4);

		case 5:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH5);

		case 6:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH6);

		case 7:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH7);

		case 8:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH8);

		case 9:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH9);

		case 10:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH10);

		case 11:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH11);

		case 12:
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH12);

		default:
			return "";
	}
};
oFF.FilterDialogI18n.prototype.add = function(key, text, comment)
{
	this.addText(key, text);
	this.addComment(key, comment);
	oFF.OlapUiI18n.addDefaultValue(key, text);
};

oFF.FdAbstractDateRangeItem = function() {};
oFF.FdAbstractDateRangeItem.prototype = new oFF.FdItem();
oFF.FdAbstractDateRangeItem.prototype._ff_c = "FdAbstractDateRangeItem";

oFF.FdAbstractDateRangeItem.prototype.m_granularity = null;
oFF.FdAbstractDateRangeItem.prototype.releaseObject = function()
{
	oFF.FdItem.prototype.releaseObject.call( this );
	this.m_granularity = null;
};
oFF.FdAbstractDateRangeItem.prototype.getGranularity = function()
{
	return oFF.notNull(this.m_granularity) ? this.m_granularity : oFF.DateRangeGranularity.YEAR;
};
oFF.FdAbstractDateRangeItem.prototype.setGranularity = function(granularity)
{
	this.m_granularity = granularity;
};
oFF.FdAbstractDateRangeItem.prototype.getComparisonOperator = function()
{
	var operator = oFF.FdItem.prototype.getComparisonOperator.call( this );
	return operator === oFF.FdComparisonOperator.BETWEEN || operator === oFF.FdComparisonOperator.NOT_BETWEEN ? operator : oFF.FdComparisonOperator.BETWEEN;
};
oFF.FdAbstractDateRangeItem.prototype.setExcluded = function(excluded)
{
	this.setComparisonOperator(excluded ? oFF.FdComparisonOperator.NOT_BETWEEN : oFF.FdComparisonOperator.BETWEEN);
};
oFF.FdAbstractDateRangeItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdItem.prototype.isEqualTo.call( this , other) || other.getType() !== this.getType())
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	return otherItem.m_granularity === this.m_granularity;
};
oFF.FdAbstractDateRangeItem.prototype.getText = function()
{
	return null;
};
oFF.FdAbstractDateRangeItem.prototype.getName = function()
{
	return null;
};
oFF.FdAbstractDateRangeItem.prototype.getValueByField = function(field)
{
	return null;
};
oFF.FdAbstractDateRangeItem.prototype.getValueType = function()
{
	return oFF.XValueType.DATE;
};
oFF.FdAbstractDateRangeItem.prototype.getKey = function()
{
	return null;
};
oFF.FdAbstractDateRangeItem.prototype.getDisplayKey = function()
{
	return null;
};
oFF.FdAbstractDateRangeItem.prototype.hasDisplayKey = function()
{
	return false;
};
oFF.FdAbstractDateRangeItem.prototype.isNull = function()
{
	return false;
};

oFF.FdRangeItem = function() {};
oFF.FdRangeItem.prototype = new oFF.FdItem();
oFF.FdRangeItem.prototype._ff_c = "FdRangeItem";

oFF.FdRangeItem.create = function(low, high, excludedRange)
{
	var item = new oFF.FdRangeItem();
	item.setupRangeItem(low, high, excludedRange);
	return item;
};
oFF.FdRangeItem.prototype.m_low = null;
oFF.FdRangeItem.prototype.m_high = null;
oFF.FdRangeItem.prototype.setupRangeItem = function(low, high, excludedRange)
{
	this.setLow(low);
	this.setHigh(high);
	this.setComparisonOperator(excludedRange ? oFF.FdComparisonOperator.NOT_BETWEEN : oFF.FdComparisonOperator.BETWEEN);
};
oFF.FdRangeItem.prototype.releaseObject = function()
{
	oFF.FdItem.prototype.releaseObject.call( this );
	this.m_low = oFF.XObjectExt.release(this.m_low);
	this.m_high = oFF.XObjectExt.release(this.m_high);
};
oFF.FdRangeItem.prototype.getType = function()
{
	return oFF.FdItemType.RANGE;
};
oFF.FdRangeItem.prototype.getLow = function()
{
	return this.m_low;
};
oFF.FdRangeItem.prototype.setLow = function(lowItem)
{
	this.m_low = oFF.notNull(lowItem) ? lowItem : oFF.FdItemFactory.createEmpty();
};
oFF.FdRangeItem.prototype.getHigh = function()
{
	return this.m_high;
};
oFF.FdRangeItem.prototype.setHigh = function(highItem)
{
	this.m_high = oFF.notNull(highItem) ? highItem : oFF.FdItemFactory.createEmpty();
};
oFF.FdRangeItem.prototype.setComparisonOperator = function(operator)
{
	if (operator === oFF.FdComparisonOperator.BETWEEN || operator === oFF.FdComparisonOperator.NOT_BETWEEN)
	{
		oFF.FdItem.prototype.setComparisonOperator.call( this , operator);
	}
};
oFF.FdRangeItem.prototype.concatenate = function(lowValue, highValue)
{
	return oFF.XStringUtils.concatenate5("[", oFF.notNull(lowValue) ? lowValue : "", ",", oFF.notNull(highValue) ? highValue : "", "]");
};
oFF.FdRangeItem.prototype.getName = function()
{
	return this.concatenate(this.m_low.getName(), this.m_high.getName());
};
oFF.FdRangeItem.prototype.getText = function()
{
	var low = this.m_low.getText();
	var high = this.m_high.getText();
	return oFF.XStringUtils.isNotNullAndNotEmpty(low) && oFF.XStringUtils.isNotNullAndNotEmpty(high) ? this.concatenate(low, high) : null;
};
oFF.FdRangeItem.prototype.getFormattedValueByPresentation = function(presentation, i18n)
{
	return this.concatenate(this.m_low.getFormattedValueByPresentation(presentation, i18n), this.m_high.getFormattedValueByPresentation(presentation, i18n));
};
oFF.FdRangeItem.prototype.getTextFormatted = function()
{
	return this.concatenate(this.m_low.getTextFormatted(), this.m_high.getTextFormatted());
};
oFF.FdRangeItem.prototype.getValueByField = function(field)
{
	return this.concatenate(this.m_low.getValueByField(field), this.m_high.getValueByField(field));
};
oFF.FdRangeItem.prototype.getHierarchyName = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(oFF.FdItem.prototype.getHierarchyName.call( this )) ? oFF.FdItem.prototype.getHierarchyName.call( this ) : this.m_low.getHierarchyName();
};
oFF.FdRangeItem.prototype.getValueType = function()
{
	return null;
};
oFF.FdRangeItem.prototype.getKey = function()
{
	return null;
};
oFF.FdRangeItem.prototype.getDisplayKey = function()
{
	return null;
};
oFF.FdRangeItem.prototype.hasDisplayKey = function()
{
	return false;
};
oFF.FdRangeItem.prototype.isNull = function()
{
	return false;
};
oFF.FdRangeItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdItem.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	return oFF.XObjectExt.areEqual(this.getLow(), otherItem.getLow()) && oFF.XObjectExt.areEqual(this.getHigh(), otherItem.getHigh());
};
oFF.FdRangeItem.prototype.toString = function()
{
	return oFF.XStringUtils.concatenate3(this.getLow().getKey(), "-", this.getHigh().getKey());
};

oFF.FdSimpleItem = function() {};
oFF.FdSimpleItem.prototype = new oFF.FdItem();
oFF.FdSimpleItem.prototype._ff_c = "FdSimpleItem";

oFF.FdSimpleItem.create = function(key, displayKey, text)
{
	var item = new oFF.FdSimpleItem();
	item.m_key = key;
	item.m_displayKey = displayKey;
	item.m_text = text;
	return item;
};
oFF.FdSimpleItem.createWithType = function(key, displayKey, text, valueType)
{
	var item = new oFF.FdSimpleItem();
	item.m_key = key;
	item.m_displayKey = displayKey;
	item.m_text = text;
	item.m_valueType = valueType;
	return item;
};
oFF.FdSimpleItem.prototype.m_isNull = false;
oFF.FdSimpleItem.prototype.m_key = null;
oFF.FdSimpleItem.prototype.m_displayKey = null;
oFF.FdSimpleItem.prototype.m_text = null;
oFF.FdSimpleItem.prototype.m_valueType = null;
oFF.FdSimpleItem.prototype.releaseObject = function()
{
	oFF.FdItem.prototype.releaseObject.call( this );
	this.m_key = null;
	this.m_displayKey = null;
	this.m_text = null;
	this.m_valueType = null;
};
oFF.FdSimpleItem.prototype.getType = function()
{
	return oFF.FdItemType.BASIC;
};
oFF.FdSimpleItem.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.FdSimpleItem.prototype.isNull = function()
{
	return this.m_isNull;
};
oFF.FdSimpleItem.prototype.setNull = function(isNull)
{
	this.m_isNull = isNull;
};
oFF.FdSimpleItem.prototype.getName = function()
{
	return this.m_displayKey;
};
oFF.FdSimpleItem.prototype.getKey = function()
{
	return this.m_key;
};
oFF.FdSimpleItem.prototype.getDisplayKey = function()
{
	return oFF.notNull(this.m_displayKey) ? this.m_displayKey : this.m_key;
};
oFF.FdSimpleItem.prototype.hasDisplayKey = function()
{
	return oFF.notNull(this.m_displayKey);
};
oFF.FdSimpleItem.prototype.getText = function()
{
	return this.m_text;
};
oFF.FdSimpleItem.prototype.getFormattedValueByPresentation = function(presentation, i18n)
{
	if (this.isNull())
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_NULL);
	}
	var value = oFF.notNull(presentation) ? presentation.isKey() ? this.getDisplayKey() : this.getText() : null;
	if (oFF.XString.isEqual(value, ""))
	{
		if (!presentation.isKey() && oFF.XStringUtils.isNotNullAndNotEmpty(this.getDisplayKey()))
		{
			return this.getDisplayKey();
		}
		else
		{
			return i18n.getText(oFF.FilterDialogI18n.I18N_FD_NO_VALUE);
		}
	}
	return value;
};
oFF.FdSimpleItem.prototype.getValueByField = function(field)
{
	if (oFF.notNull(field))
	{
		var dimension = field.getDimension();
		var flatKeyField = dimension.getFlatKeyField();
		var hierarchyKeyField = dimension.getHierarchyKeyField();
		var flatDisplayKeyField = dimension.getFlatDisplayKeyField();
		var hierarchyDisplayKeyField = dimension.getHierarchyDisplayKeyField();
		if (flatKeyField === field || hierarchyKeyField === field || dimension.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND) === field)
		{
			if (oFF.notNull(flatDisplayKeyField) && flatKeyField === flatDisplayKeyField || oFF.notNull(hierarchyDisplayKeyField) && hierarchyKeyField === hierarchyDisplayKeyField)
			{
				return oFF.notNull(this.m_key) ? this.m_key : this.m_displayKey;
			}
			return this.m_key;
		}
		if (flatDisplayKeyField === field || hierarchyDisplayKeyField === field)
		{
			return this.m_displayKey;
		}
		if (dimension.getFlatTextField() === field || dimension.getHierarchyTextField() === field)
		{
			return this.m_text;
		}
	}
	return null;
};
oFF.FdSimpleItem.prototype.compareTo = function(objectToCompare)
{
	if (oFF.isNull(objectToCompare))
	{
		return 1;
	}
	var key = this.getKey();
	var otherKey = objectToCompare.getKey();
	if (oFF.isNull(key) || oFF.isNull(otherKey))
	{
		key = this.getDisplayKey();
		otherKey = objectToCompare.getDisplayKey();
	}
	if (this.getValueType() === oFF.XValueType.DATE || objectToCompare.getValueType() === oFF.XValueType.DATE)
	{
		var thisDate = oFF.XDate.createDateSafe(key);
		var otherDate = oFF.XDate.createDateSafe(otherKey);
		if (oFF.notNull(thisDate) && oFF.notNull(otherDate))
		{
			return oFF.XString.compare(thisDate.toIsoFormat(), otherDate.toIsoFormat());
		}
	}
	try
	{
		var comparison = oFF.XDouble.convertFromString(key) - oFF.XDouble.convertFromString(otherKey);
		return comparison < 0 ? -1 : comparison > 0 ? 1 : 0;
	}
	catch (e)
	{
		return oFF.XString.compare(key, otherKey);
	}
};
oFF.FdSimpleItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdItem.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	if (this.isNull() && otherItem.isNull())
	{
		return true;
	}
	if (!oFF.XString.isEqual(this.getKey(), otherItem.getKey()))
	{
		return false;
	}
	if (this.getKey() === null && !oFF.XString.isEqual(this.getDisplayKey(), otherItem.getDisplayKey()))
	{
		return false;
	}
	var text = this.getText();
	var otherText = otherItem.getText();
	return oFF.isNull(text) || oFF.isNull(otherText) || oFF.XString.isEqual(text, otherText);
};
oFF.FdSimpleItem.prototype.toString = function()
{
	if (oFF.isNull(this.m_displayKey) && oFF.isNull(this.m_key) && oFF.isNull(this.m_text))
	{
		return "";
	}
	var sb = oFF.XStringBuffer.create();
	sb.append("{");
	sb.append("DisplayKey: ").append(this.m_displayKey);
	sb.append(", Key: ").append(this.m_key);
	sb.append(", Text: ").append(this.m_text);
	sb.append("}");
	return sb.toString();
};

oFF.FdComponentAbstractRange = function() {};
oFF.FdComponentAbstractRange.prototype = new oFF.FdAbstractComponent();
oFF.FdComponentAbstractRange.prototype._ff_c = "FdComponentAbstractRange";

oFF.FdComponentAbstractRange.prototype.m_item = null;
oFF.FdComponentAbstractRange.prototype.m_deleteListener = null;
oFF.FdComponentAbstractRange.prototype.m_changeListener = null;
oFF.FdComponentAbstractRange.prototype.m_expandedByUser = false;
oFF.FdComponentAbstractRange.prototype.m_forceDeleteBtnEnabled = false;
oFF.FdComponentAbstractRange.prototype.m_rangeIndex = 0;
oFF.FdComponentAbstractRange.prototype.releaseObject = function()
{
	oFF.FdAbstractComponent.prototype.releaseObject.call( this );
	this.m_item = null;
	this.m_deleteListener = null;
	this.m_changeListener = null;
};
oFF.FdComponentAbstractRange.prototype.buildOlapDialogUi = function(genesis)
{
	var layout = this.m_layout;
	layout.buildOlapDialogUi(genesis);
	layout.getPanel().registerOnExpand(this);
	layout.getPanel().registerOnCollapse(this);
	layout.getDeleteBtn().registerOnPress(this);
};
oFF.FdComponentAbstractRange.prototype.getItem = function()
{
	return this.m_item;
};
oFF.FdComponentAbstractRange.prototype.registerOnDelete = function(listener)
{
	this.m_deleteListener = listener;
};
oFF.FdComponentAbstractRange.prototype.registerOnChange = function(listener)
{
	this.m_changeListener = listener;
};
oFF.FdComponentAbstractRange.prototype.onDataChanged = function()
{
	if (oFF.notNull(this.m_changeListener))
	{
		this.m_changeListener();
	}
	this.m_layout.updateDeleteBtnEnabledState(this.m_forceDeleteBtnEnabled);
};
oFF.FdComponentAbstractRange.prototype.setExpanded = function(expanded)
{
	if (expanded || !this.m_expandedByUser)
	{
		this.m_layout.getPanel().setExpanded(expanded);
	}
};
oFF.FdComponentAbstractRange.prototype.onExpand = function(event)
{
	if (event.getParameters().getBooleanByKeyExt(oFF.UiControlEvent.PARAM_TRIGGERED_BY_INTERACTION, false))
	{
		this.m_expandedByUser = true;
	}
};
oFF.FdComponentAbstractRange.prototype.onCollapse = function(event)
{
	this.m_expandedByUser = false;
};
oFF.FdComponentAbstractRange.prototype.onPress = function(event)
{
	this.m_deleteListener();
};
oFF.FdComponentAbstractRange.prototype.onRangesChanged = function(hasOtherRanges, rangeIndex)
{
	this.m_forceDeleteBtnEnabled = hasOtherRanges;
	this.m_rangeIndex = rangeIndex;
	this.updateRangeText();
	this.m_layout.updateDeleteBtnEnabledState(this.m_forceDeleteBtnEnabled);
};
oFF.FdComponentAbstractRange.prototype.updateRangeText = function()
{
	this.m_layout.updateHeaderText(this.m_rangeIndex + 1);
};
oFF.FdComponentAbstractRange.prototype.replaceItem = function(newItem)
{
	var index = 0;
	var selectedItems = this.m_model.getSelectedItems();
	while (index < selectedItems.size() && selectedItems.get(index) !== this.m_item)
	{
		index++;
	}
	this.m_model.removeSelectedItemAt(index);
	this.m_item = newItem;
	this.m_model.insertSelectedItem(index, newItem);
};

oFF.FdComponentNavigationContainer = function() {};
oFF.FdComponentNavigationContainer.prototype = new oFF.FdComponentAbstractTable();
oFF.FdComponentNavigationContainer.prototype._ff_c = "FdComponentNavigationContainer";

oFF.FdComponentNavigationContainer.NAV_CONTAINER_SEARCH_PAGE = "SearchPage";
oFF.FdComponentNavigationContainer.create = function(tableBasedView, model, context)
{
	var obj = new oFF.FdComponentNavigationContainer();
	obj.setupTableComponent(model, context, null, tableBasedView);
	return obj;
};
oFF.FdComponentNavigationContainer.prototype.m_genesis = null;
oFF.FdComponentNavigationContainer.prototype.m_navContainer = null;
oFF.FdComponentNavigationContainer.prototype.m_activePage = null;
oFF.FdComponentNavigationContainer.prototype.releaseObject = function()
{
	this.m_genesis = null;
	this.clearPages();
	this.m_navContainer = oFF.XObjectExt.release(this.m_navContainer);
	oFF.FdComponentAbstractTable.prototype.releaseObject.call( this );
};
oFF.FdComponentNavigationContainer.prototype.clearPages = function()
{
	var pages = this.m_navContainer.getPages();
	for (var i = 0; i < pages.size(); i++)
	{
		oFF.XObjectExt.release(pages.get(i).getCustomObject());
	}
	this.m_navContainer.clearPages();
};
oFF.FdComponentNavigationContainer.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_navContainer = genesis.newControl(oFF.UiType.NAVIGATION_CONTAINER);
	this.m_navContainer.registerOnBack(this);
	this.addNavigationPage(null, false);
	this.m_uiTable.getLayout().setRoot(this.m_navContainer);
};
oFF.FdComponentNavigationContainer.prototype.addNavigationPage = function(parent, showHeader)
{
	var table = this.createTable(parent);
	this.m_activePage = this.m_navContainer.pushNewPage();
	this.m_activePage.setTitle(this.getPageTitle(parent));
	this.m_activePage.setShowHeader(showHeader);
	this.m_activePage.setCustomObject(table);
	this.m_activePage.setContent(table.getTableControl());
	return this.m_activePage;
};
oFF.FdComponentNavigationContainer.prototype.createTable = function(parent)
{
	var responsiveTable = oFF.FdLayoutResponsiveTable.create();
	responsiveTable.buildOlapDialogUi(this.m_genesis);
	this.m_uiTable = oFF.FdUiTable.createResponsiveTable(responsiveTable);
	this.m_uiTable.registerOnSelectionChange(this);
	this.m_uiTable.registerOnScrollLoad(this);
	this.m_uiTable.setBusy(true);
	this.m_uiTable.setCustomObject(parent);
	if (this.m_navContainer.hasPages())
	{
		this.m_uiTable.setSelectionMode(this.getTableFromPage(this.m_navContainer.getCurrentPage()).getSelectionMode());
	}
	return this.m_uiTable;
};
oFF.FdComponentNavigationContainer.prototype.getPageTitle = function(parent)
{
	if (oFF.isNull(parent))
	{
		return null;
	}
	return this.m_view.getMainPresentation().hasKeyPresentation() ? parent.getDisplayKey() : parent.getTextFormatted();
};
oFF.FdComponentNavigationContainer.prototype.getTableFromPage = function(page)
{
	return page.getCustomObject();
};
oFF.FdComponentNavigationContainer.prototype.getParentItem = function(table)
{
	return table.getCustomObject();
};
oFF.FdComponentNavigationContainer.prototype.onSelectionCleared = function()
{
	var pages = this.m_navContainer.getPages();
	for (var i = 0; i < pages.size(); i++)
	{
		this.getTableFromPage(pages.get(i)).clearSelectedItems();
	}
	oFF.FdComponentAbstractTable.prototype.onSelectionCleared.call( this );
};
oFF.FdComponentNavigationContainer.prototype.renderItems = function(items, presentations, selectedItems)
{
	this.updateColumns();
	if (oFF.notNull(items))
	{
		var size = this.m_view.isSearchActive() ? items.size() : oFF.XMath.min(items.size(), this.m_model.getChildNodesPageSize());
		for (var i = 0; i < size; i++)
		{
			var item = items.get(i);
			var row = this.m_uiTable.addNewRow();
			this.m_uiTable.addAllCells(row, this.createRowCells(row, item, presentations));
			row.setCustomObject(item);
			row.setSelected(selectedItems.contains(item));
			row.setName(item.getName());
			if (item.hasChildren() && !this.m_view.isSearchActive())
			{
				row.registerOnPress(this);
				this.m_uiTable.setListItemType(row, oFF.UiListType.NAVIGATION);
			}
		}
	}
};
oFF.FdComponentNavigationContainer.prototype.publishPresentations = function()
{
	oFF.FdComponentAbstractTable.prototype.publishPresentations.call( this );
	var pages = this.m_navContainer.getPages();
	for (var i = 0; i < pages.size(); i++)
	{
		var page = pages.get(i);
		page.setText(this.getPageTitle(this.getParentItem(this.getTableFromPage(page))));
	}
};
oFF.FdComponentNavigationContainer.prototype.onPress = function(event)
{
	var control = event.getControl();
	var item = control.getCustomObject();
	if (item.hasChildren() && !this.m_view.isSearchActive())
	{
		this.addNavigationPage(item, true);
		this.updateColumns();
		this.m_view.onFetchChildren(item, 0, null, this.m_view, oFF.FdViewCustomIdentifier.creatForFetchChildrenByItem(item));
	}
};
oFF.FdComponentNavigationContainer.prototype.onProcessFinished = function(items, startPage, customIdentifier)
{
	if (!this.m_view.isSearchActive())
	{
		var identifier = customIdentifier;
		if (identifier.getParentItem() !== this.getParentItem(this.m_uiTable))
		{
			oFF.XObjectExt.release(identifier);
			return;
		}
	}
	this.renderItems(items, this.m_view.getSelectedPresentations().getValuesAsReadOnlyList(), this.m_model.getSelectedItems());
	this.setBusy(false);
};
oFF.FdComponentNavigationContainer.prototype.onScrollLoad = function(event)
{
	if (this.m_uiTable.isBusy() || this.m_view.isSearchActive())
	{
		return;
	}
	var tableParent = this.getParentItem(this.m_uiTable);
	var loadedItems = oFF.notNull(tableParent) ? tableParent.getChildren() : this.m_model.getItems(0, 0);
	var totalRowCount = this.m_uiTable.getRows().size();
	if (loadedItems.size() > totalRowCount)
	{
		this.setBusy(true);
		this.m_view.onFetchChildren(tableParent, totalRowCount, null, this.m_view, oFF.FdViewCustomIdentifier.creatForFetchChildrenByItem(tableParent));
	}
};
oFF.FdComponentNavigationContainer.prototype.onBack = function(event)
{
	if (this.m_view.isSearchActive())
	{
		this.m_view.clearSearch();
	}
	if (this.isReloadRequired())
	{
		this.refreshContent(false);
		return;
	}
	if (this.m_navContainer.hasPages())
	{
		if (oFF.notNull(this.m_activePage))
		{
			oFF.XObjectExt.release(this.m_activePage.getCustomObject());
			this.m_activePage = oFF.XObjectExt.release(this.m_activePage);
		}
		this.m_activePage = this.m_navContainer.getCurrentPage();
		this.m_uiTable = this.getTableFromPage(this.m_navContainer.getCurrentPage());
		if (this.isPresentationUpdateNeeded(this.m_view.getSelectedPresentations().getKeysAsReadOnlyListOfString()))
		{
			this.refreshContent(true);
		}
	}
};
oFF.FdComponentNavigationContainer.prototype.onSearchChange = function(isSearchActive, searchText)
{
	var page = this.m_navContainer.getCurrentPage();
	if (isSearchActive)
	{
		if (!oFF.XString.isEqual(page.getName(), oFF.FdComponentNavigationContainer.NAV_CONTAINER_SEARCH_PAGE))
		{
			page = this.addNavigationPage(null, true);
			page.setName(oFF.FdComponentNavigationContainer.NAV_CONTAINER_SEARCH_PAGE);
		}
		page.setTitle(oFF.XStringUtils.concatenate3("'", searchText, "'"));
		var table = this.getTableFromPage(page);
		table.clearRows();
		table.clearSelectedItems();
		this.updateColumns();
		oFF.FdComponentAbstractTable.prototype.onSearchChange.call( this , isSearchActive, searchText);
	}
	else if (oFF.XString.isEqual(page.getName(), oFF.FdComponentNavigationContainer.NAV_CONTAINER_SEARCH_PAGE))
	{
		if (this.isReloadRequired())
		{
			this.refreshContent(false);
		}
		else
		{
			this.m_navContainer.popPage();
		}
	}
};
oFF.FdComponentNavigationContainer.prototype.parentNodesInSearchNeeded = function()
{
	return false;
};
oFF.FdComponentNavigationContainer.prototype.refreshContent = function(refreshPresentationsOnly)
{
	if (this.isReloadRequired())
	{
		var selectionMode = this.m_uiTable.getSelectionMode();
		this.clearPages();
		this.addNavigationPage(null, false);
		this.m_uiTable.setSelectionMode(selectionMode);
	}
	this.m_view.onRefreshTree(refreshPresentationsOnly, this.getParentItem(this.m_uiTable));
};
oFF.FdComponentNavigationContainer.prototype.isReloadRequired = function()
{
	return this.m_model.isInitial();
};

oFF.FdComponentResponsiveTable = function() {};
oFF.FdComponentResponsiveTable.prototype = new oFF.FdComponentAbstractTable();
oFF.FdComponentResponsiveTable.prototype._ff_c = "FdComponentResponsiveTable";

oFF.FdComponentResponsiveTable.create = function(tableBasedView, model, context)
{
	var obj = new oFF.FdComponentResponsiveTable();
	obj.setupTableComponent(model, context, oFF.FdLayoutResponsiveTable.create(), tableBasedView);
	return obj;
};
oFF.FdComponentResponsiveTable.prototype.m_isLazyLoading = false;
oFF.FdComponentResponsiveTable.prototype.m_scrollContainer = null;
oFF.FdComponentResponsiveTable.prototype.releaseObject = function()
{
	oFF.FdComponentAbstractTable.prototype.releaseObject.call( this );
	this.m_scrollContainer = oFF.XObjectExt.release(this.m_scrollContainer);
};
oFF.FdComponentResponsiveTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	this.m_uiTable = oFF.FdUiTable.createResponsiveTable(this.m_layout);
	this.m_uiTable.registerOnSelectionChange(this);
	this.m_uiTable.registerOnScrollLoad(this);
	this.m_uiTable.setBusy(true);
	this.m_scrollContainer = genesis.newControl(oFF.UiType.SCROLL_CONTAINER);
	this.m_scrollContainer.setContent(this.m_uiTable.getTableControl());
	this.m_uiTable.getLayout().setRoot(this.m_scrollContainer);
};
oFF.FdComponentResponsiveTable.prototype.refreshContent = function(refreshPresentationsOnly)
{
	this.m_view.onRefreshList(refreshPresentationsOnly, this.m_isLazyLoading);
};
oFF.FdComponentResponsiveTable.prototype.onSelectionChange = function(event)
{
	var searchActive = this.m_view.isSearchActive();
	if (!searchActive && event.getParameters().getBooleanByKeyExt(oFF.UiSelectionEvent.PARAM_SELECT_ALL, false))
	{
		this.m_view.addAllMembersToSelection();
		return;
	}
	else if (!searchActive && event.getParameters().getBooleanByKeyExt(oFF.UiSelectionEvent.PARAM_DESELECT_ALL, false))
	{
		this.m_view.removeAllMembersFromSelection();
		return;
	}
	oFF.FdComponentAbstractTable.prototype.onSelectionChange.call( this , event);
};
oFF.FdComponentResponsiveTable.prototype.onScrollLoad = function(event)
{
	if (!this.m_uiTable.isBusy() && !this.m_view.isSearchActive() && this.m_model.hasNextPage())
	{
		this.setBusy(true);
		this.m_isLazyLoading = true;
		this.m_model.setPage(this.m_model.getPage() + 1);
		this.refreshContent(false);
	}
};
oFF.FdComponentResponsiveTable.prototype.renderItems = function(items, presentations, selectedItems)
{
	if (!this.m_isLazyLoading)
	{
		this.m_uiTable.clearRows();
		this.m_uiTable.clearSelectedItems();
		this.updateColumns();
		this.m_scrollContainer.scrollTo(0, 0, 0);
	}
	this.m_isLazyLoading = false;
	var size = oFF.notNull(items) ? items.size() : 0;
	for (var i = 0; i < size; i++)
	{
		var item = items.get(i);
		var row = this.m_uiTable.addNewRow();
		this.m_uiTable.addAllCells(row, this.createRowCells(row, item, presentations));
		row.setCustomObject(item);
		row.setSelected(selectedItems.contains(item));
	}
};

oFF.FdComponentTable = function() {};
oFF.FdComponentTable.prototype = new oFF.FdComponentAbstractTable();
oFF.FdComponentTable.prototype._ff_c = "FdComponentTable";

oFF.FdComponentTable.create = function(tableBasedView, model, context)
{
	var obj = new oFF.FdComponentTable();
	obj.setupTableComponent(model, context, oFF.FdLayoutTable.create(), tableBasedView);
	return obj;
};
oFF.FdComponentTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	var tableLayout = this.getTableLayout();
	this.m_uiTable = oFF.FdUiTable.createTable(tableLayout);
	tableLayout.getPagingBtnPrev().registerOnPress(this);
	tableLayout.getPagingBtnNext().registerOnPress(this);
	tableLayout.getPagingBtn1().registerOnPress(this);
	tableLayout.getPagingBtn2().registerOnPress(this);
	tableLayout.getPagingBtn3().registerOnPress(this);
	this.m_uiTable.registerOnSelectionChange(this);
};
oFF.FdComponentTable.prototype.getTableLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentTable.prototype.onPress = function(event)
{
	var tableLayout = this.getTableLayout();
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, tableLayout.getPagingBtnPrev().getName()))
	{
		this.setBusy(true);
		this.switchPage(this.m_model.getPage() - 1);
	}
	else if (oFF.XString.isEqual(controlName, tableLayout.getPagingBtnNext().getName()))
	{
		this.setBusy(true);
		this.switchPage(this.m_model.getPage() + 1);
	}
	else if (oFF.XString.isEqual(controlName, tableLayout.getPagingBtn1().getName()) || oFF.XString.isEqual(controlName, tableLayout.getPagingBtn2().getName()) || oFF.XString.isEqual(controlName, tableLayout.getPagingBtn3().getName()))
	{
		this.setBusy(true);
		this.switchPage(event.getControl().getCustomObject().getInteger());
	}
};
oFF.FdComponentTable.prototype.switchPage = function(page)
{
	this.setBusy(true);
	this.m_model.setPage(page);
	this.refreshContent(false);
};
oFF.FdComponentTable.prototype.setBusy = function(busy)
{
	oFF.FdComponentAbstractTable.prototype.setBusy.call( this , busy);
	if (busy)
	{
		this.getTableLayout().disableAllPagingButtons();
	}
};
oFF.FdComponentTable.prototype.refreshContent = function(refreshPresentationsOnly)
{
	this.m_view.onRefreshList(refreshPresentationsOnly, true);
};
oFF.FdComponentTable.prototype.onSelectionChange = function(event)
{
	var searchActive = this.m_view.isSearchActive();
	if (!searchActive && event.getParameters().getBooleanByKeyExt(oFF.UiSelectionEvent.PARAM_SELECT_ALL, false))
	{
		this.m_view.addAllMembersToSelection();
		return;
	}
	else if (!searchActive && event.getParameters().getBooleanByKeyExt(oFF.UiSelectionEvent.PARAM_DESELECT_ALL, false))
	{
		this.m_view.removeAllMembersFromSelection();
		return;
	}
	oFF.FdComponentAbstractTable.prototype.onSelectionChange.call( this , event);
};
oFF.FdComponentTable.prototype.renderItems = function(items, presentations, selectedItems)
{
	this.m_uiTable.clearRows();
	this.m_uiTable.clearSelectedItems();
	this.updateColumns();
	if (oFF.notNull(items))
	{
		var size = items.size();
		for (var i = 0; i < size; i++)
		{
			var item = items.get(i);
			var row = this.m_uiTable.addNewRow();
			this.m_uiTable.addAllCells(row, this.createRowCells(row, item, presentations));
			row.setCustomObject(item);
		}
		var rows = this.m_uiTable.getRows();
		for (var k = 0; k < selectedItems.size(); k++)
		{
			var rowIndex = items.getIndex(selectedItems.get(k));
			if (rowIndex >= 0)
			{
				rows.get(rowIndex).setSelected(true);
			}
		}
	}
};
oFF.FdComponentTable.prototype.updatePaging = function(forceDisablePaging)
{
	var tableLayout = this.getTableLayout();
	var pagingBtn1 = tableLayout.getPagingBtn1();
	var pagingBtn2 = tableLayout.getPagingBtn2();
	var pagingBtn3 = tableLayout.getPagingBtn3();
	if (forceDisablePaging || this.m_view.isSearchActive())
	{
		pagingBtn1.setText("1");
		tableLayout.setPagingBtn1Visible(true, false);
		tableLayout.setPagingBtn2Visible(false, false);
		tableLayout.setPagingBtn3Visible(false, false);
		tableLayout.getPagingBtnPrev().setEnabled(false);
		tableLayout.getPagingBtnNext().setEnabled(false);
	}
	else
	{
		var pageCount = this.m_model.getPageCount();
		var currentPage = this.m_model.getPage();
		tableLayout.getPagingBtnPrev().setEnabled(currentPage > 0);
		tableLayout.getPagingBtnNext().setEnabled(this.m_model.hasNextPage());
		var btn1Page = currentPage;
		var btn2Page = -1;
		var btn3Page = -1;
		if (pageCount > currentPage + 1)
		{
			btn2Page = currentPage + 1;
			if (pageCount > currentPage + 2)
			{
				btn3Page = currentPage + 2;
			}
			else if (btn1Page > 0)
			{
				btn3Page = btn2Page;
				btn2Page = btn1Page;
				btn1Page = currentPage - 1;
			}
		}
		else if (btn1Page > 0)
		{
			btn2Page = btn1Page;
			btn1Page = currentPage - 1;
			if (btn1Page > 0)
			{
				btn3Page = btn2Page;
				btn2Page = btn1Page;
				btn1Page = currentPage - 2;
			}
		}
		pagingBtn1.setText(oFF.XInteger.convertToString(btn1Page + 1));
		pagingBtn1.setEnabled(btn1Page !== currentPage);
		pagingBtn1.setCustomObject(oFF.XIntegerValue.create(btn1Page));
		pagingBtn2.setText(oFF.XInteger.convertToString(btn2Page + 1));
		tableLayout.setPagingBtn2Visible(btn2Page !== -1, btn2Page !== currentPage);
		pagingBtn2.setCustomObject(oFF.XIntegerValue.create(btn2Page));
		pagingBtn3.setText(oFF.XInteger.convertToString(btn3Page + 1));
		tableLayout.setPagingBtn3Visible(btn3Page !== -1, btn3Page !== currentPage);
		pagingBtn3.setCustomObject(oFF.XIntegerValue.create(btn3Page));
	}
};

oFF.FdComponentTreeTable = function() {};
oFF.FdComponentTreeTable.prototype = new oFF.FdComponentAbstractTable();
oFF.FdComponentTreeTable.prototype._ff_c = "FdComponentTreeTable";

oFF.FdComponentTreeTable.PLACEHOLDER_NAME = "TreeTablePlaceholderItem";
oFF.FdComponentTreeTable.create = function(tableBasedView, model, context)
{
	var obj = new oFF.FdComponentTreeTable();
	obj.setupTableComponent(model, context, oFF.FdLayoutTreeTable.create(), tableBasedView);
	return obj;
};
oFF.FdComponentTreeTable.prototype.m_isLazyLoading = false;
oFF.FdComponentTreeTable.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_layout.buildOlapDialogUi(genesis);
	this.m_uiTable = oFF.FdUiTable.createTreeTable(this.m_layout);
	this.m_uiTable.registerOnSelectionChange(this);
	this.m_uiTable.registerOnExpand(this);
	this.m_uiTable.registerOnCollapse(this);
	this.m_uiTable.registerOnScroll(this);
};
oFF.FdComponentTreeTable.prototype.refreshContent = function(refreshPresentationsOnly)
{
	if (this.m_model.isInitial() || !refreshPresentationsOnly)
	{
		this.m_view.onRefreshTree(refreshPresentationsOnly, null);
		return;
	}
	this.publishPresentations();
};
oFF.FdComponentTreeTable.prototype.onExpand = function(event)
{
	var selectedRow = event.getAffectedItem();
	var childRows = selectedRow.getOnlyChildTreeTableRows();
	if (oFF.XCollectionUtils.hasElements(childRows))
	{
		var renderedChildRowCount = childRows.size();
		if (renderedChildRowCount === 1 && this.isPlaceholderRow(childRows.get(0)))
		{
			this.setBusy(true);
			this.fetchChildren(selectedRow, 0);
		}
		else
		{
			this.updateRowStates(childRows, 0, true);
		}
	}
};
oFF.FdComponentTreeTable.prototype.onCollapse = function(event)
{
	this.lazyLoadNodes();
};
oFF.FdComponentTreeTable.prototype.onScroll = function(event)
{
	this.lazyLoadNodes();
};
oFF.FdComponentTreeTable.prototype.onSearchChange = function(isSearchActive, searchText)
{
	if (!isSearchActive)
	{
		this.m_model.setPage(0);
	}
	oFF.FdComponentAbstractTable.prototype.onSearchChange.call( this , isSearchActive, searchText);
};
oFF.FdComponentTreeTable.prototype.lazyLoadNodes = function()
{
	if (this.m_isLazyLoading || this.m_uiTable.isBusy())
	{
		return;
	}
	var visibleRows = this.getVisibleRows();
	for (var i = 0; i < visibleRows.size(); i++)
	{
		var row = visibleRows.get(i);
		if (this.isPlaceholderRow(row))
		{
			var parent = row.getParent();
			if (oFF.notNull(parent) && parent.getUiType().isTypeOf(oFF.UiType.TREE_TABLE_ROW))
			{
				this.setBusy(true);
				var offset = parent.getOnlyChildTreeTableRows().size() - 1;
				this.fetchChildren(parent, offset);
				return;
			}
			else if (!this.m_view.isSearchActive() && this.m_model.hasNextPage())
			{
				this.setBusy(true);
				this.m_model.setPage(this.m_model.getPage() + 1);
				this.m_isLazyLoading = true;
				this.m_uiTable.removeRow(row);
				this.renderItems(this.m_model.getItemsOnCurrentPage(), this.m_view.getSelectedPresentations().getValuesAsReadOnlyList(), this.m_model.getSelectedItems());
				this.setBusy(false);
				return;
			}
		}
	}
};
oFF.FdComponentTreeTable.prototype.fetchChildren = function(parent, offset)
{
	var additionalPresentationValues = oFF.FdPresentationUtils.flattenPresentations(this.m_model.getAdditionalPresentations());
	this.m_view.onFetchChildren(parent.getCustomObject(), offset, additionalPresentationValues, this.m_view, oFF.FdViewCustomIdentifier.creatForFetchChildrenByRow(parent));
};
oFF.FdComponentTreeTable.prototype.getVisibleRows = function()
{
	var result = oFF.XList.create();
	var firstVisibleRow = this.m_uiTable.getFirstVisibleRow();
	if (oFF.isNull(firstVisibleRow))
	{
		return result;
	}
	result.add(firstVisibleRow);
	var visibleRowCount = this.m_uiTable.getVisibleRowCount();
	var childStartIndex = 0;
	var currentRow = firstVisibleRow;
	while (oFF.notNull(currentRow) && result.size() < visibleRowCount)
	{
		this.addVisibleChildRowsToList(currentRow, childStartIndex, result, visibleRowCount);
		if (!currentRow.getUiType().isTypeOf(oFF.UiType.TREE_TABLE_ROW))
		{
			break;
		}
		var parent = currentRow.getParent();
		if (oFF.notNull(parent))
		{
			childStartIndex = parent.getIndexOfTreeTableRow(currentRow) + 1;
		}
		currentRow = parent;
	}
	return result;
};
oFF.FdComponentTreeTable.prototype.addVisibleChildRowsToList = function(parent, startIndex, result, maxResultSize)
{
	if (parent.getUiType().isTypeOf(oFF.UiType.TREE_TABLE) || parent.isExpanded())
	{
		var children = parent.getOnlyChildTreeTableRows();
		for (var i = startIndex; i < children.size(); i++)
		{
			var childRow = children.get(i);
			result.add(childRow);
			if (result.size() >= maxResultSize)
			{
				return;
			}
			this.addVisibleChildRowsToList(childRow, 0, result, maxResultSize);
			if (result.size() >= maxResultSize)
			{
				return;
			}
		}
	}
};
oFF.FdComponentTreeTable.prototype.onProcessFinished = function(items, startPage, customIdentifier)
{
	var identifier = customIdentifier;
	if (identifier.isFetchChildrenIdentifier())
	{
		var requestingRow = identifier.getParentRow();
		if (!oFF.XCollectionUtils.hasElements(items))
		{
			requestingRow.collapse();
		}
		else
		{
			var indexOfLastRow = requestingRow.getOnlyChildTreeTableRows().size() - 1;
			requestingRow.addAllTreeTableRows(this.createChildRows(requestingRow, items, this.m_view.getSelectedPresentations().getValuesAsReadOnlyList(), true));
			var childRows = requestingRow.getOnlyChildTreeTableRows();
			if (this.isPlaceholderRow(childRows.get(0)))
			{
				requestingRow.removeTreeTableRow(childRows.get(0));
			}
			if (this.isPlaceholderRow(childRows.get(indexOfLastRow)))
			{
				requestingRow.removeTreeTableRow(childRows.get(indexOfLastRow));
			}
			if (items.size() > this.m_model.getChildNodesPageSize())
			{
				requestingRow.addTreeTableRow(this.createPlaceholderRow());
			}
			this.updateRowStates(childRows, 0, true);
		}
		this.setBusy(false);
		oFF.XObjectExt.release(customIdentifier);
	}
};
oFF.FdComponentTreeTable.prototype.renderItems = function(items, presentations, selectedItems)
{
	if (!this.m_isLazyLoading)
	{
		this.m_uiTable.clearRows();
		this.m_uiTable.clearSelectedItems();
		this.updateColumns();
	}
	var useLazyLoading = !this.m_view.isSearchActive();
	var rows = oFF.XList.create();
	var size = oFF.notNull(items) ? items.size() : 0;
	for (var i = 0; i < size; i++)
	{
		var item = items.get(i);
		if (item.isRootNode())
		{
			rows.add(this.createRow(this.m_uiTable.newRow(), item, presentations, useLazyLoading));
		}
	}
	if (useLazyLoading && this.m_model.hasNextPage())
	{
		rows.add(this.createPlaceholderRow());
	}
	this.m_uiTable.addAllRows(rows);
	var expandToLevel = this.m_view.isSearchActive() ? -1 : this.m_model.getDefaultExpandLevel();
	this.updateRowStates(this.m_uiTable.getRows(), expandToLevel, false);
	if (rows.hasElements() && !this.m_isLazyLoading)
	{
		this.m_uiTable.setFirstVisibleRow(rows.get(0));
	}
	this.m_isLazyLoading = false;
};
oFF.FdComponentTreeTable.prototype.createRow = function(row, fdItem, presentations, useLazyLoading)
{
	this.m_uiTable.addAllCells(row, this.createRowCells(row, fdItem, presentations));
	row.setCustomObject(fdItem);
	row.setName(fdItem.getName());
	if (fdItem.hasChildren())
	{
		var childItems = fdItem.getChildren();
		var childrenAlreadyLoaded = oFF.XCollectionUtils.hasElements(childItems);
		if (childrenAlreadyLoaded)
		{
			row.addAllTreeTableRows(this.createChildRows(row, row.getCustomObject().getChildren(), presentations, useLazyLoading));
		}
		if (!childrenAlreadyLoaded || useLazyLoading && childItems.size() > this.m_model.getChildNodesPageSize())
		{
			row.addTreeTableRow(this.createPlaceholderRow());
		}
	}
	return row;
};
oFF.FdComponentTreeTable.prototype.createPlaceholderRow = function()
{
	var placeholderRow = this.m_uiTable.newRow();
	placeholderRow.setName(oFF.FdComponentTreeTable.PLACEHOLDER_NAME);
	var placeholderCell = placeholderRow.newCell();
	placeholderCell.setText(this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_LOADING));
	placeholderRow.addCell(placeholderCell);
	return placeholderRow;
};
oFF.FdComponentTreeTable.prototype.createChildRows = function(parentRow, items, presentations, useLazyLoading)
{
	var childRows = oFF.XList.create();
	if (oFF.XCollectionUtils.hasElements(items))
	{
		var size = useLazyLoading ? oFF.XMath.min(items.size(), this.m_model.getChildNodesPageSize()) : items.size();
		for (var i = 0; i < size; i++)
		{
			childRows.add(this.createRow(parentRow.newTreeTableRow(), items.get(i), presentations, useLazyLoading));
		}
	}
	return childRows;
};
oFF.FdComponentTreeTable.prototype.updateRows = function(rows, presentations)
{
	if (oFF.XCollectionUtils.hasElements(rows))
	{
		var size = rows.size();
		for (var i = 0; i < size; i++)
		{
			var row = rows.get(i);
			if (!this.isPlaceholderRow(row))
			{
				row.clearCells();
				this.m_uiTable.addAllCells(row, this.createRowCells(row, row.getCustomObject(), presentations));
				this.updateRows(row.getTreeTableRows(), presentations);
			}
		}
	}
};
oFF.FdComponentTreeTable.prototype.updateRowStates = function(rows, expandToLevel, updateAllSelectionStates)
{
	var selection = this.m_model.getSelectedItems();
	var size = rows.size();
	for (var i = 0; i < size; i++)
	{
		var row = rows.get(i);
		if (!this.isPlaceholderRow(row))
		{
			var fdItem = row.getCustomObject();
			if (updateAllSelectionStates || selection.contains(fdItem))
			{
				row.setSelected(selection.contains(fdItem));
			}
			if ((expandToLevel === -1 || fdItem.getNode().getAbsoluteLevel() < expandToLevel) && oFF.XCollectionUtils.hasElements(fdItem.getChildren()))
			{
				row.expand();
			}
		}
	}
};
oFF.FdComponentTreeTable.prototype.isPlaceholderRow = function(row)
{
	return oFF.XString.isEqual(row.getName(), oFF.FdComponentTreeTable.PLACEHOLDER_NAME);
};

oFF.FdDateRangesLayout = function() {};
oFF.FdDateRangesLayout.prototype = new oFF.FdRangesLayout();
oFF.FdDateRangesLayout.prototype._ff_c = "FdDateRangesLayout";

oFF.FdDateRangesLayout.createDateRangeLayout = function()
{
	var layout = new oFF.FdDateRangesLayout();
	layout.setupRangesLayout();
	return layout;
};
oFF.FdDateRangesLayout.prototype.addContent = function(root)
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	var currentDateHeadline = root.addNewItemOfType(oFF.UiType.LABEL);
	currentDateHeadline.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_DATE));
	var currentPeriod = root.addNewItemOfType(oFF.UiType.LABEL);
	currentPeriod.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_SYSTEM_DATE));
	root.addItem(oFF.FdLayoutUtils.createHr(this.m_genesis));
	oFF.FdRangesLayout.prototype.addContent.call( this , root);
};
oFF.FdDateRangesLayout.prototype.resize = function(dialogWidth)
{
	var size = oFF.FdLayoutSize.get(this.m_genesis.getUiManager().getDeviceInfo(), dialogWidth, true);
	this.resizeRangeLayouts(size);
};

oFF.FdMeasureBasedLayout = function() {};
oFF.FdMeasureBasedLayout.prototype = new oFF.FdRangesLayout();
oFF.FdMeasureBasedLayout.prototype._ff_c = "FdMeasureBasedLayout";

oFF.FdMeasureBasedLayout.createMeasureBasedLayout = function()
{
	var layout = new oFF.FdMeasureBasedLayout();
	layout.setupRangesLayout();
	return layout;
};
oFF.FdMeasureBasedLayout.prototype.m_contextContainer = null;
oFF.FdMeasureBasedLayout.prototype.m_dimContextContainer = null;
oFF.FdMeasureBasedLayout.prototype.m_dimLabelContainer = null;
oFF.FdMeasureBasedLayout.prototype.m_dimContextComboBox = null;
oFF.FdMeasureBasedLayout.prototype.m_dimContextInfoBtn = null;
oFF.FdMeasureBasedLayout.prototype.m_dimContextIconPopover = null;
oFF.FdMeasureBasedLayout.prototype.m_measureContextContainer = null;
oFF.FdMeasureBasedLayout.prototype.m_measureContextDropdown = null;
oFF.FdMeasureBasedLayout.prototype.m_measureContextInfoBtn = null;
oFF.FdMeasureBasedLayout.prototype.m_measureContextIconPopover = null;
oFF.FdMeasureBasedLayout.prototype.releaseObject = function()
{
	oFF.FdRangesLayout.prototype.releaseObject.call( this );
	this.m_dimContextIconPopover = oFF.XObjectExt.release(this.m_dimContextIconPopover);
	this.m_measureContextIconPopover = oFF.XObjectExt.release(this.m_measureContextIconPopover);
};
oFF.FdMeasureBasedLayout.prototype.resizeRangeLayouts = function(size)
{
	oFF.FdRangesLayout.prototype.resizeRangeLayouts.call( this , size);
	if (size.isLarge())
	{
		this.setContainerToRow(this.m_contextContainer);
		this.m_dimContextContainer.setWidth(null);
		this.m_measureContextContainer.setWidth(null);
		this.m_measureContextContainer.setMargin(oFF.UiCssBoxEdges.create("0 0 0 2rem"));
	}
	else
	{
		this.setContainerToColumn(this.m_contextContainer);
		this.m_contextContainer.setAlignItems(oFF.UiFlexAlignItems.END);
		this.m_dimContextContainer.useMaxWidth();
		this.m_measureContextContainer.useMaxWidth();
		this.m_measureContextContainer.setMargin(null);
	}
};
oFF.FdMeasureBasedLayout.prototype.addContent = function(root)
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	var marginRight = oFF.UiCssBoxEdges.create("0 0.5rem 0 0");
	this.m_contextContainer = this.createContainer("FilterDialogContextContainer");
	this.m_contextContainer.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
	this.m_contextContainer.addItem(this.createDimensionContext(i18n, marginRight));
	this.m_contextContainer.addItem(this.createMeasureContext(i18n, marginRight));
	root.addItem(this.m_contextContainer);
	root.addItem(oFF.FdLayoutUtils.createHr(this.m_genesis));
	oFF.FdRangesLayout.prototype.addContent.call( this , root);
};
oFF.FdMeasureBasedLayout.prototype.createDimensionContext = function(i18n, marginRight)
{
	this.m_dimContextContainer = this.createContainer("FilterDialogDimensionContextContainer");
	this.m_dimContextContainer.setFlex("auto");
	this.m_dimContextContainer.setMaxWidth(oFF.UiCssLength.create("750px"));
	this.m_dimLabelContainer = this.createContainer("FilterDialogDimensionContextLabelContainer");
	this.m_dimLabelContainer.setMargin(marginRight);
	this.m_dimLabelContainer.setMinWidth(oFF.UiCssLength.create("160px"));
	var dimContextLabel = this.m_dimLabelContainer.addNewItemOfType(oFF.UiType.LABEL);
	dimContextLabel.setName("FilterDialogDimensionContextLabel");
	dimContextLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT));
	this.m_dimContextContainer.addItem(this.m_dimLabelContainer);
	var comboboxContainer = this.createContainer("FilterDialogDimensionContextComboboxContainer");
	comboboxContainer.useMaxWidth();
	comboboxContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	this.m_dimContextContainer.addItem(comboboxContainer);
	this.m_dimContextComboBox = comboboxContainer.addNewItemOfType(oFF.UiType.MULTI_COMBO_BOX);
	this.m_dimContextComboBox.setShowSelectAll(true);
	this.m_dimContextComboBox.setName("FilterDialogDimensionContext");
	this.m_dimContextComboBox.setFlex("auto");
	this.m_dimContextComboBox.setMargin(marginRight);
	dimContextLabel.setLabelFor(this.m_dimContextComboBox);
	this.m_dimContextInfoBtn = comboboxContainer.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_dimContextInfoBtn.setName("FilterDialogDimensionContextInfoButton");
	this.m_dimContextInfoBtn.setIcon("message-information");
	this.m_dimContextInfoBtn.setTooltip(null);
	this.m_dimContextInfoBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_dimContextInfoBtn.registerOnHover(this);
	this.m_dimContextInfoBtn.registerOnHoverEnd(this);
	var iconPopOverLabel = this.m_genesis.newControl(oFF.UiType.LABEL);
	iconPopOverLabel.setName("FilterDialogDimensionContextPopoverLabel");
	iconPopOverLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_INFO));
	iconPopOverLabel.setWrapping(true);
	this.m_dimContextIconPopover = this.m_genesis.newControl(oFF.UiType.POPOVER);
	this.m_dimContextIconPopover.setName("FilterDialogDimensionContextIconPopover");
	this.m_dimContextIconPopover.setContent(iconPopOverLabel);
	this.m_dimContextIconPopover.setWidth(oFF.UiCssLength.create("260px"));
	this.m_dimContextIconPopover.setPadding(oFF.UiCssBoxEdges.create("10px"));
	this.m_dimContextIconPopover.setPlacement(oFF.UiPlacementType.TOP);
	return this.m_dimContextContainer;
};
oFF.FdMeasureBasedLayout.prototype.createMeasureContext = function(i18n, marginRight)
{
	this.m_measureContextContainer = this.createContainer("FilterDialogMeasureContextContainer");
	this.setContainerToColumn(this.m_measureContextContainer);
	this.m_measureContextContainer.setFlex("auto");
	this.m_measureContextContainer.setMaxWidth(oFF.UiCssLength.create("500px"));
	this.m_measureContextContainer.setMargin(oFF.UiCssBoxEdges.create("0 0 0 2rem"));
	var measureLabelContainer = this.createContainer("FilterDialogMeasureContextLabelContainer");
	this.setContainerToColumn(measureLabelContainer);
	measureLabelContainer.setMargin(marginRight);
	measureLabelContainer.setMinWidth(oFF.UiCssLength.create("160px"));
	var measureContextLabel = measureLabelContainer.addNewItemOfType(oFF.UiType.LABEL);
	measureContextLabel.setName("FilterDialogMeasureContextLabel");
	measureContextLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT));
	this.m_measureContextContainer.addItem(measureLabelContainer);
	var dropdownContainer = this.createContainer("FilterDialogMeasureContextDropdownContainer");
	dropdownContainer.useMaxWidth();
	dropdownContainer.setJustifyContent(oFF.UiFlexJustifyContent.START);
	this.m_measureContextContainer.addItem(dropdownContainer);
	this.m_measureContextDropdown = dropdownContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_measureContextDropdown.setName("FilterDialogMeasureContext");
	this.m_measureContextDropdown.setFlex("auto");
	this.m_measureContextDropdown.setMargin(marginRight);
	measureContextLabel.setLabelFor(this.m_measureContextDropdown);
	this.m_measureContextInfoBtn = dropdownContainer.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_measureContextInfoBtn.setName("FilterDialogMeasureContextInfoButton");
	this.m_measureContextInfoBtn.setIcon("message-information");
	this.m_measureContextInfoBtn.setTooltip(null);
	this.m_measureContextInfoBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_measureContextInfoBtn.registerOnHover(this);
	this.m_measureContextInfoBtn.registerOnHoverEnd(this);
	var iconPopOverLabel = this.m_genesis.newControl(oFF.UiType.LABEL);
	iconPopOverLabel.setName("FilterDialogMeasureContextPopoverLabel");
	iconPopOverLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_MBF_MEASURE_CONTEXT_INFO));
	iconPopOverLabel.setWrapping(true);
	this.m_measureContextIconPopover = this.m_genesis.newControl(oFF.UiType.POPOVER);
	this.m_measureContextIconPopover.setName("FilterDialogMeasureContextIconPopover");
	this.m_measureContextIconPopover.setContent(iconPopOverLabel);
	this.m_measureContextIconPopover.setWidth(oFF.UiCssLength.create("260px"));
	this.m_measureContextIconPopover.setPadding(oFF.UiCssBoxEdges.create("10px"));
	this.m_measureContextIconPopover.setPlacement(oFF.UiPlacementType.TOP);
	return this.m_measureContextContainer;
};
oFF.FdMeasureBasedLayout.prototype.createContainer = function(name)
{
	var container = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	container.setName(name);
	container.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.setContainerToRow(container);
	return container;
};
oFF.FdMeasureBasedLayout.prototype.setContainerToRow = function(container)
{
	container.setDirection(oFF.UiFlexDirection.ROW);
	container.setJustifyContent(oFF.UiFlexJustifyContent.END);
	container.setAlignItems(oFF.UiFlexAlignItems.CENTER);
};
oFF.FdMeasureBasedLayout.prototype.setContainerToColumn = function(container)
{
	container.setDirection(oFF.UiFlexDirection.COLUMN);
	container.setJustifyContent(oFF.UiFlexJustifyContent.CENTER);
	container.setAlignItems(oFF.UiFlexAlignItems.START);
};
oFF.FdMeasureBasedLayout.prototype.onHover = function(event)
{
	if (event.getControl() === this.m_dimContextInfoBtn)
	{
		this.m_dimContextIconPopover.openAt(this.m_dimContextInfoBtn);
	}
	else if (event.getControl() === this.m_measureContextInfoBtn)
	{
		this.m_measureContextIconPopover.openAt(this.m_measureContextInfoBtn);
	}
};
oFF.FdMeasureBasedLayout.prototype.onHoverEnd = function(event)
{
	if (event.getControl() === this.m_dimContextInfoBtn)
	{
		this.m_dimContextIconPopover.close();
	}
	else if (event.getControl() === this.m_measureContextInfoBtn)
	{
		this.m_measureContextIconPopover.close();
	}
};
oFF.FdMeasureBasedLayout.prototype.getDimContextComboBox = function()
{
	return this.m_dimContextComboBox;
};
oFF.FdMeasureBasedLayout.prototype.getMeasureContextDropdown = function()
{
	return this.m_measureContextDropdown;
};
oFF.FdMeasureBasedLayout.prototype.setMeasureContextVisible = function(visible)
{
	this.m_measureContextContainer.setVisible(visible);
	if (visible)
	{
		this.m_dimContextContainer.setMaxWidth(oFF.UiCssLength.create("500px"));
		this.setContainerToColumn(this.m_dimContextContainer);
		this.setContainerToColumn(this.m_dimLabelContainer);
	}
	else
	{
		this.m_dimContextContainer.setMaxWidth(oFF.UiCssLength.create("750px"));
		this.setContainerToRow(this.m_dimContextContainer);
		this.setContainerToRow(this.m_dimLabelContainer);
	}
};
oFF.FdMeasureBasedLayout.prototype.updateDimContextState = function()
{
	if (this.m_dimContextComboBox.getSelectedItems().isEmpty())
	{
		this.m_dimContextComboBox.setValueState(oFF.UiValueState.ERROR);
		this.m_dimContextComboBox.setValueStateText(this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_MBF_DIMENSION_CONTEXT_ERROR_NO_SELECTION));
		this.m_dimContextComboBox.focus();
	}
	else
	{
		this.m_dimContextComboBox.setValueState(oFF.UiValueState.NONE);
	}
};

oFF.FdLayoutAbstractRange = function() {};
oFF.FdLayoutAbstractRange.prototype = new oFF.XObject();
oFF.FdLayoutAbstractRange.prototype._ff_c = "FdLayoutAbstractRange";

oFF.FdLayoutAbstractRange.prototype.m_genesis = null;
oFF.FdLayoutAbstractRange.prototype.m_i18n = null;
oFF.FdLayoutAbstractRange.prototype.m_root = null;
oFF.FdLayoutAbstractRange.prototype.m_headerTitle = null;
oFF.FdLayoutAbstractRange.prototype.m_deleteBtn = null;
oFF.FdLayoutAbstractRange.prototype.m_contentContainer = null;
oFF.FdLayoutAbstractRange.prototype.m_errorLabelContainer = null;
oFF.FdLayoutAbstractRange.prototype.m_errorLabel = null;
oFF.FdLayoutAbstractRange.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_genesis = null;
	this.m_i18n = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
	this.m_headerTitle = oFF.XObjectExt.release(this.m_headerTitle);
	this.m_deleteBtn = oFF.XObjectExt.release(this.m_deleteBtn);
	this.m_contentContainer = oFF.XObjectExt.release(this.m_contentContainer);
	this.m_errorLabelContainer = oFF.XObjectExt.release(this.m_errorLabelContainer);
	this.m_errorLabel = oFF.XObjectExt.release(this.m_errorLabel);
};
oFF.FdLayoutAbstractRange.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_i18n = genesis.getUiManager().getLocalization();
	this.m_root = genesis.newControl(oFF.UiType.PANEL);
	this.m_root.setName("FilterDialogRangePanel");
	this.m_root.useMaxWidth();
	this.m_root.setMargin(oFF.UiCssBoxEdges.create("0 0 0.5rem 0"));
	this.m_root.setExpandable(true);
	this.m_root.setExpanded(false);
	var headerContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	headerContainer.setDirection(oFF.UiFlexDirection.ROW);
	headerContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	headerContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	headerContainer.setMargin(oFF.UiCssBoxEdges.create("0"));
	headerContainer.setPadding(oFF.UiCssBoxEdges.create("0"));
	headerContainer.setName("FilterDialogRangeHeaderContainer");
	headerContainer.useMaxWidth();
	this.m_root.setHeader(headerContainer);
	this.m_headerTitle = headerContainer.addNewItemOfType(oFF.UiType.TITLE);
	this.m_headerTitle.setFlex("1");
	this.m_deleteBtn = headerContainer.addNewItemOfType(oFF.UiType.BUTTON);
	this.m_deleteBtn.setIcon("sys-cancel");
	this.m_deleteBtn.setTooltip(this.m_i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_REMOVE_RANGE));
	this.m_deleteBtn.setName("FilterDialogRangeDeleteBtn");
	this.m_deleteBtn.setButtonType(oFF.UiButtonType.TRANSPARENT);
	this.m_contentContainer = this.m_genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_contentContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_contentContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_contentContainer.setPadding(oFF.UiCssBoxEdges.create("0.5rem 0 0.5rem 0"));
	this.m_contentContainer.setName("FilterDialogRangeContainer");
	this.m_contentContainer.useMaxWidth();
	this.addContent(this.m_contentContainer);
	this.m_root.setContent(this.m_contentContainer);
};
oFF.FdLayoutAbstractRange.prototype.getContentContainer = function()
{
	return this.m_contentContainer;
};
oFF.FdLayoutAbstractRange.prototype.updateHeaderText = function(rangeNumber)
{
	this.m_headerTitle.setText(this.m_i18n.getTextWithPlaceholder2(oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER, oFF.XInteger.convertToString(rangeNumber), this.getDescriptionText()));
};
oFF.FdLayoutAbstractRange.prototype.updateDeleteBtnEnabledState = function(enabled)
{
	this.m_deleteBtn.setEnabled(enabled || this.hasUserInput());
};
oFF.FdLayoutAbstractRange.prototype.addErrorLabelContainer = function(parent)
{
	this.m_errorLabelContainer = oFF.FdLayoutUtils.createErrorLabelContainer(this.m_genesis);
	parent.addItem(this.m_errorLabelContainer);
	this.m_errorLabel = this.m_errorLabelContainer.addNewItemOfType(oFF.UiType.LABEL);
};
oFF.FdLayoutAbstractRange.prototype.showMessage = function(message, onControl, isError)
{
	if (isError || this.m_errorLabel.getText() === null)
	{
		this.m_errorLabel.setText(message);
		this.m_errorLabelContainer.setBackgroundColor(isError ? oFF.UiTheme.getCurrentTheme().getErrorBackgroundColor() : oFF.UiTheme.getCurrentTheme().getWarningBackgroundColor());
	}
};
oFF.FdLayoutAbstractRange.prototype.clearMessage = function()
{
	this.m_errorLabel.setText(null);
	this.m_errorLabelContainer.setBackgroundColor(null);
};
oFF.FdLayoutAbstractRange.prototype.resizeComponent = function(size)
{
	this.m_contentContainer.setDirection(size.isLarge() ? oFF.UiFlexDirection.ROW : oFF.UiFlexDirection.COLUMN);
};
oFF.FdLayoutAbstractRange.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdLayoutAbstractRange.prototype.getPanel = function()
{
	return this.m_root;
};
oFF.FdLayoutAbstractRange.prototype.getDeleteBtn = function()
{
	return this.m_deleteBtn;
};

oFF.FdLayoutDateRangeDynamic = function() {};
oFF.FdLayoutDateRangeDynamic.prototype = new oFF.XObject();
oFF.FdLayoutDateRangeDynamic.prototype._ff_c = "FdLayoutDateRangeDynamic";

oFF.FdLayoutDateRangeDynamic.ELEMENT_WIDTH = "160px";
oFF.FdLayoutDateRangeDynamic.create = function(dataChangedListener)
{
	var layout = new oFF.FdLayoutDateRangeDynamic();
	layout.m_dataChangedListener = dataChangedListener;
	return layout;
};
oFF.FdLayoutDateRangeDynamic.prototype.m_item = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_dataChangedListener = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_genesis = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_root = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_mainContainer = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_lookBackAheadContainer = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offsetContainer = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_type = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_granularity = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_lookBack = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_lookAhead = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_currentPeriodLabel = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_currentPeriod = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_mainErrorContainer = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_mainError = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offsetDirection = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offsetGranularity = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offset = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_upToPeriodLabel = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_upToPeriod = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offsetErrorContainer = null;
oFF.FdLayoutDateRangeDynamic.prototype.m_offsetError = null;
oFF.FdLayoutDateRangeDynamic.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_item = null;
	this.m_dataChangedListener = null;
	this.m_genesis = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
};
oFF.FdLayoutDateRangeDynamic.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_root.setName("FilterDialogDynamicDateRangeContainer1");
	var i18n = genesis.getUiManager().getLocalization();
	this.addMainSettings(i18n);
	this.addOffsetSettings(i18n);
	this.addUpToOffsetPeriodSwitch(i18n);
};
oFF.FdLayoutDateRangeDynamic.prototype.addMainSettings = function(i18n)
{
	this.m_mainContainer = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_mainContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_mainContainer.setName("FilterDialogDynamicDateRangeMainSettingsContainer");
	this.m_mainContainer.setWrap(oFF.UiFlexWrap.WRAP);
	this.m_type = this.createDropdown(this.m_mainContainer, "FilterDialogDynamicDateRangeTypeContainer", "FilterDialogDynamicDateRangeTypeDropdown", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TYPE),  function(typeDropdown){
		oFF.FdLayoutUtils.addDropdownItem(typeDropdown, "FilterDialogDynamicDateRangeTypeStandard", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_STANDARD), null);
		oFF.FdLayoutUtils.addDropdownItem(typeDropdown, "FilterDialogDynamicDateRangeTypeOffset", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_OFFSET), null);
	}.bind(this));
	this.m_granularity = this.createDropdown(this.m_mainContainer, "FilterDialogDynamicDateRangeGranularityContainer", "FilterDialogDynamicDateRangeGranularityDropdown", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_GRANULARITY),  function(granularityDropdown){
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityYear", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR), oFF.DateRangeGranularity.YEAR);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityQuarter", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER), oFF.DateRangeGranularity.QUARTER);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityMonth", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH), oFF.DateRangeGranularity.MONTH);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityDay", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY), oFF.DateRangeGranularity.DAY);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityCurrentYear", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_YEAR), oFF.DateRangeGranularity.CURRENT_YEAR);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityCurrentQuarter", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_QUARTER), oFF.DateRangeGranularity.CURRENT_QUARTER);
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeGranularityCurrentMonth", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_MONTH), oFF.DateRangeGranularity.CURRENT_MONTH);
	}.bind(this));
	var containerWithErrorMessage = this.m_mainContainer.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	containerWithErrorMessage.setDirection(oFF.UiFlexDirection.COLUMN);
	containerWithErrorMessage.setName("FilterDialogDynamicDateRangeLookBackAndAheadContainer1");
	containerWithErrorMessage.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_lookBackAheadContainer = containerWithErrorMessage.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_lookBackAheadContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_lookBackAheadContainer.setName("FilterDialogDynamicDateRangeLookBackAndAheadContainer2");
	this.m_lookBackAheadContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_lookBack = this.createInput(this.m_lookBackAheadContainer, "FilterDialogDynamicDateRangeLookBackContainer", "FilterDialogDynamicDateRangeLookBackInput", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_BACK), false);
	this.addCurrentPeriodLabel(this.m_lookBackAheadContainer, i18n);
	this.m_lookAhead = this.createInput(this.m_lookBackAheadContainer, "FilterDialogDynamicDateRangeLookAheadContainer", "FilterDialogDynamicDateRangeLookAheadInput", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_LOOK_AHEAD), true);
	this.m_mainErrorContainer = oFF.FdLayoutUtils.createErrorLabelContainer(this.m_genesis);
	this.m_mainError = this.m_mainErrorContainer.addNewItemOfType(oFF.UiType.LABEL);
	containerWithErrorMessage.addItem(this.m_mainErrorContainer);
};
oFF.FdLayoutDateRangeDynamic.prototype.addOffsetSettings = function(i18n)
{
	this.m_offsetContainer = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_offsetContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_offsetContainer.setName("FilterDialogDynamicDateRangeOffsetContainer");
	this.m_offsetContainer.setWrap(oFF.UiFlexWrap.WRAP);
	this.m_offsetContainer.setMargin(oFF.UiCssBoxEdges.create("0.5rem 0 0 0"));
	this.m_offsetDirection = this.createDropdown(this.m_offsetContainer, "FilterDialogDynamicDateRangeOffsetDirectionContainer", "FilterDialogDynamicDateRangeOffsetDirectionDropdown", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_DIRECTION),  function(directionDropdown){
		oFF.FdLayoutUtils.addDropdownItem(directionDropdown, "FilterDialogDynamicDateRangeOffsetDirectionBack", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_BACK), null);
		oFF.FdLayoutUtils.addDropdownItem(directionDropdown, "FilterDialogDynamicDateRangeOffsetDirectionAhead", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_OFFSET_DIRECTION_LOOK_AHEAD), null);
	}.bind(this));
	this.m_offsetGranularity = this.createDropdown(this.m_offsetContainer, "FilterDialogDynamicDateRangeOffsetGranularityContainer", "FilterDialogDynamicDateRangeOffsetGranularityDropdown", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_GRANULARITY),  function(granularityDropdown){
		oFF.FdLayoutUtils.addDropdownItem(granularityDropdown, "FilterDialogDynamicDateRangeOffsetGranularityYear", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR), oFF.DateRangeGranularity.YEAR);
	}.bind(this));
	this.m_offset = this.createInput(this.m_offsetContainer, "FilterDialogDynamicDateRangeOffsetAmountContainer", "FilterDialogDynamicDateRangeOffsetAmountInput", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_AMOUNT), true);
	this.m_offsetErrorContainer = oFF.FdLayoutUtils.createErrorLabelContainer(this.m_genesis);
	this.m_offsetError = this.m_offsetErrorContainer.addNewItemOfType(oFF.UiType.LABEL);
	this.m_offset.getParent().addItem(this.m_offsetErrorContainer);
};
oFF.FdLayoutDateRangeDynamic.prototype.addUpToOffsetPeriodSwitch = function(i18n)
{
	var container = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	container.setDirection(oFF.UiFlexDirection.ROW);
	container.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	container.setName("FilterDialogDynamicDateRangeUpToOffsetContainer");
	this.m_upToPeriodLabel = container.addNewItemOfType(oFF.UiType.LABEL);
	this.m_upToPeriodLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_CURRENT_PERIOD));
	this.m_upToPeriodLabel.setMargin(oFF.UiCssBoxEdges.create("0 0.5rem 0 0"));
	this.m_upToPeriod = container.addNewItemOfType(oFF.UiType.SWITCH);
	this.m_upToPeriod.setName("FilterDialogDynamicDateRangeUpToOffsetSwitch");
	this.m_upToPeriod.setOnText(" ");
	this.m_upToPeriod.setOffText(" ");
	this.m_upToPeriodLabel.setLabelFor(this.m_upToPeriod);
};
oFF.FdLayoutDateRangeDynamic.prototype.createDropdown = function(parent, containerName, dropdownName, labelText, addDropdownItems)
{
	var container = this.addElementContainer(parent, containerName, false);
	var label = container.addNewItemOfType(oFF.UiType.LABEL).setText(labelText);
	var dropdown = container.addNewItemOfType(oFF.UiType.DROPDOWN);
	label.setLabelFor(dropdown);
	addDropdownItems(dropdown);
	dropdown.setName(dropdownName);
	dropdown.setWidth(oFF.UiCssLength.create(oFF.FdLayoutDateRangeDynamic.ELEMENT_WIDTH));
	dropdown.setSelectedItemByIndex(0);
	return dropdown;
};
oFF.FdLayoutDateRangeDynamic.prototype.createInput = function(parent, containerName, inputName, labelText, isLast)
{
	var container = this.addElementContainer(parent, containerName, isLast);
	var label = container.addNewItemOfType(oFF.UiType.LABEL).setText(labelText);
	var input = container.addNewItemOfType(oFF.UiType.INPUT);
	label.setLabelFor(input);
	input.setName(inputName);
	input.setWidth(oFF.UiCssLength.create(oFF.FdLayoutDateRangeDynamic.ELEMENT_WIDTH));
	input.setInputType(oFF.UiInputType.NUMBER);
	input.setText("0");
	input.setValueStateText(" ");
	return input;
};
oFF.FdLayoutDateRangeDynamic.prototype.addCurrentPeriodLabel = function(parent, i18n)
{
	var container = this.addElementContainer(parent, "FilterDialogDynamicDateRangeCurrentPeriodContainer", false);
	this.m_currentPeriodLabel = container.addNewItemOfType(oFF.UiType.LABEL);
	this.m_currentPeriodLabel.setName("FilterDialogDynamicDateRangeCurrentPeriodLabel");
	this.m_currentPeriodLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_PERIOD));
	var textContainer = container.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	textContainer.setName("FilterDialogDynamicDateRangeCurrentPeriodTextContainer");
	textContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	textContainer.setJustifyContent(oFF.UiFlexJustifyContent.CENTER);
	textContainer.setWidth(oFF.UiCssLength.create(oFF.FdLayoutDateRangeDynamic.ELEMENT_WIDTH));
	textContainer.setMinHeight(oFF.UiCssLength.create("2rem"));
	textContainer.setFlex("1");
	this.m_currentPeriod = textContainer.addNewItemOfType(oFF.UiType.TITLE);
	this.m_currentPeriod.setTitleLevel(oFF.UiTitleLevel.H_6);
	this.m_currentPeriod.setTitleStyle(oFF.UiTitleLevel.H_6);
	this.m_currentPeriod.setName("FilterDialogDynamicDateRangeCurrentPeriodText");
	this.m_currentPeriodLabel.setLabelFor(this.m_currentPeriod);
};
oFF.FdLayoutDateRangeDynamic.prototype.addElementContainer = function(parent, name, isLast)
{
	var container = parent.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	container.setDirection(oFF.UiFlexDirection.COLUMN);
	container.setWrap(oFF.UiFlexWrap.NO_WRAP);
	container.setName(name);
	if (!isLast)
	{
		container.setMargin(oFF.UiCssBoxEdges.create("0 0.5rem 0 0"));
	}
	return container;
};
oFF.FdLayoutDateRangeDynamic.prototype.bindItem = function(item)
{
	this.m_item = item;
	var granularityItem = this.m_item.getGranularity() !== null ? oFF.XCollectionUtils.findFirst(this.m_granularity.getItems(),  function(item1){
		return item1.getCustomObject() === this.m_item.getGranularity();
	}.bind(this)) : null;
	if (oFF.notNull(granularityItem))
	{
		this.m_granularity.setSelectedItem(granularityItem);
		this.updateOffsetGranularityItems();
	}
	var granularity = this.m_granularity.getSelectedItem().getCustomObject();
	this.m_lookBack.setText(oFF.XInteger.convertToString(this.m_item.getLookBack()));
	this.m_lookBack.getParent().setVisible(!granularity.isCurrentDateUnit());
	this.m_lookAhead.setText(oFF.XInteger.convertToString(this.m_item.getLookAhead()));
	this.m_lookAhead.getParent().setVisible(!granularity.isCurrentDateUnit());
	var offsetGranularity = this.m_item.getOffsetGranularity();
	this.m_offsetContainer.setVisible(oFF.notNull(offsetGranularity));
	if (this.m_offsetContainer.isVisible())
	{
		this.m_type.setSelectedName("FilterDialogDynamicDateRangeTypeOffset");
	}
	var offset = this.m_item.getOffset();
	this.m_offsetDirection.setSelectedName(offset <= 0 ? "FilterDialogDynamicDateRangeOffsetDirectionBack" : "FilterDialogDynamicDateRangeOffsetDirectionAhead");
	var offsetGranularityItem = oFF.notNull(offsetGranularity) ? oFF.XCollectionUtils.findFirst(this.m_offsetGranularity.getItems(),  function(item2){
		return item2.getCustomObject() === offsetGranularity;
	}.bind(this)) : null;
	if (oFF.notNull(offsetGranularityItem))
	{
		this.m_offsetGranularity.setSelectedItem(offsetGranularityItem);
	}
	else if (oFF.notNull(offsetGranularity))
	{
		this.m_item.setOffsetGranularity(this.m_offsetGranularity.getSelectedItem().getCustomObject());
	}
	this.m_offset.setText(oFF.XInteger.convertToString(offset < 0 ? offset * (-1) : offset));
	this.m_upToPeriod.setOn(this.m_item.isUpToCurrentPeriod());
	this.updateCurrentPeriodText();
	this.m_type.registerOnSelect(this);
	this.m_granularity.registerOnSelect(this);
	this.m_lookBack.registerOnEditingEnd(this);
	this.m_lookAhead.registerOnEditingEnd(this);
	this.m_offsetDirection.registerOnSelect(this);
	this.m_offsetGranularity.registerOnSelect(this);
	this.m_offset.registerOnEditingEnd(this);
	this.m_upToPeriod.registerOnChange(this);
};
oFF.FdLayoutDateRangeDynamic.prototype.updateOffsetGranularityItems = function()
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	var granularity = this.m_granularity.getSelectedItem().getCustomObject();
	var offsetGranularity = this.m_offsetGranularity.getSelectedItem().getCustomObject();
	this.m_offsetGranularity.clearItems();
	oFF.FdLayoutUtils.addDropdownItem(this.m_offsetGranularity, "FilterDialogDynamicDateRangeOffsetGranularityYear", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR), oFF.DateRangeGranularity.YEAR);
	if (granularity.isQuarter() || granularity.isMonth())
	{
		oFF.FdLayoutUtils.addDropdownItem(this.m_offsetGranularity, "FilterDialogDynamicDateRangeOffsetGranularityQuarter", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER), oFF.DateRangeGranularity.QUARTER);
	}
	if (granularity.isMonth())
	{
		oFF.FdLayoutUtils.addDropdownItem(this.m_offsetGranularity, "FilterDialogDynamicDateRangeOffsetGranularityMonth", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH), oFF.DateRangeGranularity.MONTH);
	}
	if (granularity.isDay())
	{
		oFF.FdLayoutUtils.addDropdownItem(this.m_offsetGranularity, "FilterDialogDynamicDateRangeOffsetGranularityDay", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY), oFF.DateRangeGranularity.DAY);
	}
	var selectedItem = oFF.XCollectionUtils.findFirst(this.m_offsetGranularity.getItems(),  function(item){
		return item.getCustomObject() === offsetGranularity;
	}.bind(this));
	if (oFF.notNull(selectedItem))
	{
		this.m_offsetGranularity.setSelectedItem(selectedItem);
	}
	else
	{
		this.m_offsetGranularity.setSelectedItemByIndex(0);
	}
};
oFF.FdLayoutDateRangeDynamic.prototype.updateCurrentPeriodText = function()
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	var hasOffset = this.m_item.getOffsetGranularity() !== null;
	this.m_upToPeriodLabel.setText(hasOffset ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_OFFSET_PERIOD) : i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_INCLUDE_UP_TO_CURRENT_PERIOD));
	this.m_currentPeriodLabel.setText(hasOffset ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_OFFSET_PERIOD) : i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_CURRENT_PERIOD));
	var dateRange = oFF.XDateRange.create().withOffset(this.m_item.getOffsetGranularity(), this.m_item.getOffset());
	var dateDescription = this.getDateDescription(dateRange, i18n, true);
	oFF.XObjectExt.release(dateRange);
	var periodText = oFF.XStringBuffer.create();
	var granularity = this.m_granularity.getSelectedItem().getCustomObject();
	if (granularity === oFF.DateRangeGranularity.YEAR)
	{
		periodText.append(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR));
	}
	else if (granularity === oFF.DateRangeGranularity.QUARTER)
	{
		periodText.append(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER));
	}
	else if (granularity === oFF.DateRangeGranularity.MONTH)
	{
		periodText.append(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH));
	}
	else
	{
		periodText.append(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY));
	}
	this.m_currentPeriod.setText(periodText.append(" (").append(dateDescription).append(")").toString());
};
oFF.FdLayoutDateRangeDynamic.prototype.onChange = function(event)
{
	if (event.getControl() === this.m_upToPeriod)
	{
		this.m_item.setUpToCurrentPeriod(this.m_upToPeriod.isOn());
		this.m_lookAhead.setText(oFF.XInteger.convertToString(this.m_item.getLookAhead()));
		this.m_lookAhead.setEnabled(!this.m_upToPeriod.isOn());
		this.m_dataChangedListener();
	}
};
oFF.FdLayoutDateRangeDynamic.prototype.onSelect = function(event)
{
	var control = event.getControl();
	if (control === this.m_type)
	{
		var showOffset = oFF.XString.isEqual(this.m_type.getSelectedName(), "FilterDialogDynamicDateRangeTypeOffset");
		this.m_offsetContainer.setVisible(showOffset);
		this.m_item.setOffsetGranularity(showOffset ? this.m_offsetGranularity.getSelectedItem().getCustomObject() : null);
		this.updateCurrentPeriodText();
		this.m_dataChangedListener();
	}
	else if (control === this.m_granularity)
	{
		var granularity = this.m_granularity.getSelectedItem().getCustomObject();
		this.m_item.setGranularity(granularity);
		var isCurrentDateUnit = granularity.isCurrentDateUnit();
		this.m_lookBack.getParent().setVisible(!isCurrentDateUnit);
		this.m_lookAhead.getParent().setVisible(!isCurrentDateUnit);
		this.m_upToPeriod.setEnabled(!isCurrentDateUnit);
		this.m_upToPeriod.setOn(isCurrentDateUnit || this.m_item.isUpToCurrentPeriod());
		this.updateCurrentPeriodText();
		this.updateOffsetGranularityItems();
		if (this.m_item.getOffsetGranularity() !== null)
		{
			this.m_item.setOffsetGranularity(this.m_offsetGranularity.getSelectedItem().getCustomObject());
		}
		this.m_dataChangedListener();
	}
	else if (control === this.m_offsetDirection)
	{
		this.m_item.setOffset(this.m_item.getOffset() * (-1));
		this.updateCurrentPeriodText();
		this.m_dataChangedListener();
	}
	else if (control === this.m_offsetGranularity)
	{
		this.m_item.setOffsetGranularity(this.m_offsetGranularity.getSelectedItem().getCustomObject());
		this.updateCurrentPeriodText();
		this.m_dataChangedListener();
	}
};
oFF.FdLayoutDateRangeDynamic.prototype.onEditingEnd = function(event)
{
	var control = event.getControl();
	if (control === this.m_lookBack)
	{
		var lookBack = oFF.XInteger.convertFromStringWithDefault(this.m_lookBack.getText(), 0);
		if (this.m_item.getLookBack() !== lookBack)
		{
			this.m_item.setLookBack(lookBack);
			this.updateCurrentPeriodText();
			this.m_dataChangedListener();
		}
	}
	else if (control === this.m_lookAhead)
	{
		var lookAhead = oFF.XInteger.convertFromStringWithDefault(this.m_lookAhead.getText(), 0);
		if (this.m_item.getLookAhead() !== lookAhead)
		{
			this.m_item.setLookAhead(lookAhead);
			this.updateCurrentPeriodText();
			this.m_dataChangedListener();
		}
	}
	else if (control === this.m_offset)
	{
		var offset = oFF.XInteger.convertFromStringWithDefault(this.m_offset.getText(), 0);
		if (oFF.XString.isEqual(this.m_offsetDirection.getSelectedName(), "FilterDialogDynamicDateRangeOffsetDirectionBack"))
		{
			offset = offset * (-1);
		}
		if (this.m_item.getOffset() !== offset)
		{
			this.m_item.setOffset(offset);
			this.updateCurrentPeriodText();
			this.m_dataChangedListener();
		}
	}
};
oFF.FdLayoutDateRangeDynamic.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdLayoutDateRangeDynamic.prototype.resizeComponent = function(size)
{
	var direction = size.isSmall() ? oFF.UiFlexDirection.COLUMN : oFF.UiFlexDirection.ROW;
	this.m_mainContainer.setDirection(direction);
	this.m_lookBackAheadContainer.setDirection(direction);
	this.m_offsetContainer.setDirection(direction);
};
oFF.FdLayoutDateRangeDynamic.prototype.hasUserInput = function()
{
	return true;
};
oFF.FdLayoutDateRangeDynamic.prototype.getDescriptionText = function()
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	var granularity = this.m_item.getGranularity();
	var dateRange = this.m_item.getDateRange();
	var description = oFF.XStringBuffer.create().append(this.getDateDescription(dateRange, i18n, true)).append(" - ").append(this.getDateDescription(dateRange, i18n, false));
	oFF.XObjectExt.release(dateRange);
	if (granularity.isCurrentDateUnit())
	{
		var currentDateDesc = oFF.XStringBuffer.create();
		if (this.m_item.getOffsetGranularity() !== null)
		{
			currentDateDesc.append(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TYPE_OFFSET)).append(" ");
		}
		return currentDateDesc.append(this.getCurrentDateGranularityText(granularity, i18n)).append(" (").append(description.toString()).append(")").toString();
	}
	return description.toString();
};
oFF.FdLayoutDateRangeDynamic.prototype.getDateDescription = function(dateRange, i18n, fromValue)
{
	var desc = oFF.XStringBuffer.create();
	var granularity = this.m_item.getGranularity();
	if (granularity === oFF.DateRangeGranularity.QUARTER)
	{
		var quarter = fromValue ? dateRange.getFromValue(oFF.DateRangeGranularity.QUARTER) : dateRange.getToValue(oFF.DateRangeGranularity.QUARTER);
		desc.append(oFF.FilterDialogI18n.getQuarterText(quarter, i18n)).append(", ");
	}
	if (granularity === oFF.DateRangeGranularity.MONTH)
	{
		var month1 = fromValue ? dateRange.getFromValue(oFF.DateRangeGranularity.MONTH) : dateRange.getToValue(oFF.DateRangeGranularity.MONTH);
		desc.append(oFF.FilterDialogI18n.getMonthText(month1, i18n)).append(", ");
	}
	if (granularity === oFF.DateRangeGranularity.DAY || granularity.isCurrentDateUnit() || this.m_item.isUpToCurrentPeriod())
	{
		var month2 = fromValue ? dateRange.getFromValue(oFF.DateRangeGranularity.MONTH) : dateRange.getToValue(oFF.DateRangeGranularity.MONTH);
		var day = fromValue ? dateRange.getFromValue(oFF.DateRangeGranularity.DAY) : dateRange.getToValue(oFF.DateRangeGranularity.DAY);
		desc.append(oFF.FilterDialogI18n.getMonthText(month2, i18n)).append(" ").appendInt(day).append(", ");
	}
	desc.appendInt(fromValue ? dateRange.getFromValue(oFF.DateRangeGranularity.YEAR) : dateRange.getToValue(oFF.DateRangeGranularity.YEAR));
	return desc.toString();
};
oFF.FdLayoutDateRangeDynamic.prototype.getCurrentDateGranularityText = function(granularity, i18n)
{
	if (granularity.isQuarter())
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_QUARTER);
	}
	if (granularity.isMonth())
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_MONTH);
	}
	return i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_CURRENT_YEAR);
};
oFF.FdLayoutDateRangeDynamic.prototype.focus = function()
{
	this.m_type.focus();
};
oFF.FdLayoutDateRangeDynamic.prototype.getLookBackText = function()
{
	return this.m_lookBack.getText();
};
oFF.FdLayoutDateRangeDynamic.prototype.getLookAheadText = function()
{
	return this.m_lookAhead.getText();
};
oFF.FdLayoutDateRangeDynamic.prototype.getOffsetText = function()
{
	return this.m_offset.getText();
};
oFF.FdLayoutDateRangeDynamic.prototype.showMainMessage = function(message, errorOnLookBack, errorOnLookAhead)
{
	this.clearMainMessage();
	this.m_mainError.setText(message);
	this.m_mainErrorContainer.setBackgroundColor(oFF.UiTheme.getCurrentTheme().getErrorBackgroundColor());
	if (errorOnLookBack)
	{
		this.m_lookBack.setValueState(oFF.UiValueState.ERROR);
	}
	if (errorOnLookAhead)
	{
		this.m_lookAhead.setValueState(oFF.UiValueState.ERROR);
	}
};
oFF.FdLayoutDateRangeDynamic.prototype.showOffsetMessage = function(message)
{
	this.clearOffsetMessage();
	this.m_offsetError.setText(message);
	this.m_offsetErrorContainer.setBackgroundColor(oFF.UiTheme.getCurrentTheme().getErrorBackgroundColor());
	this.m_offset.setValueState(oFF.UiValueState.ERROR);
};
oFF.FdLayoutDateRangeDynamic.prototype.clearMessages = function()
{
	this.clearMainMessage();
	this.clearOffsetMessage();
};
oFF.FdLayoutDateRangeDynamic.prototype.clearMainMessage = function()
{
	this.m_mainError.setText(null);
	this.m_mainErrorContainer.setBackgroundColor(null);
	this.m_lookBack.setValueState(null);
	this.m_lookAhead.setValueState(null);
};
oFF.FdLayoutDateRangeDynamic.prototype.clearOffsetMessage = function()
{
	this.m_offsetError.setText(null);
	this.m_offsetErrorContainer.setBackgroundColor(null);
	this.m_offset.setValueState(null);
};

oFF.FdLayoutDateRangeFixed = function() {};
oFF.FdLayoutDateRangeFixed.prototype = new oFF.XObject();
oFF.FdLayoutDateRangeFixed.prototype._ff_c = "FdLayoutDateRangeFixed";

oFF.FdLayoutDateRangeFixed.create = function(dataChangedListener)
{
	var layout = new oFF.FdLayoutDateRangeFixed();
	layout.m_dataChangedListener = dataChangedListener;
	return layout;
};
oFF.FdLayoutDateRangeFixed.prototype.m_item = null;
oFF.FdLayoutDateRangeFixed.prototype.m_dataChangedListener = null;
oFF.FdLayoutDateRangeFixed.prototype.m_genesis = null;
oFF.FdLayoutDateRangeFixed.prototype.m_root = null;
oFF.FdLayoutDateRangeFixed.prototype.m_granularity = null;
oFF.FdLayoutDateRangeFixed.prototype.m_yearFrom = null;
oFF.FdLayoutDateRangeFixed.prototype.m_yearTo = null;
oFF.FdLayoutDateRangeFixed.prototype.m_quarterFrom = null;
oFF.FdLayoutDateRangeFixed.prototype.m_quarterTo = null;
oFF.FdLayoutDateRangeFixed.prototype.m_monthFrom = null;
oFF.FdLayoutDateRangeFixed.prototype.m_monthTo = null;
oFF.FdLayoutDateRangeFixed.prototype.m_dateFrom = null;
oFF.FdLayoutDateRangeFixed.prototype.m_dateTo = null;
oFF.FdLayoutDateRangeFixed.prototype.m_errorLabelContainer = null;
oFF.FdLayoutDateRangeFixed.prototype.m_error = null;
oFF.FdLayoutDateRangeFixed.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_item = null;
	this.m_dataChangedListener = null;
	this.m_genesis = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
};
oFF.FdLayoutDateRangeFixed.prototype.buildOlapDialogUi = function(genesis)
{
	this.m_genesis = genesis;
	var i18n = genesis.getUiManager().getLocalization();
	this.m_root = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	this.m_root.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_root.setName("FilterDialogFixedDateRangeContainer");
	var granularityLabel = this.m_root.addNewItemOfType(oFF.UiType.LABEL);
	granularityLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_GRANULARITY));
	this.m_granularity = this.m_root.addNewItemOfType(oFF.UiType.DROPDOWN);
	granularityLabel.setLabelFor(this.m_granularity);
	this.m_granularity.setName("FilterDialogFixedDateRangeGranularityDropdown");
	this.m_granularity.setWidth(oFF.UiCssLength.create("200px"));
	oFF.FdLayoutUtils.addDropdownItem(this.m_granularity, "FilterDialogFixedDateRangeGranularityYear", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_YEAR), oFF.DateRangeGranularity.YEAR);
	oFF.FdLayoutUtils.addDropdownItem(this.m_granularity, "FilterDialogFixedDateRangeGranularityQuarter", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_QUARTER), oFF.DateRangeGranularity.QUARTER);
	oFF.FdLayoutUtils.addDropdownItem(this.m_granularity, "FilterDialogFixedDateRangeGranularityMonth", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_MONTH), oFF.DateRangeGranularity.MONTH);
	oFF.FdLayoutUtils.addDropdownItem(this.m_granularity, "FilterDialogFixedDateRangeGranularityDay", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_GRANULARITY_DAY), oFF.DateRangeGranularity.DAY);
	this.m_granularity.setSelectedItemByIndex(0);
	var rangeContainer = this.m_root.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	rangeContainer.setDirection(oFF.UiFlexDirection.ROW);
	rangeContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	rangeContainer.setName("FilterDialogFixedDateRangeFromToContainer");
	rangeContainer.setMargin(oFF.UiCssBoxEdges.create("1rem 0 0 0"));
	rangeContainer.setWrap(oFF.UiFlexWrap.WRAP);
	rangeContainer.addItem(this.createRangeFrom(i18n, rangeContainer));
	rangeContainer.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("2rem"));
	rangeContainer.addItem(this.createRangeTo(i18n, rangeContainer));
	this.m_errorLabelContainer = oFF.FdLayoutUtils.createErrorLabelContainer(genesis);
	this.m_error = this.m_errorLabelContainer.addNewItemOfType(oFF.UiType.LABEL);
	this.m_root.addItem(this.m_errorLabelContainer);
};
oFF.FdLayoutDateRangeFixed.prototype.createRangeFrom = function(i18n, rangeContainer)
{
	var rangeFromContainer = rangeContainer.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	rangeFromContainer.setDirection(oFF.UiFlexDirection.ROW);
	rangeFromContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	rangeFromContainer.setName("FilterDialogFixedDateRangeFromContainer");
	var fromLabel = rangeFromContainer.addNewItemOfType(oFF.UiType.LABEL);
	fromLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FROM));
	fromLabel.setMargin(oFF.UiCssBoxEdges.create("0 1rem 0 0"));
	this.m_yearFrom = rangeFromContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_yearFrom.setName("FilterDialogFixedDateRangeYearFromDropdown");
	this.m_yearFrom.setVisible(false);
	oFF.FdLayoutUtils.addDropdownItem(this.m_yearFrom, "FilterDialogFixedDateRangeFromYearStart", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START), oFF.XIntegerValue.create(-1));
	this.m_quarterFrom = rangeFromContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_quarterFrom.setName("FilterDialogFixedDateRangQuarterFromDropdown");
	this.m_quarterFrom.setVisible(false);
	this.m_quarterFrom.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterFrom, "FilterDialogFixedDateRangeFromQuarter1", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER1), oFF.XIntegerValue.create(1));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterFrom, "FilterDialogFixedDateRangeFromQuarter2", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER2), oFF.XIntegerValue.create(2));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterFrom, "FilterDialogFixedDateRangeFromQuarter3", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER3), oFF.XIntegerValue.create(3));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterFrom, "FilterDialogFixedDateRangeFromQuarter4", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER4), oFF.XIntegerValue.create(4));
	this.m_quarterFrom.setSelectedItemByIndex(0);
	this.m_monthFrom = rangeFromContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_monthFrom.setName("FilterDialogFixedDateRangeMonthFromDropdown");
	this.m_monthFrom.setVisible(false);
	this.m_monthFrom.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth1", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH1), oFF.XIntegerValue.create(1));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth2", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH2), oFF.XIntegerValue.create(2));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth3", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH3), oFF.XIntegerValue.create(3));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth4", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH4), oFF.XIntegerValue.create(4));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth5", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH5), oFF.XIntegerValue.create(5));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth6", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH6), oFF.XIntegerValue.create(6));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth7", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH7), oFF.XIntegerValue.create(7));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth8", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH8), oFF.XIntegerValue.create(8));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth9", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH9), oFF.XIntegerValue.create(9));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth10", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH10), oFF.XIntegerValue.create(10));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth11", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH11), oFF.XIntegerValue.create(11));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthFrom, "FilterDialogFixedDateRangeFromMonth12", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH12), oFF.XIntegerValue.create(12));
	this.m_monthFrom.setSelectedItemByIndex(0);
	this.m_dateFrom = rangeFromContainer.addNewItemOfType(oFF.UiType.DATE_PICKER);
	this.m_dateFrom.setName("FilterDialogFixedDateRangeDateFromPicker");
	this.m_dateFrom.setValueFormat(oFF.UiNumberFormatterCenter.DATE_VALUE_FORMAT);
	this.m_dateFrom.setDisplayFormat(oFF.UiNumberFormatterCenter.getCenter().getDateDisplayFormat());
	this.m_dateFrom.setWidth(oFF.UiCssLength.create("auto"));
	this.m_dateFrom.setVisible(false);
	this.m_dateFrom.setValueStateText(" ");
	return rangeFromContainer;
};
oFF.FdLayoutDateRangeFixed.prototype.createRangeTo = function(i18n, rangeContainer)
{
	var rangeToContainer = rangeContainer.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	rangeToContainer.setDirection(oFF.UiFlexDirection.ROW);
	rangeToContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	rangeToContainer.setName("FilterDialogFixedDateRangeFromContainer");
	var toLabel = rangeToContainer.addNewItemOfType(oFF.UiType.LABEL);
	toLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_TO));
	toLabel.setMargin(oFF.UiCssBoxEdges.create("0 1rem 0 0"));
	this.m_yearTo = rangeToContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_yearTo.setName("FilterDialogFixedDateRangeYearToDropdown");
	this.m_yearTo.setVisible(false);
	oFF.FdLayoutUtils.addDropdownItem(this.m_yearTo, "FilterDialogFixedDateRangeFromYearEnd", i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END), oFF.XIntegerValue.create(-1));
	this.m_quarterTo = rangeToContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_quarterTo.setName("FilterDialogFixedDateRangQuarterToDropdown");
	this.m_quarterTo.setVisible(false);
	this.m_quarterTo.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterTo, "FilterDialogFixedDateRangeToQuarter1", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER1), oFF.XIntegerValue.create(1));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterTo, "FilterDialogFixedDateRangeToQuarter2", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER2), oFF.XIntegerValue.create(2));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterTo, "FilterDialogFixedDateRangeToQuarter3", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER3), oFF.XIntegerValue.create(3));
	oFF.FdLayoutUtils.addDropdownItem(this.m_quarterTo, "FilterDialogFixedDateRangeToQuarter4", i18n.getText(oFF.FilterDialogI18n.I18N_FD_QUARTER4), oFF.XIntegerValue.create(4));
	this.m_quarterTo.setSelectedItemByIndex(3);
	this.m_monthTo = rangeToContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_monthTo.setName("FilterDialogFixedDateRangeMonthToDropdown");
	this.m_monthTo.setVisible(false);
	this.m_monthTo.setMargin(oFF.UiCssBoxEdges.create("0 0 0 0.5rem"));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth1", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH1), oFF.XIntegerValue.create(1));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth2", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH2), oFF.XIntegerValue.create(2));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth3", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH3), oFF.XIntegerValue.create(3));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth4", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH4), oFF.XIntegerValue.create(4));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth5", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH5), oFF.XIntegerValue.create(5));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth6", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH6), oFF.XIntegerValue.create(6));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth7", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH7), oFF.XIntegerValue.create(7));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth8", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH8), oFF.XIntegerValue.create(8));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth9", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH9), oFF.XIntegerValue.create(9));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth10", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH10), oFF.XIntegerValue.create(10));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth11", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH11), oFF.XIntegerValue.create(11));
	oFF.FdLayoutUtils.addDropdownItem(this.m_monthTo, "FilterDialogFixedDateRangeToMonth12", i18n.getText(oFF.FilterDialogI18n.I18N_FD_MONTH12), oFF.XIntegerValue.create(12));
	this.m_monthTo.setSelectedItemByIndex(11);
	this.m_dateTo = rangeToContainer.addNewItemOfType(oFF.UiType.DATE_PICKER);
	this.m_dateTo.setName("FilterDialogFixedDateRangeDateToPicker");
	this.m_dateTo.setValueFormat(oFF.UiNumberFormatterCenter.DATE_VALUE_FORMAT);
	this.m_dateTo.setDisplayFormat(oFF.UiNumberFormatterCenter.getCenter().getDateDisplayFormat());
	this.m_dateTo.setWidth(oFF.UiCssLength.create("auto"));
	this.m_dateTo.setVisible(false);
	this.m_dateTo.setValueStateText(" ");
	return rangeToContainer;
};
oFF.FdLayoutDateRangeFixed.prototype.setAvailableRange = function(minDate, maxDate)
{
	for (var i = minDate.getYear(); i <= maxDate.getYear(); i++)
	{
		var year = oFF.XInteger.convertToString(i);
		oFF.FdLayoutUtils.addDropdownItem(this.m_yearFrom, oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeFromYear", year), year, oFF.XIntegerValue.create(i));
		oFF.FdLayoutUtils.addDropdownItem(this.m_yearTo, oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeToYear", year), year, oFF.XIntegerValue.create(i));
	}
	this.m_yearFrom.setSelectedItemByIndex(1);
	this.m_yearTo.setSelectedItemByIndex(1);
	this.m_dateFrom.setMinDate(minDate.toIsoFormat());
	this.m_dateTo.setMinDate(minDate.toIsoFormat());
	this.m_dateFrom.setMaxDate(maxDate.toIsoFormat());
	this.m_dateTo.setMaxDate(maxDate.toIsoFormat());
};
oFF.FdLayoutDateRangeFixed.prototype.bindItem = function(item)
{
	this.m_item = item;
	var granularity = this.m_item.getGranularity();
	var granularityItem = oFF.notNull(granularity) ? oFF.XCollectionUtils.findFirst(this.m_granularity.getItems(),  function(dropdownItem){
		return dropdownItem.getCustomObject() === granularity;
	}.bind(this)) : null;
	if (oFF.notNull(granularityItem))
	{
		this.m_granularity.setSelectedItem(granularityItem);
	}
	if (this.m_item.getYearFrom() === -1)
	{
		this.m_yearFrom.setSelectedItemByIndex(0);
	}
	else if (this.m_item.getYearFrom() !== 0)
	{
		this.setSelectedValue(this.m_yearFrom, this.m_item.getYearFrom());
	}
	if (this.m_item.getYearTo() === -1)
	{
		this.m_yearTo.setSelectedItemByIndex(0);
	}
	else if (this.m_item.getYearTo() !== 0)
	{
		this.setSelectedValue(this.m_yearTo, this.m_item.getYearTo());
	}
	var quarterFrom = this.m_item.getQuarterFrom();
	if (quarterFrom >= 1 && quarterFrom <= 4)
	{
		this.m_quarterFrom.setSelectedName(oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeFromQuarter", oFF.XInteger.convertToString(quarterFrom)));
	}
	var quarterTo = this.m_item.getQuarterTo();
	if (quarterTo >= 1 && quarterTo <= 4)
	{
		this.m_quarterTo.setSelectedName(oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeToQuarter", oFF.XInteger.convertToString(quarterTo)));
	}
	var monthFrom = this.m_item.getMonthFrom();
	if (monthFrom >= 1 && monthFrom <= 12)
	{
		this.m_monthFrom.setSelectedName(oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeFromMonth", oFF.XInteger.convertToString(monthFrom)));
	}
	var monthTo = this.m_item.getMonthTo();
	if (monthTo >= 1 && monthTo <= 12)
	{
		this.m_monthTo.setSelectedName(oFF.XStringUtils.concatenate2("FilterDialogFixedDateRangeToMonth", oFF.XInteger.convertToString(monthTo)));
	}
	var fromDate = this.m_item.getDateFrom();
	if (oFF.notNull(fromDate))
	{
		this.m_dateFrom.setValue(oFF.XString.isEqual(fromDate, "-1") ? this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START) : fromDate);
	}
	var toDate = this.m_item.getDateTo();
	if (oFF.notNull(toDate))
	{
		this.m_dateTo.setValue(oFF.XString.isEqual(toDate, "-1") ? this.m_genesis.getUiManager().getLocalization().getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END) : toDate);
	}
	this.updateElementsVisibility(this.m_granularity.getSelectedItem().getCustomObject());
	this.m_granularity.registerOnSelect(this);
	this.m_yearFrom.registerOnSelect(this);
	this.m_yearTo.registerOnSelect(this);
	this.m_quarterFrom.registerOnSelect(this);
	this.m_quarterTo.registerOnSelect(this);
	this.m_monthFrom.registerOnSelect(this);
	this.m_monthTo.registerOnSelect(this);
	this.m_dateFrom.registerOnChange(this);
	this.m_dateTo.registerOnChange(this);
};
oFF.FdLayoutDateRangeFixed.prototype.setSelectedValue = function(dropdown, value)
{
	var selectedValue = oFF.XInteger.convertToString(value);
	var dropdownItem = oFF.XCollectionUtils.findFirst(dropdown.getItems(),  function(uiElement){
		return uiElement.getCustomObject().getInteger() === value;
	}.bind(this));
	if (oFF.notNull(dropdownItem))
	{
		dropdown.setSelectedItem(dropdownItem);
	}
	else
	{
		var newDropdownItem = oFF.FdLayoutUtils.addDropdownItem(dropdown, null, selectedValue, oFF.XIntegerValue.create(value));
		dropdown.setSelectedItem(newDropdownItem);
	}
};
oFF.FdLayoutDateRangeFixed.prototype.updateElementsVisibility = function(granularity)
{
	var showQuarter = granularity.isQuarter();
	var showMonth = granularity.isMonth();
	var showYear = granularity.isYear() || showQuarter || showMonth;
	var showDatePicker = granularity.isDay();
	this.m_yearFrom.setVisible(showYear);
	this.m_yearTo.setVisible(showYear);
	this.m_quarterFrom.setVisible(showQuarter);
	this.m_quarterTo.setVisible(showQuarter);
	this.m_monthFrom.setVisible(showMonth);
	this.m_monthTo.setVisible(showMonth);
	this.m_dateFrom.setVisible(showDatePicker);
	this.m_dateTo.setVisible(showDatePicker);
	this.m_quarterFrom.setEnabled(this.m_item.getYearFrom() !== -1);
	this.m_quarterTo.setEnabled(this.m_item.getYearTo() !== -1);
	this.m_monthFrom.setEnabled(this.m_item.getYearFrom() !== -1);
	this.m_monthTo.setEnabled(this.m_item.getYearTo() !== -1);
};
oFF.FdLayoutDateRangeFixed.prototype.onSelect = function(event)
{
	var control = event.getControl();
	var granularity = this.m_granularity.getSelectedItem().getCustomObject();
	if (control === this.m_granularity)
	{
		this.m_item.setGranularity(granularity);
		this.updateSecondaryDropdowns();
		this.updateElementsVisibility(granularity);
		this.m_dataChangedListener();
	}
	else if (control === this.m_yearFrom)
	{
		this.m_item.setYearFrom(control.getSelectedItem().getCustomObject().getInteger());
		this.updateSecondaryDropdowns();
		this.updateElementsVisibility(granularity);
		this.m_dataChangedListener();
	}
	else if (control === this.m_yearTo)
	{
		this.m_item.setYearTo(control.getSelectedItem().getCustomObject().getInteger());
		this.updateSecondaryDropdowns();
		this.updateElementsVisibility(granularity);
		this.m_dataChangedListener();
	}
	else if (control === this.m_quarterFrom)
	{
		this.m_item.setQuarterFrom(control.getSelectedItem().getCustomObject().getInteger());
		this.m_dataChangedListener();
	}
	else if (control === this.m_quarterTo)
	{
		this.m_item.setQuarterTo(control.getSelectedItem().getCustomObject().getInteger());
		this.m_dataChangedListener();
	}
	else if (control === this.m_monthFrom)
	{
		this.m_item.setMonthFrom(control.getSelectedItem().getCustomObject().getInteger());
		this.m_dataChangedListener();
	}
	else if (control === this.m_monthTo)
	{
		this.m_item.setMonthTo(control.getSelectedItem().getCustomObject().getInteger());
		this.m_dataChangedListener();
	}
};
oFF.FdLayoutDateRangeFixed.prototype.onChange = function(event)
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	if (event.getControl() === this.m_dateFrom)
	{
		var fromDate = this.m_dateFrom.getValue();
		this.m_item.setDateFrom(oFF.XString.isEqual(fromDate, i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START)) ? "-1" : fromDate);
		this.m_dataChangedListener();
	}
	else if (event.getControl() === this.m_dateTo)
	{
		var toDate = this.m_dateTo.getValue();
		this.m_item.setDateTo(oFF.XString.isEqual(toDate, i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END)) ? "-1" : toDate);
		this.m_dataChangedListener();
	}
	this.m_dataChangedListener();
};
oFF.FdLayoutDateRangeFixed.prototype.updateSecondaryDropdowns = function()
{
	if (this.m_item.getYearFrom() === -1)
	{
		if (this.m_item.getGranularity().isQuarter())
		{
			this.m_item.setQuarterFrom(1);
			this.m_quarterFrom.setSelectedItemByIndex(0);
		}
		else if (this.m_item.getGranularity().isMonth())
		{
			this.m_item.setMonthFrom(1);
			this.m_monthFrom.setSelectedItemByIndex(0);
		}
	}
	if (this.m_item.getYearTo() === -1)
	{
		if (this.m_item.getGranularity().isQuarter())
		{
			this.m_item.setQuarterTo(4);
			this.m_quarterTo.setSelectedItemByIndex(3);
		}
		else if (this.m_item.getGranularity().isMonth())
		{
			this.m_item.setMonthTo(12);
			this.m_monthTo.setSelectedItemByIndex(11);
		}
	}
};
oFF.FdLayoutDateRangeFixed.prototype.getRoot = function()
{
	return this.m_root;
};
oFF.FdLayoutDateRangeFixed.prototype.resizeComponent = function(size) {};
oFF.FdLayoutDateRangeFixed.prototype.hasUserInput = function()
{
	return true;
};
oFF.FdLayoutDateRangeFixed.prototype.getDescriptionText = function()
{
	var granularity = this.m_item.getGranularity();
	var i18n = this.m_genesis.getUiManager().getLocalization();
	if (granularity.isYear() || granularity.isQuarter() || granularity.isMonth())
	{
		var yearFrom = this.m_item.getYearFrom();
		var yearTo = this.m_item.getYearTo();
		var from = yearFrom === -1 ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START) : null;
		if (oFF.isNull(from))
		{
			if (granularity.isQuarter())
			{
				from = oFF.XStringUtils.concatenate3(oFF.FilterDialogI18n.getQuarterText(this.m_item.getQuarterFrom(), i18n), ", ", oFF.XInteger.convertToString(yearFrom));
			}
			else if (granularity.isMonth())
			{
				from = oFF.XStringUtils.concatenate3(oFF.FilterDialogI18n.getMonthText(this.m_item.getMonthFrom(), i18n), ", ", oFF.XInteger.convertToString(yearFrom));
			}
			else
			{
				from = oFF.XInteger.convertToString(yearFrom);
			}
		}
		var to = yearTo === -1 ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END) : null;
		if (oFF.isNull(to))
		{
			if (granularity.isQuarter())
			{
				to = oFF.XStringUtils.concatenate3(oFF.FilterDialogI18n.getQuarterText(this.m_item.getQuarterTo(), i18n), ", ", oFF.XInteger.convertToString(yearTo));
			}
			else if (granularity.isMonth())
			{
				to = oFF.XStringUtils.concatenate3(oFF.FilterDialogI18n.getMonthText(this.m_item.getMonthTo(), i18n), ", ", oFF.XInteger.convertToString(yearTo));
			}
			else
			{
				to = oFF.XInteger.convertToString(yearTo);
			}
		}
		return oFF.XStringUtils.concatenate3(from, " - ", to);
	}
	else if (granularity.isDay())
	{
		var dateFrom = this.m_item.getDateFrom();
		var dateTo = this.m_item.getDateTo();
		if (oFF.notNull(dateFrom) && oFF.notNull(dateTo))
		{
			var formatter = oFF.UiNumberFormatterCenter.getCenter();
			var dateFromFormatted = oFF.XString.isEqual(dateFrom, "-1") ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_FROM_START) : formatter.formatTextForDateTimeKey(null, dateFrom, oFF.XValueType.DATE);
			var dateToFormatted = oFF.XString.isEqual(dateTo, "-1") ? i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_VALUE_TO_END) : formatter.formatTextForDateTimeKey(null, dateTo, oFF.XValueType.DATE);
			return oFF.XStringUtils.concatenate3(dateFromFormatted, " - ", dateToFormatted);
		}
	}
	return "";
};
oFF.FdLayoutDateRangeFixed.prototype.showMessage = function(message, errorOnFrom, errorOnTo)
{
	this.clearMessage();
	this.m_error.setText(message);
	this.m_errorLabelContainer.setBackgroundColor(oFF.UiTheme.getCurrentTheme().getErrorBackgroundColor());
	if (errorOnFrom)
	{
		this.m_yearFrom.setValueState(oFF.UiValueState.ERROR);
		this.m_quarterFrom.setValueState(oFF.UiValueState.ERROR);
		this.m_monthFrom.setValueState(oFF.UiValueState.ERROR);
		this.m_dateFrom.setValueState(oFF.UiValueState.ERROR);
	}
	if (errorOnTo)
	{
		this.m_yearTo.setValueState(oFF.UiValueState.ERROR);
		this.m_quarterTo.setValueState(oFF.UiValueState.ERROR);
		this.m_monthTo.setValueState(oFF.UiValueState.ERROR);
		this.m_dateTo.setValueState(oFF.UiValueState.ERROR);
	}
};
oFF.FdLayoutDateRangeFixed.prototype.clearMessage = function()
{
	this.m_error.setText(null);
	this.m_errorLabelContainer.setBackgroundColor(null);
	this.m_yearFrom.setValueState(null);
	this.m_quarterFrom.setValueState(null);
	this.m_monthFrom.setValueState(null);
	this.m_dateFrom.setValueState(null);
	this.m_yearTo.setValueState(null);
	this.m_quarterTo.setValueState(null);
	this.m_monthTo.setValueState(null);
	this.m_dateTo.setValueState(null);
};
oFF.FdLayoutDateRangeFixed.prototype.focus = function()
{
	this.m_granularity.focus();
};

oFF.FdAbstractView = function() {};
oFF.FdAbstractView.prototype = new oFF.XObject();
oFF.FdAbstractView.prototype._ff_c = "FdAbstractView";

oFF.FdAbstractView.prototype.m_controller = null;
oFF.FdAbstractView.prototype.m_model = null;
oFF.FdAbstractView.prototype.m_context = null;
oFF.FdAbstractView.prototype.setupView = function(controller, model, context)
{
	this.m_controller = controller;
	this.m_model = model;
	this.m_context = context;
};
oFF.FdAbstractView.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_controller = null;
	this.m_model = null;
	this.m_context = null;
};
oFF.FdAbstractView.prototype.validate = function()
{
	return true;
};
oFF.FdAbstractView.prototype.onError = function(messages, customIdentifier)
{
	this.m_controller.postMessages(messages);
};

oFF.OuHierarchyDialogI18n = function() {};
oFF.OuHierarchyDialogI18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.OuHierarchyDialogI18n.prototype._ff_c = "OuHierarchyDialogI18n";

oFF.OuHierarchyDialogI18n.TITLE = "FF_SHIER_DIALOG_TITLE";
oFF.OuHierarchyDialogI18n.HIERARCHY_LABEL = "FF_SHIER_DIALOG_HIERARCHY_LABEL";
oFF.OuHierarchyDialogI18n.FLAT_REPRESENTATION_ITEM_LABEL = "FF_SHIER_DIALOG_FLAT_REPRESENTATION_ITEM_LABEL";
oFF.OuHierarchyDialogI18n.NO_DIMENSION_ERROR_LABEL = "FF_SHIER_DIALOG_NO_DIMENSION_ERROR_LABEL";
oFF.OuHierarchyDialogI18n.staticSetup = function()
{
	var tmpProvider = new oFF.OuHierarchyDialogI18n();
	tmpProvider.setupProvider(oFF.OuSelectHierarchyDialog.DEFAULT_PROGRAM_NAME, false);
	tmpProvider.addText(oFF.OuHierarchyDialogI18n.TITLE, "Select Hierarchy");
	tmpProvider.addText(oFF.OuHierarchyDialogI18n.HIERARCHY_LABEL, "Hierarchy");
	tmpProvider.addText(oFF.OuHierarchyDialogI18n.FLAT_REPRESENTATION_ITEM_LABEL, "Flat presentation");
	tmpProvider.addText(oFF.OuHierarchyDialogI18n.NO_DIMENSION_ERROR_LABEL, "Dimension must be selected for hierarchy dialog to initialize.");
	return tmpProvider;
};

oFF.OuQueryInformationDialogI18n = function() {};
oFF.OuQueryInformationDialogI18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.OuQueryInformationDialogI18n.prototype._ff_c = "OuQueryInformationDialogI18n";

oFF.OuQueryInformationDialogI18n.DIALOG_TITLE = "FF_QUERY_INFO_DIALOG_TITLE";
oFF.OuQueryInformationDialogI18n.GENERAL_TAB_HEADER = "FF_QUERY_INFO_DIALOG_GENERAL_TAB_HEADER";
oFF.OuQueryInformationDialogI18n.VARIABLES_TAB_HEADER = "FF_QUERY_INFO_DIALOG_VARIABLES_TAB_HEADER";
oFF.OuQueryInformationDialogI18n.BW_QUERY_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_BW_QUERY_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.CALC_VIEW_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_CALC_VIEW_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.PLANNING_MODEL_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_PLANNING_MODEL_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.ANALYTIC_MODEL_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_ANALYTIC_MODEL_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.FALLBACK_MODEL_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_FALLBACK_MODEL_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.INFO_PROVIDER_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_INFO_PROVIDER_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_HEADER = "FF_QUERY_INFO_DIALOG_LAST_UPDATED_SECTION_HEADER";
oFF.OuQueryInformationDialogI18n.GENERAL_TAB_NAME_LABEL = "FF_QUERY_INFO_DIALOG_GENERAL_TAB_NAME_LABEL";
oFF.OuQueryInformationDialogI18n.GENERAL_TAB_DESC_LABEL = "FF_QUERY_INFO_DIALOG_GENERAL_TAB_DESC_LABEL";
oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_DATE_LABEL = "FF_QUERY_INFO_DIALOG_LAST_UPDATED_SECTION_DATE_LABEL";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_RANGE_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_RANGE_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GT_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_GT_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GTE_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_GTE_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LT_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_LT_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LTE_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_LTE_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NE_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_NE_TEMPLATE";
oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NOT_IN_RANGE_TEMPLATE = "FF_QUERY_INFO_DIALOG_VARIABLE_VALUE_NOT_IN_RANGE_TEMPLATE";
oFF.OuQueryInformationDialogI18n.staticSetup = function()
{
	var tmpProvider = new oFF.OuQueryInformationDialogI18n();
	tmpProvider.setupProvider(oFF.OuQueryInformationDialog.DEFAULT_PROGRAM_NAME, false);
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.DIALOG_TITLE, "Information");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.DIALOG_TITLE, "#XTIT: The title of the information dialog");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_HEADER, "General");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_HEADER, "#XFLD: General tab header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_NAME_LABEL, "Name:");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_NAME_LABEL, "#XFLD: Datasource name label");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_DESC_LABEL, "Description:");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_DESC_LABEL, "#XFLD: Datasource description label");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.BW_QUERY_SECTION_HEADER, "Query");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.BW_QUERY_SECTION_HEADER, "#XTIT: Query section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.CALC_VIEW_SECTION_HEADER, "HANA View");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.CALC_VIEW_SECTION_HEADER, "#XTIT: HANA view section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.ANALYTIC_MODEL_SECTION_HEADER, "Model (Analytic)");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.ANALYTIC_MODEL_SECTION_HEADER, "#XTIT: SAC Analytic model section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.PLANNING_MODEL_SECTION_HEADER, "Model (Planning)");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.PLANNING_MODEL_SECTION_HEADER, "#XTIT: SAC Planning model section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.FALLBACK_MODEL_SECTION_HEADER, "Model");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.FALLBACK_MODEL_SECTION_HEADER, "#XTIT: Fallback model section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.INFO_PROVIDER_SECTION_HEADER, "Information Provider");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.INFO_PROVIDER_SECTION_HEADER, "#XTIT: Info provider section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_HEADER, "Last Data Update");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_HEADER, "#XTIT: Last data update section header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_DATE_LABEL, "Date:");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_DATE_LABEL, "#XFLD: Last updated label");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLES_TAB_HEADER, "Variables");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLES_TAB_HEADER, "#XTIT: Variables tab header");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_RANGE_TEMPLATE, "[ ] {0} - {1}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_RANGE_TEMPLATE, "#XSEL: Range template, {0} is low, {1} is high");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GT_TEMPLATE, "> {0}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GT_TEMPLATE, "#XSEL: Greater than template, {0} is value");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GTE_TEMPLATE, ">= {0}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GTE_TEMPLATE, "#XSEL: Greater than or equal to template, {0} is value");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LT_TEMPLATE, "< {0}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LT_TEMPLATE, "#XSEL: Less than template, {0} is value");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LTE_TEMPLATE, "<= {0}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LTE_TEMPLATE, "#XSEL: Less than or equal to template, {0} is value");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NE_TEMPLATE, "\u2260 {0}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NE_TEMPLATE, "#XSEL: Not equal to template, {0} is value");
	tmpProvider.addText(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NOT_IN_RANGE_TEMPLATE, "![ ] {0} - {1}");
	tmpProvider.addComment(oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NOT_IN_RANGE_TEMPLATE, "#XSEL: Not in range template, {0} is low, {1} is high");
	return tmpProvider;
};

oFF.OuTopNDialogI18n = function() {};
oFF.OuTopNDialogI18n.prototype = new oFF.DfUiLocalizationProvider();
oFF.OuTopNDialogI18n.prototype._ff_c = "OuTopNDialogI18n";

oFF.OuTopNDialogI18n.TITLE = "FF_TOPN__TITLE";
oFF.OuTopNDialogI18n.INFORMATON_MESSAGE = "FF_TOPN__INFORMATION_MESSAGE";
oFF.OuTopNDialogI18n.SETTINGS_SECTION_TITLE = "FF_TOPN__SETTINGS_SECTION__TITLE";
oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TOP_ELEMENT = "FF_TOPN__TOPBOTTOM_DROPDOWN__TOP_ELEMENT";
oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_BOTTOM_ELEMENT = "FF_TOPN__TOPBOTTOM_DROPDOWN__BOTTOM_ELEMENT";
oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TITLE = "FF_TOPN__TOPBOTTOM_DROPDOWN__TITLE";
oFF.OuTopNDialogI18n.N_VALUE_TITLE = "FF_TOPN__N_VALUE__TITLE";
oFF.OuTopNDialogI18n.N_VALUE_VALIDATION_MESSAGE = "FF_TOPN__N_VALUE__VALIDATION_MESSAGE";
oFF.OuTopNDialogI18n.BASED_ON_SECTION_TITLE = "FF_TOPN__BASED_ON_SECTION__TITLE";
oFF.OuTopNDialogI18n.SELECT_MEASURE_DIALOG_TITLE = "FF_TOPN__SELECT_MEASURE_DIALOG__TITLE";
oFF.OuTopNDialogI18n.MEASURES_INPUTFIELD_TITLE = "FF_TOPN__MEASURSES_INPUTFIELD__TITLE";
oFF.OuTopNDialogI18n.staticSetup = function()
{
	var provider = new oFF.OuTopNDialogI18n();
	provider.setupProvider(oFF.OuTopNDialog.DEFAULT_PROGRAM_NAME, false);
	provider.addText(oFF.OuTopNDialogI18n.TITLE, "Top N");
	provider.addText(oFF.OuTopNDialogI18n.INFORMATON_MESSAGE, "Creating a new Top N will overwrite the existing Top N");
	provider.addText(oFF.OuTopNDialogI18n.SETTINGS_SECTION_TITLE, "Settings");
	provider.addText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TOP_ELEMENT, "Top");
	provider.addText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_BOTTOM_ELEMENT, "Bottom");
	provider.addText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TITLE, "Type");
	provider.addText(oFF.OuTopNDialogI18n.N_VALUE_TITLE, "Value");
	provider.addText(oFF.OuTopNDialogI18n.N_VALUE_VALIDATION_MESSAGE, "Should be an integer between 1 and 10000");
	provider.addText(oFF.OuTopNDialogI18n.BASED_ON_SECTION_TITLE, "Based on");
	provider.addText(oFF.OuTopNDialogI18n.SELECT_MEASURE_DIALOG_TITLE, "Select Measure");
	provider.addText(oFF.OuTopNDialogI18n.MEASURES_INPUTFIELD_TITLE, "Select Measure");
	return provider;
};

oFF.VdVariableDialog = function() {};
oFF.VdVariableDialog.prototype = new oFF.VdVariableForm();
oFF.VdVariableDialog.prototype._ff_c = "VdVariableDialog";

oFF.VdVariableDialog.createAsDisplay = function(context, configuration, displayListener)
{
	var obj = new oFF.VdVariableDialog();
	obj.m_displayListener = displayListener;
	obj.setupController(context, configuration);
	return obj;
};
oFF.VdVariableDialog.prototype.m_display = null;
oFF.VdVariableDialog.prototype.m_submitBtn = null;
oFF.VdVariableDialog.prototype.m_cancelBtn = null;
oFF.VdVariableDialog.prototype.m_displayListener = null;
oFF.VdVariableDialog.prototype.m_originalRenderListener = null;
oFF.VdVariableDialog.prototype.m_originalReinitListener = null;
oFF.VdVariableDialog.prototype.m_originalSubmitListener = null;
oFF.VdVariableDialog.prototype.setupController = function(context, configuration)
{
	oFF.VdVariableForm.prototype.setupController.call( this , context, configuration);
	oFF.VdVariableForm.prototype.registerReinitListener.call( this , this);
	oFF.VdVariableForm.prototype.registerRenderListener.call( this , this);
	oFF.VdVariableForm.prototype.registerSubmitListener.call( this , this);
	this.m_display = this.m_context.getDisplayFactory().getInstance();
	this.m_display.addCssClass("ffVariableDialog");
	this.m_display.setName("VariableDialog");
	this.m_display.setTitle(this.m_config.getTitle());
	this.m_display.registerOnAfterOpen(this);
	this.m_display.registerOnBeforeClose(this);
	this.m_display.getGenesis().newRoot(oFF.UiType.ACTIVITY_INDICATOR).useMaxSpace();
	this.m_submitBtn = oFF.UiContextDummy.getSingleton();
	this.m_cancelBtn = this.m_display.addNewButton();
	this.m_cancelBtn.setText(this.m_context.getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	this.m_cancelBtn.setName("VariableDialogCancelBtn");
	this.m_cancelBtn.registerOnPress(this);
	this.m_display.setHeight(oFF.UiCssLength.createExt(50, oFF.UiCssSizeUnit.PERCENT));
	this.m_display.setWidth(oFF.UiCssLength.createExt(oFF.VdConstants.BASIC_DIALOG_WIDTH, oFF.UiCssSizeUnit.PIXEL));
};
oFF.VdVariableDialog.prototype.isOpen = function()
{
	return this.m_display.isOpen();
};
oFF.VdVariableDialog.prototype.open = function()
{
	var processorState = this.m_model.getVariableProcessor().getVariableProcessorState();
	if (this.m_config.isAutoSubmitOnStartup() && processorState === oFF.VariableProcessorState.CHANGEABLE_STARTUP && this.m_model.validateValues())
	{
		this.submitInternal();
	}
	else
	{
		this.m_display.getGenesis().newRoot(oFF.UiType.ACTIVITY_INDICATOR).useMaxSpace();
		this.m_display.open();
	}
};
oFF.VdVariableDialog.prototype.close = function()
{
	if (this.m_display.isOpen())
	{
		this.m_display.close();
	}
};
oFF.VdVariableDialog.prototype.onAfterOpen = function(event)
{
	this.buildOlapDialogUi(this.m_display.getGenesis());
};
oFF.VdVariableDialog.prototype.onBeforeClose = function(event)
{
	this.cancelReinit();
};
oFF.VdVariableDialog.prototype.closeDialogOk = function()
{
	if (oFF.notNull(this.m_display) && this.m_display.isOpen())
	{
		this.m_display.close();
	}
	this.callOnOk();
};
oFF.VdVariableDialog.prototype.closeDialogCancel = function()
{
	if (oFF.notNull(this.m_display) && this.m_display.isOpen())
	{
		this.m_display.close();
	}
	this.callOnCancel();
};
oFF.VdVariableDialog.prototype.setSubmitButtonEnabled = function(enabled)
{
	this.m_submitBtn.setEnabled(enabled);
};
oFF.VdVariableDialog.prototype.onPress = function(event)
{
	oFF.VdVariableForm.prototype.onPress.call( this , event);
	var control = event.getControl();
	if (control === this.m_submitBtn)
	{
		this.attemptSubmit();
	}
	else if (control === this.m_cancelBtn)
	{
		this.cancelReinit();
	}
};
oFF.VdVariableDialog.prototype.callOnOk = function()
{
	if (oFF.notNull(this.m_displayListener))
	{
		this.m_displayListener.onOk();
	}
};
oFF.VdVariableDialog.prototype.callOnCancel = function()
{
	if (oFF.notNull(this.m_displayListener))
	{
		this.m_displayListener.onCancel();
	}
};
oFF.VdVariableDialog.prototype.registerRenderListener = function(listener)
{
	this.m_originalRenderListener = listener;
};
oFF.VdVariableDialog.prototype.onRenderDone = function(root)
{
	this.m_display.setHeight(oFF.UiCssLength.AUTO);
	var i18n = this.m_context.getLocalization();
	this.m_submitBtn = this.m_display.insertNewButton(0);
	this.m_submitBtn.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_submitBtn.setText(i18n.getText(oFF.VariableDialogI18n.I18N_VD_SET));
	this.m_submitBtn.setName("VariableDialogSubmitBtn");
	this.m_submitBtn.registerOnPress(this);
	this.m_submitBtn.focus();
	if (oFF.notNull(this.m_originalRenderListener))
	{
		this.m_originalRenderListener.onRenderDone(root);
	}
};
oFF.VdVariableDialog.prototype.registerReinitListener = function(listener)
{
	this.m_originalReinitListener = listener;
};
oFF.VdVariableDialog.prototype.onReinit = function(success, extResult)
{
	if (!success)
	{
		this.m_display.close();
	}
	if (oFF.notNull(this.m_originalReinitListener))
	{
		this.m_originalReinitListener.onReinit(success, extResult);
	}
};
oFF.VdVariableDialog.prototype.onCancelReinit = function()
{
	this.closeDialogCancel();
	if (oFF.notNull(this.m_originalReinitListener))
	{
		this.m_originalReinitListener.onCancelReinit();
	}
};
oFF.VdVariableDialog.prototype.registerSubmitListener = function(listener)
{
	this.m_originalSubmitListener = listener;
};
oFF.VdVariableDialog.prototype.onBeforeSubmit = function(values, valuesJson)
{
	if (oFF.notNull(this.m_originalSubmitListener))
	{
		this.m_originalSubmitListener.onBeforeSubmit(values, valuesJson);
	}
};
oFF.VdVariableDialog.prototype.onAfterSubmit = function(success, extResult, values, valuesJson)
{
	if (oFF.notNull(this.m_originalSubmitListener))
	{
		this.m_originalSubmitListener.onAfterSubmit(success, extResult, values, valuesJson);
	}
	if (success)
	{
		this.closeDialogOk();
	}
};
oFF.VdVariableDialog.prototype.shake = function()
{
	this.m_display.shake();
};
oFF.VdVariableDialog.prototype.setBusy = function(busy)
{
	oFF.VdVariableForm.prototype.setBusy.call( this , busy);
	this.m_submitBtn.setEnabled(!busy);
};
oFF.VdVariableDialog.prototype.releaseObject = function()
{
	this.m_submitBtn = oFF.XObjectExt.release(this.m_submitBtn);
	this.m_cancelBtn = oFF.XObjectExt.release(this.m_cancelBtn);
	this.m_display = oFF.XObjectExt.release(this.m_display);
	this.m_displayListener = null;
	oFF.VdVariableForm.prototype.releaseObject.call( this );
};

oFF.VdDateValueController = function() {};
oFF.VdDateValueController.prototype = new oFF.VdAbstractValueController();
oFF.VdDateValueController.prototype._ff_c = "VdDateValueController";

oFF.VdDateValueController.create = function(context, configuration, controller, variableModel, value)
{
	var obj = new oFF.VdDateValueController();
	obj.setupControllerExt(context, configuration, controller, variableModel, value);
	return obj;
};
oFF.VdDateValueController.prototype.setupControllerExt = function(context, configuration, controller, variableModel, value)
{
	this.setupController(context, configuration, controller, variableModel, value);
	this.m_view.setDateValueFormat(oFF.VdConstants.DATE_VALUE_FORMAT);
	this.m_view.setDateDisplayFormat(configuration.getDateDisplayFormat());
	this.m_control1 = this.m_view.getDatePicker1();
	this.m_control1.setCustomObject(oFF.VdControllerState.PRISTINE);
	this.m_control1.registerOnChange(this);
	this.m_control1.registerOnLiveChange(this);
	this.m_control1.setDebounceTime(100);
	this.m_control2 = this.m_view.getDatePicker2();
	this.m_control2.setCustomObject(oFF.VdControllerState.PRISTINE);
	this.m_control2.registerOnChange(this);
	this.m_control2.registerOnLiveChange(this);
	this.m_control2.setDebounceTime(100);
};
oFF.VdDateValueController.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_control1))
	{
		this.m_control1.registerOnChange(null);
		this.m_control1.registerOnLiveChange(null);
	}
	if (oFF.notNull(this.m_control2))
	{
		this.m_control2.registerOnChange(null);
		this.m_control2.registerOnLiveChange(null);
	}
	oFF.VdAbstractValueController.prototype.releaseObject.call( this );
};
oFF.VdDateValueController.prototype.createView = function()
{
	var variableType = this.getVarType();
	var uiManager = this.m_context.getUiManager();
	if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		return oFF.VdDateSingleView.create(uiManager);
	}
	if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		if (this.m_variableModel.isInterval())
		{
			return oFF.VdDateMultiView.create(uiManager);
		}
		else
		{
			return oFF.VdDateSingleView.create(uiManager);
		}
	}
	throw oFF.XException.createIllegalArgumentException("Unable to create view for variable type");
};
oFF.VdDateValueController.prototype.onLiveChange = function(event)
{
	var control = event.getControl();
	var inputIndex = control === this.m_control1 ? 0 : control === this.m_control2 ? 1 : -1;
	if (inputIndex >= 0)
	{
		this.m_value.resetValueState(inputIndex);
	}
	this.setState(event.getControl(), oFF.VdControllerState.DIRTY);
};
oFF.VdDateValueController.prototype.onChange = function(event)
{
	this.processVariable(event.getControl());
};
oFF.VdDateValueController.prototype.processVariable = function(control)
{
	var index = control === this.m_control1 ? 0 : control === this.m_control2 ? 1 : -1;
	if (index >= 0)
	{
		var dateValue = control.getValue();
		if (oFF.XStringUtils.isNullOrEmpty(dateValue))
		{
			dateValue = null;
		}
		else if (oFF.XString.isEqual(dateValue, oFF.VdConstants.BW_NULL_OPERATOR))
		{
			dateValue = oFF.VdConstants.BW_NULL_DATE;
		}
		var item = oFF.FdSimpleItem.createWithType(dateValue, null, null, oFF.XValueType.DATE);
		this.m_value.setOperand(index, item);
		if (!oFF.XStringUtils.isNullOrEmpty(dateValue) && oFF.XDate.createDateSafe(dateValue) === null)
		{
			this.m_value.setError(index, this.m_context.getLocalization().getText(oFF.VariableDialogI18n.I18N_VD_ERROR_MSG_DATE_VALIDATION));
		}
		this.setState(control, oFF.VdControllerState.PROCESSED);
	}
};
oFF.VdDateValueController.prototype.onValueStateChanged = function()
{
	this.m_control1.setValueState(this.m_value.getFirstValueState());
	this.m_control1.setValueStateText(this.m_value.getFirstValueStateText());
	this.m_control2.setValueState(this.m_value.getSecondValueState());
	this.m_control2.setValueStateText(this.m_value.getSecondValueStateText());
};

oFF.VdInputValueController = function() {};
oFF.VdInputValueController.prototype = new oFF.VdAbstractValueController();
oFF.VdInputValueController.prototype._ff_c = "VdInputValueController";

oFF.VdInputValueController.create = function(context, configuration, controller, variableModel, value)
{
	var obj = new oFF.VdInputValueController();
	obj.setupControllerExt(context, configuration, controller, variableModel, value);
	return obj;
};
oFF.VdInputValueController.prototype.setupControllerExt = function(context, configuration, controller, variableModel, value)
{
	this.setupController(context, configuration, controller, variableModel, value);
	this.m_control1 = this.m_view.getInput1();
	this.m_control1.setCustomObject(oFF.VdControllerState.PRISTINE);
	this.m_control1.registerOnEnter(this);
	this.m_control1.registerOnEditingBegin(this);
	this.m_control1.registerOnEditingEnd(this);
	this.m_control1.registerOnLiveChange(this);
	this.m_control2 = this.m_view.getInput2();
	this.m_control2.setCustomObject(oFF.VdControllerState.PRISTINE);
	this.m_control2.registerOnEnter(this);
	this.m_control2.registerOnEditingBegin(this);
	this.m_control2.registerOnEditingEnd(this);
	this.m_control2.registerOnLiveChange(this);
};
oFF.VdInputValueController.prototype.createView = function()
{
	var variableType = this.getVarType();
	var uiManager = this.m_context.getUiManager();
	if (variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		return oFF.VdDropdownSingleView.create(uiManager);
	}
	if (variableType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		return oFF.VdInputSingleView.create(uiManager);
	}
	if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		if (this.m_variableModel.isInterval())
		{
			return oFF.VdInputMultiView.create(uiManager);
		}
		else
		{
			return oFF.VdInputSingleView.create(uiManager);
		}
	}
	throw oFF.XException.createIllegalArgumentException("Unable to create view for variable type");
};
oFF.VdInputValueController.prototype.onLiveChange = function(event)
{
	var control = event.getControl();
	this.setState(control, oFF.VdControllerState.DIRTY);
	var inputVal = control.getText();
	var inputIndex = control === this.m_control1 ? 0 : control === this.m_control2 ? 1 : -1;
	if (inputIndex >= 0)
	{
		this.m_value.resetValueState(inputIndex);
	}
	if (this.getVarType().isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
	{
		this.m_variableModel.validateSimpleTypeInput(this.m_value, inputVal, inputIndex);
	}
};
oFF.VdInputValueController.prototype.onEditingBegin = function(event)
{
	this.m_focusedControl = event.getControl();
};
oFF.VdInputValueController.prototype.onEditingEnd = function(event)
{
	var control = event.getControl();
	if (control.isEditable() && this.getControlState(control) !== oFF.VdControllerState.PROCESSED)
	{
		this.processVariableInternal(control, false);
	}
	this.m_focusedControl = null;
};
oFF.VdInputValueController.prototype.onEnter = function(event)
{
	this.processVariableInternal(event.getControl(), true);
};
oFF.VdInputValueController.prototype.processVariable = function(control)
{
	this.processVariableInternal(control, false);
};
oFF.VdInputValueController.prototype.processVariableInternal = function(control, isOnEnter)
{
	if (this.getControlState(control) === oFF.VdControllerState.PENDING)
	{
		return;
	}
	this.setState(control, oFF.VdControllerState.PENDING);
	var inputVal = control.getText();
	var inputIndex = control === this.m_control1 ? 0 : control === this.m_control2 ? 1 : -1;
	if (inputIndex >= 0)
	{
		var varType = this.getVarType();
		if (varType.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE))
		{
			this.setSimpleTypeOperand(inputIndex, control, isOnEnter);
			this.setState(control, oFF.VdControllerState.PROCESSED);
		}
		else if (varType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			if (oFF.XStringUtils.isNullOrEmpty(inputVal))
			{
				this.m_value.removeOperand(inputIndex);
				this.setState(control, oFF.VdControllerState.PROCESSED);
			}
			else if (!this.m_variableModel.supportsValueHelp() || !this.m_config.isLinkedVariable(this.m_variableModel.getName()) && !this.m_variableModel.hasCheckTable())
			{
				this.m_parent.setEnableAutoFocus(true);
				this.m_value.setOperand(inputIndex, oFF.FdSimpleItem.create(null, inputVal, null));
				this.m_parent.setEnableAutoFocus(false);
				this.setState(control, oFF.VdControllerState.PROCESSED);
			}
			else
			{
				this.getInputField(inputIndex).setBusy(true);
				this.performValueSearch(inputIndex, inputVal);
			}
		}
	}
};
oFF.VdInputValueController.prototype.setSimpleTypeOperand = function(index, control, isOnEnter)
{
	if (isOnEnter)
	{
		this.m_parent.setEnableAutoFocus(true);
	}
	var key = oFF.XStringUtils.isNotNullAndNotEmpty(control.getText()) ? control.getText() : null;
	if (oFF.notNull(key) && this.m_variableModel.getVariable().getValueType().isTypeOf(oFF.XValueType.NUMBER))
	{
		var formatter = oFF.UiNumberFormatterCenter.getCenter();
		var parsedNumber = formatter.parseFormattedNumber(key);
		var formattedNumber = formatter.format(parsedNumber);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(formattedNumber))
		{
			this.m_value.setOperand(index, oFF.FdSimpleItem.create(parsedNumber, formattedNumber, null));
			this.m_variableModel.validateSimpleType(this.m_value, index);
		}
		else
		{
			this.m_variableModel.validateSimpleTypeInput(this.m_value, key, index);
		}
	}
	else
	{
		this.m_value.setOperand(index, oFF.FdSimpleItem.create(key, null, null));
		this.m_variableModel.validateSimpleType(this.m_value, index);
	}
	this.m_parent.setEnableAutoFocus(false);
};
oFF.VdInputValueController.prototype.onSearchDone = function(index)
{
	var input = this.getInputField(index);
	this.setState(input, oFF.VdControllerState.PROCESSED);
	input.setBusy(false);
};
oFF.VdInputValueController.prototype.getInputField = function(index)
{
	if (index === 0)
	{
		return this.m_control1;
	}
	return this.m_control2;
};
oFF.VdInputValueController.prototype.onValueStateChanged = function()
{
	this.m_control1.setValueState(this.m_value.getFirstValueState());
	this.m_control1.setValueStateText(this.m_value.getFirstValueStateText());
	this.m_control2.setValueState(this.m_value.getSecondValueState());
	this.m_control2.setValueStateText(this.m_value.getSecondValueStateText());
};

oFF.VdOptionValueController = function() {};
oFF.VdOptionValueController.prototype = new oFF.VdAbstractValueController();
oFF.VdOptionValueController.prototype._ff_c = "VdOptionValueController";

oFF.VdOptionValueController.create = function(context, configuration, controller, variableModel, value)
{
	var obj = new oFF.VdOptionValueController();
	obj.setupControllerExt(context, configuration, controller, variableModel, value);
	return obj;
};
oFF.VdOptionValueController.prototype.setupControllerExt = function(context, configuration, controller, variableModel, value)
{
	this.setupController(context, configuration, controller, variableModel, value);
	this.m_control1 = this.m_view.getDropdown();
	this.m_control1.registerOnSelect(this);
	this.m_control2 = oFF.UiContextDummy.getSingleton();
};
oFF.VdOptionValueController.prototype.createView = function()
{
	return oFF.VdDropdownSingleView.create(this.m_context.getUiManager());
};
oFF.VdOptionValueController.prototype.processVariable = function(control)
{
	this.processVariableInternal();
};
oFF.VdOptionValueController.prototype.onSelect = function(event)
{
	this.processVariableInternal();
};
oFF.VdOptionValueController.prototype.processVariableInternal = function()
{
	var item = this.m_control1.getSelectedItem();
	var itemName = item.getName();
	var itemText = this.m_variableModel.getValueType().isBoolean() ? null : item.getText();
	var first = oFF.FdSimpleItem.create(itemName, null, itemText);
	this.m_value.setOperand(oFF.VdValue.FIRST, first);
};

oFF.VdOrcaEntryPoint = function() {};
oFF.VdOrcaEntryPoint.prototype = new oFF.VdOrcaFacade();
oFF.VdOrcaEntryPoint.prototype._ff_c = "VdOrcaEntryPoint";

oFF.VdOrcaEntryPoint.createEntryPointDisplay = function(localization, params, listener)
{
	var obj = new oFF.VdOrcaEntryPoint();
	obj.setupEntryPoint(localization, params);
	obj.setDisplay(oFF.VdVariableDialog.createAsDisplay(obj.m_context, obj.m_config, listener));
	obj.setupController();
	return obj;
};
oFF.VdOrcaEntryPoint.createEntryPointToken = function(localization, params)
{
	var obj = new oFF.VdOrcaEntryPoint();
	obj.setupEntryPoint(localization, params);
	obj.setToken(oFF.VdVariableForm.createAsToken(obj.m_context, obj.m_config));
	obj.setupController();
	return obj;
};
oFF.VdOrcaEntryPoint.variableIsUsedInDynamicFilter = function(variable)
{
	if (!variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		return false;
	}
	var dimVar = variable;
	return dimVar.isUsedInDynamicFilter() && dimVar.getDimension().getAxisType() !== oFF.AxisType.REPOSITORY;
};
oFF.VdOrcaEntryPoint.prototype.m_params = null;
oFF.VdOrcaEntryPoint.prototype.m_scenario = null;
oFF.VdOrcaEntryPoint.prototype.m_level = null;
oFF.VdOrcaEntryPoint.prototype.m_title = null;
oFF.VdOrcaEntryPoint.prototype.m_context = null;
oFF.VdOrcaEntryPoint.prototype.m_config = null;
oFF.VdOrcaEntryPoint.prototype.m_storyValues = null;
oFF.VdOrcaEntryPoint.prototype.m_widgetValues = null;
oFF.VdOrcaEntryPoint.prototype.m_variablesToDisplay = null;
oFF.VdOrcaEntryPoint.prototype.m_linkTooltips = null;
oFF.VdOrcaEntryPoint.prototype.m_storyEditable = false;
oFF.VdOrcaEntryPoint.prototype.m_readOnly = false;
oFF.VdOrcaEntryPoint.prototype.m_i18n = null;
oFF.VdOrcaEntryPoint.prototype.setupEntryPoint = function(localization, params)
{
	this.m_params = params;
	var variableProcessorInternal = this.getVariableProcessorInternal();
	var variables = variableProcessorInternal.getInputEnabledAndNonTechnicalVariables();
	this.extractParams(variables);
	var uiMgr = variableProcessorInternal.getApplication().getUiManager();
	var displayFactory = oFF.notNull(params.displayFactory) ? params.displayFactory : oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	this.m_context = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	this.m_i18n = this.m_context.getLocalization();
	this.m_i18n.setExternalLocalization(oFF.OrcaI18nMapping.create(), localization);
	this.m_config = oFF.VdConfiguration.createConfig(this.getTitle(), variableProcessorInternal);
	this.m_config.setStartValues(this.getStartValues());
	this.m_config.setDateDisplayFormat(this.m_params.dateDisplayFormat);
	this.m_config.setVariablesToDisplay(this.m_variablesToDisplay);
	this.m_config.setTextVariablesEnabled(!this.m_level.isTypeOf(oFF.VdOrcaLevel.WIDGET));
	this.m_config.setUpdatingDynamicVariables(false);
	this.m_config.setAlwaysValidateSimpleType(this.m_level === oFF.VdOrcaLevel.FILTER);
	this.m_config.setAutoSubmitOnStartup(uiMgr.getSession().getEnvironment().getBooleanByKey(oFF.OrcaConstants.URL_PARAM_AUTO_SUBMIT));
	this.m_config.setLinkedVariableNames(this.m_linkedVariableNames);
	this.m_config.setImplicitSubmit(!this.m_params.isPublication);
	this.m_config.setStartValuesJson(oFF.VdValueFormat.SAC, null);
	this.addDimensionDisplayInfoToConfig(this.m_config, variables);
	var isBw = oFF.isNull(this.m_params.queryManager) || this.m_params.queryManager.getSystemType().isTypeOf(oFF.SystemType.ABAP);
	this.m_config.setUseDatePicker(isBw);
	this.m_config.hideOperatorNotBetween(!isBw);
	oFF.VdOrcaFacade.configureVariantManagement(variableProcessorInternal, this.m_config);
};
oFF.VdOrcaEntryPoint.prototype.setupController = function()
{
	var linkedVariableNames = oFF.XListOfString.create();
	if (this.m_params.linkTooltips.hasElements())
	{
		var linkVarManager = oFF.OrcaLinkVarManager.createWithController(this.m_vdController);
		if (this.m_params.linkVarSubmitHandling === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT)
		{
			linkVarManager.activateSubmitLinked();
		}
		else if (this.m_params.linkVarSubmitHandling === oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE)
		{
			linkVarManager.activateSubmitAll(this.m_params.linkVarHelper);
		}
		var keys = this.m_params.linkTooltips.getKeysAsIteratorOfString();
		while (keys.hasNext())
		{
			var varName = keys.next();
			var mainVariable = this.getVariableProcessorInternal().getVariable(varName);
			var linkage = this.m_params.linkage.getByKey(varName);
			if (oFF.isNull(linkage) || linkage.getSecondObject().size() !== this.m_params.linkTooltips.getByKey(varName).size())
			{
				linkVarManager.setHasMissingLink(mainVariable);
			}
			else
			{
				linkVarManager.addLinks(mainVariable, linkage.getSecondObject(), linkage.getFirstObject());
			}
		}
		var skipVariables = this.m_params.linkSkipSubmit.getIterator();
		while (skipVariables.hasNext())
		{
			var skip = skipVariables.next();
			var queryManager = skip.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				linkVarManager.setSkipSubmitOfLinkedQm(queryManager);
			}
		}
		this.m_vdController.setExternalStateHandler(linkVarManager);
		this.m_vdController.setValueHelpProcessorProvider(linkVarManager);
		linkedVariableNames = linkVarManager.getLinkedVariableNames();
	}
	if (this.m_params.isPlanningSequence)
	{
		var aProcessor = this.getAnalyticVariableProcessor();
		var aValues = oFF.isNull(aProcessor) ? oFF.XHashMapByString.create() : oFF.VdOrcaValueParser.parseJsonToStartValues(this.m_params.datasetVariables, aProcessor, this.m_linkedVariableNames);
		var synchronizer = oFF.VdOrcaPlanningSequenceHandler.create(this.m_context, this.m_vdController.getStateHandler(), aProcessor, aValues);
		this.m_vdController.setExternalStateHandler(synchronizer);
	}
	var uiConfig = oFF.VdOrcaUiHelperConfig.createConfig(this.m_scenario, this.m_level);
	uiConfig.setUseBottomLevelVariables(this.getUseWidgetInitialValue());
	uiConfig.setStoryEditable(this.m_storyEditable);
	uiConfig.setReadOnly(this.m_readOnly);
	uiConfig.setForcePrompt(this.m_scenario === oFF.VdOrcaScenario.PLANNING_SEQUENCE ? !!this.m_params.forcePromptExec : !!this.m_params.forcePrompt);
	uiConfig.setShowVariantSection(!!this.m_params.showVariantSection);
	uiConfig.setTopLevelUsingDynamicVariables(this.m_params.isStoryUsingDynamicVariables);
	uiConfig.setBottomLevelUsingDynamicVariables(this.m_params.isWidgetUsingDynamicVariables);
	uiConfig.setDisableExit(!!this.m_params.disableExitVariables);
	uiConfig.setInfoText(this.m_params.infoText);
	uiConfig.setLinkedModelsText(this.m_params.linkedModelsText);
	uiConfig.setCustomStoryButtonText(this.m_params.customStoryButtonText);
	uiConfig.setBoardRoomParentLevelText(this.m_params.datasetVariablesButtonText);
	uiConfig.setBoardRoomChildLevelText(this.m_params.presetVariablesButtonText);
	uiConfig.setLinkTooltips(this.m_linkTooltips);
	uiConfig.setTopLevelValues(this.m_storyValues);
	uiConfig.setBottomLevelValues(this.m_widgetValues);
	this.setupExt(oFF.VdOrcaUiHelper.createUiHelper(this.m_vdController, uiConfig), linkedVariableNames);
};
oFF.VdOrcaEntryPoint.prototype.releaseObject = function()
{
	this.m_params = null;
	this.m_scenario = null;
	this.m_level = null;
	this.m_context = oFF.XObjectExt.release(this.m_context);
	this.m_storyValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_storyValues);
	this.m_widgetValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_widgetValues);
	this.m_linkTooltips = oFF.XObjectExt.release(this.m_linkTooltips);
	this.m_variablesToDisplay = oFF.XObjectExt.release(this.m_variablesToDisplay);
	oFF.VdOrcaFacade.prototype.releaseObject.call( this );
};
oFF.VdOrcaEntryPoint.prototype.extractParams = function(variables)
{
	this.m_title = this.m_params.title;
	this.m_storyEditable = !!this.m_params.storyEditable;
	this.m_readOnly = !!this.m_params.readOnly;
	this.m_linkTooltips = this.m_params.linkTooltips;
	this.m_linkedVariableNames = this.m_linkTooltips.getKeysAsReadOnlyListOfString();
	this.m_scenario = this.getScenario();
	this.m_level = this.getLevel();
	this.mergeVariableValues(variables);
	this.m_variablesToDisplay = oFF.XHashSetOfString.create();
	if (this.m_scenario === oFF.VdOrcaScenario.LINKED_VARIABLE && oFF.XCollectionUtils.hasElements(this.m_params.linkedVariables))
	{
		var linked = this.m_params.linkedVariables;
		for (var i = 0; i < linked.size(); i++)
		{
			var varName = linked.getStringAt(i);
			this.m_variablesToDisplay.add(varName);
		}
	}
	if (oFF.XCollectionUtils.hasElements(this.m_params.variablesToDisplay))
	{
		this.m_variablesToDisplay.addAll(this.m_params.variablesToDisplay);
	}
};
oFF.VdOrcaEntryPoint.prototype.getScenario = function()
{
	if (this.m_params.isPlanningSequence)
	{
		return oFF.VdOrcaScenario.PLANNING_SEQUENCE;
	}
	if (!!this.m_params.analyticApp)
	{
		return oFF.VdOrcaScenario.ANALYTIC_APP;
	}
	if (this.m_params.isPublication)
	{
		return oFF.VdOrcaScenario.SCHEDULING;
	}
	if (oFF.notNull(this.m_params.linkedVariables))
	{
		return oFF.VdOrcaScenario.LINKED_VARIABLE;
	}
	if (this.m_params.datasetVariablesEditable && this.m_params.preSetVariablesEditable)
	{
		return oFF.VdOrcaScenario.BOARD_ROOM;
	}
	return oFF.VdOrcaScenario.STORY;
};
oFF.VdOrcaEntryPoint.prototype.getLevel = function()
{
	if (this.m_params.isPlanningSequence)
	{
		return oFF.VdOrcaLevel.DEFAULT;
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_params.singleVariableKey))
	{
		return oFF.VdOrcaLevel.FILTER;
	}
	if (!!this.m_params.showChartVariables || !!this.m_params.preSetVariablesEditable || this.m_scenario !== oFF.VdOrcaScenario.STORY && !!this.m_params.isWidget)
	{
		return !!this.m_params.useTableMessage ? oFF.VdOrcaLevel.TABLE : oFF.VdOrcaLevel.CHART;
	}
	if (!!this.m_params.isWidget)
	{
		return oFF.VdOrcaLevel.EXPLORER;
	}
	return oFF.VdOrcaLevel.DEFAULT;
};
oFF.VdOrcaEntryPoint.prototype.mergeVariableValues = function(variables)
{
	var variableProcessor = this.getVariableProcessorInternal();
	this.m_storyValues = oFF.VdOrcaValueParser.parseJsonToStartValues(this.m_params.datasetVariables, variableProcessor, this.m_linkedVariableNames);
	this.m_widgetValues = oFF.VdOrcaValueParser.parseJsonToStartValues(this.m_params.preSetVariables, variableProcessor, this.m_linkedVariableNames);
	var orcaFilterValues = oFF.VdOrcaValueParser.parseJsonToStartValues(this.m_params.filterVariables, variableProcessor, this.m_linkedVariableNames);
	var processorValues = oFF.VdImportExport.getValuesFromProcessor(variableProcessor);
	var dynamicFilterValues = oFF.VdImportExport.getDynamicFilterValuesFromProcessor(variableProcessor);
	if (oFF.isNull(this.m_storyValues))
	{
		if (this.m_scenario === oFF.VdOrcaScenario.LINKED_VARIABLE && oFF.notNull(this.m_widgetValues))
		{
			this.m_storyValues = this.m_widgetValues.createMapByStringCopy();
		}
		else
		{
			this.m_storyValues = processorValues;
		}
	}
	if (oFF.isNull(this.m_widgetValues))
	{
		this.m_widgetValues = oFF.XHashMapByString.create();
	}
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		var varName = variable.getName();
		var processorValuesByVariable = processorValues.getByKey(varName);
		if (oFF.notNull(orcaFilterValues) && orcaFilterValues.getByKey(varName) !== null && (this.m_level === oFF.VdOrcaLevel.CHART || this.m_level === oFF.VdOrcaLevel.TABLE) && oFF.VdOrcaEntryPoint.variableIsUsedInDynamicFilter(variable) && oFF.VdImportExport.useDynamicFilterForVariable(variable))
		{
			this.m_widgetValues.put(varName, orcaFilterValues.getByKey(varName));
		}
		else if (dynamicFilterValues.getByKey(varName) !== null && (this.m_level === oFF.VdOrcaLevel.CHART || this.m_level === oFF.VdOrcaLevel.TABLE) && oFF.VdOrcaEntryPoint.variableIsUsedInDynamicFilter(variable))
		{
			var dynamicFilterValue = dynamicFilterValues.getByKey(varName);
			this.updateValuesSupplements(dynamicFilterValue, this.m_storyValues.getByKey(varName), this.m_widgetValues.getByKey(varName));
			this.m_widgetValues.put(varName, dynamicFilterValue);
		}
		else
		{
			this.updateWidgetVariableValues(varName, processorValuesByVariable);
		}
	}
};
oFF.VdOrcaEntryPoint.prototype.updateWidgetVariableValues = function(varName, processorValues)
{
	if (this.m_widgetValues.getByKey(varName) === null)
	{
		var storyValues = this.m_storyValues.getByKey(varName);
		if (oFF.notNull(storyValues))
		{
			this.m_widgetValues.put(varName, storyValues);
		}
		else if (oFF.notNull(processorValues))
		{
			this.m_storyValues.put(varName, processorValues);
			this.m_widgetValues.put(varName, processorValues);
		}
	}
};
oFF.VdOrcaEntryPoint.prototype.addDimensionDisplayInfoToConfig = function(config, variables)
{
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		if (variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			var dimName = variable.getDimension().getName();
			var isHana = oFF.notNull(this.m_params.queryManager) && this.m_params.queryManager.getSystemType().isTypeOf(oFF.SystemType.HANA);
			var defaultDisplayInfo = isHana ? oFF.FdDimensionDisplayInfo.DESCRIPTION : oFF.FdDimensionDisplayInfo.QUERY_DEFAULT;
			config.addDimensionDisplayInfo(dimName, oFF.VdOrcaValueParser.mapOrcaDisplayInfo(dimName, this.m_params.dimensionDisplayInfo, defaultDisplayInfo));
		}
	}
};
oFF.VdOrcaEntryPoint.prototype.updateValuesSupplements = function(filterValues, storyValues, widgetValues)
{
	for (var i = 0; i < filterValues.size(); i++)
	{
		var value = filterValues.get(i);
		this.updateValueSupplements(value, value.getFirstOperand(), oFF.VdValue.FIRST, storyValues, widgetValues);
		this.updateValueSupplements(value, value.getSecondOperand(), oFF.VdValue.SECOND, storyValues, widgetValues);
	}
};
oFF.VdOrcaEntryPoint.prototype.updateValueSupplements = function(filterValue, operand, operandIndex, storyValues, widgetValues)
{
	var key = operand.getKey();
	if (oFF.notNull(key) && !operand.hasDisplayKey() && operand.getText() === null)
	{
		var item = this.getItemWithSupplementsByKey(widgetValues, key);
		if (oFF.isNull(item))
		{
			item = this.getItemWithSupplementsByKey(storyValues, key);
		}
		if (oFF.notNull(item))
		{
			filterValue.setOperand(operandIndex, item);
		}
	}
};
oFF.VdOrcaEntryPoint.prototype.getItemWithSupplementsByKey = function(values, key)
{
	if (oFF.notNull(values))
	{
		for (var i = 0; i < values.size(); i++)
		{
			var value = values.get(i);
			if (this.isOperandWithKeyAndSupplements(value.getFirstOperand(), key))
			{
				return value.getFirstOperand();
			}
			if (this.isOperandWithKeyAndSupplements(value.getSecondOperand(), key))
			{
				return value.getSecondOperand();
			}
		}
	}
	return null;
};
oFF.VdOrcaEntryPoint.prototype.isOperandWithKeyAndSupplements = function(operand, key)
{
	return oFF.notNull(operand) && oFF.XString.isEqual(key, operand.getKey()) && (operand.getDisplayKey() !== null || operand.getText() !== null);
};
oFF.VdOrcaEntryPoint.prototype.submit = function()
{
	this.m_vdController.attemptSubmit();
};
oFF.VdOrcaEntryPoint.prototype.getVariableProcessorInternal = function()
{
	if (oFF.notNull(this.m_params.varProcessor))
	{
		return this.m_params.varProcessor;
	}
	return this.getAnalyticVariableProcessor();
};
oFF.VdOrcaEntryPoint.prototype.getAnalyticVariableProcessor = function()
{
	if (oFF.notNull(this.m_params.analyticVarProcessor))
	{
		return this.m_params.analyticVarProcessor;
	}
	return this.m_params.queryManager;
};
oFF.VdOrcaEntryPoint.prototype.hasDynamicVariables = function()
{
	return this.m_vdController.hasDynamicVariables();
};
oFF.VdOrcaEntryPoint.prototype.getStartValues = function()
{
	if (this.getUseWidgetInitialValue())
	{
		return this.m_widgetValues;
	}
	return this.m_storyValues;
};
oFF.VdOrcaEntryPoint.prototype.getUseWidgetInitialValue = function()
{
	return this.m_level === oFF.VdOrcaLevel.EXPLORER || (!!this.m_params.isWidget || !!this.m_params.presetVariablesSelected) && oFF.XCollectionUtils.hasElements(this.m_params.preSetVariables);
};
oFF.VdOrcaEntryPoint.prototype.getTitle = function()
{
	if (this.m_scenario === oFF.VdOrcaScenario.PLANNING_SEQUENCE)
	{
		return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_PS);
	}
	else if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_title) && this.m_scenario !== oFF.VdOrcaScenario.LINKED_VARIABLE)
	{
		return oFF.XStringUtils.concatenate3(this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES_FOR), " ", this.m_title);
	}
	return this.m_i18n.getText(oFF.VariableDialogI18n.I18N_VD_SET_VARIABLES);
};
oFF.VdOrcaEntryPoint.prototype.onBeforeSubmit = function(values, valuesJson)
{
	if (oFF.notNull(this.m_params.queryManager))
	{
		var isHana = this.m_params.queryManager.getSystemType().isTypeOf(oFF.SystemType.HANA);
		var dataSource = this.m_params.queryManager.getDataSource();
		var disablingExitVariables = isHana ? this.m_uiHelper.isDisablingDynamicVariables() : this.m_uiHelper.isDisablingExitVariables();
		oFF.XStream.of(this.getVariableProcessor().getOlapEnv().getAllAreaQueryManager()).filter( function(qm1){
			return qm1.getDataSource().isEqualTo(dataSource);
		}.bind(this)).forEach( function(qm2){
			qm2.setUseSavedPromptsForExitVariables(disablingExitVariables);
		}.bind(this));
	}
	this.getSubmitListener().onBeforeSubmit(values, valuesJson);
};

oFF.OrcaLinkVarValueHelpIntersect = function() {};
oFF.OrcaLinkVarValueHelpIntersect.prototype = new oFF.OrcaLinkVarValueHelpAbstract();
oFF.OrcaLinkVarValueHelpIntersect.prototype._ff_c = "OrcaLinkVarValueHelpIntersect";

oFF.OrcaLinkVarValueHelpIntersect.createLink = function(mainVariable, linkedVariables)
{
	var obj = new oFF.OrcaLinkVarValueHelpIntersect();
	obj.setupLink(mainVariable, linkedVariables);
	return obj;
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.configureValueHelp = function(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill)
{
	if (dimension !== this.m_valueRequestObject.getDimension())
	{
		this.configureValueHelpInternal(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill, false);
	}
	else
	{
		this.configureValueHelpInternal(dimension, readMode, startPage, endPage, pageSize, fields, defaultDrill, true);
	}
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.processFetchItems = function(items, fields, listener, customIdentifier)
{
	oFF.OrcaLinkVarValueHelpAbstract.prototype.processFetchItems.call( this , items, fields, listener, customIdentifier);
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.getRequestedFields = function(dimension)
{
	return oFF.XCollectionUtils.singletonList(dimension.getDisplayKeyField());
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.joinNodes = function(main, linked, isSearch)
{
	var result = oFF.XCollectionUtils.createListCopy(main);
	linked.sortByComparator(this);
	var linkedNodes = oFF.XList.create();
	for (var i = main.size() - 1; i >= 0; i--)
	{
		var mainNode = main.get(i);
		var mainKeyValue = this.getMergeKeyValue(mainNode);
		for (var j = 0; j < linked.size(); j++)
		{
			if (j >= linkedNodes.size())
			{
				linkedNodes.add(this.createMap(linked.get(j)));
			}
			var linkNode = linkedNodes.get(j).getByKey(mainKeyValue);
			if (oFF.isNull(linkNode))
			{
				result.removeAt(i);
				this.removeNodeFromTree(mainNode);
				if (!isSearch)
				{
					this.m_nodeRepo.remove(mainKeyValue);
				}
				break;
			}
			this.getRepoMapping(mainKeyValue).add(linkNode);
		}
	}
	return result;
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.removeNodeFromTree = function(mainNode)
{
	if (mainNode.hasChildren())
	{
		var children = mainNode.getChildren();
		for (var i = 0; i < children.size(); i++)
		{
			children.get(0).setParentNode(null);
		}
	}
	var parentNode = mainNode.getParentNode();
	if (oFF.notNull(parentNode))
	{
		parentNode.removeChildNode(mainNode);
	}
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.createMap = function(nodes)
{
	var result = oFF.XHashMapByString.create();
	var size = nodes.size();
	for (var i = 0; i < size; i++)
	{
		var node = nodes.get(i);
		var key = this.getMergeKeyValue(node);
		result.put(key, node);
	}
	return result;
};
oFF.OrcaLinkVarValueHelpIntersect.prototype.compare = function(o1, o2)
{
	return o1.size() - o2.size();
};

oFF.OrcaLinkVarValueHelpUnion = function() {};
oFF.OrcaLinkVarValueHelpUnion.prototype = new oFF.OrcaLinkVarValueHelpAbstract();
oFF.OrcaLinkVarValueHelpUnion.prototype._ff_c = "OrcaLinkVarValueHelpUnion";

oFF.OrcaLinkVarValueHelpUnion.createLink = function(mainVariable, linkedVariables)
{
	var obj = new oFF.OrcaLinkVarValueHelpUnion();
	obj.setupLink(mainVariable, linkedVariables);
	return obj;
};
oFF.OrcaLinkVarValueHelpUnion.prototype.getRequestedFields = function(dimension)
{
	return null;
};
oFF.OrcaLinkVarValueHelpUnion.prototype.joinNodes = function(main, linked, isSearch)
{
	if (isSearch)
	{
		return this.unionSearch(main, linked);
	}
	return this.union(main, linked);
};
oFF.OrcaLinkVarValueHelpUnion.prototype.union = function(main, linked)
{
	var unionMap = oFF.XLinkedHashMapByString.create();
	for (var i = 0; i < main.size(); i++)
	{
		var node1 = main.get(i);
		unionMap.put(this.getMergeKeyValue(node1), node1);
	}
	for (var i1 = 0; i1 < linked.size(); i1++)
	{
		var linkNodes = linked.get(i1);
		var size = linkNodes.size();
		for (var j = 0; j < size; j++)
		{
			var node = linkNodes.get(j);
			var keyValue = this.getMergeKeyValue(node);
			if (!unionMap.containsKey(keyValue))
			{
				unionMap.put(keyValue, node);
				this.getRepoMapping(keyValue).add(node);
			}
		}
	}
	var result = unionMap.getValuesAsReadOnlyList();
	result.sortByComparator(oFF.OlapUiValueHelpNodeComparator.create(this.isHierarchicalValueHelp()));
	return result;
};
oFF.OrcaLinkVarValueHelpUnion.prototype.unionSearch = function(main, linked)
{
	var unionMap = oFF.XLinkedHashMapByString.create();
	var maxSize = main.size();
	for (var i = 0; i < linked.size(); i++)
	{
		var size = linked.size();
		if (size > maxSize)
		{
			maxSize = size;
		}
	}
	for (var i1 = 0; i1 < maxSize; i1++)
	{
		if (i1 < main.size())
		{
			var mainNode = main.get(i1);
			unionMap.put(this.getMergeKeyValue(mainNode), mainNode);
			continue;
		}
		for (var j = 0; j < linked.size(); j++)
		{
			var linkNodes = linked.get(j);
			if (i1 < linkNodes.size())
			{
				var linkNode = linkNodes.get(i1);
				var linkedKeyValue = this.getMergeKeyValue(linkNode);
				unionMap.put(linkedKeyValue, linkNode);
				this.getRepoMapping(linkedKeyValue).add(linkNode);
			}
		}
	}
	return unionMap.getValuesAsReadOnlyList();
};

oFF.COuObject = function() {};
oFF.COuObject.prototype = new oFF.XConstant();
oFF.COuObject.prototype._ff_c = "COuObject";

oFF.COuObject.staticSetupObject = function()
{
	oFF.COuConditionObject.staticSetupConditionObject();
};

oFF.COuDialogButtons = function() {};
oFF.COuDialogButtons.prototype = new oFF.XConstant();
oFF.COuDialogButtons.prototype._ff_c = "COuDialogButtons";

oFF.COuDialogButtons.OK = null;
oFF.COuDialogButtons.CANCEL = null;
oFF.COuDialogButtons.staticSetupButtons = function()
{
	oFF.COuDialogButtons.OK = oFF.COuDialogButtons.create("OK");
	oFF.COuDialogButtons.CANCEL = oFF.COuDialogButtons.create("Cancel");
};
oFF.COuDialogButtons.create = function(name)
{
	return oFF.XConstant.setupName(new oFF.COuDialogButtons(), name);
};

oFF.COuDialogConstants = function() {};
oFF.COuDialogConstants.prototype = new oFF.XConstant();
oFF.COuDialogConstants.prototype._ff_c = "COuDialogConstants";

oFF.COuDialogConstants.UIE_ID_DIALOG_CONTENT = "DialogContent";
oFF.COuDialogConstants.UIE_ID_MESSAGE_LOG = "MessageLog";
oFF.COuDialogConstants.UIE_ID_MESSAGES_TOOLBAR = "MessagesToolbar";
oFF.COuDialogConstants.UIE_ID_CLEAR_MESSAGES = "ClearMessages";
oFF.COuDialogConstants.UIE_ID_MESSAGES = "Messages";
oFF.COuDialogConstants.UIE_ID_MESSAGE = "Message";
oFF.COuDialogConstants.UIE_ID_MESSAGE_SEVERITY = "MessageSeverity";
oFF.COuDialogConstants.UIE_ID_MESSAGE_MESSAGE = "MessageText";

oFF.OuEnvironment = function() {};
oFF.OuEnvironment.prototype = new oFF.XObject();
oFF.OuEnvironment.prototype._ff_c = "OuEnvironment";

oFF.OuEnvironment.sCreateEnvironment = function()
{
	var loInstance;
	loInstance = new oFF.OuEnvironment();
	loInstance.setup();
	return loInstance;
};
oFF.OuEnvironment.sCreateEnvironmentUsingProvider = function(oProvider)
{
	var loInstance = new oFF.OuEnvironment();
	loInstance.setup();
	loInstance.m_oProvider = oProvider;
	return loInstance;
};
oFF.OuEnvironment.prototype.m_oProvider = null;
oFF.OuEnvironment.prototype.m_oProperties = null;
oFF.OuEnvironment.prototype.m_oApplication = null;
oFF.OuEnvironment.prototype.m_oLocalization = null;
oFF.OuEnvironment.prototype.m_oGenesis = null;
oFF.OuEnvironment.prototype.m_oUiContext = null;
oFF.OuEnvironment.prototype.m_oDisplayHandler = null;
oFF.OuEnvironment.prototype.setup = function()
{
	oFF.XObject.prototype.setup.call( this );
};
oFF.OuEnvironment.prototype.createModel = function(oModel, oSourceProperties)
{
	var ltSourceProperties = oFF.OuProperties.sCreateProperties();
	ltSourceProperties.setProperties(this.getProperties().getPropertiesOfType(oFF.COuPropertyType.SOURCE));
	ltSourceProperties.setProperties(oSourceProperties.getProperties());
	return oFF.OuModel.sCreateModel(oModel, this, oSourceProperties);
};
oFF.OuEnvironment.prototype.createView = function(oView, oModel)
{
	return this.createRenderingObject(oFF.COuEntryPointType.VIEW, oView, oModel);
};
oFF.OuEnvironment.prototype.createDialog = function(oDialog, oModel)
{
	return this.createRenderingObject(oFF.COuEntryPointType.DIALOG, oDialog, oModel);
};
oFF.OuEnvironment.prototype.createRenderingObject = function(entryPointType, oRenderingObject, oModel)
{
	var ltProperties = oFF.OuProperties.sCreateProperties();
	ltProperties.setProperties(this.getProperties().getProperties());
	ltProperties.setProperty(oFF.COuPropertyRenderingObject.MODEL, oModel);
	var loEntryPoint = oFF.OuEntryPoint.sCreateEntryPoint(new oFF.OuEntryPoint(), entryPointType, this.getApplication(), this.m_oProvider, oRenderingObject);
	return loEntryPoint.open(ltProperties);
};
oFF.OuEnvironment.prototype.setProperties = function(oProperties)
{
	this.m_oProperties = oProperties;
};
oFF.OuEnvironment.prototype.getProperties = function()
{
	var loProperties = oFF.OuProperties.sCreateProperties();
	if (oFF.notNull(this.m_oProperties))
	{
		loProperties = this.m_oProperties;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loProperties = this.m_oProvider.provideProperties();
	}
	return loProperties;
};
oFF.OuEnvironment.prototype.setLocalization = function(oLocalization)
{
	this.m_oLocalization = oLocalization;
};
oFF.OuEnvironment.prototype.getLocalization = function()
{
	var loLocalization = null;
	if (oFF.notNull(this.m_oLocalization))
	{
		loLocalization = this.m_oLocalization;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loLocalization = this.m_oProvider.provideLocalization();
	}
	return loLocalization;
};
oFF.OuEnvironment.prototype.setGenesis = function(oGenesis)
{
	this.m_oGenesis = oGenesis;
};
oFF.OuEnvironment.prototype.getGenesis = function()
{
	var loGenesis = null;
	if (oFF.notNull(this.m_oGenesis))
	{
		loGenesis = this.m_oGenesis;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loGenesis = this.m_oProvider.provideGenesis();
	}
	return loGenesis;
};
oFF.OuEnvironment.prototype.setApplication = function(oApplication)
{
	this.m_oApplication = oApplication;
};
oFF.OuEnvironment.prototype.getApplication = function()
{
	var loApplication = null;
	if (oFF.notNull(this.m_oApplication))
	{
		loApplication = this.m_oApplication;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loApplication = this.m_oProvider.provideApplication();
	}
	return loApplication;
};
oFF.OuEnvironment.prototype.setUiContext = function(oUiContext)
{
	this.m_oUiContext = oUiContext;
};
oFF.OuEnvironment.prototype.getUiContext = function()
{
	var loContext = null;
	if (oFF.notNull(this.m_oUiContext))
	{
		loContext = this.m_oUiContext;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loContext = this.m_oProvider.provideUiContext();
	}
	return loContext;
};
oFF.OuEnvironment.prototype.setDisplayHandler = function(oDisplayHandler)
{
	this.m_oDisplayHandler = oDisplayHandler;
};
oFF.OuEnvironment.prototype.getDisplayHandler = function()
{
	var loDisplayHandler = null;
	if (oFF.notNull(this.m_oDisplayHandler))
	{
		loDisplayHandler = this.m_oDisplayHandler;
	}
	else if (oFF.notNull(this.m_oProvider))
	{
		loDisplayHandler = this.m_oProvider.provideDisplayHandler();
	}
	return loDisplayHandler;
};
oFF.OuEnvironment.prototype.provideProperties = function()
{
	return this.getProperties();
};
oFF.OuEnvironment.prototype.provideLocalization = function()
{
	return this.getLocalization();
};
oFF.OuEnvironment.prototype.provideGenesis = function()
{
	return this.getGenesis();
};
oFF.OuEnvironment.prototype.provideApplication = function()
{
	return this.getApplication();
};
oFF.OuEnvironment.prototype.provideUiContext = function()
{
	return this.getUiContext();
};
oFF.OuEnvironment.prototype.provideDisplayHandler = function()
{
	return this.getDisplayHandler();
};
oFF.OuEnvironment.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_oProvider = null;
	this.m_oProperties = null;
	this.m_oApplication = null;
	this.m_oLocalization = null;
	this.m_oGenesis = null;
	this.m_oUiContext = null;
	this.m_oDisplayHandler = null;
};

oFF.COuEntryPointType = function() {};
oFF.COuEntryPointType.prototype = new oFF.XConstant();
oFF.COuEntryPointType.prototype._ff_c = "COuEntryPointType";

oFF.COuEntryPointType.DIALOG = null;
oFF.COuEntryPointType.VIEW = null;
oFF.COuEntryPointType.staticSetupEvent = function()
{
	oFF.COuEntryPointType.DIALOG = oFF.COuEntryPointType.create("Dialog");
	oFF.COuEntryPointType.VIEW = oFF.COuEntryPointType.create("View");
};
oFF.COuEntryPointType.create = function(name)
{
	return oFF.XConstant.setupName(new oFF.COuEntryPointType(), name);
};

oFF.OuModelACondition = function() {};
oFF.OuModelACondition.prototype = new oFF.OuModelAQuery();
oFF.OuModelACondition.prototype._ff_c = "OuModelACondition";

oFF.OuModelACondition.SOURCE_QUERY_CONDITION = null;
oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME = null;
oFF.OuModelACondition.staticSetupQueryCondition = function()
{
	oFF.OuModelACondition.SOURCE_QUERY_CONDITION = oFF.COuPropertySource.sCreateSourceProperty("QueryCondition");
	oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME = oFF.COuPropertySource.sCreateSourceProperty("QueryConditionName");
};
oFF.OuModelACondition.prototype.handleSetSourceProperties = function(oSourceProperties)
{
	oFF.OuModelAQuery.prototype.handleSetSourceProperties.call( this , oSourceProperties);
	var loName;
	var loQueryModel = this.getSourceQuery().getInternalObject();
	var lConditionName = null;
	loName = this.getSourceProperties().getProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME);
	if (oFF.notNull(loName))
	{
		lConditionName = loName.toString();
	}
	var loQueryCondition = oSourceProperties.getProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION);
	if (oFF.notNull(loQueryCondition))
	{
		lConditionName = loQueryCondition.getName();
		loQueryModel = loQueryCondition.getQueryModel();
	}
	this.getSourceProperties().setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, loQueryModel);
	this.getSourceProperties().setProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME, oFF.XStringValue.create(lConditionName));
};
oFF.OuModelACondition.prototype.getSourceCondition = function()
{
	var loCondition;
	var lName = null;
	var loName = this.getSourceProperties().getProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME);
	if (oFF.notNull(loName))
	{
		lName = loName.toString();
	}
	var loQuery = this.getSourceQuery();
	loCondition = loQuery.getCondition(lName);
	if (oFF.isNull(loCondition))
	{
		loCondition = oFF.OuSourceCondition.sCreateCondition(this.getSourceQuery(), null);
	}
	return loCondition;
};
oFF.OuModelACondition.prototype.getName = function()
{
	var lName = null;
	var loCondition = this.getSourceCondition();
	if (oFF.notNull(loCondition))
	{
		lName = loCondition.getName();
	}
	return lName;
};
oFF.OuModelACondition.prototype.releaseObject = function()
{
	oFF.OuModelAQuery.prototype.releaseObject.call( this );
};

oFF.OuModelADimension = function() {};
oFF.OuModelADimension.prototype = new oFF.OuModelAQuery();
oFF.OuModelADimension.prototype._ff_c = "OuModelADimension";

oFF.OuModelADimension.SOURCE_QUERY_DIMENSION = null;
oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME = null;
oFF.OuModelADimension.staticSetupQueryDimension = function()
{
	oFF.OuModelADimension.SOURCE_QUERY_DIMENSION = oFF.COuPropertySource.sCreateSourceProperty("QueryDimension");
	oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME = oFF.COuPropertySource.sCreateSourceProperty("QueryDimensionName");
};
oFF.OuModelADimension.prototype.handleSetSourceProperties = function(oSourceProperties)
{
	oFF.OuModelAQuery.prototype.handleSetSourceProperties.call( this , oSourceProperties);
	var loName;
	var loQueryModel = this.getSourceQuery().getInternalObject();
	var lDimensionName = null;
	loName = oSourceProperties.getProperty(oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME);
	if (oFF.notNull(loName))
	{
		lDimensionName = loName.toString();
	}
	var loQueryDimension = oSourceProperties.getProperty(oFF.OuModelADimension.SOURCE_QUERY_DIMENSION);
	if (oFF.notNull(loQueryDimension))
	{
		lDimensionName = loQueryDimension.getName();
		loQueryModel = loQueryDimension.getQueryModel();
	}
	this.getSourceProperties().setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, loQueryModel);
	this.getSourceProperties().setProperty(oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME, oFF.XStringValue.create(lDimensionName));
};
oFF.OuModelADimension.prototype.getSourceDimension = function()
{
	var loDimension;
	var lName = null;
	var loName = this.getSourceProperties().getProperty(oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME);
	if (oFF.notNull(loName))
	{
		lName = loName.toString();
	}
	var loQuery = this.getSourceQuery();
	loDimension = loQuery.getDimension(lName);
	if (oFF.isNull(loDimension))
	{
		loDimension = oFF.OuSourceDimension.sCreateDimension(this.getSourceQuery(), null);
	}
	return loDimension;
};
oFF.OuModelADimension.prototype.getName = function()
{
	var lName = null;
	var loDimension = this.getSourceDimension();
	if (oFF.notNull(loDimension))
	{
		lName = loDimension.getName();
	}
	return lName;
};
oFF.OuModelADimension.prototype.releaseObject = function()
{
	oFF.OuModelAQuery.prototype.releaseObject.call( this );
};

oFF.COuProperty = function() {};
oFF.COuProperty.prototype = new oFF.XConstant();
oFF.COuProperty.prototype._ff_c = "COuProperty";

oFF.COuProperty.s_tInstances = null;
oFF.COuProperty.staticSetupProperty = function() {};
oFF.COuProperty.prototype.m_oType = null;
oFF.COuProperty.prototype.setupProperty = function(oType, name)
{
	oFF.XConstant.setupName(this, name);
	this.m_oType = oType;
	if (oFF.isNull(this.m_oType))
	{
		this.m_oType = oFF.COuPropertyType.DEFAULT;
	}
	if (oFF.isNull(oFF.COuProperty.s_tInstances))
	{
		oFF.COuProperty.s_tInstances = oFF.XSimpleMap.create();
	}
	var ltProperties = oFF.COuProperty.s_tInstances.getByKey(this.m_oType);
	if (oFF.isNull(ltProperties))
	{
		ltProperties = oFF.XList.create();
		oFF.COuProperty.s_tInstances.put(this.m_oType, ltProperties);
	}
	if (!ltProperties.contains(this))
	{
		ltProperties.add(this);
	}
};
oFF.COuProperty.prototype.getType = function()
{
	return this.m_oType;
};

oFF.COuPropertyType = function() {};
oFF.COuPropertyType.prototype = new oFF.XConstant();
oFF.COuPropertyType.prototype._ff_c = "COuPropertyType";

oFF.COuPropertyType.DEFAULT = null;
oFF.COuPropertyType.RENDERING_OBJECT = null;
oFF.COuPropertyType.MODEL = null;
oFF.COuPropertyType.SOURCE = null;
oFF.COuPropertyType.staticSetupPropertyType = function()
{
	oFF.COuPropertyType.DEFAULT = oFF.COuPropertyType.sCreatePropertyType("Default");
	oFF.COuPropertyType.RENDERING_OBJECT = oFF.COuPropertyType.sCreatePropertyType("RenderingObject");
	oFF.COuPropertyType.MODEL = oFF.COuPropertyType.sCreatePropertyType("Model");
	oFF.COuPropertyType.SOURCE = oFF.COuPropertyType.sCreatePropertyType("Source");
};
oFF.COuPropertyType.sCreatePropertyType = function(name)
{
	var loInstance = new oFF.COuPropertyType();
	return oFF.XConstant.setupName(loInstance, name);
};

oFF.COuEvent = function() {};
oFF.COuEvent.prototype = new oFF.XConstant();
oFF.COuEvent.prototype._ff_c = "COuEvent";

oFF.COuEvent.ON_PRESS = null;
oFF.COuEvent.ON_CLICK = null;
oFF.COuEvent.ON_SELECT = null;
oFF.COuEvent.ON_SELECTION_CHANGE = null;
oFF.COuEvent.ON_ENTER = null;
oFF.COuEvent.ON_CHANGE = null;
oFF.COuEvent.ON_EDITING_END = null;
oFF.COuEvent.staticSetupEvent = function()
{
	oFF.COuEvent.ON_PRESS = oFF.COuEvent.create("OnPress");
	oFF.COuEvent.ON_CLICK = oFF.COuEvent.create("OnClick");
	oFF.COuEvent.ON_SELECT = oFF.COuEvent.create("OnSelect");
	oFF.COuEvent.ON_SELECTION_CHANGE = oFF.COuEvent.create("OnSelectionChange");
	oFF.COuEvent.ON_ENTER = oFF.COuEvent.create("OnEnter");
	oFF.COuEvent.ON_CHANGE = oFF.COuEvent.create("OnChange");
	oFF.COuEvent.ON_EDITING_END = oFF.COuEvent.create("OnEditingEnd");
};
oFF.COuEvent.create = function(name)
{
	return oFF.XConstant.setupName(new oFF.COuEvent(), name);
};

oFF.OuLocalizationMessagesConditions = function() {};
oFF.OuLocalizationMessagesConditions.prototype = new oFF.OuLocalizationMessages();
oFF.OuLocalizationMessagesConditions.prototype._ff_c = "OuLocalizationMessagesConditions";

oFF.OuLocalizationMessagesConditions.I18N_CONDITION_CANNOT_SAVE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_NAME = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_DESCRIPTION = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_EVALUATION_TYPE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_CANNOT_SAVE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_MEASURE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_OPERATOR = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_LOW_VALUE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_HIGH_VALUE = null;
oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_LOW_GT_HIGH_VALUE = null;
oFF.OuLocalizationMessagesConditions.staticSetupConditionsMessages = function()
{
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_CANNOT_SAVE = oFF.OuLocalization.createLocalization("I18N_CONDITION_CANNOT_SAVE", "Condition cannot be saved.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_NAME = oFF.OuLocalization.createLocalization("I18N_CONDITION_MISSING_NAME", "Please provide a Name for the Condition.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_DESCRIPTION = oFF.OuLocalization.createLocalization("I18N_CONDITION_MISSING_DESCRIPTION", "Please provide a Description for the Condition.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_EVALUATION_TYPE = oFF.OuLocalization.createLocalization("I18N_CONDITION_MISSING_EVALUATION_TYPE", "Please provide a valid Characteristic Assignment.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_CANNOT_SAVE = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_CANNOT_SAVE", "Condition Threshold cannot be saved.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_MEASURE = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_MISSING_MEASURE", "Please provide a Key Figure.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_OPERATOR = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_MISSING_OPERATOR", "Please provide a valid Operator.");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_LOW_VALUE = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_MISSING_LOW_VALUE", "Please provide a Value for Lower Limit");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_HIGH_VALUE = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_MISSING_HIGH_VALUE", "Please provide a Value for Upper Limit");
	oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_LOW_GT_HIGH_VALUE = oFF.OuLocalization.createLocalization("I18N_CONDITION_THRESHOLD_LOW_GT_HIGH_VALUE", "Value for Lower Limit {0} is greater than Value for Upper Limit {0}.");
};

oFF.OuLocalizationTextsConditions = function() {};
oFF.OuLocalizationTextsConditions.prototype = new oFF.OuLocalizationTexts();
oFF.OuLocalizationTextsConditions.prototype._ff_c = "OuLocalizationTextsConditions";

oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITIONS = null;
oFF.OuLocalizationTextsConditions.I18N_CONDITIONS = null;
oFF.OuLocalizationTextsConditions.I18N_NO_CONDITIONS = null;
oFF.OuLocalizationTextsConditions.I18N_CREATE_CONDITION = null;
oFF.OuLocalizationTextsConditions.I18N_CHANGE_CONDITION = null;
oFF.OuLocalizationTextsConditions.I18N_DELETE_CONDITION = null;
oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITION = null;
oFF.OuLocalizationTextsConditions.I18N_CONDITION = null;
oFF.OuLocalizationTextsConditions.I18N_GENERAL = null;
oFF.OuLocalizationTextsConditions.I18N_CONDITION_DESCRIPTION = null;
oFF.OuLocalizationTextsConditions.I18N_CONDITION_ACTIVE = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_ALL = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_ROWS = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_COLS = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_INDIVIDUAL = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSIONS = null;
oFF.OuLocalizationTextsConditions.I18N_NO_EVALUATION_DIMENSIONS = null;
oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSION = null;
oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLDS = null;
oFF.OuLocalizationTextsConditions.I18N_THRESHOLDS = null;
oFF.OuLocalizationTextsConditions.I18N_NO_THRESHOLDS = null;
oFF.OuLocalizationTextsConditions.I18N_CREATE_THRESHOLD = null;
oFF.OuLocalizationTextsConditions.I18N_CHANGE_THRESHOLD = null;
oFF.OuLocalizationTextsConditions.I18N_DELETE_THRESHOLD = null;
oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLD = null;
oFF.OuLocalizationTextsConditions.I18N_THRESHOLD = null;
oFF.OuLocalizationTextsConditions.I18N_KEY_FIGURE = null;
oFF.OuLocalizationTextsConditions.I18N_VALUE = null;
oFF.OuLocalizationTextsConditions.I18N_LOW_VALUE = null;
oFF.OuLocalizationTextsConditions.I18N_HIGH_VALUE = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_EQUAL = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_EQUAL = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_THAN = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_THAN = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_EQUAL = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_EQUAL = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BETWEEN = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_BETWEEN = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_N = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_N = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_PERCENT = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_PERCENT = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_SUM = null;
oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_SUM = null;
oFF.OuLocalizationTextsConditions.staticSetupConditionsTexts = function()
{
	oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITIONS = oFF.OuLocalization.createLocalization("I18N_DEFINE_CONDITIONS", "Define Conditions");
	oFF.OuLocalizationTextsConditions.I18N_CONDITIONS = oFF.OuLocalization.createLocalization("I18N_CONDITIONS", "Conditions");
	oFF.OuLocalizationTextsConditions.I18N_NO_CONDITIONS = oFF.OuLocalization.createLocalization("I18N_NO_CONDITIONS", "No Conditions available");
	oFF.OuLocalizationTextsConditions.I18N_CREATE_CONDITION = oFF.OuLocalization.createLocalization("I18N_CREATE_CONDITION", "Create Condition");
	oFF.OuLocalizationTextsConditions.I18N_CHANGE_CONDITION = oFF.OuLocalization.createLocalization("I18N_CHANGE_CONDITION", "Change Condition");
	oFF.OuLocalizationTextsConditions.I18N_DELETE_CONDITION = oFF.OuLocalization.createLocalization("I18N_DELETE_CONDITION", "Delete Condition");
	oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITION = oFF.OuLocalization.createLocalization("I18N_DEFINE_CONDITION", "Define Condition");
	oFF.OuLocalizationTextsConditions.I18N_CONDITION = oFF.OuLocalization.createLocalization("I18N_CONDITION", "Condition");
	oFF.OuLocalizationTextsConditions.I18N_GENERAL = oFF.OuLocalization.createLocalization("I18N_GENERAL", "General");
	oFF.OuLocalizationTextsConditions.I18N_CONDITION_ACTIVE = oFF.OuLocalization.createLocalization("I18N_CONDITION_ACTIVE", "Active");
	oFF.OuLocalizationTextsConditions.I18N_CONDITION_DESCRIPTION = oFF.OuLocalization.createLocalization("I18N_CONDITION_DESCRIPTION", "Description");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE = oFF.OuLocalization.createLocalization("I18N_EVALUATION_TYPE", "Characteristic Assignment");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_ALL = oFF.OuLocalization.createLocalization("I18N_EVALUATION_TYPE_ALL", "All Characteristics in the DrillDown Independently");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_ROWS = oFF.OuLocalization.createLocalization("I18N_EVALUATION_TYPE_MOST_DETAILED_ON_ROWS", "Most Detailed Characteristic Along the Rows");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_COLS = oFF.OuLocalization.createLocalization("I18N_EVALUATION_TYPE_MOST_DETAILED_ON_COLS", "Most Detailed Characteristic Along the Columns");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_INDIVIDUAL = oFF.OuLocalization.createLocalization("I18N_EVALUATION_TYPE_INDIVIDUAL", "Individual Characteristic and Characteristic Combinations");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSIONS = oFF.OuLocalization.createLocalization("18N_EVALUATION_DIMENSIONS", "Evaluation Dimensions");
	oFF.OuLocalizationTextsConditions.I18N_NO_EVALUATION_DIMENSIONS = oFF.OuLocalization.createLocalization("I18N_NO_EVALUATION_DIMENSIONS", "No Evaluation Dimensions available");
	oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSION = oFF.OuLocalization.createLocalization("I18N_EVALUATION_DIMENSION", "Evaluation Dimension");
	oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLDS = oFF.OuLocalization.createLocalization("I18N_DEFINE_THRESHOLDS", "Define Thresholds");
	oFF.OuLocalizationTextsConditions.I18N_THRESHOLDS = oFF.OuLocalization.createLocalization("I18N_THRESHOLDS", "Thresholds");
	oFF.OuLocalizationTextsConditions.I18N_NO_THRESHOLDS = oFF.OuLocalization.createLocalization("I18N_NO_THRESHOLDS", "No Thresholds available");
	oFF.OuLocalizationTextsConditions.I18N_CREATE_THRESHOLD = oFF.OuLocalization.createLocalization("I18N_CREATE_THRESHOLD", "Create Threshold");
	oFF.OuLocalizationTextsConditions.I18N_CHANGE_THRESHOLD = oFF.OuLocalization.createLocalization("I18N_CHANGE_THRESHOLD", "Change Threshold");
	oFF.OuLocalizationTextsConditions.I18N_DELETE_THRESHOLD = oFF.OuLocalization.createLocalization("I18N_DELETE_THRESHOLD", "Delete Threshold");
	oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLD = oFF.OuLocalization.createLocalization("I18N_DEFINE_THRESHOLD", "Define Threshold");
	oFF.OuLocalizationTextsConditions.I18N_THRESHOLD = oFF.OuLocalization.createLocalization("I18N_THRESHOLD", "Threshold");
	oFF.OuLocalizationTextsConditions.I18N_KEY_FIGURE = oFF.OuLocalization.createLocalization("I18N_KEY_FIGURE", "Key Figure");
	oFF.OuLocalizationTextsConditions.I18N_VALUE = oFF.OuLocalization.createLocalization("I18N_VALUE", "Value");
	oFF.OuLocalizationTextsConditions.I18N_LOW_VALUE = oFF.OuLocalization.createLocalization("I18N_LOW_VALUE", "Low Value");
	oFF.OuLocalizationTextsConditions.I18N_HIGH_VALUE = oFF.OuLocalization.createLocalization("I18N_HIGH_VALUE", "High Value");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR = oFF.OuLocalization.createLocalization("I18N_OPERATOR", "Operator");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_EQUAL = oFF.OuLocalization.createLocalization("I18N_OPERATOR_EQUAL", "Equal");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_EQUAL = oFF.OuLocalization.createLocalization("I18N_OPERATOR_NOT_EQUAL", "Not Equal");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_THAN = oFF.OuLocalization.createLocalization("I18N_OPERATOR_GREATER_THAN", "Greater Than");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_THAN = oFF.OuLocalization.createLocalization("I18N_OPERATOR_LESS_THAN", "Less Than");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_EQUAL = oFF.OuLocalization.createLocalization("I18N_OPERATOR_GREATER_EQUAL", "Greater Equal");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_EQUAL = oFF.OuLocalization.createLocalization("I18N_OPERATOR_LESS_EQUAL", "Less Equal");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BETWEEN = oFF.OuLocalization.createLocalization("I18N_OPERATOR_BETWEEN", "Between");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_BETWEEN = oFF.OuLocalization.createLocalization("I18N_OPERATOR_NOT_BETWEEN", "Not Between");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_N = oFF.OuLocalization.createLocalization("I18N_OPERATOR_TOP_N", "Top N");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_N = oFF.OuLocalization.createLocalization("I18N_OPERATOR_BOTTOM_N", "Bottom N");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_PERCENT = oFF.OuLocalization.createLocalization("I18N_OPERATOR_TOP_PERCENT", "Top Percent");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_PERCENT = oFF.OuLocalization.createLocalization("I18N_OPERATOR_BOTTOM_PERCENT", "Bottom Percent");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_SUM = oFF.OuLocalization.createLocalization("I18N_OPERATOR_TOP_SUM", "Top Sum");
	oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_SUM = oFF.OuLocalization.createLocalization("I18N_OPERATOR_BOTTOM_SUM", "Bottom Sum");
};

oFF.OuModelConditions = function() {};
oFF.OuModelConditions.prototype = new oFF.OuModelAQuery();
oFF.OuModelConditions.prototype._ff_c = "OuModelConditions";

oFF.OuModelConditions.PROPERTY_CONDITIONS = null;
oFF.OuModelConditions.staticSetupConditions = function()
{
	oFF.OuModelConditions.PROPERTY_CONDITIONS = oFF.COuPropertyModel.sCreateModelProperty("Conditions");
};
oFF.OuModelConditions.prototype.m_oConditions = null;
oFF.OuModelConditions.prototype.handleSetModelProperties = function()
{
	var loSourceQuery = this.getSourceQuery();
	var loModelProperties = this.getModelProperties();
	this.m_oConditions = oFF.OuModelPropertyModelList.sCreateModelPropertyModelList(this, oFF.OuModelConditions.PROPERTY_CONDITIONS);
	loModelProperties.setProperty(oFF.OuModelConditions.PROPERTY_CONDITIONS, this.m_oConditions);
	var ltSourceConditions = loSourceQuery.getConditions();
	var loSourceConditionIterator = ltSourceConditions.getIterator();
	while (loSourceConditionIterator.hasNext())
	{
		var loSourceCondition = loSourceConditionIterator.next();
		if (oFF.isNull(loSourceCondition))
		{
			continue;
		}
		var loCondition = this.createCondition(loSourceCondition.getName());
		this.addCondition(loCondition);
	}
};
oFF.OuModelConditions.prototype.getConditions = function()
{
	return this.m_oConditions.getAll();
};
oFF.OuModelConditions.prototype.getCondition = function(name)
{
	return this.m_oConditions.get(name);
};
oFF.OuModelConditions.prototype.clearConditions = function()
{
	this.m_oConditions.clear();
};
oFF.OuModelConditions.prototype.addCondition = function(oCondition)
{
	this.m_oConditions.add(oCondition);
};
oFF.OuModelConditions.prototype.removeCondition = function(oCondition)
{
	this.m_oConditions.remove(oCondition);
};
oFF.OuModelConditions.prototype.createCondition = function(conditionName)
{
	var loSourceProperties = this.getSourceProperties().clone();
	loSourceProperties.setProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME, oFF.XStringValue.create(conditionName));
	var loCondition = this.getEnvironment().createModel(new oFF.OuModelCondition(), loSourceProperties);
	return loCondition;
};
oFF.OuModelConditions.prototype.getSelections = function()
{
	var ltSelectedConditions = oFF.XList.create();
	var ltConditions = this.getConditions();
	var loConditionIterator = ltConditions.getIterator();
	while (loConditionIterator.hasNext())
	{
		var loCondition = loConditionIterator.next();
		if (oFF.isNull(loCondition))
		{
			continue;
		}
		if (loCondition.isSelected())
		{
			ltSelectedConditions.add(loCondition);
		}
	}
	return ltSelectedConditions;
};
oFF.OuModelConditions.prototype.clearSelections = function()
{
	var ltConditions = this.getConditions();
	var loConditionIterator = ltConditions.getIterator();
	while (loConditionIterator.hasNext())
	{
		var loCondition = loConditionIterator.next();
		if (oFF.isNull(loCondition))
		{
			continue;
		}
		loCondition.setSelected(false);
	}
};
oFF.OuModelConditions.prototype.isItemSelected = function(oSelectedItem)
{
	return oSelectedItem.isSelected();
};
oFF.OuModelConditions.prototype.selectItem = function(oSelectedItem)
{
	var ltConditions = this.getConditions();
	var loConditionIterator = ltConditions.getIterator();
	while (loConditionIterator.hasNext())
	{
		var loCondition = loConditionIterator.next();
		if (oFF.isNull(loCondition))
		{
			continue;
		}
		if (loCondition === oSelectedItem)
		{
			loCondition.setSelected(true);
		}
	}
};
oFF.OuModelConditions.prototype.handleValidate = function()
{
	var ltConditions = this.getConditions();
	var loConditionIterator = ltConditions.getIterator();
	while (loConditionIterator.hasNext())
	{
		var loCondition = loConditionIterator.next();
		if (oFF.isNull(loCondition))
		{
			continue;
		}
		loCondition.validate();
	}
};
oFF.OuModelConditions.prototype.handleSubmit = function()
{
	var loSourceQuery = this.getSourceQuery();
	loSourceQuery.clearConditions();
	var ltConditions = this.getConditions();
	var loConditionIterator = ltConditions.getIterator();
	var lConditionIndex = 0;
	while (loConditionIterator.hasNext())
	{
		var loCondition = loConditionIterator.next();
		if (oFF.isNull(loCondition))
		{
			continue;
		}
		lConditionIndex = lConditionIndex + 1;
		var lConditionName = oFF.XStringUtils.concatenate2("CONDITION_", oFF.XInteger.convertToString(lConditionIndex));
		var loSourceCondition = loSourceQuery.createCondition(lConditionName);
		if (oFF.notNull(loSourceCondition))
		{
			loCondition.getSourceProperties().setProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION, loSourceCondition.getInternalObject());
			loCondition.submit();
		}
	}
};
oFF.OuModelConditions.prototype.releaseObject = function()
{
	oFF.OuModelAQuery.prototype.releaseObject.call( this );
	this.m_oConditions = oFF.XObjectExt.release(this.m_oConditions);
};

oFF.DdDisplayAs = function() {};
oFF.DdDisplayAs.prototype = new oFF.XConstant();
oFF.DdDisplayAs.prototype._ff_c = "DdDisplayAs";

oFF.DdDisplayAs.NO_DISPLAY = null;
oFF.DdDisplayAs.KEY_AND_TEXT = null;
oFF.DdDisplayAs.TEXT = null;
oFF.DdDisplayAs.KEY = null;
oFF.DdDisplayAs.TEXT_AND_KEY = null;
oFF.DdDisplayAs.DISPLAY = null;
oFF.DdDisplayAs.staticSetup = function()
{
	oFF.DdDisplayAs.NO_DISPLAY = oFF.DdDisplayAs.create("NoDisplay", false, false);
	oFF.DdDisplayAs.KEY_AND_TEXT = oFF.DdDisplayAs.create("KeyAndText", true, true);
	oFF.DdDisplayAs.TEXT = oFF.DdDisplayAs.create("Text", false, true);
	oFF.DdDisplayAs.KEY = oFF.DdDisplayAs.create("Key", true, false);
	oFF.DdDisplayAs.TEXT_AND_KEY = oFF.DdDisplayAs.create("Text and Key", true, true);
	oFF.DdDisplayAs.DISPLAY = oFF.DdDisplayAs.create("Display", false, false);
};
oFF.DdDisplayAs.create = function(name, key, text)
{
	var object = oFF.XConstant.setupName(new oFF.DdDisplayAs(), name);
	object.m_key = key;
	object.m_text = text;
	return object;
};
oFF.DdDisplayAs.prototype.m_key = false;
oFF.DdDisplayAs.prototype.m_text = false;
oFF.DdDisplayAs.prototype.isKey = function()
{
	return this.m_key;
};
oFF.DdDisplayAs.prototype.isText = function()
{
	return this.m_text;
};

oFF.FdContentType = function() {};
oFF.FdContentType.prototype = new oFF.XConstant();
oFF.FdContentType.prototype._ff_c = "FdContentType";

oFF.FdContentType.VARIABLE_VALUE_HELP = null;
oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP = null;
oFF.FdContentType.HIERARCHY_CATALOG = null;
oFF.FdContentType.MEASURE_BASED_FILTER = null;
oFF.FdContentType.CUSTOM_LIST = null;
oFF.FdContentType.staticSetup = function()
{
	oFF.FdContentType.VARIABLE_VALUE_HELP = oFF.XConstant.setupName(new oFF.FdContentType(), "VariableValueHelp");
	oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP = oFF.XConstant.setupName(new oFF.FdContentType(), "DimensionMemberValueHelp");
	oFF.FdContentType.HIERARCHY_CATALOG = oFF.XConstant.setupName(new oFF.FdContentType(), "HierarchyCatalog");
	oFF.FdContentType.MEASURE_BASED_FILTER = oFF.XConstant.setupName(new oFF.FdContentType(), "MeasureBasedFilter");
	oFF.FdContentType.CUSTOM_LIST = oFF.XConstant.setupName(new oFF.FdContentType(), "CustomList");
};
oFF.FdContentType.prototype.isValueHelp = function()
{
	return this.isVariableValueHelp() || this.isDimensionMemberValueHelp();
};
oFF.FdContentType.prototype.isVariableValueHelp = function()
{
	return this.isEqualTo(oFF.FdContentType.VARIABLE_VALUE_HELP);
};
oFF.FdContentType.prototype.isDimensionMemberValueHelp = function()
{
	return this.isEqualTo(oFF.FdContentType.DIMENSION_MEMBER_VALUE_HELP);
};
oFF.FdContentType.prototype.isHierarchyCatalog = function()
{
	return this.isEqualTo(oFF.FdContentType.HIERARCHY_CATALOG);
};
oFF.FdContentType.prototype.isMeasureBasedFilter = function()
{
	return this.isEqualTo(oFF.FdContentType.MEASURE_BASED_FILTER);
};
oFF.FdContentType.prototype.isBackendDriven = function()
{
	return this.isValueHelp() || this.isHierarchyCatalog();
};

oFF.FdDimensionDisplayInfo = function() {};
oFF.FdDimensionDisplayInfo.prototype = new oFF.XConstant();
oFF.FdDimensionDisplayInfo.prototype._ff_c = "FdDimensionDisplayInfo";

oFF.FdDimensionDisplayInfo.ID = null;
oFF.FdDimensionDisplayInfo.DESCRIPTION = null;
oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION = null;
oFF.FdDimensionDisplayInfo.QUERY_DEFAULT = null;
oFF.FdDimensionDisplayInfo.staticSetup = function()
{
	oFF.FdDimensionDisplayInfo.ID = oFF.XConstant.setupName(new oFF.FdDimensionDisplayInfo(), "id");
	oFF.FdDimensionDisplayInfo.DESCRIPTION = oFF.XConstant.setupName(new oFF.FdDimensionDisplayInfo(), "description");
	oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION = oFF.XConstant.setupName(new oFF.FdDimensionDisplayInfo(), "idAndDescription");
	oFF.FdDimensionDisplayInfo.QUERY_DEFAULT = oFF.XConstant.setupName(new oFF.FdDimensionDisplayInfo(), "queryDefault");
};
oFF.FdDimensionDisplayInfo.prototype.showId = function()
{
	return this === oFF.FdDimensionDisplayInfo.ID || this === oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION;
};
oFF.FdDimensionDisplayInfo.prototype.showDescription = function()
{
	return this === oFF.FdDimensionDisplayInfo.DESCRIPTION || this === oFF.FdDimensionDisplayInfo.ID_AND_DESCRIPTION;
};

oFF.FdFilterType = function() {};
oFF.FdFilterType.prototype = new oFF.XConstant();
oFF.FdFilterType.prototype._ff_c = "FdFilterType";

oFF.FdFilterType.s_allTypes = null;
oFF.FdFilterType.LIST = null;
oFF.FdFilterType.RANGE = null;
oFF.FdFilterType.MEASURE_BASED_FILTER = null;
oFF.FdFilterType.FUNCTIONAL_VALUES = null;
oFF.FdFilterType.staticSetup = function()
{
	oFF.FdFilterType.s_allTypes = oFF.XHashMapByString.create();
	oFF.FdFilterType.LIST = oFF.FdFilterType.setupFilterType("List");
	oFF.FdFilterType.RANGE = oFF.FdFilterType.setupFilterType("Range");
	oFF.FdFilterType.MEASURE_BASED_FILTER = oFF.FdFilterType.setupFilterType("MeasureBasedFilter");
	oFF.FdFilterType.FUNCTIONAL_VALUES = oFF.FdFilterType.setupFilterType("FunctionalValues");
};
oFF.FdFilterType.setupFilterType = function(name)
{
	var filterType = oFF.XConstant.setupName(new oFF.FdFilterType(), name);
	oFF.FdFilterType.s_allTypes.put(name, filterType);
	return filterType;
};
oFF.FdFilterType.getByName = function(name)
{
	return oFF.FdFilterType.s_allTypes.getByKey(name);
};
oFF.FdFilterType.getAllFilterTypes = function()
{
	return oFF.FdFilterType.s_allTypes.getValuesAsReadOnlyList();
};
oFF.FdFilterType.prototype.isSupportedByDim = function(dimension)
{
	if (oFF.notNull(dimension))
	{
		if (this === oFF.FdFilterType.LIST)
		{
			return true;
		}
		if (this === oFF.FdFilterType.RANGE)
		{
			var valueType = dimension.getKeyField().getValueType();
			return valueType.isNumber() || (valueType.isDateBased() && !dimension.isUserManaged() && !dimension.isTimeConfigEnablePattern() && oFF.FdConfiguration.BETA_FEATURES_ENABLED);
		}
		if (this === oFF.FdFilterType.MEASURE_BASED_FILTER)
		{
			return dimension.isStructure() && dimension.getQueryModel().getModelCapabilities().supportsFilterMeasureBased();
		}
		if (this === oFF.FdFilterType.FUNCTIONAL_VALUES)
		{
			return dimension.getModelCapabilities().supportsFunctionalValueHelp();
		}
	}
	return false;
};

oFF.FdComparisonOperator = function() {};
oFF.FdComparisonOperator.prototype = new oFF.XConstant();
oFF.FdComparisonOperator.prototype._ff_c = "FdComparisonOperator";

oFF.FdComparisonOperator.s_allOperators = null;
oFF.FdComparisonOperator.EQUAL = null;
oFF.FdComparisonOperator.NOT_EQUAL = null;
oFF.FdComparisonOperator.GREATER_THAN = null;
oFF.FdComparisonOperator.GREATER_EQUAL = null;
oFF.FdComparisonOperator.LESS_THAN = null;
oFF.FdComparisonOperator.LESS_EQUAL = null;
oFF.FdComparisonOperator.BETWEEN = null;
oFF.FdComparisonOperator.NOT_BETWEEN = null;
oFF.FdComparisonOperator.s_lookup = null;
oFF.FdComparisonOperator.staticSetup = function()
{
	oFF.FdComparisonOperator.s_lookup = oFF.XHashMapByString.create();
	oFF.FdComparisonOperator.EQUAL = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.EQUAL, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_EQUAL, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_EQUAL, "=");
	oFF.FdComparisonOperator.NOT_EQUAL = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.NOT_EQUAL, false, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_EQUAL, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_EQUAL, "\u2260");
	oFF.FdComparisonOperator.GREATER_THAN = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.GREATER_THAN, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER, ">");
	oFF.FdComparisonOperator.GREATER_EQUAL = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.GREATER_EQUAL, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_GREATER_EQUAL, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_GREATER_EQUAL, ">=");
	oFF.FdComparisonOperator.LESS_THAN = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.LESS_THAN, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS, "<");
	oFF.FdComparisonOperator.LESS_EQUAL = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.LESS_EQUAL, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_LESS_EQUAL, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_LESS_EQUAL, "<=");
	oFF.FdComparisonOperator.BETWEEN = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.BETWEEN, true, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_BETWEEN, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_BETWEEN, "[ ]");
	oFF.FdComparisonOperator.NOT_BETWEEN = oFF.FdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.NOT_BETWEEN, false, oFF.FilterDialogI18n.I18N_FD_COMPARISON_OPERATOR_NOT_BETWEEN, oFF.FilterDialogI18n.I18N_FD_RANGES_HEADER_OPERATOR_NOT_BETWEEN, "![ ]");
	oFF.FdComparisonOperator.s_allOperators = oFF.XList.create();
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.BETWEEN);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.NOT_BETWEEN);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.GREATER_THAN);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.GREATER_EQUAL);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.LESS_THAN);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.LESS_EQUAL);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.EQUAL);
	oFF.FdComparisonOperator.s_allOperators.add(oFF.FdComparisonOperator.NOT_EQUAL);
};
oFF.FdComparisonOperator.createComparisonOperator = function(originComparisonOperator, isIncluding, i18nKeyDescription, i18nKeyRangeDescription, sign)
{
	var newConstant = new oFF.FdComparisonOperator();
	newConstant._setupInternal(originComparisonOperator.getName());
	newConstant.m_originComparisonOperator = originComparisonOperator;
	newConstant.m_including = isIncluding;
	newConstant.m_i18nKeyDescription = i18nKeyDescription;
	newConstant.m_i18nKeyRangeDescription = i18nKeyRangeDescription;
	newConstant.m_sign = sign;
	oFF.FdComparisonOperator.s_lookup.put(originComparisonOperator.getName(), newConstant);
	return newConstant;
};
oFF.FdComparisonOperator.lookup = function(name)
{
	return oFF.FdComparisonOperator.s_lookup.getByKey(name);
};
oFF.FdComparisonOperator.getAllOperators = function(withExcludingOperators, withEqualOperators)
{
	if (withExcludingOperators && withEqualOperators)
	{
		return oFF.FdComparisonOperator.s_allOperators.createListCopy();
	}
	return oFF.XCollectionUtils.filter(oFF.FdComparisonOperator.s_allOperators,  function(operator){
		return (withExcludingOperators || operator.isIncluding()) && (withEqualOperators || (operator !== oFF.FdComparisonOperator.EQUAL && operator !== oFF.FdComparisonOperator.NOT_EQUAL));
	}.bind(this));
};
oFF.FdComparisonOperator.getByFormulaOperator = function(formulaOperatorName)
{
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.AND.getName()))
	{
		return oFF.FdComparisonOperator.BETWEEN;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.OR.getName()))
	{
		return oFF.FdComparisonOperator.NOT_BETWEEN;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.GT.getName()))
	{
		return oFF.FdComparisonOperator.GREATER_THAN;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.GE.getName()))
	{
		return oFF.FdComparisonOperator.GREATER_EQUAL;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.LT.getName()))
	{
		return oFF.FdComparisonOperator.LESS_THAN;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.LE.getName()))
	{
		return oFF.FdComparisonOperator.LESS_EQUAL;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.EQ.getName()))
	{
		return oFF.FdComparisonOperator.EQUAL;
	}
	if (oFF.XString.isEqual(formulaOperatorName, oFF.FormulaOperator.NE.getName()))
	{
		return oFF.FdComparisonOperator.NOT_EQUAL;
	}
	return null;
};
oFF.FdComparisonOperator.prototype.m_originComparisonOperator = null;
oFF.FdComparisonOperator.prototype.m_including = false;
oFF.FdComparisonOperator.prototype.m_i18nKeyDescription = null;
oFF.FdComparisonOperator.prototype.m_i18nKeyRangeDescription = null;
oFF.FdComparisonOperator.prototype.m_sign = null;
oFF.FdComparisonOperator.prototype.isIncluding = function()
{
	return this.m_including;
};
oFF.FdComparisonOperator.prototype.getLongText = function(i18n)
{
	return i18n.getText(this.m_i18nKeyDescription);
};
oFF.FdComparisonOperator.prototype.getRangeText = function(i18n, low, high)
{
	if (this.getOriginOperator().getNumberOfParameters() < 2)
	{
		return i18n.getTextWithPlaceholder(this.m_i18nKeyRangeDescription, oFF.notNull(low) ? low : "");
	}
	return i18n.getTextWithPlaceholder2(this.m_i18nKeyRangeDescription, oFF.notNull(low) ? low : "", oFF.notNull(high) ? high : "");
};
oFF.FdComparisonOperator.prototype.getSign = function()
{
	return this.m_sign;
};
oFF.FdComparisonOperator.prototype.getOriginOperator = function()
{
	return this.m_originComparisonOperator;
};
oFF.FdComparisonOperator.prototype.getFormulaOperator = function()
{
	if (this === oFF.FdComparisonOperator.BETWEEN)
	{
		return oFF.FormulaOperator.AND;
	}
	if (this === oFF.FdComparisonOperator.NOT_BETWEEN)
	{
		return oFF.FormulaOperator.OR;
	}
	if (this === oFF.FdComparisonOperator.GREATER_THAN)
	{
		return oFF.FormulaOperator.GT;
	}
	if (this === oFF.FdComparisonOperator.GREATER_EQUAL)
	{
		return oFF.FormulaOperator.GE;
	}
	if (this === oFF.FdComparisonOperator.LESS_THAN)
	{
		return oFF.FormulaOperator.LT;
	}
	if (this === oFF.FdComparisonOperator.LESS_EQUAL)
	{
		return oFF.FormulaOperator.LE;
	}
	if (this === oFF.FdComparisonOperator.NOT_EQUAL)
	{
		return oFF.FormulaOperator.NE;
	}
	return oFF.FormulaOperator.EQ;
};

oFF.FdDynamicDateRangeItem = function() {};
oFF.FdDynamicDateRangeItem.prototype = new oFF.FdAbstractDateRangeItem();
oFF.FdDynamicDateRangeItem.prototype._ff_c = "FdDynamicDateRangeItem";

oFF.FdDynamicDateRangeItem.create = function(dateRange)
{
	var item = new oFF.FdDynamicDateRangeItem();
	item.setupDynamicDateRange(dateRange);
	return item;
};
oFF.FdDynamicDateRangeItem.prototype.m_lookBack = 0;
oFF.FdDynamicDateRangeItem.prototype.m_lookAhead = 0;
oFF.FdDynamicDateRangeItem.prototype.m_offsetGranularity = null;
oFF.FdDynamicDateRangeItem.prototype.m_offset = 0;
oFF.FdDynamicDateRangeItem.prototype.m_upToCurrentPeriod = false;
oFF.FdDynamicDateRangeItem.prototype.setupDynamicDateRange = function(dateRange)
{
	if (oFF.notNull(dateRange))
	{
		this.setGranularity(dateRange.getGranularity());
		this.m_upToCurrentPeriod = dateRange.isUpToCurrentPeriod();
		var offset = dateRange.getOffset();
		if (oFF.notNull(offset))
		{
			this.m_offsetGranularity = offset.getFirstObject();
			this.m_offset = offset.getSecondObject().getInteger();
		}
		var lookBack = dateRange.getLookBack();
		if (oFF.notNull(lookBack) && lookBack.getFirstObject() === this.getGranularity())
		{
			this.m_lookBack = lookBack.getSecondObject().getInteger();
		}
		var lookAhead = dateRange.getLookAhead();
		if (oFF.notNull(lookAhead) && lookAhead.getFirstObject() === this.getGranularity())
		{
			this.m_lookAhead = lookAhead.getSecondObject().getInteger();
		}
	}
};
oFF.FdDynamicDateRangeItem.prototype.getType = function()
{
	return oFF.FdItemType.DATE_RANGE_DYNAMIC;
};
oFF.FdDynamicDateRangeItem.prototype.releaseObject = function()
{
	oFF.FdAbstractDateRangeItem.prototype.releaseObject.call( this );
	this.m_offsetGranularity = null;
};
oFF.FdDynamicDateRangeItem.prototype.getLookBack = function()
{
	return this.m_lookBack;
};
oFF.FdDynamicDateRangeItem.prototype.getLookAhead = function()
{
	return this.m_lookAhead;
};
oFF.FdDynamicDateRangeItem.prototype.getOffsetGranularity = function()
{
	return this.m_offsetGranularity;
};
oFF.FdDynamicDateRangeItem.prototype.getOffset = function()
{
	return this.m_offset;
};
oFF.FdDynamicDateRangeItem.prototype.isUpToCurrentPeriod = function()
{
	return this.m_upToCurrentPeriod;
};
oFF.FdDynamicDateRangeItem.prototype.setLookBack = function(lookBack)
{
	if (lookBack >= 0)
	{
		this.m_lookBack = lookBack;
	}
};
oFF.FdDynamicDateRangeItem.prototype.setLookAhead = function(lookAhead)
{
	if (!this.m_upToCurrentPeriod && lookAhead >= 0)
	{
		this.m_lookAhead = lookAhead;
	}
};
oFF.FdDynamicDateRangeItem.prototype.setOffsetGranularity = function(offsetGranularity)
{
	this.m_offsetGranularity = offsetGranularity;
};
oFF.FdDynamicDateRangeItem.prototype.setOffset = function(offset)
{
	this.m_offset = offset;
};
oFF.FdDynamicDateRangeItem.prototype.setUpToCurrentPeriod = function(upToCurrentPeriod)
{
	this.m_upToCurrentPeriod = upToCurrentPeriod;
	if (this.m_upToCurrentPeriod)
	{
		this.m_lookAhead = 0;
	}
};
oFF.FdDynamicDateRangeItem.prototype.getDateRange = function()
{
	var granularity = this.getGranularity();
	return oFF.XDateRange.create().withOffset(this.getOffsetGranularity(), this.getOffset()).withLookBack(granularity, this.getLookBack()).withLookAhead(granularity, this.getLookAhead()).withGranularity(granularity, this.isUpToCurrentPeriod());
};
oFF.FdDynamicDateRangeItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdAbstractDateRangeItem.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	return this.m_lookBack === otherItem.getLookBack() && this.m_lookAhead === otherItem.getLookAhead() && this.m_upToCurrentPeriod === otherItem.isUpToCurrentPeriod() && this.m_offsetGranularity === otherItem.getOffsetGranularity() && (oFF.isNull(this.m_offsetGranularity) || this.m_offset === otherItem.getOffset());
};
oFF.FdDynamicDateRangeItem.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.appendObject(this.getGranularity());
	if (!this.getGranularity().isCurrentDateUnit())
	{
		buffer.append(" [").appendInt(this.m_lookBack).append("/").appendInt(this.m_lookAhead).append("]");
	}
	if (oFF.notNull(this.m_offsetGranularity))
	{
		buffer.append(" [Offset: ").appendObject(this.m_offsetGranularity).append("/").appendInt(this.m_offset).append("]");
	}
	if (this.m_upToCurrentPeriod)
	{
		buffer.append(" [UpToCurrentPeriod]");
	}
	return buffer.toString();
};

oFF.FdFixedDateRangeItem = function() {};
oFF.FdFixedDateRangeItem.prototype = new oFF.FdAbstractDateRangeItem();
oFF.FdFixedDateRangeItem.prototype._ff_c = "FdFixedDateRangeItem";

oFF.FdFixedDateRangeItem.create = function(min, max, granularity)
{
	var item = new oFF.FdFixedDateRangeItem();
	item.setupFixedDateRangeItem(min, max, granularity);
	return item;
};
oFF.FdFixedDateRangeItem.prototype.m_yearFrom = 0;
oFF.FdFixedDateRangeItem.prototype.m_yearTo = 0;
oFF.FdFixedDateRangeItem.prototype.m_quarterFrom = 0;
oFF.FdFixedDateRangeItem.prototype.m_quarterTo = 0;
oFF.FdFixedDateRangeItem.prototype.m_monthFrom = 0;
oFF.FdFixedDateRangeItem.prototype.m_monthTo = 0;
oFF.FdFixedDateRangeItem.prototype.m_dateFrom = null;
oFF.FdFixedDateRangeItem.prototype.m_dateTo = null;
oFF.FdFixedDateRangeItem.prototype.setupFixedDateRangeItem = function(min, max, granularity)
{
	this.m_granularity = oFF.notNull(granularity) ? granularity : oFF.DateRangeGranularity.YEAR;
	if (oFF.notNull(min))
	{
		this.m_yearFrom = min.getYear();
		this.m_monthFrom = min.getMonthOfYear();
		this.m_quarterFrom = this.convertMonthToQuarter(this.m_monthFrom);
		this.m_dateFrom = min.toIsoFormat();
	}
	else
	{
		this.m_yearFrom = -1;
		this.m_quarterFrom = 1;
		this.m_monthFrom = 1;
	}
	if (oFF.notNull(max))
	{
		this.m_yearTo = max.getYear();
		this.m_monthTo = max.getMonthOfYear();
		this.m_quarterTo = this.convertMonthToQuarter(this.m_monthTo);
		this.m_dateTo = max.toIsoFormat();
	}
	else
	{
		this.m_yearTo = -1;
		this.m_quarterTo = 4;
		this.m_monthTo = 12;
	}
};
oFF.FdFixedDateRangeItem.prototype.convertMonthToQuarter = function(month)
{
	return month < 4 ? 1 : month < 7 ? 2 : month < 10 ? 3 : 4;
};
oFF.FdFixedDateRangeItem.prototype.convertQuarterToMonth = function(quarter)
{
	return quarter === 1 ? 1 : quarter === 2 ? 4 : quarter === 3 ? 7 : 10;
};
oFF.FdFixedDateRangeItem.prototype.releaseObject = function()
{
	oFF.FdAbstractDateRangeItem.prototype.releaseObject.call( this );
	this.m_dateFrom = null;
	this.m_dateTo = null;
};
oFF.FdFixedDateRangeItem.prototype.getType = function()
{
	return oFF.FdItemType.DATE_RANGE_FIXED;
};
oFF.FdFixedDateRangeItem.prototype.getYearFrom = function()
{
	return this.m_yearFrom;
};
oFF.FdFixedDateRangeItem.prototype.getYearTo = function()
{
	return this.m_yearTo;
};
oFF.FdFixedDateRangeItem.prototype.getQuarterFrom = function()
{
	return this.m_quarterFrom;
};
oFF.FdFixedDateRangeItem.prototype.getQuarterTo = function()
{
	return this.m_quarterTo;
};
oFF.FdFixedDateRangeItem.prototype.getMonthFrom = function()
{
	return this.m_monthFrom;
};
oFF.FdFixedDateRangeItem.prototype.getMonthTo = function()
{
	return this.m_monthTo;
};
oFF.FdFixedDateRangeItem.prototype.getDateFrom = function()
{
	return this.m_dateFrom;
};
oFF.FdFixedDateRangeItem.prototype.getDateTo = function()
{
	return this.m_dateTo;
};
oFF.FdFixedDateRangeItem.prototype.setYearFrom = function(yearFrom)
{
	this.m_yearFrom = yearFrom;
};
oFF.FdFixedDateRangeItem.prototype.setYearTo = function(yearTo)
{
	this.m_yearTo = yearTo;
};
oFF.FdFixedDateRangeItem.prototype.setQuarterFrom = function(quarterFrom)
{
	this.m_quarterFrom = quarterFrom;
};
oFF.FdFixedDateRangeItem.prototype.setQuarterTo = function(quarterTo)
{
	this.m_quarterTo = quarterTo;
};
oFF.FdFixedDateRangeItem.prototype.setMonthFrom = function(monthFrom)
{
	this.m_monthFrom = monthFrom;
};
oFF.FdFixedDateRangeItem.prototype.setMonthTo = function(monthTo)
{
	this.m_monthTo = monthTo;
};
oFF.FdFixedDateRangeItem.prototype.setDateFrom = function(dateFrom)
{
	this.m_dateFrom = dateFrom;
};
oFF.FdFixedDateRangeItem.prototype.setDateTo = function(dateTo)
{
	this.m_dateTo = dateTo;
};
oFF.FdFixedDateRangeItem.prototype.getDateRange = function()
{
	var granularity = this.getGranularity();
	var dateFrom = null;
	var dateTo = null;
	if (granularity.isYear() || granularity.isQuarter() || granularity.isMonth())
	{
		if (this.getYearFrom() !== -1)
		{
			var monthFrom = granularity.isMonth() ? this.getMonthFrom() : granularity.isQuarter() ? this.convertQuarterToMonth(this.getQuarterFrom()) : 1;
			dateFrom = oFF.XDate.createDateWithValues(this.getYearFrom(), monthFrom, 1);
		}
		if (this.getYearTo() !== -1)
		{
			var monthTo = granularity.isMonth() ? this.getMonthTo() : granularity.isQuarter() ? this.convertQuarterToMonth(this.getQuarterTo()) : 12;
			dateTo = oFF.XDate.createDateWithValues(this.m_yearTo, monthTo, oFF.XGregorianCalendar.create().getDaysInMonth(this.m_yearTo, monthTo));
		}
	}
	else if (granularity.isDay())
	{
		dateFrom = oFF.XString.isEqual(this.m_dateFrom, "-1") ? null : oFF.XDate.createDateSafe(this.m_dateFrom);
		dateTo = oFF.XString.isEqual(this.m_dateTo, "-1") ? null : oFF.XDate.createDateSafe(this.m_dateTo);
	}
	return oFF.XDateRange.create().withFixDates(dateFrom, dateTo).withGranularity(granularity, false);
};
oFF.FdFixedDateRangeItem.prototype.isEqualTo = function(other)
{
	if (!oFF.FdAbstractDateRangeItem.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherItem = other;
	if (this.m_granularity === oFF.DateRangeGranularity.YEAR)
	{
		return otherItem.getYearFrom() === this.getYearFrom() && otherItem.getYearTo() === this.getYearTo();
	}
	if (this.m_granularity === oFF.DateRangeGranularity.QUARTER)
	{
		return otherItem.getYearFrom() === this.getYearFrom() && otherItem.getYearTo() === this.getYearTo() && otherItem.getQuarterFrom() === this.getQuarterFrom() && otherItem.getQuarterTo() === this.getQuarterTo();
	}
	if (this.m_granularity === oFF.DateRangeGranularity.MONTH)
	{
		return otherItem.getYearFrom() === this.getYearFrom() && otherItem.getYearTo() === this.getYearTo() && otherItem.getMonthFrom() === this.getMonthFrom() && otherItem.getMonthTo() === this.getMonthTo();
	}
	if (this.m_granularity === oFF.DateRangeGranularity.DAY)
	{
		return oFF.XString.isEqual(otherItem.getDateFrom(), this.getDateFrom()) && oFF.XString.isEqual(otherItem.getDateTo(), this.getDateTo());
	}
	return false;
};
oFF.FdFixedDateRangeItem.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	var granularity = this.getGranularity();
	buffer.append("Granularity: ").appendObject(granularity);
	if (granularity.isYear())
	{
		buffer.append(" [").appendInt(this.m_yearFrom).append(" - ").appendInt(this.m_yearTo).append("]");
	}
	else if (granularity.isQuarter())
	{
		buffer.append(" [").appendInt(this.m_yearFrom).append("/").appendInt(this.m_quarterFrom).append(" - ").appendInt(this.m_yearTo).append("/").appendInt(this.m_quarterTo).append("]");
	}
	else if (granularity.isMonth())
	{
		buffer.append(" [").appendInt(this.m_yearFrom).append("/").appendInt(this.m_monthFrom).append(" - ").appendInt(this.m_yearTo).append("/").appendInt(this.m_monthTo).append("]");
	}
	else if (granularity.isDay())
	{
		buffer.append(" [").append(this.m_dateFrom).append(" - ").append(this.m_dateTo).append("]");
	}
	return buffer.toString();
};

oFF.FdItemType = function() {};
oFF.FdItemType.prototype = new oFF.XConstant();
oFF.FdItemType.prototype._ff_c = "FdItemType";

oFF.FdItemType.BASIC = null;
oFF.FdItemType.VALUEHELP = null;
oFF.FdItemType.RANGE = null;
oFF.FdItemType.DATE_RANGE_DYNAMIC = null;
oFF.FdItemType.DATE_RANGE_FIXED = null;
oFF.FdItemType.VALUEHELP_FUNCTION = null;
oFF.FdItemType.HIERARCHY_CATALOG = null;
oFF.FdItemType.staticSetup = function()
{
	oFF.FdItemType.BASIC = oFF.XConstant.setupName(new oFF.FdItemType(), "basic");
	oFF.FdItemType.VALUEHELP = oFF.XConstant.setupName(new oFF.FdItemType(), "valueHelp");
	oFF.FdItemType.RANGE = oFF.XConstant.setupName(new oFF.FdItemType(), "range");
	oFF.FdItemType.DATE_RANGE_DYNAMIC = oFF.XConstant.setupName(new oFF.FdItemType(), "dateRangeDynamic");
	oFF.FdItemType.DATE_RANGE_FIXED = oFF.XConstant.setupName(new oFF.FdItemType(), "dateRangeFixed");
	oFF.FdItemType.VALUEHELP_FUNCTION = oFF.XConstant.setupName(new oFF.FdItemType(), "valueHelpFunction");
	oFF.FdItemType.HIERARCHY_CATALOG = oFF.XConstant.setupName(new oFF.FdItemType(), "hierarchyCatalog");
};

oFF.FdFeature = function() {};
oFF.FdFeature.prototype = new oFF.XConstant();
oFF.FdFeature.prototype._ff_c = "FdFeature";

oFF.FdFeature.READ_MODE_SWITCH = null;
oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE = null;
oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT = null;
oFF.FdFeature.ALWAYS_SHOW_SELECTION_CONTAINER = null;
oFF.FdFeature.CLIPBOARD = null;
oFF.FdFeature.EXCLUDE = null;
oFF.FdFeature.EQUAL_IN_RANGE_VIEW = null;
oFF.FdFeature.HIERARCHY_CHANGE = null;
oFF.FdFeature.staticSetup = function()
{
	oFF.FdFeature.READ_MODE_SWITCH = oFF.XConstant.setupName(new oFF.FdFeature(), "ReadModeSwitch");
	oFF.FdFeature.READ_MODE_SWITCH_CHANGEABLE = oFF.XConstant.setupName(new oFF.FdFeature(), "ReadModeSwitchChangeable");
	oFF.FdFeature.READ_MODE_SWITCH_USE_DEFAULT = oFF.XConstant.setupName(new oFF.FdFeature(), "ReadModeSwitchUseDefault");
	oFF.FdFeature.ALWAYS_SHOW_SELECTION_CONTAINER = oFF.XConstant.setupName(new oFF.FdFeature(), "AlwaysShowSelectionContainer");
	oFF.FdFeature.CLIPBOARD = oFF.XConstant.setupName(new oFF.FdFeature(), "Clipboard");
	oFF.FdFeature.EXCLUDE = oFF.XConstant.setupName(new oFF.FdFeature(), "Exclude");
	oFF.FdFeature.EQUAL_IN_RANGE_VIEW = oFF.XConstant.setupName(new oFF.FdFeature(), "EqualInRangeView");
	oFF.FdFeature.HIERARCHY_CHANGE = oFF.XConstant.setupName(new oFF.FdFeature(), "HierarchyChange");
};

oFF.FdComponentDateRange = function() {};
oFF.FdComponentDateRange.prototype = new oFF.FdComponentAbstractRange();
oFF.FdComponentDateRange.prototype._ff_c = "FdComponentDateRange";

oFF.FdComponentDateRange.create = function(model, context, item)
{
	var component = new oFF.FdComponentDateRange();
	component.setupDateRange(model, context, item);
	return component;
};
oFF.FdComponentDateRange.prototype.m_rangeDataComponent = null;
oFF.FdComponentDateRange.prototype.m_genesis = null;
oFF.FdComponentDateRange.prototype.setupDateRange = function(model, context, item)
{
	this.setupComponent(model, context, oFF.FdLayoutDateRange.create(this, this));
	this.m_item = item;
	if (oFF.isNull(this.m_item))
	{
		this.m_item = this.createDateRangeItem(this.m_model.getRangeModel().getMin() !== null ? oFF.FdItemType.DATE_RANGE_FIXED : oFF.FdItemType.DATE_RANGE_DYNAMIC);
		this.m_model.addSelection(oFF.XCollectionUtils.singletonList(this.m_item));
	}
};
oFF.FdComponentDateRange.prototype.releaseObject = function()
{
	oFF.FdComponentAbstractRange.prototype.releaseObject.call( this );
	this.m_rangeDataComponent = oFF.XObjectExt.release(this.m_rangeDataComponent);
	this.m_genesis = null;
};
oFF.FdComponentDateRange.prototype.getDateRangeLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentDateRange.prototype.getItem = function()
{
	return this.m_rangeDataComponent.getItem();
};
oFF.FdComponentDateRange.prototype.buildOlapDialogUi = function(genesis)
{
	oFF.FdComponentAbstractRange.prototype.buildOlapDialogUi.call( this , genesis);
	this.m_genesis = genesis;
	this.getDateRangeLayout().setExcludeSwitchVisible(this.m_model.isFeatureEnabled(oFF.FdFeature.EXCLUDE), this.m_item.isExcluded());
	this.updateDataComponent(this.m_item);
};
oFF.FdComponentDateRange.prototype.createDateRangeItem = function(itemType)
{
	if (itemType === oFF.FdItemType.DATE_RANGE_FIXED)
	{
		var min = this.m_model.getRangeModel().getMin();
		var max = this.m_model.getRangeModel().getMax();
		return oFF.FdItemFactory.createDateRangeFixed(oFF.notNull(min) ? oFF.XDate.createDateWithValues(min.getYear(), 1, 1) : null, oFF.notNull(max) ? oFF.XDate.createDateWithValues(max.getYear(), 12, 31) : null, null);
	}
	return oFF.FdItemFactory.createDateRangeDynamic(null);
};
oFF.FdComponentDateRange.prototype.onSelectionChange = function(event)
{
	var itemType = event.getSelectedItem().getCustomObject();
	this.replaceItem(this.createDateRangeItem(itemType));
	this.updateDataComponent(this.m_item);
	this.updateRangeText();
};
oFF.FdComponentDateRange.prototype.updateDataComponent = function(item)
{
	var dataComponent = null;
	if (item.getType() === oFF.FdItemType.DATE_RANGE_FIXED)
	{
		dataComponent = oFF.FdComponentDateRangeFixed.create(this.m_model, this.m_context, item,  function(){
			this.updateRangeText();
		}.bind(this));
	}
	else if (item.getType() === oFF.FdItemType.DATE_RANGE_DYNAMIC)
	{
		dataComponent = oFF.FdComponentDateRangeDynamic.create(this.m_model, this.m_context, item,  function(){
			this.updateRangeText();
		}.bind(this));
	}
	if (oFF.notNull(dataComponent))
	{
		oFF.XObjectExt.release(this.m_rangeDataComponent);
		this.m_rangeDataComponent = dataComponent;
		this.m_rangeDataComponent.buildOlapDialogUi(this.m_genesis);
		this.getDateRangeLayout().setTypeLayout(this.m_rangeDataComponent.getLayout(), item.getType() === oFF.FdItemType.DATE_RANGE_FIXED);
	}
};
oFF.FdComponentDateRange.prototype.onChange = function(event)
{
	this.m_item.setExcluded(event.getControl().isOn());
};
oFF.FdComponentDateRange.prototype.isEmpty = function()
{
	return this.m_rangeDataComponent.isEmpty();
};
oFF.FdComponentDateRange.prototype.validate = function(showValidationMessages)
{
	return this.m_rangeDataComponent.validate(showValidationMessages);
};
oFF.FdComponentDateRange.prototype.focus = function()
{
	this.m_rangeDataComponent.focus();
};

oFF.FdComponentRange = function() {};
oFF.FdComponentRange.prototype = new oFF.FdComponentAbstractRange();
oFF.FdComponentRange.prototype._ff_c = "FdComponentRange";

oFF.FdComponentRange.create = function(model, context, item)
{
	var component = new oFF.FdComponentRange();
	component.setupComponent(model, context, oFF.FdLayoutRange.create());
	component.m_item = item;
	return component;
};
oFF.FdComponentRange.prototype.buildOlapDialogUi = function(genesis)
{
	oFF.FdComponentAbstractRange.prototype.buildOlapDialogUi.call( this , genesis);
	var rangeModel = this.m_model.getRangeModel();
	var supportedOperators = rangeModel.getSupportedComparisonOperators();
	var availableOperators = oFF.FdComparisonOperator.getAllOperators(this.m_model.isFeatureEnabled(oFF.FdFeature.EXCLUDE), this.m_model.isFeatureEnabled(oFF.FdFeature.EQUAL_IN_RANGE_VIEW));
	var operators = oFF.XCollectionUtils.filter(availableOperators,  function(operator){
		return supportedOperators.contains(operator);
	}.bind(this));
	if (oFF.isNull(this.m_item))
	{
		if (operators.contains(oFF.FdComparisonOperator.BETWEEN) || operators.contains(oFF.FdComparisonOperator.NOT_BETWEEN))
		{
			this.m_item = oFF.FdRangeItem.create(oFF.FdItemFactory.createEmpty(), oFF.FdItemFactory.createEmpty(), !operators.contains(oFF.FdComparisonOperator.BETWEEN));
		}
		else
		{
			this.m_item = oFF.FdItemFactory.createEmpty();
			this.m_item.setComparisonOperator(operators.hasElements() ? operators.get(0) : oFF.FdComparisonOperator.EQUAL);
		}
		this.m_model.addSelection(oFF.XCollectionUtils.singletonList(this.m_item));
	}
	if (!operators.contains(this.m_item.getComparisonOperator()))
	{
		operators.add(this.m_item.getComparisonOperator());
	}
	var layout = this.m_layout;
	var operatorDropdown = layout.getComparisonOperatorDropdown();
	operatorDropdown.clearItems();
	oFF.XCollectionUtils.forEach(operators,  function(op){
		oFF.FdLayoutUtils.addDropdownItem(operatorDropdown, op.getName(), op.getLongText(this.m_context.getI18n()), op);
	}.bind(this));
	operatorDropdown.setSelectedName(this.m_item.getComparisonOperator().getName());
	operatorDropdown.setTooltip(operatorDropdown.getSelectedItem().getText());
	operatorDropdown.registerOnSelect(this);
	oFF.XObjectExt.release(operators);
	layout.getInput1().registerOnEditingEnd(this);
	layout.getInput1().registerOnLiveChange(this);
	layout.getInput2().registerOnEditingEnd(this);
	layout.getInput2().registerOnLiveChange(this);
	this.updateFields(layout);
	this.validate(true);
};
oFF.FdComponentRange.prototype.updateFields = function(layout)
{
	var isValueTypeNumeric = this.isValueTypeNumeric();
	var isRangeItem = this.isRangeItem();
	layout.setInputVisibility(true, isValueTypeNumeric || this.m_item.getLow().getType() !== oFF.FdItemType.VALUEHELP, isRangeItem, isValueTypeNumeric || this.m_item.getHigh().getType() !== oFF.FdItemType.VALUEHELP);
	layout.setInputText(this.getItemText(this.m_item.getLow()), this.getPlaceholderLow(this.m_context.getI18n()), isRangeItem ? this.getItemText(this.m_item.getHigh()) : null, this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MAX));
};
oFF.FdComponentRange.prototype.getPlaceholderLow = function(i18n)
{
	var operator = this.m_item.getComparisonOperator();
	if (operator === oFF.FdComparisonOperator.LESS_THAN || operator === oFF.FdComparisonOperator.LESS_EQUAL)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MAX);
	}
	else if (operator === oFF.FdComparisonOperator.EQUAL)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_EQUAL);
	}
	else if (operator === oFF.FdComparisonOperator.NOT_EQUAL)
	{
		return i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_NOT_EQUAL);
	}
	return i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_PLACEHOLDER_MIN);
};
oFF.FdComponentRange.prototype.getRangeLayout = function()
{
	return this.m_layout;
};
oFF.FdComponentRange.prototype.isRangeItem = function()
{
	return this.m_item.getType() === oFF.FdItemType.RANGE;
};
oFF.FdComponentRange.prototype.isValueTypeNumeric = function()
{
	var inputValueType = this.m_model.getRangeModel().getInputValueType();
	return oFF.notNull(inputValueType) && inputValueType.isNumber();
};
oFF.FdComponentRange.prototype.formatValue = function(value)
{
	return this.isValueTypeNumeric() ? oFF.UiNumberFormatterCenter.getCenter().format(value) : value;
};
oFF.FdComponentRange.prototype.parseFormattedValue = function(value, defaultValue)
{
	var valueType = this.m_model.getRangeModel().getInputValueType();
	if (valueType.isNumber())
	{
		var formatted = oFF.UiNumberFormatterCenter.getCenter().parseFormattedNumber(value);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(formatted) && ((valueType !== oFF.XValueType.INTEGER && valueType !== oFF.XValueType.LONG && valueType !== oFF.XValueType.NUMC) || !oFF.XString.containsString(formatted, ".")))
		{
			return formatted;
		}
		return defaultValue;
	}
	return value;
};
oFF.FdComponentRange.prototype.getItemText = function(item)
{
	if (!this.isValueTypeNumeric())
	{
		var text = item.getText();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
		{
			return this.formatValue(text);
		}
	}
	var displayKey = item.getDisplayKey();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(displayKey))
	{
		return this.formatValue(displayKey);
	}
	return this.formatValue(item.getKey());
};
oFF.FdComponentRange.prototype.onLiveChange = function(event)
{
	this.onDataChanged();
};
oFF.FdComponentRange.prototype.onSelect = function(event)
{
	var layout = this.getRangeLayout();
	var comparisonOperatorDropdown = layout.getComparisonOperatorDropdown();
	var selectedItem = comparisonOperatorDropdown.getSelectedItem();
	comparisonOperatorDropdown.setTooltip(selectedItem.getText());
	var operator = selectedItem.getCustomObject();
	var isRangeOperator = operator === oFF.FdComparisonOperator.BETWEEN || operator === oFF.FdComparisonOperator.NOT_BETWEEN;
	if (isRangeOperator && !this.isRangeItem())
	{
		this.replaceItem(oFF.FdItemFactory.createRange(this.m_item, oFF.FdItemFactory.createEmpty(), operator === oFF.FdComparisonOperator.NOT_BETWEEN));
	}
	else if (!isRangeOperator && this.isRangeItem())
	{
		this.replaceItem(this.m_item.getLow());
	}
	this.m_item.setComparisonOperator(event.getControl().getSelectedItem().getCustomObject());
	layout.clearMessage();
	this.updateFields(layout);
	this.updateRangeText();
	this.focus();
	this.onDataChanged();
};
oFF.FdComponentRange.prototype.onEditingEnd = function(event)
{
	var layout = this.getRangeLayout();
	layout.clearMessage();
	var input1 = layout.getInput1();
	var input2 = layout.getInput2();
	var input = event.getControl();
	if (input === input1)
	{
		this.setInputTextToItem(input1, null);
		input1.setText(this.getItemText(this.m_item.getLow()));
	}
	if (input === input2)
	{
		this.setInputTextToItem(null, input2);
		input2.setText(this.getItemText(this.m_item.getHigh()));
	}
	this.updateRangeText();
	var input1Valid = false;
	if (oFF.XStringUtils.isNotNullAndNotEmpty(input1.getText()))
	{
		input1Valid = this.validateInput(input1, true);
	}
	if (this.isRangeItem() && oFF.XStringUtils.isNotNullAndNotEmpty(input2.getText()) && this.validateInput(input2, true) && input1Valid)
	{
		this.validateRange(true);
	}
};
oFF.FdComponentRange.prototype.setInputTextToItem = function(input1, input2)
{
	if (oFF.notNull(input1))
	{
		var text1 = input1.getText();
		var value1 = this.parseFormattedValue(text1, text1);
		var item1 = oFF.FdItemFactory.createItemByKey(value1, value1, null);
		if (this.isRangeItem())
		{
			if (!this.m_item.getLow().isEqualTo(item1))
			{
				this.m_item.setLow(item1);
			}
		}
		else
		{
			item1.setComparisonOperator(this.m_item.getComparisonOperator());
			if (!item1.isEqualTo(this.m_item))
			{
				this.replaceItem(item1);
			}
		}
	}
	if (oFF.notNull(input2) && this.isRangeItem())
	{
		var text2 = input2.getText();
		var value2 = this.parseFormattedValue(text2, text2);
		var item2 = oFF.FdItemFactory.createItemByKey(value2, value2, null);
		if (!this.m_item.getHigh().isEqualTo(item2))
		{
			this.m_item.setHigh(item2);
		}
	}
};
oFF.FdComponentRange.prototype.validate = function(showValidationMessages)
{
	var layout = this.getRangeLayout();
	if (showValidationMessages)
	{
		layout.clearMessage();
	}
	if (showValidationMessages && this.isEmpty())
	{
		return true;
	}
	var validationInput1 = this.validateInput(layout.getInput1(), showValidationMessages);
	var validationInput2 = !this.isRangeItem() || (this.validateInput(layout.getInput2(), showValidationMessages) && validationInput1 && this.validateRange(showValidationMessages));
	return validationInput1 && validationInput2;
};
oFF.FdComponentRange.prototype.isEmpty = function()
{
	var layout = this.getRangeLayout();
	return oFF.XStringUtils.isNullOrEmpty(layout.getInput1().getText()) && (!this.isRangeItem() || oFF.XStringUtils.isNullOrEmpty(layout.getInput2().getText()));
};
oFF.FdComponentRange.prototype.validateInput = function(input, showValidationMessages)
{
	if (oFF.XStringUtils.isNullOrEmpty(input.getText()))
	{
		return this.showMessage(this.isValueTypeNumeric() ? oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_NUMBER : oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_ENTER_VALUE, input, true, showValidationMessages);
	}
	if (this.isValueTypeNumeric())
	{
		var parsedNumber = this.parseFormattedValue(input.getText(), null);
		if (oFF.isNull(parsedNumber))
		{
			return this.showMessage(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_NOT_VALID, input, true, showValidationMessages);
		}
		var rangeModel = this.m_model.getRangeModel();
		var minValue = rangeModel.getMin();
		var maxValue = rangeModel.getMax();
		if (oFF.notNull(minValue) && oFF.notNull(maxValue) && showValidationMessages)
		{
			var number = oFF.XDouble.convertFromString(parsedNumber);
			var min = oFF.XDouble.convertFromString(minValue.getStringRepresentation());
			var max = oFF.XDouble.convertFromString(maxValue.getStringRepresentation());
			if (number < min || number > max)
			{
				return this.showMessage(oFF.FilterDialogI18n.I18N_FD_RANGES_WARN_VALUE_OUTSIDE_RANGE, input, false, true);
			}
		}
	}
	return true;
};
oFF.FdComponentRange.prototype.validateRange = function(showValidationMessages)
{
	if (this.isValueTypeNumeric())
	{
		var layout = this.getRangeLayout();
		var value1 = oFF.XDouble.convertFromString(this.parseFormattedValue(layout.getInput1().getText(), null));
		var value2 = oFF.XDouble.convertFromString(this.parseFormattedValue(layout.getInput2().getText(), null));
		if (value1 > value2)
		{
			return this.showMessage(oFF.FilterDialogI18n.I18N_FD_RANGES_ERROR_MIN_GREATER_MAX, null, true, showValidationMessages);
		}
	}
	return true;
};
oFF.FdComponentRange.prototype.showMessage = function(i18nKey, input, isError, showValidationMessages)
{
	if (showValidationMessages)
	{
		this.getRangeLayout().showMessage(this.m_context.getI18n().getText(i18nKey), input, isError);
	}
	return !isError;
};
oFF.FdComponentRange.prototype.focus = function()
{
	if (oFF.notNull(this.m_layout))
	{
		var input1 = this.getRangeLayout().getInput1();
		var input2 = this.getRangeLayout().getInput2();
		var input2VisibleAndEditable = input2.isVisible() && input2.isEditable();
		if (input2VisibleAndEditable && oFF.XStringUtils.isNotNullAndNotEmpty(input1.getText()) && oFF.XStringUtils.isNullOrEmpty(input2.getText()))
		{
			input2.focus();
		}
		else if (input1.isEditable())
		{
			input1.focus();
		}
		else if (input2VisibleAndEditable)
		{
			input2.focus();
		}
	}
};

oFF.FdLayoutSize = function() {};
oFF.FdLayoutSize.prototype = new oFF.XConstant();
oFF.FdLayoutSize.prototype._ff_c = "FdLayoutSize";

oFF.FdLayoutSize.MOBILE_SMALL = null;
oFF.FdLayoutSize.MOBILE_MEDIUM = null;
oFF.FdLayoutSize.DESKTOP_SMALL = null;
oFF.FdLayoutSize.DESKTOP_MEDIUM = null;
oFF.FdLayoutSize.DESKTOP_LARGE = null;
oFF.FdLayoutSize.staticSetup = function()
{
	oFF.FdLayoutSize.MOBILE_SMALL = oFF.FdLayoutSize.createLayoutSize("s", 0);
	oFF.FdLayoutSize.MOBILE_MEDIUM = oFF.FdLayoutSize.createLayoutSize("m", 700);
	oFF.FdLayoutSize.DESKTOP_SMALL = oFF.FdLayoutSize.createLayoutSize("s", 0);
	oFF.FdLayoutSize.DESKTOP_MEDIUM = oFF.FdLayoutSize.createLayoutSize("m", 710);
	oFF.FdLayoutSize.DESKTOP_LARGE = oFF.FdLayoutSize.createLayoutSize("l", 860);
};
oFF.FdLayoutSize.createLayoutSize = function(name, minWidth)
{
	var layoutSize = oFF.XConstant.setupName(new oFF.FdLayoutSize(), name);
	layoutSize.m_minWidth = minWidth;
	return layoutSize;
};
oFF.FdLayoutSize.get = function(deviceInfo, dialogWidth, selectionContainerVisible)
{
	var width = dialogWidth > 0 ? dialogWidth : oFF.FdLayoutSize.DESKTOP_LARGE.m_minWidth;
	if (!selectionContainerVisible)
	{
		width = width + 200;
	}
	if (deviceInfo.isMobile())
	{
		return width >= oFF.FdLayoutSize.MOBILE_MEDIUM.m_minWidth ? oFF.FdLayoutSize.MOBILE_MEDIUM : oFF.FdLayoutSize.MOBILE_SMALL;
	}
	return width >= oFF.FdLayoutSize.DESKTOP_LARGE.m_minWidth ? oFF.FdLayoutSize.DESKTOP_LARGE : (width >= oFF.FdLayoutSize.DESKTOP_MEDIUM.m_minWidth ? oFF.FdLayoutSize.DESKTOP_MEDIUM : oFF.FdLayoutSize.DESKTOP_SMALL);
};
oFF.FdLayoutSize.prototype.m_minWidth = 0;
oFF.FdLayoutSize.prototype.isMobile = function()
{
	return this === oFF.FdLayoutSize.MOBILE_SMALL || this === oFF.FdLayoutSize.MOBILE_MEDIUM;
};
oFF.FdLayoutSize.prototype.isSmall = function()
{
	return this === oFF.FdLayoutSize.MOBILE_SMALL || this === oFF.FdLayoutSize.DESKTOP_SMALL;
};
oFF.FdLayoutSize.prototype.isMedium = function()
{
	return this === oFF.FdLayoutSize.MOBILE_MEDIUM || this === oFF.FdLayoutSize.DESKTOP_MEDIUM;
};
oFF.FdLayoutSize.prototype.isLarge = function()
{
	return this === oFF.FdLayoutSize.DESKTOP_LARGE;
};

oFF.FdTableType = function() {};
oFF.FdTableType.prototype = new oFF.XConstant();
oFF.FdTableType.prototype._ff_c = "FdTableType";

oFF.FdTableType.TABLE = null;
oFF.FdTableType.RESPONSIVE_TABLE = null;
oFF.FdTableType.TREE_TABLE = null;
oFF.FdTableType.NAVIGATION_CONTAINER = null;
oFF.FdTableType.staticSetup = function()
{
	oFF.FdTableType.TABLE = oFF.XConstant.setupName(new oFF.FdTableType(), "Table");
	oFF.FdTableType.RESPONSIVE_TABLE = oFF.XConstant.setupName(new oFF.FdTableType(), "ResponsiveTable");
	oFF.FdTableType.TREE_TABLE = oFF.XConstant.setupName(new oFF.FdTableType(), "TreeTable");
	oFF.FdTableType.NAVIGATION_CONTAINER = oFF.XConstant.setupName(new oFF.FdTableType(), "NavigationContainer");
};
oFF.FdTableType.getLayoutType = function(hasChildren, isMobile)
{
	if (hasChildren)
	{
		return isMobile ? oFF.FdTableType.NAVIGATION_CONTAINER : oFF.FdTableType.TREE_TABLE;
	}
	return isMobile ? oFF.FdTableType.RESPONSIVE_TABLE : oFF.FdTableType.TABLE;
};
oFF.FdTableType.prototype.isTreeLayout = function()
{
	return this === oFF.FdTableType.TREE_TABLE || this === oFF.FdTableType.NAVIGATION_CONTAINER;
};

oFF.FdLayoutDateRange = function() {};
oFF.FdLayoutDateRange.prototype = new oFF.FdLayoutAbstractRange();
oFF.FdLayoutDateRange.prototype._ff_c = "FdLayoutDateRange";

oFF.FdLayoutDateRange.create = function(typeChangeListener, excludeSwitchChangeListener)
{
	var layout = new oFF.FdLayoutDateRange();
	layout.m_typeChangeListener = typeChangeListener;
	layout.m_excludeSwitchChangeListener = excludeSwitchChangeListener;
	layout.m_size = oFF.FdLayoutSize.DESKTOP_LARGE;
	return layout;
};
oFF.FdLayoutDateRange.prototype.m_typeChangeListener = null;
oFF.FdLayoutDateRange.prototype.m_excludeSwitchChangeListener = null;
oFF.FdLayoutDateRange.prototype.m_typeLayout = null;
oFF.FdLayoutDateRange.prototype.m_size = null;
oFF.FdLayoutDateRange.prototype.m_typeSB = null;
oFF.FdLayoutDateRange.prototype.m_excludeLabel = null;
oFF.FdLayoutDateRange.prototype.m_excludeSwitch = null;
oFF.FdLayoutDateRange.prototype.releaseObject = function()
{
	oFF.FdLayoutAbstractRange.prototype.releaseObject.call( this );
	this.m_typeChangeListener = null;
	this.m_excludeSwitchChangeListener = null;
	this.m_typeLayout = null;
	this.m_size = null;
	this.m_typeSB = oFF.XObjectExt.release(this.m_typeSB);
	this.m_excludeLabel = oFF.XObjectExt.release(this.m_excludeLabel);
	this.m_excludeSwitch = oFF.XObjectExt.release(this.m_excludeSwitch);
};
oFF.FdLayoutDateRange.prototype.hasUserInput = function()
{
	return oFF.notNull(this.m_typeLayout) && this.m_typeLayout.hasUserInput();
};
oFF.FdLayoutDateRange.prototype.addContent = function(container)
{
	var i18n = this.m_genesis.getUiManager().getLocalization();
	container.setDirection(oFF.UiFlexDirection.COLUMN);
	container.setAlignItems(oFF.UiFlexAlignItems.START);
	var header = container.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	header.setDirection(oFF.UiFlexDirection.ROW);
	header.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	header.setWrap(oFF.UiFlexWrap.NO_WRAP);
	header.setName("FilterDialogRangeHeader");
	header.setMargin(oFF.UiCssBoxEdges.create("0 0 1rem 0"));
	header.useMaxWidth();
	this.m_typeSB = header.addNewItemOfType(oFF.UiType.SEGMENTED_BUTTON);
	this.m_typeSB.setName("FilterDialogDateRangeTypeButton");
	this.m_typeSB.registerOnSelectionChange(this.m_typeChangeListener);
	var typeFixedBtn = this.m_typeSB.addNewItem();
	typeFixedBtn.setName("FilterDialogDateRangeTypeButtonFixed");
	typeFixedBtn.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_FIXED));
	typeFixedBtn.setCustomObject(oFF.FdItemType.DATE_RANGE_FIXED);
	var typeDynamicBtn = this.m_typeSB.addNewItem();
	typeDynamicBtn.setName("FilterDialogDateRangeTypeButtonDynamic");
	typeDynamicBtn.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_DYNAMIC));
	typeDynamicBtn.setCustomObject(oFF.FdItemType.DATE_RANGE_DYNAMIC);
	this.m_excludeLabel = header.addNewItemOfType(oFF.UiType.LABEL);
	this.m_excludeLabel.setText(i18n.getText(oFF.FilterDialogI18n.I18N_FD_DATE_RANGE_EXCLUDE));
	this.m_excludeLabel.setFlex("1 1 auto");
	this.m_excludeLabel.setTextAlign(oFF.UiTextAlign.RIGHT);
	this.m_excludeLabel.setMargin(oFF.UiCssBoxEdges.create("0 0.5rem"));
	this.m_excludeSwitch = header.addNewItemOfType(oFF.UiType.SWITCH);
	this.m_excludeSwitch.setOffText(" ");
	this.m_excludeSwitch.setOnText(" ");
	this.m_excludeSwitch.registerOnChange(this.m_excludeSwitchChangeListener);
	this.m_excludeLabel.setLabelFor(this.m_excludeSwitch);
};
oFF.FdLayoutDateRange.prototype.setTypeLayout = function(typeLayout, isFixedRange)
{
	if (this.m_typeSB.getSelectedName() === null)
	{
		this.m_typeSB.setSelectedName(isFixedRange ? "FilterDialogDateRangeTypeButtonFixed" : "FilterDialogDateRangeTypeButtonDynamic");
	}
	if (oFF.notNull(this.m_typeLayout))
	{
		this.getContentContainer().removeItem(this.m_typeLayout.getRoot());
	}
	this.m_typeLayout = typeLayout;
	this.m_typeLayout.resizeComponent(this.m_size);
	this.getContentContainer().addItem(this.m_typeLayout.getRoot());
};
oFF.FdLayoutDateRange.prototype.setExcludeSwitchVisible = function(visible, isOn)
{
	this.m_excludeLabel.setVisible(visible);
	this.m_excludeSwitch.setVisible(visible);
	this.m_excludeSwitch.setOn(isOn);
};
oFF.FdLayoutDateRange.prototype.getDescriptionText = function()
{
	return oFF.notNull(this.m_typeLayout) ? this.m_typeLayout.getDescriptionText() : "";
};
oFF.FdLayoutDateRange.prototype.resizeComponent = function(size)
{
	this.m_size = size;
	if (oFF.notNull(this.m_typeLayout))
	{
		this.m_typeLayout.resizeComponent(size);
	}
};

oFF.FdLayoutRange = function() {};
oFF.FdLayoutRange.prototype = new oFF.FdLayoutAbstractRange();
oFF.FdLayoutRange.prototype._ff_c = "FdLayoutRange";

oFF.FdLayoutRange.create = function()
{
	return new oFF.FdLayoutRange();
};
oFF.FdLayoutRange.prototype.m_operatorContainer = null;
oFF.FdLayoutRange.prototype.m_comparisonOperatorDropdown = null;
oFF.FdLayoutRange.prototype.m_input1 = null;
oFF.FdLayoutRange.prototype.m_input2 = null;
oFF.FdLayoutRange.prototype.m_betweenLabelContainer = null;
oFF.FdLayoutRange.prototype.releaseObject = function()
{
	oFF.FdLayoutAbstractRange.prototype.releaseObject.call( this );
	this.m_operatorContainer = oFF.XObjectExt.release(this.m_operatorContainer);
	this.m_comparisonOperatorDropdown = oFF.XObjectExt.release(this.m_comparisonOperatorDropdown);
	this.m_input1 = oFF.XObjectExt.release(this.m_input1);
	this.m_input2 = oFF.XObjectExt.release(this.m_input2);
	this.m_betweenLabelContainer = oFF.XObjectExt.release(this.m_betweenLabelContainer);
};
oFF.FdLayoutRange.prototype.addContent = function(container)
{
	var componentWidth = oFF.UiCssLength.create("225px");
	this.m_operatorContainer = container.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_operatorContainer.setDirection(oFF.UiFlexDirection.COLUMN);
	this.m_operatorContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_operatorContainer.setName("FilterDialogRangeOperatorColumn");
	this.m_operatorContainer.setPadding(oFF.UiCssBoxEdges.create("0 1rem 0 0"));
	this.m_operatorContainer.setWidth(componentWidth);
	this.m_operatorContainer.setMinWidth(componentWidth);
	var operatorLabel = this.m_operatorContainer.addNewItemOfType(oFF.UiType.LABEL);
	operatorLabel.setName("FilterDialogRangeOperatorLabel");
	operatorLabel.setText(this.m_i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_SELECT_OPERATOR));
	this.m_comparisonOperatorDropdown = this.m_operatorContainer.addNewItemOfType(oFF.UiType.DROPDOWN);
	this.m_comparisonOperatorDropdown.setName("FilterDialogRangeOperator");
	this.m_comparisonOperatorDropdown.useMaxWidth();
	operatorLabel.setLabelFor(this.m_comparisonOperatorDropdown);
	var inputColumn = container.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	inputColumn.setDirection(oFF.UiFlexDirection.COLUMN);
	inputColumn.setWrap(oFF.UiFlexWrap.NO_WRAP);
	inputColumn.setName("FilterDialogRangeInputColumn");
	inputColumn.setFlex("3");
	inputColumn.addNewItemOfType(oFF.UiType.LABEL).setText("");
	var inputInnerContainer = inputColumn.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	inputInnerContainer.setDirection(oFF.UiFlexDirection.ROW);
	inputInnerContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	inputInnerContainer.setName("FilterDialogRangeInputContainer");
	inputInnerContainer.useMaxWidth();
	this.m_input1 = inputInnerContainer.addNewItemOfType(oFF.UiType.INPUT);
	this.m_input1.setName("FilterDialogRangeInput1");
	this.m_input1.setMinWidth(oFF.UiCssLength.create("100px"));
	this.m_input1.setMaxWidth(componentWidth);
	this.m_input1.setFlex("1");
	this.m_input1.setValueStateText(" ");
	this.m_betweenLabelContainer = inputInnerContainer.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
	this.m_betweenLabelContainer.setDirection(oFF.UiFlexDirection.ROW);
	this.m_betweenLabelContainer.setAlignItems(oFF.UiFlexAlignItems.CENTER);
	this.m_betweenLabelContainer.setWrap(oFF.UiFlexWrap.NO_WRAP);
	this.m_betweenLabelContainer.setName("FilterDialogRangeInputLabelContainer");
	this.m_betweenLabelContainer.setMinWidth(oFF.UiCssLength.create("25px"));
	this.m_betweenLabelContainer.setPadding(oFF.UiCssBoxEdges.create("0 1rem"));
	var betweenLabel = this.m_betweenLabelContainer.addNewItemOfType(oFF.UiType.LABEL);
	betweenLabel.setName("FilterDialogRangeInputLabel");
	betweenLabel.setText(this.m_i18n.getText(oFF.FilterDialogI18n.I18N_FD_RANGES_BETWEEN_LABEL));
	betweenLabel.setMinWidth(oFF.UiCssLength.create("25px"));
	this.m_input2 = inputInnerContainer.addNewItemOfType(oFF.UiType.INPUT);
	this.m_input2.setName("FilterDialogRangeInput2");
	this.m_input2.setMinWidth(oFF.UiCssLength.create("100px"));
	this.m_input2.setMaxWidth(componentWidth);
	this.m_input2.setFlex("1");
	this.m_input2.setValueStateText(" ");
	this.addErrorLabelContainer(inputColumn);
};
oFF.FdLayoutRange.prototype.resizeComponent = function(size)
{
	oFF.FdLayoutAbstractRange.prototype.resizeComponent.call( this , size);
	this.m_operatorContainer.setPadding(size.isLarge() ? oFF.UiCssBoxEdges.create("0 1rem 0 0") : null);
};
oFF.FdLayoutRange.prototype.getComparisonOperatorDropdown = function()
{
	return this.m_comparisonOperatorDropdown;
};
oFF.FdLayoutRange.prototype.getInput1 = function()
{
	return this.m_input1;
};
oFF.FdLayoutRange.prototype.getInput2 = function()
{
	return this.m_input2;
};
oFF.FdLayoutRange.prototype.getDescriptionText = function()
{
	var operator = this.m_comparisonOperatorDropdown.getSelectedItem().getCustomObject();
	var showRangeText = oFF.XStringUtils.isNotNullAndNotEmpty(this.m_input1.getText()) && (operator.getOriginOperator().getNumberOfParameters() < 2 || oFF.XStringUtils.isNotNullAndNotEmpty(this.m_input2.getText()));
	var i18n = this.m_genesis.getUiManager().getLocalization();
	return showRangeText ? operator.getRangeText(i18n, this.m_input1.getText(), this.m_input2.getText()) : operator.getLongText(i18n);
};
oFF.FdLayoutRange.prototype.setInputVisibility = function(input1Visible, input1Editable, input2Visible, input2Editable)
{
	this.m_input1.setVisible(input1Visible);
	this.m_input1.setEditable(input1Editable);
	this.m_betweenLabelContainer.setVisible(input2Visible);
	this.m_input2.setVisible(input2Visible);
	this.m_input2.setEditable(input2Editable);
};
oFF.FdLayoutRange.prototype.setInputText = function(text1, placeholder1, text2, placeholder2)
{
	this.m_input1.setText(text1);
	this.m_input1.setPlaceholder(placeholder1);
	this.m_input1.setTooltip(placeholder1);
	this.m_input2.setText(text2);
	this.m_input2.setPlaceholder(placeholder2);
	this.m_input2.setTooltip(placeholder2);
};
oFF.FdLayoutRange.prototype.hasUserInput = function()
{
	return (this.m_input1.isVisible() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_input1.getText())) || (this.m_input2.isVisible() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_input2.getText()));
};
oFF.FdLayoutRange.prototype.showMessage = function(message, onControl, isError)
{
	oFF.FdLayoutAbstractRange.prototype.showMessage.call( this , message, onControl, isError);
	var valueState = isError ? oFF.UiValueState.ERROR : oFF.UiValueState.WARNING;
	if (oFF.isNull(onControl) || onControl === this.m_input1)
	{
		this.m_input1.setValueState(valueState);
	}
	if (oFF.isNull(onControl) || onControl === this.m_input2)
	{
		this.m_input2.setValueState(valueState);
	}
};
oFF.FdLayoutRange.prototype.clearMessage = function()
{
	oFF.FdLayoutAbstractRange.prototype.clearMessage.call( this );
	this.m_input1.setValueState(null);
	this.m_input2.setValueState(null);
};

oFF.FdFunctionalValuesView = function() {};
oFF.FdFunctionalValuesView.prototype = new oFF.FdAbstractView();
oFF.FdFunctionalValuesView.prototype._ff_c = "FdFunctionalValuesView";

oFF.FdFunctionalValuesView.createView = function(controller, model, context, functionName)
{
	var fdView = new oFF.FdFunctionalValuesView();
	fdView.setupView(controller, model, context);
	fdView.m_functionName = functionName;
	return fdView;
};
oFF.FdFunctionalValuesView.prototype.m_layout = null;
oFF.FdFunctionalValuesView.prototype.m_functionName = null;
oFF.FdFunctionalValuesView.prototype.releaseObject = function()
{
	oFF.FdAbstractView.prototype.releaseObject.call( this );
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_functionName = null;
};
oFF.FdFunctionalValuesView.prototype.buildOlapDialogUi = function(genesis, initialDialogWidth)
{
	this.m_layout = oFF.FdFunctionalValuesLayout.createLayout();
	this.m_layout.buildOlapDialogUi(genesis);
	this.m_model.getFunctionalValuesModel().onFunctionTabSelected(this.m_functionName, this.m_layout.getRoot());
	this.m_layout.resize(initialDialogWidth);
};
oFF.FdFunctionalValuesView.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdFunctionalValuesView.prototype.onResize = function(event)
{
	this.m_layout.resize(event.getOffsetWidth());
};
oFF.FdFunctionalValuesView.prototype.setInitialFocus = function() {};
oFF.FdFunctionalValuesView.prototype.publishMembersList = function(membersList) {};
oFF.FdFunctionalValuesView.prototype.publishPresentations = function() {};
oFF.FdFunctionalValuesView.prototype.publishAvailablePresentations = function() {};
oFF.FdFunctionalValuesView.prototype.publishSelectedItems = function() {};

oFF.FdRangesView = function() {};
oFF.FdRangesView.prototype = new oFF.FdAbstractView();
oFF.FdRangesView.prototype._ff_c = "FdRangesView";

oFF.FdRangesView.createView = function(controller, model, context)
{
	var fdView = new oFF.FdRangesView();
	fdView.setupView(controller, model, context);
	return fdView;
};
oFF.FdRangesView.prototype.m_layout = null;
oFF.FdRangesView.prototype.m_genesis = null;
oFF.FdRangesView.prototype.m_ranges = null;
oFF.FdRangesView.prototype.setupView = function(controller, model, context)
{
	oFF.FdAbstractView.prototype.setupView.call( this , controller, model, context);
	this.m_ranges = oFF.XList.create();
};
oFF.FdRangesView.prototype.releaseObject = function()
{
	oFF.FdAbstractView.prototype.releaseObject.call( this );
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_genesis = null;
	this.m_ranges = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_ranges);
};
oFF.FdRangesView.prototype.buildOlapDialogUi = function(genesis, initialDialogWidth)
{
	this.m_genesis = genesis;
	this.m_layout = this.createLayout();
	this.m_layout.buildOlapDialogUi(genesis);
	this.m_layout.getAddRangeBtn().registerOnPress(this);
	this.m_layout.setAddRangeBtnVisible(!this.m_model.getSelectionMode().isSingleSelect());
	this.m_layout.setRangeInfo(this.m_model.getRangeModel().getMin(), this.m_model.getRangeModel().getMax());
	this.m_layout.resize(initialDialogWidth);
};
oFF.FdRangesView.prototype.createLayout = function()
{
	return oFF.FdRangesLayout.createLayout();
};
oFF.FdRangesView.prototype.publishSelectedItems = function()
{
	this.m_ranges.clear();
	this.m_layout.clearRanges();
	if (this.m_model.getSelectedItems().hasElements())
	{
		oFF.XCollectionUtils.forEach(this.m_model.getSelectedItems().createListCopy(),  function(item){
			this.addNewRange(item, false);
		}.bind(this));
	}
	this.onRangesChanged(true);
};
oFF.FdRangesView.prototype.addNewRange = function(item, focus)
{
	if (!this.isValidItem(item))
	{
		return;
	}
	var range = this.createRange(item);
	this.m_ranges.add(range);
	range.buildOlapDialogUi(this.m_genesis);
	range.registerOnDelete( function(){
		this.deleteRange(range, true);
	}.bind(this));
	range.registerOnChange( function(){
		this.updateAddRangeButtonState();
	}.bind(this));
	this.m_layout.addRange(range.getLayout());
	if (focus)
	{
		oFF.XCollectionUtils.forEach(this.m_ranges,  function(r){
			r.setExpanded(r === range);
		}.bind(this));
		range.focus();
	}
};
oFF.FdRangesView.prototype.isValidItem = function(item)
{
	return oFF.isNull(item) || item.getType() === oFF.FdItemType.RANGE || item.getType() === oFF.FdItemType.BASIC || item.getType() === oFF.FdItemType.VALUEHELP;
};
oFF.FdRangesView.prototype.createRange = function(item)
{
	return oFF.FdComponentRange.create(this.m_model, this.m_context, item);
};
oFF.FdRangesView.prototype.onPress = function(event)
{
	if (event.getControl() === this.m_layout.getAddRangeBtn())
	{
		this.addNewRange(null, true);
		this.onRangesChanged(false);
	}
};
oFF.FdRangesView.prototype.deleteRange = function(range, addNewRangeIfEmpty)
{
	oFF.XCollectionUtils.removeIf(this.m_model.getSelectedItems(),  function(selectedItem){
		return selectedItem === range.getItem();
	}.bind(this));
	this.m_ranges.removeElement(range);
	this.m_layout.removeRange(range.getLayout());
	oFF.XObjectExt.release(range);
	this.onRangesChanged(addNewRangeIfEmpty);
};
oFF.FdRangesView.prototype.onRangesChanged = function(addNewRangeIfEmpty)
{
	if (addNewRangeIfEmpty && this.m_ranges.isEmpty())
	{
		this.addNewRange(null, true);
	}
	var hasSeveralRanges = this.m_ranges.size() > 1;
	for (var i = 0; i < this.m_ranges.size(); i++)
	{
		this.m_ranges.get(i).onRangesChanged(hasSeveralRanges, i);
	}
	this.updateAddRangeButtonState();
};
oFF.FdRangesView.prototype.updateAddRangeButtonState = function()
{
	var invalidRange = oFF.XCollectionUtils.findFirst(this.m_ranges,  function(range){
		return !range.validate(false);
	}.bind(this));
	if (oFF.notNull(invalidRange))
	{
		this.m_layout.getAddRangeBtn().setEnabled(false);
		this.m_layout.getAddRangeBtn().setTooltip(this.m_context.getI18n().getTextWithPlaceholder(oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW_DISABLED_TOOLTIP, oFF.XInteger.convertToString(this.m_ranges.getIndex(invalidRange) + 1)));
	}
	else
	{
		this.m_layout.getAddRangeBtn().setEnabled(true);
		this.m_layout.getAddRangeBtn().setTooltip(this.m_context.getI18n().getText(oFF.FilterDialogI18n.I18N_FD_RANGES_ADD_NEW));
	}
};
oFF.FdRangesView.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdRangesView.prototype.onResize = function(event)
{
	this.m_layout.resize(event.getOffsetWidth());
};
oFF.FdRangesView.prototype.setInitialFocus = function()
{
	if (this.m_ranges.hasElements())
	{
		var firstRange = this.m_ranges.get(0);
		firstRange.setExpanded(true);
		firstRange.focus();
	}
};
oFF.FdRangesView.prototype.validate = function()
{
	var invalidRanges = oFF.XStream.of(this.m_ranges).filter( function(range){
		return !range.validate(true);
	}.bind(this)).collect(oFF.XStreamCollector.toList());
	if (invalidRanges.hasElements())
	{
		oFF.XCollectionUtils.forEach(this.m_ranges,  function(r){
			r.setExpanded(invalidRanges.contains(r));
		}.bind(this));
		return false;
	}
	oFF.XStream.of(this.m_ranges.createListCopy()).filter( function(rnge){
		return rnge.isEmpty();
	}.bind(this)).forEach( function(emptyRange){
		this.deleteRange(emptyRange, false);
	}.bind(this));
	return true;
};
oFF.FdRangesView.prototype.publishMembersList = function(membersList) {};
oFF.FdRangesView.prototype.publishPresentations = function() {};
oFF.FdRangesView.prototype.publishAvailablePresentations = function() {};

oFF.FdTableView = function() {};
oFF.FdTableView.prototype = new oFF.FdAbstractView();
oFF.FdTableView.prototype._ff_c = "FdTableView";

oFF.FdTableView.createView = function(controller, model, context)
{
	var fdView = new oFF.FdTableView();
	fdView.setupView(controller, model, context);
	return fdView;
};
oFF.FdTableView.prototype.m_layout = null;
oFF.FdTableView.prototype.m_dataLayoutType = null;
oFF.FdTableView.prototype.m_table = null;
oFF.FdTableView.prototype.m_search = null;
oFF.FdTableView.prototype.m_toggles = null;
oFF.FdTableView.prototype.m_selectionContainer = null;
oFF.FdTableView.prototype.m_presentationSelection = null;
oFF.FdTableView.prototype.m_genesis = null;
oFF.FdTableView.prototype.releaseObject = function()
{
	this.m_table = oFF.XObjectExt.release(this.m_table);
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_search = oFF.XObjectExt.release(this.m_search);
	this.m_toggles = oFF.XObjectExt.release(this.m_toggles);
	this.m_selectionContainer = oFF.XObjectExt.release(this.m_selectionContainer);
	this.m_presentationSelection = oFF.XObjectExt.release(this.m_presentationSelection);
	oFF.FdAbstractView.prototype.releaseObject.call( this );
};
oFF.FdTableView.prototype.buildOlapDialogUi = function(genesis, initialDialogWidth)
{
	this.m_genesis = genesis;
	var isMobile = genesis.getUiManager().getDeviceInfo().isMobile();
	this.m_search = oFF.FdComponentSearch.create(this.m_model, this.m_context, this);
	this.m_search.buildOlapDialogUi(genesis);
	this.m_toggles = oFF.FdComponentToggles.create(this.m_model, this.m_context, this);
	this.m_toggles.buildOlapDialogUi(genesis);
	this.m_presentationSelection = oFF.FdComponentPresentationSelection.create(this.m_model, this.m_context, this);
	this.m_presentationSelection.buildOlapDialogUi(genesis);
	if (!isMobile && (this.m_model.isFeatureEnabled(oFF.FdFeature.ALWAYS_SHOW_SELECTION_CONTAINER) || this.m_model.getSelectionMode() === oFF.UiSelectionMode.MULTI_SELECT))
	{
		this.m_selectionContainer = oFF.FdComponentSelectionContainer.create(this.m_model, this.m_context,  function(){
			return this.m_controller.getClipboardController();
		}.bind(this),  function(){
			return this.m_presentationSelection.getMainPresentation();
		}.bind(this), this, this, this);
		this.m_selectionContainer.buildOlapDialogUi(genesis);
	}
	this.m_layout = oFF.FdTableLayout.createLayout(this.m_search.getLayout(), this.m_toggles.getLayout(), oFF.notNull(this.m_selectionContainer) ? this.m_selectionContainer.getLayout() : null, this.m_presentationSelection.getLayout());
	this.m_layout.buildOlapDialogUi(genesis);
	this.buildTable();
	this.m_layout.getClearSelectionButton().setVisible(isMobile);
	this.m_layout.getClearSelectionButton().registerOnPress(this);
	this.m_layout.getShowOnlySelectedToggleBtn().registerOnPress(this);
	this.m_layout.resize(initialDialogWidth);
	this.setSelectionContainerBusy(true);
	this.m_model.getHierarchyModel().registerOnActiveHierarchyChange(this);
	this.m_model.registerOnItemsAdded( function(){
		this.updatePaging();
	}.bind(this));
};
oFF.FdTableView.prototype.setSelectionContainerBusy = function(busy)
{
	if (oFF.notNull(this.m_selectionContainer))
	{
		this.m_selectionContainer.setBusy(busy);
	}
};
oFF.FdTableView.prototype.buildTable = function()
{
	var isMobile = this.m_genesis.getUiManager().getDeviceInfo().isMobile();
	var layoutType = oFF.FdTableType.getLayoutType(this.m_model.getHierarchyModel().hasActiveHierarchy(), isMobile);
	if (oFF.isNull(this.m_dataLayoutType) || this.m_dataLayoutType !== layoutType)
	{
		var oldTable = this.m_table;
		this.m_dataLayoutType = layoutType;
		if (this.m_dataLayoutType === oFF.FdTableType.TABLE)
		{
			this.m_table = oFF.FdComponentTable.create(this, this.m_model, this.m_context);
		}
		else if (this.m_dataLayoutType === oFF.FdTableType.RESPONSIVE_TABLE)
		{
			this.m_table = oFF.FdComponentResponsiveTable.create(this, this.m_model, this.m_context);
		}
		else if (this.m_dataLayoutType === oFF.FdTableType.TREE_TABLE)
		{
			this.m_table = oFF.FdComponentTreeTable.create(this, this.m_model, this.m_context);
		}
		else if (this.m_dataLayoutType === oFF.FdTableType.NAVIGATION_CONTAINER)
		{
			this.m_table = oFF.FdComponentNavigationContainer.create(this, this.m_model, this.m_context);
		}
		else
		{
			throw oFF.XException.createRuntimeException(oFF.XStringUtils.concatenate2("No ui control exists for the layout type ", this.m_dataLayoutType.getName()));
		}
		this.m_table.buildOlapDialogUi(this.m_genesis);
		this.m_table.setSelectionMode(this.m_model.getSelectionMode());
		this.m_layout.setTableLayout(this.m_table.getLayout(), this.m_dataLayoutType);
		oFF.XObjectExt.release(oldTable);
	}
};
oFF.FdTableView.prototype.onResize = function(event)
{
	this.m_layout.resize(event.getOffsetWidth());
};
oFF.FdTableView.prototype.onPress = function(event)
{
	var controlName = event.getControl().getName();
	if (oFF.XString.isEqual(controlName, this.m_layout.getClearSelectionButton().getName()))
	{
		this.removeAllMembersFromSelection();
	}
	else if (oFF.XString.isEqual(event.getControl().getName(), this.m_layout.getShowOnlySelectedToggleBtn().getName()))
	{
		if (this.m_layout.getShowOnlySelectedToggleBtn().isPressed())
		{
			this.clearSearch();
			this.publishMembersList(this.m_model.getSelectedItems());
		}
		else
		{
			this.publishMembersList(this.m_model.getItems(this.m_dataLayoutType === oFF.FdTableType.TABLE ? this.m_model.getPage() : 0, this.m_model.getPage()));
		}
	}
};
oFF.FdTableView.prototype.onReadModeChanged = function(isOn)
{
	this.reload(false);
};
oFF.FdTableView.prototype.onExcludeChanged = function(isOn)
{
	this.publishSelectedItems();
};
oFF.FdTableView.prototype.onHierarchyChanged = function(activeHierarchy, hierarchicalStateChanged)
{
	this.reload(false);
	this.publishSelectedItems();
	this.m_toggles.updateExcludeToggleVisibility();
};
oFF.FdTableView.prototype.onSelectionCleared = function()
{
	this.m_model.clearSelection();
	if (oFF.notNull(this.m_selectionContainer))
	{
		this.m_selectionContainer.renderSelectedItems();
	}
	this.m_table.onSelectionCleared();
};
oFF.FdTableView.prototype.onNewSelection = function(items)
{
	this.m_table.setBusy(true);
	this.m_controller.onNewSelection(items);
};
oFF.FdTableView.prototype.publishMembersList = function(membersList)
{
	var infoLabel = null;
	if (!oFF.XCollectionUtils.hasElements(membersList) && !this.isSearchActive())
	{
		var config = this.m_model.getConfig();
		infoLabel = this.m_context.getI18n().getText(config.getNoResultMessageTag() !== null ? config.getNoResultMessageTag() : oFF.FilterDialogI18n.I18N_FD_NO_RESULTS);
	}
	this.m_layout.setInfoLabelText(infoLabel);
	this.m_table.renderItems(membersList, this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList(), this.m_model.getSelectedItems());
	this.updatePaging();
	this.m_table.setBusy(false);
};
oFF.FdTableView.prototype.onError = function(messages, customIdentifier)
{
	oFF.FdAbstractView.prototype.onError.call( this , messages, customIdentifier);
	this.m_table.setBusy(false);
	this.setSelectionContainerBusy(false);
	this.m_table.onError(messages, customIdentifier);
	this.m_model.onError(messages, customIdentifier);
	this.m_toggles.setReadModeToggleState(this.m_model.isReadModeSwitchOn());
};
oFF.FdTableView.prototype.onMainPresentationChanged = function()
{
	this.publishSelectedItems();
	this.onPresentationChanged();
};
oFF.FdTableView.prototype.onAdditionalPresentationsChanged = function()
{
	if (this.m_table.isPresentationUpdateNeeded(this.getSelectedPresentations().getKeysAsReadOnlyListOfString()))
	{
		this.onPresentationChanged();
	}
};
oFF.FdTableView.prototype.onPresentationChanged = function()
{
	if (this.m_search.isSearchActive())
	{
		var firstItem = this.m_table.getFirstItem();
		if (oFF.isNull(firstItem) || !this.m_controller.isReloadRequired(firstItem, this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList()))
		{
			this.m_model.setSelectedPresentations(this.m_presentationSelection.getMainPresentation(), this.m_presentationSelection.getAdditionalPresentations());
			this.publishPresentations();
			return;
		}
	}
	this.m_model.setSelectedPresentations(this.m_presentationSelection.getMainPresentation(), this.m_presentationSelection.getAdditionalPresentations());
	this.reload(true);
};
oFF.FdTableView.prototype.reload = function(reloadPresentationsOnly)
{
	if (!reloadPresentationsOnly)
	{
		this.buildTable();
	}
	this.m_table.setBusy(true);
	if (this.m_search.isSearchActive())
	{
		this.onSearch(null);
	}
	else
	{
		this.m_table.refreshContent(reloadPresentationsOnly);
	}
};
oFF.FdTableView.prototype.addAllMembersToSelection = function()
{
	this.m_layout.getRoot().setEnabled(false);
	this.setSelectionContainerBusy(true);
	this.m_controller.loadAndSelectAllMembers(this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList());
};
oFF.FdTableView.prototype.removeAllMembersFromSelection = function()
{
	this.onSelectionCleared();
};
oFF.FdTableView.prototype.onProcessFinished = function(items, startPage, customIdentifier)
{
	if (this.isReleased())
	{
		oFF.XObjectExt.release(customIdentifier);
		return;
	}
	var identifier = customIdentifier;
	if (identifier.isFetchChildrenIdentifier())
	{
		this.m_table.onProcessFinished(items, startPage, customIdentifier);
	}
	else if (identifier.isSearchIdentifier() && oFF.XString.isEqual(this.m_search.getSearchText(), identifier.getSearchValue()))
	{
		this.publishMembersList(items);
		this.m_layout.setInfoLabelText(this.getSearchInfoMessage(items));
	}
	oFF.XObjectExt.release(customIdentifier);
};
oFF.FdTableView.prototype.getSearchInfoMessage = function(searchItems)
{
	var config = this.m_model.getConfig();
	if (oFF.XCollectionUtils.hasElements(searchItems))
	{
		if (searchItems.size() >= config.getSearchSize())
		{
			var pageSize = oFF.XInteger.convertToString(config.getSearchSize());
			return this.m_context.getI18n().getTextWithPlaceholder(oFF.FilterDialogI18n.I18N_FD_MAX_RESULTS, pageSize);
		}
	}
	else
	{
		return this.m_context.getI18n().getText(config.getNoResultMessageTag() !== null ? config.getNoResultMessageTag() : oFF.FilterDialogI18n.I18N_FD_NO_RESULTS);
	}
	return null;
};
oFF.FdTableView.prototype.publishSelectedItems = function()
{
	if (oFF.notNull(this.m_selectionContainer))
	{
		this.m_selectionContainer.renderSelectedItems();
	}
	this.m_layout.getRoot().setEnabled(true);
};
oFF.FdTableView.prototype.onSearch = function(event)
{
	var searchActive = this.m_search.isSearchActive();
	var searchText = this.m_search.getSearchText();
	this.m_table.onSearchChange(searchActive, searchText);
	if (searchActive)
	{
		this.m_table.setBusy(true);
		var presentationsForSearch = this.m_search.getSearchPresentations();
		var presentationsToRequest = this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList();
		this.m_controller.search(searchText, presentationsForSearch, presentationsToRequest, this.m_table.parentNodesInSearchNeeded(), this, oFF.FdViewCustomIdentifier.creatForSearch(searchText));
	}
	else
	{
		this.clearSearch();
	}
};
oFF.FdTableView.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdTableView.prototype.onRefreshList = function(refreshAttributesOnly, currentPageOnly)
{
	this.m_controller.refreshList(this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList(), refreshAttributesOnly, currentPageOnly);
};
oFF.FdTableView.prototype.onRefreshTree = function(refreshAttributesOnly, parentNode)
{
	this.m_controller.refreshTree(this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList(), refreshAttributesOnly, parentNode);
};
oFF.FdTableView.prototype.onFetchChildren = function(node, offset, presentations, listener, customIdentifier)
{
	var presentationsToRequest = oFF.notNull(presentations) ? presentations : this.m_presentationSelection.getSelectedPresentations().getValuesAsReadOnlyList();
	this.m_controller.fetchChildren(node, offset, this.m_model.getChildNodesPageSize() + 1, presentationsToRequest, listener, customIdentifier);
};
oFF.FdTableView.prototype.onTableSelectionChange = function(itemList, itemsSelected)
{
	if (this.m_model.getSelectionMode() !== null && this.m_model.getSelectionMode().isSingleSelect())
	{
		this.m_model.changeSelection(itemsSelected.hasElements() ? oFF.XCollectionUtils.singletonList(itemsSelected.get(0).getCustomObject()) : oFF.XList.create(), this.m_model.getSelectedItems());
	}
	else
	{
		var selectionsToAdd = oFF.XList.create();
		var selectionsToRemove = oFF.XList.create();
		oFF.XCollectionUtils.forEach(itemList,  function(item){
			var customObject = item.getCustomObject();
			if (oFF.notNull(customObject))
			{
				if (itemsSelected.contains(item))
				{
					selectionsToAdd.add(customObject);
				}
				else
				{
					selectionsToRemove.add(customObject);
				}
			}
		}.bind(this));
		this.m_model.changeSelection(selectionsToAdd, selectionsToRemove);
		oFF.XObjectExt.release(selectionsToAdd);
		oFF.XObjectExt.release(selectionsToRemove);
	}
	if (oFF.notNull(this.m_selectionContainer))
	{
		this.m_selectionContainer.renderSelectedItems();
	}
};
oFF.FdTableView.prototype.clearSearch = function()
{
	this.m_search.clearSearch();
	this.m_layout.setInfoLabelText(null);
};
oFF.FdTableView.prototype.isSearchActive = function()
{
	return this.m_search.isSearchActive();
};
oFF.FdTableView.prototype.getSelectedPresentations = function()
{
	return this.m_presentationSelection.getSelectedPresentations();
};
oFF.FdTableView.prototype.getMainPresentation = function()
{
	return this.m_presentationSelection.getMainPresentation();
};
oFF.FdTableView.prototype.onDelete = function(event)
{
	this.m_table.deselect(event.getAffectedItem().getCustomObject());
};
oFF.FdTableView.prototype.publishPresentations = function()
{
	this.m_table.publishPresentations();
	this.updatePaging();
};
oFF.FdTableView.prototype.publishAvailablePresentations = function()
{
	this.m_presentationSelection.publishAvailablePresentations();
	this.m_search.publishAvailablePresentations();
};
oFF.FdTableView.prototype.updatePaging = function()
{
	this.m_table.updatePaging(this.m_layout.getShowOnlySelectedToggleBtn().isPressed());
};
oFF.FdTableView.prototype.setInitialFocus = function()
{
	if (oFF.notNull(this.m_search))
	{
		this.m_search.focus();
	}
};

oFF.FdView = function() {};
oFF.FdView.prototype = new oFF.FdAbstractView();
oFF.FdView.prototype._ff_c = "FdView";

oFF.FdView.createView = function(controller, model, context, viewTypes, viewTypeChangeListener)
{
	var viewType = oFF.FdFilterType.LIST;
	if (oFF.XCollectionUtils.hasElements(viewTypes))
	{
		var defaultViewType = model.getConfig().getDefaultVisibleFilterType();
		viewType = oFF.notNull(defaultViewType) && viewTypes.contains(defaultViewType) ? defaultViewType : viewTypes.get(0);
		if (oFF.FdConfiguration.BETA_FEATURES_ENABLED && (viewTypes.size() > 1 || (viewTypes.contains(oFF.FdFilterType.FUNCTIONAL_VALUES) && model.getFunctionalValuesModel().getFunctionSize() > 1)))
		{
			var view = new oFF.FdView();
			view.setupFdView(controller, model, context, viewTypes, viewType, viewTypeChangeListener);
			return view;
		}
	}
	return oFF.FdView.createViewByType(controller, model, context, viewType, null);
};
oFF.FdView.createViewByType = function(controller, model, context, viewType, tabName)
{
	var view = null;
	if (viewType === oFF.FdFilterType.RANGE)
	{
		view = model.getRangeModel().getInputValueType().isDateBased() ? oFF.FdDateRangesView.createDateRangeView(controller, model, context) : oFF.FdRangesView.createView(controller, model, context);
	}
	if (viewType === oFF.FdFilterType.MEASURE_BASED_FILTER)
	{
		view = oFF.FdMeasureBasedView.createMeasureBasedView(controller, model, context);
	}
	if (viewType === oFF.FdFilterType.FUNCTIONAL_VALUES)
	{
		view = oFF.FdFunctionalValuesView.createView(controller, model, context, oFF.notNull(tabName) ? tabName : model.getFunctionalValuesModel().getFunctions().get(0).getFirstString());
	}
	if (viewType === oFF.FdFilterType.LIST || oFF.isNull(view))
	{
		view = oFF.FdTableView.createView(controller, model, context);
	}
	return view;
};
oFF.FdView.prototype.m_layout = null;
oFF.FdView.prototype.m_currentViewType = null;
oFF.FdView.prototype.m_currentView = null;
oFF.FdView.prototype.m_viewTypeChangeListener = null;
oFF.FdView.prototype.m_viewTypes = null;
oFF.FdView.prototype.setupFdView = function(controller, model, context, viewTypes, initialViewType, viewTypeChangeListener)
{
	oFF.FdAbstractView.prototype.setupView.call( this , controller, model, context);
	this.m_viewTypes = viewTypes;
	this.m_currentViewType = initialViewType;
	this.m_currentView = oFF.FdView.createViewByType(controller, model, context, initialViewType, null);
	this.m_viewTypeChangeListener = viewTypeChangeListener;
};
oFF.FdView.prototype.releaseObject = function()
{
	oFF.FdAbstractView.prototype.releaseObject.call( this );
	this.m_viewTypes = null;
	this.m_layout = oFF.XObjectExt.release(this.m_layout);
	this.m_currentViewType = null;
	this.m_currentView = oFF.XObjectExt.release(this.m_currentView);
	this.m_viewTypeChangeListener = null;
};
oFF.FdView.prototype.changeView = function(viewType, tabName)
{
	if (this.m_currentViewType !== viewType && this.validate())
	{
		this.m_currentViewType = viewType;
		this.m_currentView = oFF.XObjectExt.release(this.m_currentView);
		this.m_currentView = oFF.FdView.createViewByType(this.m_controller, this.m_model, this.m_context, viewType, tabName);
		this.m_viewTypeChangeListener();
		return this.m_currentView.getLayout();
	}
	return null;
};
oFF.FdView.prototype.buildOlapDialogUi = function(genesis, initialDialogWidth)
{
	this.m_currentView.buildOlapDialogUi(genesis, initialDialogWidth);
	if (oFF.isNull(this.m_layout))
	{
		var functionalValues = this.m_viewTypes.contains(oFF.FdFilterType.FUNCTIONAL_VALUES) ? this.m_model.getFunctionalValuesModel().getFunctions() : null;
		this.m_layout = oFF.FdViewLayout.createLayout(this.m_viewTypes, this.m_currentViewType, this.m_currentView.getLayout(),  function(viewType, tabName){
			return this.changeView(viewType, tabName.getString());
		}.bind(this), functionalValues);
		this.m_layout.buildOlapDialogUi(genesis);
	}
};
oFF.FdView.prototype.getLayout = function()
{
	return this.m_layout;
};
oFF.FdView.prototype.onResize = function(event)
{
	this.m_currentView.onResize(event);
};
oFF.FdView.prototype.onError = function(messages, customIdentifier)
{
	this.m_currentView.onError(messages, customIdentifier);
};
oFF.FdView.prototype.setInitialFocus = function()
{
	this.m_currentView.setInitialFocus();
};
oFF.FdView.prototype.publishMembersList = function(membersList)
{
	this.m_currentView.publishMembersList(membersList);
};
oFF.FdView.prototype.publishPresentations = function()
{
	this.m_currentView.publishPresentations();
};
oFF.FdView.prototype.publishAvailablePresentations = function()
{
	this.m_currentView.publishAvailablePresentations();
};
oFF.FdView.prototype.publishSelectedItems = function()
{
	this.m_currentView.publishSelectedItems();
};
oFF.FdView.prototype.validate = function()
{
	return this.m_currentView.validate();
};

oFF.VdComparisonOperator = function() {};
oFF.VdComparisonOperator.prototype = new oFF.XConstant();
oFF.VdComparisonOperator.prototype._ff_c = "VdComparisonOperator";

oFF.VdComparisonOperator.UNDEFINED = null;
oFF.VdComparisonOperator.IS_NULL = null;
oFF.VdComparisonOperator.IS_NOT_NULL = null;
oFF.VdComparisonOperator.EQUAL = null;
oFF.VdComparisonOperator.NOT_EQUAL = null;
oFF.VdComparisonOperator.GREATER_THAN = null;
oFF.VdComparisonOperator.GREATER_EQUAL = null;
oFF.VdComparisonOperator.LESS_THAN = null;
oFF.VdComparisonOperator.LESS_EQUAL = null;
oFF.VdComparisonOperator.BETWEEN = null;
oFF.VdComparisonOperator.NOT_BETWEEN = null;
oFF.VdComparisonOperator.MATCH = null;
oFF.VdComparisonOperator.s_lookup = null;
oFF.VdComparisonOperator.staticSetup = function()
{
	oFF.VdComparisonOperator.s_lookup = oFF.XHashMapByString.create();
	oFF.VdComparisonOperator.UNDEFINED = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.UNDEFINED, oFF.ComparisonOperator.UNDEFINED.getName(), null, null, null);
	oFF.VdComparisonOperator.IS_NULL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.IS_NULL, oFF.ComparisonOperator.IS_NULL.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NULL, null, null);
	oFF.VdComparisonOperator.IS_NOT_NULL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.IS_NULL, "IS_NOT_NULL", oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_IS_NOT_NULL, null, null);
	oFF.VdComparisonOperator.EQUAL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.EQUAL, oFF.ComparisonOperator.EQUAL.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_EQUAL_TEXT, "      ");
	oFF.VdComparisonOperator.NOT_EQUAL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.NOT_EQUAL, oFF.ComparisonOperator.NOT_EQUAL.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_EQUAL_TEXT, "      ");
	oFF.VdComparisonOperator.GREATER_THAN = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.GREATER_THAN, oFF.ComparisonOperator.GREATER_THAN.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_TEXT, "      ");
	oFF.VdComparisonOperator.GREATER_EQUAL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.GREATER_EQUAL, oFF.ComparisonOperator.GREATER_EQUAL.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_GREATER_EQUAL_TEXT, "    ");
	oFF.VdComparisonOperator.LESS_THAN = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.LESS_THAN, oFF.ComparisonOperator.LESS_THAN.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_TEXT, "      ");
	oFF.VdComparisonOperator.LESS_EQUAL = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.LESS_EQUAL, oFF.ComparisonOperator.LESS_EQUAL.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_LESS_EQUAL_TEXT, "    ");
	oFF.VdComparisonOperator.BETWEEN = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.BETWEEN, oFF.ComparisonOperator.BETWEEN.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_BETWEEN_TEXT, "     ");
	oFF.VdComparisonOperator.NOT_BETWEEN = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.NOT_BETWEEN, oFF.ComparisonOperator.NOT_BETWEEN.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_NOT_BETWEEN_TEXT, "    ");
	oFF.VdComparisonOperator.MATCH = oFF.VdComparisonOperator.createComparisonOperator(oFF.ComparisonOperator.MATCH, oFF.ComparisonOperator.MATCH.getName(), oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH, oFF.VariableDialogI18n.I18N_VD_COMPARISON_OPERATOR_MATCH_TEXT, "      ");
};
oFF.VdComparisonOperator.createComparisonOperator = function(originComparisonOperator, name, i18nKeyId, i18nKeyDescription, longTextSeparator)
{
	var newConstant = new oFF.VdComparisonOperator();
	newConstant._setupInternal(name);
	newConstant.m_originComparisonOperator = originComparisonOperator;
	newConstant.m_i18nKeyId = i18nKeyId;
	newConstant.m_i18nKeyDescription = i18nKeyDescription;
	newConstant.m_longTextSeparator = longTextSeparator;
	oFF.VdComparisonOperator.s_lookup.put(name, newConstant);
	return newConstant;
};
oFF.VdComparisonOperator.lookup = function(name, isExcluding)
{
	var operator = oFF.VdComparisonOperator.lookupExt(name, isExcluding);
	if (operator === oFF.VdComparisonOperator.MATCH)
	{
		return null;
	}
	return operator;
};
oFF.VdComparisonOperator.lookupExt = function(name, isExcluding)
{
	if (isExcluding)
	{
		if (oFF.XString.isEqual(name, oFF.ComparisonOperator.IS_NULL.getName()))
		{
			return oFF.VdComparisonOperator.IS_NOT_NULL;
		}
		if (oFF.XString.isEqual(name, oFF.ComparisonOperator.EQUAL.getName()))
		{
			return oFF.VdComparisonOperator.NOT_EQUAL;
		}
		if (oFF.XString.isEqual(name, oFF.ComparisonOperator.BETWEEN.getName()))
		{
			return oFF.VdComparisonOperator.NOT_BETWEEN;
		}
		return null;
	}
	return oFF.VdComparisonOperator.s_lookup.getByKey(name);
};
oFF.VdComparisonOperator.prototype.m_originComparisonOperator = null;
oFF.VdComparisonOperator.prototype.m_i18nKeyId = null;
oFF.VdComparisonOperator.prototype.m_i18nKeyDescription = null;
oFF.VdComparisonOperator.prototype.m_longTextSeparator = null;
oFF.VdComparisonOperator.prototype.getShortText = function(i18n)
{
	return i18n.getText(this.m_i18nKeyId);
};
oFF.VdComparisonOperator.prototype.getLongText = function(i18n)
{
	return oFF.notNull(this.m_i18nKeyDescription) ? oFF.XStringUtils.concatenate3(this.getShortText(i18n), this.m_longTextSeparator, i18n.getText(this.m_i18nKeyDescription)) : this.getShortText(i18n);
};
oFF.VdComparisonOperator.prototype.getNumberOfParameters = function()
{
	return this.m_originComparisonOperator.getNumberOfParameters();
};
oFF.VdComparisonOperator.prototype.getOriginOperator = function()
{
	return this.m_originComparisonOperator;
};
oFF.VdComparisonOperator.prototype.isNullOperator = function()
{
	return this === oFF.VdComparisonOperator.IS_NULL || this === oFF.VdComparisonOperator.IS_NOT_NULL;
};

oFF.VdValueFormat = function() {};
oFF.VdValueFormat.prototype = new oFF.XConstant();
oFF.VdValueFormat.prototype._ff_c = "VdValueFormat";

oFF.VdValueFormat.SAC = null;
oFF.VdValueFormat.DATA_QUERY_MODEL = null;
oFF.VdValueFormat.s_lookup = null;
oFF.VdValueFormat.staticSetup = function()
{
	oFF.VdValueFormat.s_lookup = oFF.XHashMapByString.create();
	oFF.VdValueFormat.SAC = oFF.VdValueFormat.create("sac", oFF.VdOrcaValueParser.createParser());
	oFF.VdValueFormat.DATA_QUERY_MODEL = oFF.VdValueFormat.create("dataQueryModel", oFF.VdUqmValueParser.createParser());
};
oFF.VdValueFormat.lookup = function(name)
{
	return oFF.VdValueFormat.s_lookup.getByKey(name);
};
oFF.VdValueFormat.create = function(name, parser)
{
	var obj = new oFF.VdValueFormat();
	obj._setupInternal(name);
	obj.m_parser = parser;
	oFF.VdValueFormat.s_lookup.put(name, obj);
	return obj;
};
oFF.VdValueFormat.prototype.m_parser = null;
oFF.VdValueFormat.prototype.getParser = function()
{
	return this.m_parser;
};

oFF.VdControllerState = function() {};
oFF.VdControllerState.prototype = new oFF.XConstant();
oFF.VdControllerState.prototype._ff_c = "VdControllerState";

oFF.VdControllerState.PRISTINE = null;
oFF.VdControllerState.DIRTY = null;
oFF.VdControllerState.PENDING = null;
oFF.VdControllerState.PROCESSED = null;
oFF.VdControllerState.staticSetup = function()
{
	oFF.VdControllerState.PENDING = oFF.VdControllerState.create("pending", 1);
	oFF.VdControllerState.DIRTY = oFF.VdControllerState.create("dirty", 2);
	oFF.VdControllerState.PROCESSED = oFF.VdControllerState.create("processed", 3);
	oFF.VdControllerState.PRISTINE = oFF.VdControllerState.create("pristine", 4);
};
oFF.VdControllerState.create = function(name, priority)
{
	var state = oFF.XConstant.setupName(new oFF.VdControllerState(), name);
	state.m_priority = priority;
	return state;
};
oFF.VdControllerState.getHigherPriority = function(first, second)
{
	return first.getPriority() <= second.getPriority() ? first : second;
};
oFF.VdControllerState.isCompleted = function(state)
{
	return state === oFF.VdControllerState.PRISTINE || state === oFF.VdControllerState.PROCESSED;
};
oFF.VdControllerState.prototype.m_priority = 0;
oFF.VdControllerState.prototype.getPriority = function()
{
	return this.m_priority;
};

oFF.VdVhMobileListItem = function() {};
oFF.VdVhMobileListItem.prototype = new oFF.DfNameTextObject();
oFF.VdVhMobileListItem.prototype._ff_c = "VdVhMobileListItem";

oFF.VdVhMobileListItem.VIEW_NAME = "vhMobileList";
oFF.VdVhMobileListItem.create = function(name, text, customObject)
{
	if (oFF.XStringUtils.isNullOrEmpty(name))
	{
		throw oFF.XException.createRuntimeException("Name is required for a VdVhMobileListItem instance!");
	}
	var obj = new oFF.VdVhMobileListItem();
	obj.setupWithNameText(name, text);
	obj.setupInternal(customObject);
	return obj;
};
oFF.VdVhMobileListItem.prototype.m_customObject = null;
oFF.VdVhMobileListItem.prototype.releaseObject = function()
{
	this.m_customObject = null;
	oFF.DfNameTextObject.prototype.releaseObject.call( this );
};
oFF.VdVhMobileListItem.prototype.setupInternal = function(customObject)
{
	this.m_customObject = customObject;
};
oFF.VdVhMobileListItem.prototype.getCustomObject = function()
{
	return this.m_customObject;
};

oFF.UiVdDialog = function() {};
oFF.UiVdDialog.prototype = new oFF.DfAppDialog();
oFF.UiVdDialog.prototype._ff_c = "UiVdDialog";

oFF.UiVdDialog.createDialog = function(uiManager)
{
	var obj = new oFF.UiVdDialog();
	obj.setupDialog(uiManager, "variablescreen");
	return obj;
};
oFF.UiVdDialog.prototype.m_dataProviderName = null;
oFF.UiVdDialog.prototype.m_vdController = null;
oFF.UiVdDialog.prototype.setDataProvider = function(name)
{
	this.m_dataProviderName = name;
	return this;
};
oFF.UiVdDialog.prototype.open = function()
{
	var olapEnv = this.getUiManager().getProcess().getEntity(oFF.ProcessEntity.OLAP_ENVIRONMENT);
	var varProcessor = olapEnv.getVariableProcessor();
	var dataProvider = this.findDataProvider(this.getUiManager());
	if (oFF.notNull(dataProvider))
	{
		varProcessor = dataProvider.getQueryManager().getVariableProcessor();
	}
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(this.getUiManager());
	var context = oFF.OlapUiContext.createContext(this.getUiManager(), displayFactory);
	var config = oFF.VdConfiguration.createConfig("Set Variables", varProcessor);
	this.m_vdController = oFF.VdVariableDialog.createAsDisplay(context, config, null);
	this.m_vdController.open();
	return this;
};
oFF.UiVdDialog.prototype.findDataProvider = function(uiManager)
{
	var app = uiManager.getProcess().getApplication();
	var dataProviders = app.getDataProviders();
	for (var i = 0; i < dataProviders.size(); i++)
	{
		var dp = dataProviders.get(i);
		if (oFF.XString.isEqual(dp.getDataProviderName(), this.m_dataProviderName))
		{
			return dp;
		}
	}
	return null;
};
oFF.UiVdDialog.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_vdController) && !this.m_vdController.isReleased())
	{
		this.m_vdController.close();
	}
	this.m_dataProviderName = null;
	this.m_vdController = oFF.XObjectExt.release(this.m_vdController);
	oFF.DfAppDialog.prototype.releaseObject.call( this );
};

oFF.VdOrcaScenario = function() {};
oFF.VdOrcaScenario.prototype = new oFF.XConstant();
oFF.VdOrcaScenario.prototype._ff_c = "VdOrcaScenario";

oFF.VdOrcaScenario.STORY = null;
oFF.VdOrcaScenario.ANALYTIC_APP = null;
oFF.VdOrcaScenario.LINKED_VARIABLE = null;
oFF.VdOrcaScenario.BOARD_ROOM = null;
oFF.VdOrcaScenario.PLANNING_SEQUENCE = null;
oFF.VdOrcaScenario.SCHEDULING = null;
oFF.VdOrcaScenario.s_lookup = null;
oFF.VdOrcaScenario.staticSetup = function()
{
	oFF.VdOrcaScenario.s_lookup = oFF.XHashMapByString.create();
	oFF.VdOrcaScenario.STORY = oFF.VdOrcaScenario.create("story");
	oFF.VdOrcaScenario.ANALYTIC_APP = oFF.VdOrcaScenario.create("analytic_app");
	oFF.VdOrcaScenario.LINKED_VARIABLE = oFF.VdOrcaScenario.create("linked_variable");
	oFF.VdOrcaScenario.BOARD_ROOM = oFF.VdOrcaScenario.create("board_room");
	oFF.VdOrcaScenario.PLANNING_SEQUENCE = oFF.VdOrcaScenario.create("planning_sequence");
	oFF.VdOrcaScenario.SCHEDULING = oFF.VdOrcaScenario.create("scheduling");
};
oFF.VdOrcaScenario.create = function(name)
{
	var scenario = oFF.XConstant.setupName(new oFF.VdOrcaScenario(), name);
	oFF.VdOrcaScenario.s_lookup.put(name, scenario);
	return scenario;
};
oFF.VdOrcaScenario.lookup = function(name)
{
	return oFF.VdOrcaScenario.s_lookup.getByKey(name);
};

oFF.OrcaLinkVarJoinMode = function() {};
oFF.OrcaLinkVarJoinMode.prototype = new oFF.XConstant();
oFF.OrcaLinkVarJoinMode.prototype._ff_c = "OrcaLinkVarJoinMode";

oFF.OrcaLinkVarJoinMode.INTERSECT = null;
oFF.OrcaLinkVarJoinMode.UNION = null;
oFF.OrcaLinkVarJoinMode.s_lookup = null;
oFF.OrcaLinkVarJoinMode.staticSetup = function()
{
	oFF.OrcaLinkVarJoinMode.s_lookup = oFF.XHashMapByString.create();
	oFF.OrcaLinkVarJoinMode.INTERSECT = oFF.OrcaLinkVarJoinMode.create("intersect");
	oFF.OrcaLinkVarJoinMode.UNION = oFF.OrcaLinkVarJoinMode.create("union");
};
oFF.OrcaLinkVarJoinMode.create = function(name)
{
	var obj = oFF.XConstant.setupName(new oFF.OrcaLinkVarJoinMode(), name);
	oFF.OrcaLinkVarJoinMode.s_lookup.put(obj.getName(), obj);
	return obj;
};
oFF.OrcaLinkVarJoinMode.lookup = function(name)
{
	return oFF.OrcaLinkVarJoinMode.s_lookup.getByKey(name);
};

oFF.OrcaLinkVarSubmitHandling = function() {};
oFF.OrcaLinkVarSubmitHandling.prototype = new oFF.XConstant();
oFF.OrcaLinkVarSubmitHandling.prototype._ff_c = "OrcaLinkVarSubmitHandling";

oFF.OrcaLinkVarSubmitHandling.NONE = null;
oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT = null;
oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE = null;
oFF.OrcaLinkVarSubmitHandling.s_lookup = null;
oFF.OrcaLinkVarSubmitHandling.staticSetup = function()
{
	oFF.OrcaLinkVarSubmitHandling.s_lookup = oFF.XHashMapByString.create();
	oFF.OrcaLinkVarSubmitHandling.NONE = oFF.OrcaLinkVarSubmitHandling.create("none");
	oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_DIRECT = oFF.OrcaLinkVarSubmitHandling.create("submitLinkedDirect");
	oFF.OrcaLinkVarSubmitHandling.SUBMIT_LINKED_RECURSIVE = oFF.OrcaLinkVarSubmitHandling.create("submitLinkedRecursive");
};
oFF.OrcaLinkVarSubmitHandling.create = function(name)
{
	var constant = oFF.XConstant.setupName(new oFF.OrcaLinkVarSubmitHandling(), name);
	oFF.OrcaLinkVarSubmitHandling.s_lookup.put(name, constant);
	return constant;
};
oFF.OrcaLinkVarSubmitHandling.lookupWithDefault = function(name)
{
	var constant = oFF.OrcaLinkVarSubmitHandling.s_lookup.getByKey(name);
	return oFF.notNull(constant) ? constant : oFF.OrcaLinkVarSubmitHandling.NONE;
};

oFF.FirstAidShell = function() {};
oFF.FirstAidShell.prototype = new oFF.DfProgram();
oFF.FirstAidShell.prototype._ff_c = "FirstAidShell";

oFF.FirstAidShell.DEFAULT_PROGRAM_NAME = "aid";
oFF.FirstAidShell.PARAM_COMMAND = "command";
oFF.FirstAidShell.COMMAND_LIST = "qms";
oFF.FirstAidShell.COMMAND_INVOKE = "invoke";
oFF.FirstAidShell.INVOKE_INDEX = "i";
oFF.FirstAidShell.INVOKE_METHOD = "m";
oFF.FirstAidShell.prototype.newProgram = function()
{
	var aid = new oFF.FirstAidShell();
	aid.setup();
	return aid;
};
oFF.FirstAidShell.prototype.getProgramName = function()
{
	return oFF.FirstAidShell.DEFAULT_PROGRAM_NAME;
};
oFF.FirstAidShell.prototype.getDefaultContainerType = function()
{
	return oFF.ProgramContainerType.CONSOLE;
};
oFF.FirstAidShell.prototype.setup = function()
{
	oFF.DfProgram.prototype.setup.call( this );
};
oFF.FirstAidShell.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfProgram.prototype.doSetupProgramMetadata.call( this , metadata);
	metadata.addParameter(oFF.FirstAidShell.PARAM_COMMAND, "What command to run");
	metadata.addOption(oFF.FirstAidShell.INVOKE_INDEX, "QM index to invoke on", null, oFF.XValueType.INTEGER);
	metadata.addOption(oFF.FirstAidShell.INVOKE_METHOD, "QM method to invoke", null, oFF.XValueType.STRING);
};
oFF.FirstAidShell.prototype.runProcess = function()
{
	var command = this.getArgumentStructure().getStringByKey(oFF.FirstAidShell.PARAM_COMMAND);
	if (oFF.XStringUtils.isNullOrEmpty(command))
	{
		this.printHelp();
	}
	else if (oFF.XString.isEqual(command, oFF.FirstAidShell.COMMAND_LIST))
	{
		this.printQmTable();
	}
	else if (oFF.XString.isEqual(command, oFF.FirstAidShell.COMMAND_INVOKE))
	{
		this.printInvoke();
	}
	return false;
};
oFF.FirstAidShell.prototype.printHelp = function()
{
	this.println(oFF.XStringUtils.concatenate2(oFF.FirstAidShell.COMMAND_LIST, " -> list all QueryManagers"));
	this.println(oFF.XStringUtils.concatenate2(oFF.FirstAidShell.COMMAND_INVOKE, " -> invoke method on QueryManager - aid invoke -i <index> -m <name>"));
};
oFF.FirstAidShell.prototype.printQmTable = function()
{
	var allQueryManager = this.getQueryManagers();
	for (var i = 0; i < allQueryManager.size(); i++)
	{
		var qm = allQueryManager.get(i);
		var buffer = oFF.XStringBuffer.create();
		buffer.appendInt(i).append(" ");
		buffer.append(qm.getName()).append(" ");
		buffer.append(qm.getDataSource().getFullQualifiedName()).append(" ");
		this.println(buffer.toString());
	}
};
oFF.FirstAidShell.prototype.printInvoke = function()
{
	var queryManagers = this.getQueryManagers();
	var qmIndex = this.getArgumentStructure().getIntegerByKeyExt(oFF.FirstAidShell.INVOKE_INDEX, -1);
	if (qmIndex < 0)
	{
		this.println("No valid index");
	}
	else if (qmIndex >= queryManagers.size())
	{
		this.println("Index out of bounds");
	}
	else
	{
		var method = this.getArgumentStructure().getStringByKey(oFF.FirstAidShell.INVOKE_METHOD);
		var engine = oFF.FAReflectionEngine.createEngine(queryManagers.get(qmIndex));
		var result = engine.invoke(method);
		if (result.hasErrors())
		{
			this.println(result.getSummary());
			return;
		}
		this.println(result.getData().toString());
	}
};
oFF.FirstAidShell.prototype.getQueryManagers = function()
{
	var olapEnvironment;
	try
	{
		var process = this.getSession();
		var parentProcess = process.getParentProcess();
		olapEnvironment = parentProcess.getEntity(oFF.ProcessEntity.OLAP_ENVIRONMENT);
	}
	catch (t)
	{
		this.println("No olap environment found");
		return oFF.XList.create();
	}
	if (oFF.isNull(olapEnvironment))
	{
		this.println("No olap environment found");
		return oFF.XList.create();
	}
	return olapEnvironment.getAllAreaQueryManager();
};

oFF.FieldContainerDisplay = function() {};
oFF.FieldContainerDisplay.prototype = new oFF.XConstant();
oFF.FieldContainerDisplay.prototype._ff_c = "FieldContainerDisplay";

oFF.FieldContainerDisplay.NO_DISPLAY = null;
oFF.FieldContainerDisplay.KEY_AND_TEXT = null;
oFF.FieldContainerDisplay.TEXT = null;
oFF.FieldContainerDisplay.KEY = null;
oFF.FieldContainerDisplay.TEXT_AND_KEY = null;
oFF.FieldContainerDisplay.DISPLAY = null;
oFF.FieldContainerDisplay.s_lookup = null;
oFF.FieldContainerDisplay.staticSetup = function()
{
	oFF.FieldContainerDisplay.s_lookup = oFF.XHashMapByString.create();
	oFF.FieldContainerDisplay.NO_DISPLAY = oFF.FieldContainerDisplay.create("NoDisplay", false, false);
	oFF.FieldContainerDisplay.KEY_AND_TEXT = oFF.FieldContainerDisplay.create("KeyAndText", true, true);
	oFF.FieldContainerDisplay.TEXT = oFF.FieldContainerDisplay.create("Text", false, true);
	oFF.FieldContainerDisplay.KEY = oFF.FieldContainerDisplay.create("Key", true, false);
	oFF.FieldContainerDisplay.TEXT_AND_KEY = oFF.FieldContainerDisplay.create("TextAndKey", true, true);
	oFF.FieldContainerDisplay.DISPLAY = oFF.FieldContainerDisplay.create("Display", false, false);
};
oFF.FieldContainerDisplay.create = function(name, key, text)
{
	var object = oFF.XConstant.setupName(new oFF.FieldContainerDisplay(), name);
	object.m_key = key;
	object.m_text = text;
	oFF.FieldContainerDisplay.s_lookup.put(name, object);
	return object;
};
oFF.FieldContainerDisplay.lookup = function(name)
{
	return oFF.FieldContainerDisplay.s_lookup.getByKey(name);
};
oFF.FieldContainerDisplay.prototype.m_key = false;
oFF.FieldContainerDisplay.prototype.m_text = false;
oFF.FieldContainerDisplay.prototype.isKey = function()
{
	return this.m_key;
};
oFF.FieldContainerDisplay.prototype.isText = function()
{
	return this.m_text;
};

oFF.FieldContainerKeyDisplay = function() {};
oFF.FieldContainerKeyDisplay.prototype = new oFF.XConstant();
oFF.FieldContainerKeyDisplay.prototype._ff_c = "FieldContainerKeyDisplay";

oFF.FieldContainerKeyDisplay.INTERNAL_KEY = null;
oFF.FieldContainerKeyDisplay.EXTERNAL_KEY = null;
oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY = null;
oFF.FieldContainerKeyDisplay.NON_COMPOUNDED_KEY = null;
oFF.FieldContainerKeyDisplay.s_lookup = null;
oFF.FieldContainerKeyDisplay.staticSetup = function()
{
	oFF.FieldContainerKeyDisplay.s_lookup = oFF.XHashMapByString.create();
	oFF.FieldContainerKeyDisplay.INTERNAL_KEY = oFF.FieldContainerKeyDisplay.create("InternalKey");
	oFF.FieldContainerKeyDisplay.EXTERNAL_KEY = oFF.FieldContainerKeyDisplay.create("ExternalKey");
	oFF.FieldContainerKeyDisplay.COMPOUNDED_KEY = oFF.FieldContainerKeyDisplay.create("CompoundedKey");
	oFF.FieldContainerKeyDisplay.NON_COMPOUNDED_KEY = oFF.FieldContainerKeyDisplay.create("NonCompoundedKey");
};
oFF.FieldContainerKeyDisplay.create = function(name)
{
	var object = oFF.XConstant.setupName(new oFF.FieldContainerKeyDisplay(), name);
	oFF.FieldContainerKeyDisplay.s_lookup.put(name, object);
	return object;
};
oFF.FieldContainerKeyDisplay.lookup = function(name)
{
	return oFF.FieldContainerKeyDisplay.s_lookup.getByKey(name);
};

oFF.DialogDisplayMode = function() {};
oFF.DialogDisplayMode.prototype = new oFF.XConstant();
oFF.DialogDisplayMode.prototype._ff_c = "DialogDisplayMode";

oFF.DialogDisplayMode.DIALOG = null;
oFF.DialogDisplayMode.NAVIGATION = null;
oFF.DialogDisplayMode.PAGE = null;
oFF.DialogDisplayMode.staticSetup = function()
{
	oFF.DialogDisplayMode.DIALOG = oFF.XConstant.setupName(new oFF.DialogDisplayMode(), "Dialog");
	oFF.DialogDisplayMode.NAVIGATION = oFF.XConstant.setupName(new oFF.DialogDisplayMode(), "Navigation");
	oFF.DialogDisplayMode.PAGE = oFF.XConstant.setupName(new oFF.DialogDisplayMode(), "Page");
};

oFF.DialogGridFormat = function() {};
oFF.DialogGridFormat.prototype = new oFF.XConstant();
oFF.DialogGridFormat.prototype._ff_c = "DialogGridFormat";

oFF.DialogGridFormat.SEMICOLON = null;
oFF.DialogGridFormat.COMMA = null;
oFF.DialogGridFormat.EXCEL = null;
oFF.DialogGridFormat.staticSetup = function()
{
	oFF.DialogGridFormat.SEMICOLON = oFF.DialogGridFormat.create("Semicolon", ";", " ");
	oFF.DialogGridFormat.COMMA = oFF.DialogGridFormat.create("Comma", ",", " ");
	oFF.DialogGridFormat.EXCEL = oFF.DialogGridFormat.create("Excel", "\t", "");
};
oFF.DialogGridFormat.create = function(name, separatorSymbol, decoratorSymbol)
{
	var obj = new oFF.DialogGridFormat();
	obj._setupInternal(name);
	obj.m_separatorSymbol = separatorSymbol;
	obj.m_decoratorSymbol = decoratorSymbol;
	return obj;
};
oFF.DialogGridFormat.prototype.m_separatorSymbol = null;
oFF.DialogGridFormat.prototype.m_decoratorSymbol = null;
oFF.DialogGridFormat.prototype.getSeparatorSymbol = function()
{
	return this.m_separatorSymbol;
};
oFF.DialogGridFormat.prototype.getDecoratorSymbol = function()
{
	return this.m_decoratorSymbol;
};

oFF.DialogLabelMode = function() {};
oFF.DialogLabelMode.prototype = new oFF.XConstant();
oFF.DialogLabelMode.prototype._ff_c = "DialogLabelMode";

oFF.DialogLabelMode.KEY = null;
oFF.DialogLabelMode.TEXT = null;
oFF.DialogLabelMode.KEY_AND_TEXT = null;
oFF.DialogLabelMode.staticSetup = function()
{
	oFF.DialogLabelMode.KEY = oFF.XConstant.setupName(new oFF.DialogLabelMode(), "Key");
	oFF.DialogLabelMode.TEXT = oFF.XConstant.setupName(new oFF.DialogLabelMode(), "Text");
	oFF.DialogLabelMode.KEY_AND_TEXT = oFF.XConstant.setupName(new oFF.DialogLabelMode(), "KeyAndText");
};

oFF.OlapUiReadMode = function() {};
oFF.OlapUiReadMode.prototype = new oFF.XConstant();
oFF.OlapUiReadMode.prototype._ff_c = "OlapUiReadMode";

oFF.OlapUiReadMode.BOOKED = null;
oFF.OlapUiReadMode.MASTER = null;
oFF.OlapUiReadMode.QUERY_DEFAULT = null;
oFF.OlapUiReadMode.staticSetup = function()
{
	oFF.OlapUiReadMode.BOOKED = oFF.XConstant.setupName(new oFF.OlapUiReadMode(), "booked");
	oFF.OlapUiReadMode.MASTER = oFF.XConstant.setupName(new oFF.OlapUiReadMode(), "master");
	oFF.OlapUiReadMode.QUERY_DEFAULT = oFF.XConstant.setupName(new oFF.OlapUiReadMode(), "default");
};

oFF.OuDummyView = function() {};
oFF.OuDummyView.prototype = new oFF.DfOuOlapView();
oFF.OuDummyView.prototype._ff_c = "OuDummyView";

oFF.OuDummyView.create = function(genesis, queryManager)
{
	var newView = new oFF.OuDummyView();
	newView.initOlapView(genesis, queryManager);
	return newView;
};
oFF.OuDummyView.prototype.setupOlapView = function(queryManager) {};
oFF.OuDummyView.prototype.buildViewUi = function(genesis)
{
	var dummyBtn = genesis.newControl(oFF.UiType.BUTTON);
	dummyBtn.setText("Dummy button");
	genesis.setRoot(dummyBtn);
};

oFF.COuPropertyModel = function() {};
oFF.COuPropertyModel.prototype = new oFF.COuProperty();
oFF.COuPropertyModel.prototype._ff_c = "COuPropertyModel";

oFF.COuPropertyModel.staticSetupModelProperty = function() {};
oFF.COuPropertyModel.sCreateModelProperty = function(name)
{
	var loInstance = new oFF.COuPropertyModel();
	loInstance.setupProperty(oFF.COuPropertyType.MODEL, name);
	return loInstance;
};

oFF.COuPropertySource = function() {};
oFF.COuPropertySource.prototype = new oFF.COuProperty();
oFF.COuPropertySource.prototype._ff_c = "COuPropertySource";

oFF.COuPropertySource.staticSetupSourceProperty = function() {};
oFF.COuPropertySource.sCreateSourceProperty = function(name)
{
	var loInstance = new oFF.COuPropertySource();
	loInstance.setupProperty(oFF.COuPropertyType.SOURCE, name);
	return loInstance;
};

oFF.OuModelAConditionThreshold = function() {};
oFF.OuModelAConditionThreshold.prototype = new oFF.OuModelACondition();
oFF.OuModelAConditionThreshold.prototype._ff_c = "OuModelAConditionThreshold";

oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD = null;
oFF.OuModelAConditionThreshold.staticSetupQueryConditionThreshold = function()
{
	oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD = oFF.COuPropertySource.sCreateSourceProperty("QueryConditionThreshold");
};
oFF.OuModelAConditionThreshold.prototype.handleSetSourceProperties = function(oSourceProperties)
{
	oFF.OuModelACondition.prototype.handleSetSourceProperties.call( this , oSourceProperties);
	var loQueryModel = this.getSourceQuery().getInternalObject();
	var lConditionName = this.getSourceCondition().getName();
	var loQueryConditionThreshold = oSourceProperties.getProperty(oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD);
	if (oFF.notNull(loQueryConditionThreshold))
	{
		loQueryModel = loQueryConditionThreshold.getQueryModel();
	}
	this.getSourceProperties().setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, loQueryModel);
	this.getSourceProperties().setProperty(oFF.OuModelACondition.SOURCE_QUERY_CONDITION_NAME, oFF.XStringValue.create(lConditionName));
	this.getSourceProperties().setProperty(oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD, loQueryConditionThreshold);
};
oFF.OuModelAConditionThreshold.prototype.getSourceThreshold = function()
{
	var loThreshold = null;
	var loInternalThreshold = this.getSourceProperties().getProperty(oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD);
	if (oFF.notNull(loInternalThreshold))
	{
		var loCondition = this.getSourceCondition();
		loThreshold = loCondition.getThresholds().getByKey(loInternalThreshold.getName());
	}
	if (oFF.isNull(loThreshold))
	{
		loThreshold = oFF.OuSourceConditionThreshold.sCreateConditionThreshold(this.getSourceCondition(), null);
	}
	return loThreshold;
};
oFF.OuModelAConditionThreshold.prototype.getName = function()
{
	var lName = null;
	var loThreshold = this.getSourceThreshold();
	if (oFF.notNull(loThreshold))
	{
		lName = loThreshold.getName();
	}
	return lName;
};
oFF.OuModelAConditionThreshold.prototype.releaseObject = function()
{
	oFF.OuModelACondition.prototype.releaseObject.call( this );
};

oFF.OuModelADimensionMember = function() {};
oFF.OuModelADimensionMember.prototype = new oFF.OuModelADimension();
oFF.OuModelADimensionMember.prototype._ff_c = "OuModelADimensionMember";

oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER = null;
oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER_NAME = null;
oFF.OuModelADimensionMember.staticSetupQueryDimensionMember = function()
{
	oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER = oFF.COuPropertySource.sCreateSourceProperty("QueryDimensionMember");
	oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER_NAME = oFF.COuPropertySource.sCreateSourceProperty("QueryDimensionMemberName");
};
oFF.OuModelADimensionMember.prototype.handleSetSourceProperties = function(oSourceProperties)
{
	oFF.OuModelADimension.prototype.handleSetSourceProperties.call( this , oSourceProperties);
	var loName;
	var loQueryModel = this.getSourceQuery().getInternalObject();
	var lDimensionName = this.getSourceDimension().getName();
	var lDimensionMemberName = null;
	loName = oSourceProperties.getProperty(oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER_NAME);
	if (oFF.notNull(loName))
	{
		lDimensionMemberName = loName.toString();
	}
	var loQueryDimensionMember = oSourceProperties.getProperty(oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER);
	if (oFF.notNull(loQueryDimensionMember))
	{
		lDimensionMemberName = loQueryDimensionMember.getName();
		lDimensionName = loQueryDimensionMember.getDimension().getName();
		loQueryModel = loQueryDimensionMember.getQueryModel();
	}
	this.getSourceProperties().setProperty(oFF.OuModelAQuery.SOURCE_QUERY_MODEL, loQueryModel);
	this.getSourceProperties().setProperty(oFF.OuModelADimension.SOURCE_QUERY_DIMENSION_NAME, oFF.XStringValue.create(lDimensionName));
	this.getSourceProperties().setProperty(oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER_NAME, oFF.XStringValue.create(lDimensionMemberName));
};
oFF.OuModelADimensionMember.prototype.getSourceDimensionMember = function()
{
	var loDimensionMember;
	var lName = null;
	var loName = this.getSourceProperties().getProperty(oFF.OuModelADimensionMember.SOURCE_QUERY_DIMENSION_MEMBER_NAME);
	if (oFF.notNull(loName))
	{
		lName = loName.toString();
	}
	var loDimension = this.getSourceDimension();
	loDimensionMember = loDimension.getDimensionMember(lName);
	if (oFF.isNull(loDimensionMember))
	{
		loDimensionMember = oFF.OuSourceDimensionMember.sCreateDimensionMember(this.getSourceDimension(), null);
	}
	return loDimensionMember;
};
oFF.OuModelADimensionMember.prototype.getName = function()
{
	var lName = null;
	var loDimensionMember = this.getSourceDimensionMember();
	if (oFF.notNull(loDimensionMember))
	{
		lName = loDimensionMember.getName();
	}
	return lName;
};
oFF.OuModelADimensionMember.prototype.releaseObject = function()
{
	oFF.OuModelADimension.prototype.releaseObject.call( this );
};

oFF.COuDisplayMode = function() {};
oFF.COuDisplayMode.prototype = new oFF.COuProperty();
oFF.COuDisplayMode.prototype._ff_c = "COuDisplayMode";

oFF.COuDisplayMode.DEFAULT = null;
oFF.COuDisplayMode.CREATE = null;
oFF.COuDisplayMode.CHANGE = null;
oFF.COuDisplayMode.DISPLAY = null;
oFF.COuDisplayMode.staticSetupDisplayMode = function()
{
	oFF.COuDisplayMode.DEFAULT = oFF.COuDisplayMode.create("Default");
	oFF.COuDisplayMode.CREATE = oFF.COuDisplayMode.create("Create");
	oFF.COuDisplayMode.CHANGE = oFF.COuDisplayMode.create("Change");
	oFF.COuDisplayMode.DISPLAY = oFF.COuDisplayMode.create("Display");
};
oFF.COuDisplayMode.create = function(name)
{
	var loInstance = new oFF.COuDisplayMode();
	loInstance.setupProperty(oFF.COuPropertyType.DEFAULT, name);
	return loInstance;
};

oFF.COuPropertyRenderingObject = function() {};
oFF.COuPropertyRenderingObject.prototype = new oFF.COuProperty();
oFF.COuPropertyRenderingObject.prototype._ff_c = "COuPropertyRenderingObject";

oFF.COuPropertyRenderingObject.DISPLAY_MODE = null;
oFF.COuPropertyRenderingObject.MODEL = null;
oFF.COuPropertyRenderingObject.staticSetupRenderingObjectProperty = function()
{
	oFF.COuPropertyRenderingObject.DISPLAY_MODE = oFF.COuPropertyRenderingObject.sCreateRenderingObjectProperty("DisplayMode");
	oFF.COuPropertyRenderingObject.MODEL = oFF.COuPropertyRenderingObject.sCreateRenderingObjectProperty("Model");
};
oFF.COuPropertyRenderingObject.sCreateRenderingObjectProperty = function(name)
{
	var loInstance = new oFF.COuPropertyRenderingObject();
	loInstance.setupProperty(oFF.COuPropertyType.RENDERING_OBJECT, name);
	return loInstance;
};

oFF.COuConditionObject = function() {};
oFF.COuConditionObject.prototype = new oFF.COuObject();
oFF.COuConditionObject.prototype._ff_c = "COuConditionObject";

oFF.COuConditionObject.DIALOG_CONDITIONS = null;
oFF.COuConditionObject.DIALOG_CONDITION = null;
oFF.COuConditionObject.VIEW_CONDITIONS = null;
oFF.COuConditionObject.VIEW_CONDITION = null;
oFF.COuConditionObject.VIEW_CONDITION_THRESHOLDS = null;
oFF.COuConditionObject.VIEW_CONDITION_THRESHOLD = null;
oFF.COuConditionObject.VIEW_CONDITION_EVALUATION = null;
oFF.COuConditionObject.CONDITIONS = null;
oFF.COuConditionObject.CONDITION = null;
oFF.COuConditionObject.CONDITION_THRESHOLDS = null;
oFF.COuConditionObject.CONDITION_THRESHOLD = null;
oFF.COuConditionObject.CONDITION_EVALUATION = null;
oFF.COuConditionObject.CONDITION_EVALUATION_DIMENSION = null;
oFF.COuConditionObject.staticSetupConditionObject = function()
{
	oFF.COuConditionObject.DIALOG_CONDITIONS = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuDialogConditions.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.DIALOG_CONDITION = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuDialogCondition.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.VIEW_CONDITIONS = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuViewConditions.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.VIEW_CONDITION = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuViewCondition.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.VIEW_CONDITION_THRESHOLDS = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuViewConditionThresholds.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.VIEW_CONDITION_THRESHOLD = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuViewConditionThreshold.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.VIEW_CONDITION_EVALUATION = oFF.XConstant.setupName(new oFF.COuConditionObject(), oFF.OuViewConditionEvaluation.DEFAULT_PROGRAM_NAME);
	oFF.COuConditionObject.CONDITIONS = oFF.XConstant.setupName(new oFF.COuConditionObject(), "Conditions");
	oFF.COuConditionObject.CONDITION = oFF.XConstant.setupName(new oFF.COuConditionObject(), "Condition");
	oFF.COuConditionObject.CONDITION_THRESHOLDS = oFF.XConstant.setupName(new oFF.COuConditionObject(), "Thresholds");
	oFF.COuConditionObject.CONDITION_THRESHOLD = oFF.XConstant.setupName(new oFF.COuConditionObject(), "Threshold");
	oFF.COuConditionObject.CONDITION_EVALUATION = oFF.XConstant.setupName(new oFF.COuConditionObject(), "ConditionEvaluation");
	oFF.COuConditionObject.CONDITION_EVALUATION_DIMENSION = oFF.XConstant.setupName(new oFF.COuConditionObject(), "ConditionEvaluationDimension");
};

oFF.OuModelCondition = function() {};
oFF.OuModelCondition.prototype = new oFF.OuModelACondition();
oFF.OuModelCondition.prototype._ff_c = "OuModelCondition";

oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION = null;
oFF.OuModelCondition.PROPERTY_CONDITION_ACTIVE = null;
oFF.OuModelCondition.PROPERTY_CONDITION_THRESHOLDS = null;
oFF.OuModelCondition.PROPERTY_CONDITION_EVALUATION = null;
oFF.OuModelCondition.PROPERTY_CONDITION_SELECTED = null;
oFF.OuModelCondition.staticSetupCondition = function()
{
	oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION = oFF.COuPropertyModel.sCreateModelProperty("Description");
	oFF.OuModelCondition.PROPERTY_CONDITION_ACTIVE = oFF.COuPropertyModel.sCreateModelProperty("Active");
	oFF.OuModelCondition.PROPERTY_CONDITION_THRESHOLDS = oFF.COuPropertyModel.sCreateModelProperty("Thresholds");
	oFF.OuModelCondition.PROPERTY_CONDITION_EVALUATION = oFF.COuPropertyModel.sCreateModelProperty("Evaluation");
	oFF.OuModelCondition.PROPERTY_CONDITION_SELECTED = oFF.COuPropertyModel.sCreateModelProperty("Selected");
};
oFF.OuModelCondition.prototype.m_oThresholds = null;
oFF.OuModelCondition.prototype.m_oEvaluation = null;
oFF.OuModelCondition.prototype.handleSetModelProperties = function()
{
	var loSourceCondition = this.getSourceCondition();
	var loModelProperties = this.getModelProperties();
	this.setText(loSourceCondition.getText());
	this.setIsActive(loSourceCondition.isActive());
	var loThresholds = this.getEnvironment().createModel(new oFF.OuModelConditionThresholds(), this.getSourceProperties());
	this.m_oThresholds = oFF.OuModelPropertyModel.sCreateModelPropertyModel(this, oFF.OuModelCondition.PROPERTY_CONDITION_THRESHOLDS, loThresholds);
	loModelProperties.setProperty(oFF.OuModelCondition.PROPERTY_CONDITION_THRESHOLDS, this.m_oThresholds);
	var loEvaluation = this.getEnvironment().createModel(new oFF.OuModelConditionEvaluation(), this.getSourceProperties());
	this.m_oEvaluation = oFF.OuModelPropertyModel.sCreateModelPropertyModel(this, oFF.OuModelCondition.PROPERTY_CONDITION_THRESHOLDS, loEvaluation);
	loModelProperties.setProperty(oFF.OuModelCondition.PROPERTY_CONDITION_EVALUATION, this.m_oEvaluation);
};
oFF.OuModelCondition.prototype.getName = function()
{
	var lName = oFF.OuModelACondition.prototype.getName.call( this );
	if (oFF.isNull(lName))
	{
		lName = oFF.COuConditionObject.CONDITION.getName();
	}
	return lName;
};
oFF.OuModelCondition.prototype.getText = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION).toString();
};
oFF.OuModelCondition.prototype.setText = function(text)
{
	this.getModelProperties().setProperty(oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION, oFF.XStringValue.create(text));
};
oFF.OuModelCondition.prototype.isActive = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelCondition.PROPERTY_CONDITION_ACTIVE).getBoolean();
};
oFF.OuModelCondition.prototype.setIsActive = function(active)
{
	this.getModelProperties().setProperty(oFF.OuModelCondition.PROPERTY_CONDITION_ACTIVE, oFF.XBooleanValue.create(active));
};
oFF.OuModelCondition.prototype.getThresholdManager = function()
{
	return this.m_oThresholds.get();
};
oFF.OuModelCondition.prototype.getEvaluation = function()
{
	return this.m_oEvaluation.get();
};
oFF.OuModelCondition.prototype.isSelected = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelCondition.PROPERTY_CONDITION_SELECTED).getBoolean();
};
oFF.OuModelCondition.prototype.setSelected = function(selected)
{
	this.getModelProperties().setProperty(oFF.OuModelCondition.PROPERTY_CONDITION_SELECTED, oFF.XBooleanValue.create(selected));
};
oFF.OuModelCondition.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	if (oFF.XStringUtils.isNullOrEmpty(this.getName()))
	{
		loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_NAME, null, oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION);
	}
	if (oFF.XStringUtils.isNullOrEmpty(this.getText()))
	{
		loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_MISSING_DESCRIPTION, null, oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION);
	}
	this.getThresholdManager().validate();
	this.getEvaluation().validate();
};
oFF.OuModelCondition.prototype.handleSubmit = function()
{
	var loSourceCondition = this.getSourceCondition();
	loSourceCondition.setText(this.getText());
	loSourceCondition.setActive(this.isActive());
	this.getThresholdManager().submit();
	this.getEvaluation().submit();
};
oFF.OuModelCondition.prototype.releaseObject = function()
{
	oFF.OuModelACondition.prototype.releaseObject.call( this );
	this.m_oThresholds = oFF.XObjectExt.release(this.m_oThresholds);
	this.m_oEvaluation = oFF.XObjectExt.release(this.m_oEvaluation);
};

oFF.OuModelConditionEvaluation = function() {};
oFF.OuModelConditionEvaluation.prototype = new oFF.OuModelACondition();
oFF.OuModelConditionEvaluation.prototype._ff_c = "OuModelConditionEvaluation";

oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_TYPE = null;
oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_DIMENSIONS = null;
oFF.OuModelConditionEvaluation.staticSetupConditionEvaluation = function()
{
	oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_TYPE = oFF.COuPropertyModel.sCreateModelProperty("EvaluationType");
	oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_DIMENSIONS = oFF.COuPropertyModel.sCreateModelProperty("EvaluationDimensions");
};
oFF.OuModelConditionEvaluation.prototype.handleSetModelProperties = function()
{
	var loCondition = this.getSourceCondition();
	var loModelProperties = this.getModelProperties();
	this.setEvaluationType(loCondition.getEvaluationType());
	var ltEvaluationDimensions = oFF.XListOfNameObject.create();
	ltEvaluationDimensions.addAll(loCondition.getEvaluationDimensions());
	loModelProperties.setProperty(oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_DIMENSIONS, ltEvaluationDimensions);
};
oFF.OuModelConditionEvaluation.prototype.getSupportedEvaluationTypes = function()
{
	var ltEvaluationTypes = oFF.XListOfNameObject.create();
	var ltSupportedEvaluationTypes = this.getSourceCondition().getSupportedEvaluationTypes();
	var loSupportedEvaluationTypeIterator = ltSupportedEvaluationTypes.getIterator();
	while (loSupportedEvaluationTypeIterator.hasNext())
	{
		var lSupportedEvaluationType = loSupportedEvaluationTypeIterator.next();
		if (oFF.isNull(lSupportedEvaluationType))
		{
			continue;
		}
		var loText = null;
		if (lSupportedEvaluationType === oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_ALL;
		}
		else if (lSupportedEvaluationType === oFF.ConditionDimensionEvaluationType.MOST_DETAILED_ON_ROWS)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_ROWS;
		}
		else if (lSupportedEvaluationType === oFF.ConditionDimensionEvaluationType.MOST_DETAILED_ON_COLS)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_MOST_DETAILED_ON_COLS;
		}
		else if (lSupportedEvaluationType === oFF.ConditionDimensionEvaluationType.GIVEN_LIST)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE_INDIVIDUAL;
		}
		var lText = null;
		if (oFF.notNull(loText))
		{
			lText = this.getEnvironment().getLocalization().getText(loText.getId());
		}
		ltEvaluationTypes.add(oFF.XNameTextObject.create(lSupportedEvaluationType.getName(), lText));
	}
	return ltEvaluationTypes;
};
oFF.OuModelConditionEvaluation.prototype.getEvaluationType = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_TYPE);
};
oFF.OuModelConditionEvaluation.prototype.setEvaluationType = function(evaluationType)
{
	var lEvaluationType = evaluationType;
	if (oFF.isNull(evaluationType))
	{
		lEvaluationType = oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN;
	}
	this.getModelProperties().setProperty(oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_TYPE, lEvaluationType);
};
oFF.OuModelConditionEvaluation.prototype.getSupportedEvaluationDimensions = function()
{
	return this.getSourceCondition().getSupportedEvaluationDimensions();
};
oFF.OuModelConditionEvaluation.prototype.getEvaluationDimensions = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_DIMENSIONS);
};
oFF.OuModelConditionEvaluation.prototype.clearEvaluationDimensions = function()
{
	var ltDimensions = this.getEvaluationDimensions();
	ltDimensions.clear();
};
oFF.OuModelConditionEvaluation.prototype.addEvaluationDimension = function(oDimension)
{
	if (oFF.isNull(oDimension))
	{
		return;
	}
	var ltDimensions = this.getEvaluationDimensions();
	if (!ltDimensions.contains(oDimension))
	{
		ltDimensions.add(oDimension);
	}
};
oFF.OuModelConditionEvaluation.prototype.removeEvaluationDimension = function(oDimension)
{
	if (oFF.isNull(oDimension))
	{
		return;
	}
	var ltDimensions = this.getEvaluationDimensions();
	if (!ltDimensions.contains(oDimension))
	{
		ltDimensions.removeElement(oDimension);
	}
};
oFF.OuModelConditionEvaluation.prototype.handleValidate = function() {};
oFF.OuModelConditionEvaluation.prototype.handleSubmit = function()
{
	var loSourceCondition = this.getSourceCondition();
	loSourceCondition.setEvaluationType(this.getEvaluationType());
	loSourceCondition.setEvaluationDimensions(this.getEvaluationDimensions());
};
oFF.OuModelConditionEvaluation.prototype.releaseObject = function()
{
	oFF.OuModelACondition.prototype.releaseObject.call( this );
};

oFF.OuModelConditionThresholds = function() {};
oFF.OuModelConditionThresholds.prototype = new oFF.OuModelACondition();
oFF.OuModelConditionThresholds.prototype._ff_c = "OuModelConditionThresholds";

oFF.OuModelConditionThresholds.PROPERTY_CONDITION_THRESHOLDS = null;
oFF.OuModelConditionThresholds.staticSetupConditionThresholds = function()
{
	oFF.OuModelConditionThresholds.PROPERTY_CONDITION_THRESHOLDS = oFF.COuPropertyModel.sCreateModelProperty("Thresholds");
};
oFF.OuModelConditionThresholds.prototype.m_oThresholds = null;
oFF.OuModelConditionThresholds.prototype.handleSetModelProperties = function()
{
	var loSourceCondition = this.getSourceCondition();
	var loModelProperties = this.getModelProperties();
	this.m_oThresholds = oFF.OuModelPropertyModelList.sCreateModelPropertyModelList(this, oFF.OuModelConditionThresholds.PROPERTY_CONDITION_THRESHOLDS);
	loModelProperties.setProperty(oFF.OuModelConditionThresholds.PROPERTY_CONDITION_THRESHOLDS, this.m_oThresholds);
	var ltSourceThresholds = loSourceCondition.getThresholds();
	var loSourceThresholdIterator = ltSourceThresholds.getIterator();
	while (loSourceThresholdIterator.hasNext())
	{
		var loSourceThreshold = loSourceThresholdIterator.next();
		if (oFF.isNull(loSourceThreshold))
		{
			continue;
		}
		var loThreshold = this.createThreshold();
		this.addThreshold(loThreshold);
	}
};
oFF.OuModelConditionThresholds.prototype.getThresholds = function()
{
	return this.m_oThresholds.getAll();
};
oFF.OuModelConditionThresholds.prototype.getThreshold = function(name)
{
	return this.m_oThresholds.get(name);
};
oFF.OuModelConditionThresholds.prototype.clearThresholds = function()
{
	this.m_oThresholds.clear();
};
oFF.OuModelConditionThresholds.prototype.addThreshold = function(oThreshold)
{
	this.m_oThresholds.add(oThreshold);
};
oFF.OuModelConditionThresholds.prototype.removeThreshold = function(oThreshold)
{
	this.m_oThresholds.remove(oThreshold);
};
oFF.OuModelConditionThresholds.prototype.createThreshold = function()
{
	var loSourceProperties = this.getSourceProperties().clone();
	var loThreshold = this.getEnvironment().createModel(new oFF.OuModelConditionThreshold(), loSourceProperties);
	return loThreshold;
};
oFF.OuModelConditionThresholds.prototype.getSelections = function()
{
	var ltSelectedThresholds = oFF.XList.create();
	var ltThresholds = this.getThresholds();
	var loThresholdIterator = ltThresholds.getIterator();
	while (loThresholdIterator.hasNext())
	{
		var loThreshold = loThresholdIterator.next();
		if (oFF.isNull(loThreshold))
		{
			continue;
		}
		if (loThreshold.isSelected())
		{
			ltSelectedThresholds.add(loThreshold);
		}
	}
	return ltSelectedThresholds;
};
oFF.OuModelConditionThresholds.prototype.clearSelections = function()
{
	var ltThresholds = this.getThresholds();
	var loThresholdIterator = ltThresholds.getIterator();
	while (loThresholdIterator.hasNext())
	{
		var loThreshold = loThresholdIterator.next();
		if (oFF.isNull(loThreshold))
		{
			continue;
		}
		loThreshold.setSelected(false);
	}
};
oFF.OuModelConditionThresholds.prototype.isItemSelected = function(oSelectedItem)
{
	return oSelectedItem.isSelected();
};
oFF.OuModelConditionThresholds.prototype.selectItem = function(oSelectedItem)
{
	var ltThresholds = this.getThresholds();
	var loThresholdIterator = ltThresholds.getIterator();
	while (loThresholdIterator.hasNext())
	{
		var loThreshold = loThresholdIterator.next();
		if (oFF.isNull(loThreshold))
		{
			continue;
		}
		if (loThreshold === oSelectedItem)
		{
			loThreshold.setSelected(true);
		}
	}
};
oFF.OuModelConditionThresholds.prototype.handleValidate = function()
{
	var ltThresholds = this.getThresholds();
	var loThresholdIterator = ltThresholds.getIterator();
	while (loThresholdIterator.hasNext())
	{
		var loThreshold = loThresholdIterator.next();
		if (oFF.isNull(loThreshold))
		{
			continue;
		}
		loThreshold.validate();
	}
};
oFF.OuModelConditionThresholds.prototype.handleSubmit = function()
{
	var loSourceCondition = this.getSourceCondition();
	loSourceCondition.clearThresholds();
	var ltThresholds = this.getThresholds();
	var loThresholdIterator = ltThresholds.getIterator();
	while (loThresholdIterator.hasNext())
	{
		var loThreshold = loThresholdIterator.next();
		if (oFF.isNull(loThreshold))
		{
			continue;
		}
		var loSourceThreshold = loSourceCondition.createThreshold();
		if (oFF.notNull(loSourceThreshold))
		{
			loThreshold.getSourceProperties().setProperty(oFF.OuModelAConditionThreshold.SOURCE_QUERY_CONDITION_THRESHOLD, loSourceThreshold.getInternalObject());
			loThreshold.submit();
		}
	}
};
oFF.OuModelConditionThresholds.prototype.releaseObject = function()
{
	oFF.OuModelACondition.prototype.releaseObject.call( this );
	this.m_oThresholds = oFF.XObjectExt.release(this.m_oThresholds);
};

oFF.FdDateRangesView = function() {};
oFF.FdDateRangesView.prototype = new oFF.FdRangesView();
oFF.FdDateRangesView.prototype._ff_c = "FdDateRangesView";

oFF.FdDateRangesView.createDateRangeView = function(controller, model, context)
{
	var fdView = new oFF.FdDateRangesView();
	fdView.setupView(controller, model, context);
	return fdView;
};
oFF.FdDateRangesView.prototype.createLayout = function()
{
	return oFF.FdDateRangesLayout.createDateRangeLayout();
};
oFF.FdDateRangesView.prototype.createRange = function(item)
{
	return oFF.FdComponentDateRange.create(this.m_model, this.m_context, item);
};
oFF.FdDateRangesView.prototype.isValidItem = function(item)
{
	return oFF.isNull(item) || item.getType() === oFF.FdItemType.DATE_RANGE_FIXED || item.getType() === oFF.FdItemType.DATE_RANGE_DYNAMIC;
};

oFF.FdMeasureBasedView = function() {};
oFF.FdMeasureBasedView.prototype = new oFF.FdRangesView();
oFF.FdMeasureBasedView.prototype._ff_c = "FdMeasureBasedView";

oFF.FdMeasureBasedView.createMeasureBasedView = function(controller, model, context)
{
	var fdView = new oFF.FdMeasureBasedView();
	fdView.setupView(controller, model, context);
	return fdView;
};
oFF.FdMeasureBasedView.prototype.createLayout = function()
{
	return oFF.FdMeasureBasedLayout.createMeasureBasedLayout();
};
oFF.FdMeasureBasedView.prototype.getMeasureBasedLayout = function()
{
	return this.m_layout;
};
oFF.FdMeasureBasedView.prototype.publishSelectedItems = function()
{
	oFF.FdRangesView.prototype.publishSelectedItems.call( this );
	var layout = this.getMeasureBasedLayout();
	var rangeModel = this.m_model.getRangeModel();
	var dimContext = rangeModel.getDimContext();
	var dimContextValues = rangeModel.getAvailableDimContextValues();
	if (dimContext.isEmpty() && dimContextValues.hasElements())
	{
		dimContext.add(dimContextValues.get(0).getName());
	}
	var dimContextComboBox = layout.getDimContextComboBox();
	dimContextComboBox.registerOnSelectionChange(this);
	dimContextComboBox.clearItems();
	oFF.XCollectionUtils.forEach(dimContextValues,  function(dimContextValue){
		var dimName = dimContextValue.getName();
		var dimText = dimContextValue.getValue();
		oFF.FdLayoutUtils.addDropdownItem(dimContextComboBox, dimName, oFF.XStringUtils.isNotNullAndNotEmpty(dimText) ? dimText : dimName, null);
	}.bind(this));
	oFF.XCollectionUtils.forEachString(dimContext,  function(contextValue){
		dimContextComboBox.addSelectedItem(dimContextComboBox.getItemByName(contextValue));
	}.bind(this));
	var measureContextValues = rangeModel.getAvailableMeasureContextValues();
	if (measureContextValues.hasElements())
	{
		var measureContextDropdown = layout.getMeasureContextDropdown();
		measureContextDropdown.registerOnSelect(this);
		measureContextDropdown.clearItems();
		oFF.XCollectionUtils.forEach(measureContextValues,  function(measureContextValue){
			var measureName = measureContextValue.getName();
			var measureText = measureContextValue.getValue();
			oFF.FdLayoutUtils.addDropdownItem(measureContextDropdown, measureName, oFF.XStringUtils.isNotNullAndNotEmpty(measureText) ? measureText : measureName, null);
		}.bind(this));
		measureContextDropdown.setSelectedName(rangeModel.getMeasureContext());
		layout.setMeasureContextVisible(true);
	}
	else
	{
		layout.setMeasureContextVisible(false);
	}
};
oFF.FdMeasureBasedView.prototype.onSelectionChange = function(event)
{
	var selectedItem = event.getSelectedItem();
	if (oFF.notNull(selectedItem))
	{
		if (this.getMeasureBasedLayout().getDimContextComboBox().getSelectedItems().contains(selectedItem))
		{
			oFF.XCollectionUtils.addIfNotPresent(this.m_model.getRangeModel().getDimContext(), selectedItem.getName());
		}
		else
		{
			this.m_model.getRangeModel().getDimContext().removeElement(selectedItem.getName());
		}
		this.getMeasureBasedLayout().updateDimContextState();
	}
};
oFF.FdMeasureBasedView.prototype.onSelect = function(event)
{
	this.m_model.getRangeModel().setMeasureContext(event.getSelectedName());
};
oFF.FdMeasureBasedView.prototype.validate = function()
{
	return oFF.FdRangesView.prototype.validate.call( this ) && (this.m_model.getRangeModel().getDimContext().hasElements() || this.m_ranges.isEmpty());
};

oFF.VdVariantPopupBase = function() {};
oFF.VdVariantPopupBase.prototype = new oFF.UiFormPopup();
oFF.VdVariantPopupBase.prototype._ff_c = "VdVariantPopupBase";

oFF.VdVariantPopupBase.INPUT_FLEX = "2 0 200px";
oFF.VdVariantPopupBase.SCOPE_FLEX = "1 0 120px";
oFF.VdVariantPopupBase.COMPONENT_NAME = "VariantPopup";
oFF.VdVariantPopupBase.TITLE_SECTION = "titleSection";
oFF.VdVariantPopupBase.PROPERY_NAME = "variantName";
oFF.VdVariantPopupBase.PROPERY_TEXT = "variantText";
oFF.VdVariantPopupBase.PROPERY_SCOPE = "variantScope";
oFF.VdVariantPopupBase.prototype.s_sectionId = 0;
oFF.VdVariantPopupBase.prototype.m_i18n = null;
oFF.VdVariantPopupBase.prototype.m_manager = null;
oFF.VdVariantPopupBase.prototype.m_processor = null;
oFF.VdVariantPopupBase.prototype.setupPopupBase = function(manager, processor)
{
	this.m_manager = manager;
	this.m_processor = processor;
	this.m_i18n = this.m_manager.getUiContext().getLocalization();
};
oFF.VdVariantPopupBase.prototype.releaseObject = function()
{
	this.m_manager = null;
	this.m_processor = null;
	this.m_i18n = null;
	oFF.UiFormPopup.prototype.releaseObject.call( this );
};
oFF.VdVariantPopupBase.prototype.configurePopup = function(dialog)
{
	oFF.UiFormPopup.prototype.configurePopup.call( this , dialog);
	dialog.addCssClass("ffVariantPopup");
	dialog.setWidth(oFF.UiCssLength.create("720px"));
	this.setSubmitButtonIcon(null);
	this.setSubmitButtonText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_SAVE));
	this.setCancelButtonIcon(null);
	this.setCancelButtonText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL));
};
oFF.VdVariantPopupBase.prototype.addTitleSection = function()
{
	if (this.getGenesis().getUiManager().getDeviceInfo().isSmartphone())
	{
		return null;
	}
	var titleSection = this.addFormSection(oFF.VdVariantPopupBase.TITLE_SECTION, null, true);
	if (this.getGenesis().getUiManager().getDeviceInfo().isTablet())
	{
		titleSection.setFlex("0 0 auto");
	}
	var textLabel = titleSection.addFormLabel(null, this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_NAME), null);
	textLabel.setRequired(true);
	textLabel.setFlex(oFF.VdVariantPopupBase.INPUT_FLEX);
	var scopeLabel = titleSection.addFormLabel(null, this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_TYPE), null);
	scopeLabel.setFlex(oFF.VdVariantPopupBase.SCOPE_FLEX);
	var nameLabel = titleSection.addFormLabel(null, this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME), null);
	nameLabel.setRequired(true);
	nameLabel.setFlex(oFF.VdVariantPopupBase.INPUT_FLEX);
	return titleSection;
};
oFF.VdVariantPopupBase.prototype.addVariantSectionBase = function(name, text, scope)
{
	var sectionName = oFF.XStringUtils.concatenate2("variantSection", oFF.XInteger.convertToString(this.s_sectionId));
	this.s_sectionId++;
	var section = this.addFormSection(sectionName, null, true);
	section.addCssClass("ffVariantSection");
	section.showSectionMarkerDuringValidation(false);
	var deviceInfo = this.getGenesis().getUiManager().getDeviceInfo();
	var placeHolderText = null;
	var placeHolderName = null;
	if (deviceInfo.isTablet() || deviceInfo.isSmartphone())
	{
		section.setFlex("0 0 auto");
		if (deviceInfo.isSmartphone())
		{
			placeHolderText = this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_NAME);
			placeHolderName = this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME);
		}
	}
	var textItem = section.addInput(oFF.VdVariantPopupBase.PROPERY_TEXT, text, null, placeHolderText, null, null);
	textItem.setRequired(true);
	textItem.setFlex(oFF.VdVariantPopupBase.INPUT_FLEX);
	textItem.setCustomRequiredText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_NAME_REQUIRED));
	var scopeItem = section.addDropdown(oFF.VdVariantPopupBase.PROPERY_SCOPE, scope.getName(), null, this.getVariantScopes(), false);
	scopeItem.setFlex(oFF.VdVariantPopupBase.SCOPE_FLEX);
	scopeItem.setValueChangedConsumer( function(key, newValue){
		this.onScopeChange(section, scopeItem);
	}.bind(this));
	var nameItem = section.addInput(oFF.VdVariantPopupBase.PROPERY_NAME, name, null, placeHolderName, null, null);
	nameItem.setRequired(true);
	nameItem.setFlex(oFF.VdVariantPopupBase.INPUT_FLEX);
	nameItem.setCustomRequiredText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_REQUIRED));
	nameItem.setEnabled(false);
	this.updateNameItem(section, name, scope);
	return section;
};
oFF.VdVariantPopupBase.prototype.updateSectionTexts = function(section, name, text, scope)
{
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT).setValue(oFF.XStringValue.create(text));
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE).setValue(oFF.XStringValue.create(scope.getName()));
	this.updateNameItem(section, name, scope);
};
oFF.VdVariantPopupBase.prototype.updateNameItem = function(section, name, scope)
{
	var isUserScope = scope === oFF.Scope.USER;
	var displayName = isUserScope ? this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_GENERATED_ID) : name;
	var nameItem = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	nameItem.setValue(oFF.XStringValue.create(displayName));
	if (isUserScope)
	{
		nameItem.addCssClass("VdVariantNameInputAutoGenerated");
	}
	else
	{
		nameItem.removeCssClass("VdVariantNameInputAutoGenerated");
	}
	nameItem.setValid();
};
oFF.VdVariantPopupBase.prototype.onScopeChange = function(section, scopeItem)
{
	var scope = oFF.Scope.lookupByName(scopeItem.getValue().getStringRepresentation());
	var personal = scope === oFF.Scope.USER;
	this.updateNameItem(section, null, scope);
	var nameItem = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	nameItem.setEnabled(!personal);
};
oFF.VdVariantPopupBase.prototype.getVariantScopes = function()
{
	var i18n = this.m_manager.getUiContext().getLocalization();
	var tmpTypeMap = oFF.XHashMapOfStringByString.create();
	tmpTypeMap.put(oFF.Scope.USER.getName(), i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_PERSONAL));
	tmpTypeMap.put(oFF.Scope.GLOBAL.getName(), i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_GLOBAL));
	return tmpTypeMap;
};
oFF.VdVariantPopupBase.prototype.validateTechnicalName = function(formItem, ignoreVariant)
{
	var variants = this.m_processor.getVariableVariants();
	var userInput = formItem.getValue().getStringRepresentation();
	if (oFF.isNull(ignoreVariant) || !oFF.XString.isEqual(oFF.XString.toLowerCase(userInput), oFF.XString.toLowerCase(ignoreVariant.getName())))
	{
		var duplicate = oFF.XStream.of(variants).anyMatch( function(variant){
			return oFF.XString.isEqual(oFF.XString.toLowerCase(variant.getName()), oFF.XString.toLowerCase(userInput));
		}.bind(this));
		if (duplicate)
		{
			var i18n = this.m_manager.getUiContext().getLocalization();
			formItem.setInvalid(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_TECHNICAL_NAME_UNIQUE));
			return false;
		}
	}
	formItem.setValid();
	return true;
};
oFF.VdVariantPopupBase.prototype.validateDisplayName = function(formItem, ignoreVariant)
{
	var variants = this.m_processor.getVariableVariants();
	var userInput = formItem.getValue().getStringRepresentation();
	if (oFF.isNull(ignoreVariant) || !oFF.XString.isEqual(oFF.XString.toLowerCase(userInput), oFF.XString.toLowerCase(ignoreVariant.getText())))
	{
		var duplicate = oFF.XStream.of(variants).anyMatch( function(variant){
			return oFF.XString.isEqual(oFF.XString.toLowerCase(variant.getText()), oFF.XString.toLowerCase(userInput));
		}.bind(this));
		if (duplicate)
		{
			var i18n = this.m_manager.getUiContext().getLocalization();
			formItem.setInvalid(i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_NAME_UNIQUE));
			return false;
		}
	}
	formItem.setValid();
	return true;
};
oFF.VdVariantPopupBase.prototype.showGeneralErrorMessage = function(overallResult, defaultMsg)
{
	var uiContext = this.m_manager.getUiContext();
	var msg = oFF.OlapUiMessageCenter.getInaErrorMessage(overallResult, defaultMsg);
	uiContext.getMessageCenter().postMessage(oFF.UiMessageType.ERROR, msg, oFF.VdVariantPopupBase.COMPONENT_NAME);
};

oFF.VdOrcaLevel = function() {};
oFF.VdOrcaLevel.prototype = new oFF.XConstantWithParent();
oFF.VdOrcaLevel.prototype._ff_c = "VdOrcaLevel";

oFF.VdOrcaLevel.DEFAULT = null;
oFF.VdOrcaLevel.WIDGET = null;
oFF.VdOrcaLevel.CHART = null;
oFF.VdOrcaLevel.TABLE = null;
oFF.VdOrcaLevel.EXPLORER = null;
oFF.VdOrcaLevel.FILTER = null;
oFF.VdOrcaLevel.s_lookup = null;
oFF.VdOrcaLevel.staticSetup = function()
{
	oFF.VdOrcaLevel.s_lookup = oFF.XHashMapByString.create();
	oFF.VdOrcaLevel.DEFAULT = oFF.VdOrcaLevel.create("default", null);
	oFF.VdOrcaLevel.WIDGET = oFF.VdOrcaLevel.create("widget", null);
	oFF.VdOrcaLevel.CHART = oFF.VdOrcaLevel.create("chart", oFF.VdOrcaLevel.WIDGET);
	oFF.VdOrcaLevel.TABLE = oFF.VdOrcaLevel.create("table", oFF.VdOrcaLevel.WIDGET);
	oFF.VdOrcaLevel.EXPLORER = oFF.VdOrcaLevel.create("explorer", oFF.VdOrcaLevel.WIDGET);
	oFF.VdOrcaLevel.FILTER = oFF.VdOrcaLevel.create("filter", null);
};
oFF.VdOrcaLevel.create = function(name, parent)
{
	var level = new oFF.VdOrcaLevel();
	level.setupExt(name, parent);
	oFF.VdOrcaLevel.s_lookup.put(name, level);
	return level;
};
oFF.VdOrcaLevel.lookup = function(name)
{
	return oFF.VdOrcaLevel.s_lookup.getByKey(name);
};

oFF.OuModelConditionThreshold = function() {};
oFF.OuModelConditionThreshold.prototype = new oFF.OuModelAConditionThreshold();
oFF.OuModelConditionThreshold.prototype._ff_c = "OuModelConditionThreshold";

oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE = null;
oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR = null;
oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW = null;
oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH = null;
oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_SELECTED = null;
oFF.OuModelConditionThreshold.staticSetupConditionThreshold = function()
{
	oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE = oFF.COuPropertyModel.sCreateModelProperty("Measure");
	oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR = oFF.COuPropertyModel.sCreateModelProperty("Operator");
	oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW = oFF.COuPropertyModel.sCreateModelProperty("Low");
	oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH = oFF.COuPropertyModel.sCreateModelProperty("High");
	oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_SELECTED = oFF.COuPropertyModel.sCreateModelProperty("Selected");
};
oFF.OuModelConditionThreshold.prototype.handleSetModelProperties = function()
{
	var loSourceThreshold = this.getSourceThreshold();
	var lMeasure = null;
	var loMeasure = loSourceThreshold.getMeasure();
	if (oFF.notNull(loMeasure))
	{
		lMeasure = loMeasure.getName();
	}
	this.setMeasure(lMeasure);
	this.setOperator(loSourceThreshold.getOperator());
	this.setLowValue(loSourceThreshold.getLowValue());
	this.setHighValue(loSourceThreshold.getHighValue());
};
oFF.OuModelConditionThreshold.prototype.getText = function()
{
	return this.getSourceThreshold().getText();
};
oFF.OuModelConditionThreshold.prototype.getSupportedMeasures = function()
{
	return this.getSourceThreshold().getSupportedMeasures();
};
oFF.OuModelConditionThreshold.prototype.getMeasure = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE);
};
oFF.OuModelConditionThreshold.prototype.setMeasure = function(measureName)
{
	var loDimensionMember = null;
	var loDimension = this.getSourceQuery().getMeasureStructure();
	if (oFF.notNull(loDimension))
	{
		loDimensionMember = loDimension.getDimensionMember(measureName);
		if (oFF.isNull(loDimensionMember))
		{
			loDimensionMember = loDimension.getDimensionMembers().get(0);
		}
	}
	this.getModelProperties().setProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE, loDimensionMember);
};
oFF.OuModelConditionThreshold.prototype.getSupportedOperators = function()
{
	var ltOperators = oFF.XListOfNameObject.create();
	var loSourceThreshold = this.getSourceThreshold();
	var ltSupportedOperators = loSourceThreshold.getSupportedOperators();
	var loSupportedOperatorIterator = ltSupportedOperators.getIterator();
	while (loSupportedOperatorIterator.hasNext())
	{
		var lSupportedOperator = loSupportedOperatorIterator.next();
		if (oFF.isNull(lSupportedOperator))
		{
			continue;
		}
		var loText = null;
		if (lSupportedOperator === oFF.ConditionComparisonOperator.EQUAL)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_EQUAL;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.NOT_EQUAL)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_EQUAL;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.GREATER_THAN)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_THAN;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.LESS_THAN)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_THAN;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.GREATER_EQUAL)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_GREATER_EQUAL;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.LESS_EQUAL)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_LESS_EQUAL;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.BETWEEN)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BETWEEN;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.NOT_BETWEEN)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_NOT_BETWEEN;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.TOP_N)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_N;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.BOTTOM_N)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_N;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.TOP_PERCENT)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_PERCENT;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.BOTTOM_PERCENT)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_PERCENT;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.TOP_SUM)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_TOP_SUM;
		}
		else if (lSupportedOperator === oFF.ConditionComparisonOperator.BOTTOM_SUM)
		{
			loText = oFF.OuLocalizationTextsConditions.I18N_OPERATOR_BOTTOM_SUM;
		}
		var lText = null;
		if (oFF.notNull(loText))
		{
			lText = this.getEnvironment().getLocalization().getText(loText.getId());
		}
		ltOperators.add(oFF.XNameTextObject.create(lSupportedOperator.getName(), lText));
	}
	return ltOperators;
};
oFF.OuModelConditionThreshold.prototype.getOperator = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR);
};
oFF.OuModelConditionThreshold.prototype.setOperator = function(operator)
{
	var lOperator = operator;
	if (oFF.isNull(lOperator))
	{
		lOperator = oFF.ConditionComparisonOperator.EQUAL;
	}
	this.getModelProperties().setProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR, lOperator);
	if (this.getOperator() !== oFF.ConditionComparisonOperator.BETWEEN && this.getOperator() !== oFF.ConditionComparisonOperator.NOT_BETWEEN)
	{
		this.setHighValue(null);
	}
};
oFF.OuModelConditionThreshold.prototype.getLowValue = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW).toString();
};
oFF.OuModelConditionThreshold.prototype.setLowValue = function(lowValue)
{
	this.getModelProperties().setProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW, oFF.XStringValue.create(lowValue));
};
oFF.OuModelConditionThreshold.prototype.getHighValue = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH).toString();
};
oFF.OuModelConditionThreshold.prototype.setHighValue = function(highValue)
{
	this.getModelProperties().setProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH, oFF.XStringValue.create(highValue));
};
oFF.OuModelConditionThreshold.prototype.isSelected = function()
{
	return this.getModelProperties().getProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_SELECTED).getBoolean();
};
oFF.OuModelConditionThreshold.prototype.setSelected = function(selected)
{
	this.getModelProperties().setProperty(oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_SELECTED, oFF.XBooleanValue.create(selected));
};
oFF.OuModelConditionThreshold.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	if (this.getMeasure() === null)
	{
		loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_MEASURE, null, oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE);
	}
	if (this.getOperator() === null)
	{
		loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_OPERATOR, null, oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR);
	}
	var lLowValueString = this.getLowValue();
	if (oFF.XStringUtils.isNullOrEmpty(lLowValueString))
	{
		loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_LOW_VALUE, null, oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW);
	}
	if (this.getOperator() === oFF.ConditionComparisonOperator.BETWEEN || this.getOperator() === oFF.ConditionComparisonOperator.NOT_BETWEEN)
	{
		var lHighValueString = this.getHighValue();
		if (oFF.XStringUtils.isNullOrEmpty(lHighValueString))
		{
			loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_MISSING_HIGH_VALUE, null, oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH);
		}
		var lLowValue = oFF.notNull(lLowValueString) ? oFF.XDouble.convertFromString(lLowValueString) : 0;
		var lHighValue = oFF.notNull(lHighValueString) ? oFF.XDouble.convertFromString(lHighValueString) : 0;
		if (lLowValue > lHighValue)
		{
			var ltReplacements = oFF.XListOfString.create();
			ltReplacements.add(oFF.XDouble.convertToString(lLowValue));
			ltReplacements.add(oFF.XDouble.convertToString(lHighValue));
			loMessageLog.addI18nMessage(oFF.Severity.ERROR, oFF.OuLocalizationMessagesConditions.I18N_CONDITION_THRESHOLD_LOW_GT_HIGH_VALUE, ltReplacements, oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW);
		}
	}
};
oFF.OuModelConditionThreshold.prototype.handleSubmit = function()
{
	var loSourceThreshold = this.getSourceThreshold();
	loSourceThreshold.setMeasure(this.getMeasure());
	loSourceThreshold.setOperator(this.getOperator());
	loSourceThreshold.setLowValue(this.getLowValue());
	loSourceThreshold.setHighValue(this.getHighValue());
};
oFF.OuModelConditionThreshold.prototype.releaseObject = function()
{
	oFF.OuModelAConditionThreshold.prototype.releaseObject.call( this );
};

oFF.VdVariantManagePopup = function() {};
oFF.VdVariantManagePopup.prototype = new oFF.VdVariantPopupBase();
oFF.VdVariantManagePopup.prototype._ff_c = "VdVariantManagePopup";

oFF.VdVariantManagePopup.ACCEPT = "variantAccept";
oFF.VdVariantManagePopup.CANCEL = "variantCancel";
oFF.VdVariantManagePopup.EDIT = "variantEdit";
oFF.VdVariantManagePopup.DELETE = "variantDelete";
oFF.VdVariantManagePopup.BUTTON_FLEX = "0 0 32px";
oFF.VdVariantManagePopup.createManagePopup = function(manager, genesis, processor, onFinished)
{
	var newPopup = new oFF.VdVariantManagePopup();
	newPopup.setupManagePopup(manager, genesis, processor, onFinished);
	return newPopup;
};
oFF.VdVariantManagePopup.prototype.m_currentModel = null;
oFF.VdVariantManagePopup.prototype.m_onFinished = null;
oFF.VdVariantManagePopup.prototype.setupManagePopup = function(manager, genesis, processor, onFinished)
{
	this.setupPopupBase(manager, processor);
	this.m_onFinished = onFinished;
	this.setupPopup(genesis);
};
oFF.VdVariantManagePopup.prototype.releaseObject = function()
{
	this.m_onFinished = null;
	oFF.VdVariantPopupBase.prototype.releaseObject.call( this );
};
oFF.VdVariantManagePopup.prototype.configurePopup = function(dialog)
{
	oFF.VdVariantPopupBase.prototype.configurePopup.call( this , dialog);
	dialog.setName("VdVariantManagePopup");
	dialog.setTitle(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_MANAGE));
	this.setReadOnly();
	this.setCancelButtonIcon(null);
	this.setCancelButtonText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CLOSE));
};
oFF.VdVariantManagePopup.prototype.buildPopupContent = function(genesis)
{
	oFF.VdVariantPopupBase.prototype.buildPopupContent.call( this , genesis);
	var root = genesis.getRoot();
	root.setMinHeight(oFF.UiCssLength.create("60px"));
	root.setBusy(true);
};
oFF.VdVariantManagePopup.prototype.updateVariantSections = function()
{
	this.clearFormItems();
	var variants = this.m_processor.getVariableVariants();
	if (!oFF.XCollectionUtils.hasElements(variants))
	{
		this.addEmptySection();
		return;
	}
	var titleSection = this.addTitleSection();
	if (oFF.notNull(titleSection))
	{
		titleSection.addFormLabel(null, null, null).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
		titleSection.addFormLabel(null, null, null).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
	}
	oFF.XStream.of(variants).filter( function(usr1){
		return usr1.getScope() === oFF.Scope.USER;
	}.bind(this)).sorted(oFF.VdVariantComparator.getInstance()).forEach( function(usr2){
		this.addVariantSection(usr2);
	}.bind(this));
	oFF.XStream.of(variants).filter( function(gbl1){
		return gbl1.getScope() === oFF.Scope.GLOBAL;
	}.bind(this)).sorted(oFF.VdVariantComparator.getInstance()).forEach( function(gbl2){
		this.addVariantSection(gbl2);
	}.bind(this));
};
oFF.VdVariantManagePopup.prototype.addVariantSection = function(variant)
{
	var currentName = variant.getName();
	var currentText = variant.getText();
	var currentScope = variant.getScope();
	var section = this.addVariantSectionBase(currentName, currentText, currentScope);
	section.setCustomObject(variant);
	var textItem = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT);
	textItem.setCustomValidator( function(txt){
		this.validateDisplayName(txt, variant);
	}.bind(this));
	var nameItem = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	nameItem.setCustomValidator( function(nme){
		this.validateTechnicalName(nme, variant);
	}.bind(this));
	section.addFormButton(oFF.VdVariantManagePopup.ACCEPT, null, null, "accept",  function(){
		section.validate();
		if (section.isValid())
		{
			this.modifyVariant(section);
		}
		else
		{
			this.shake();
		}
	}.bind(this)).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
	section.addFormButton(oFF.VdVariantManagePopup.CANCEL, null, null, "cancel",  function(){
		this.cancelEdit(section);
		this.setEditMode(section, false);
	}.bind(this)).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
	section.addFormButton(oFF.VdVariantManagePopup.EDIT, null, null, "edit",  function(){
		this.setEditMode(section, true);
	}.bind(this)).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
	section.addFormButton(oFF.VdVariantManagePopup.DELETE, null, null, "delete",  function(){
		this.openDeleteConfirmation(section);
	}.bind(this)).setFlex(oFF.VdVariantManagePopup.BUTTON_FLEX);
	section.addFormLabel(null, null, null).setFlex("0 0 0");
	this.setEditMode(section, false);
};
oFF.VdVariantManagePopup.prototype.setEditMode = function(section, editMode)
{
	var variant = section.getCustomObject();
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT).setEnabled(editMode);
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE).setEnabled(editMode);
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME).setEnabled(editMode && variant.getScope() !== oFF.Scope.USER);
	section.getFormControlByName(oFF.VdVariantManagePopup.ACCEPT).setVisible(editMode);
	section.getFormControlByName(oFF.VdVariantManagePopup.CANCEL).setVisible(editMode);
	section.getFormControlByName(oFF.VdVariantManagePopup.EDIT).setVisible(!editMode);
	section.getFormControlByName(oFF.VdVariantManagePopup.DELETE).setVisible(!editMode);
};
oFF.VdVariantManagePopup.prototype.cancelEdit = function(section)
{
	var structure = this.m_currentModel.getStructureByKey(section.getName());
	var oldName = structure.getStringByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	var oldText = structure.getStringByKey(oFF.VdVariantPopupBase.PROPERY_TEXT);
	var oldScope = structure.getStringByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE);
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT).setValue(oFF.XStringValue.create(oldText));
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE).setValue(oFF.XStringValue.create(oldScope));
	section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME).setValue(oFF.XStringValue.create(oldName));
	section.setValid();
};
oFF.VdVariantManagePopup.prototype.openDeleteConfirmation = function(section)
{
	var variantName = section.getCustomObject().getText();
	var title = this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_WARNING);
	var text = this.m_i18n.getTextWithPlaceholder(oFF.VariantPopupI18n.I18N_VARIANT_DELETE_CONFIRMATION, variantName);
	var confirmPopup = oFF.UiConfirmPopup.create(this.getGenesis(), title, text);
	confirmPopup.setConfirmButtonIcon(null);
	confirmPopup.setConfirmButtonText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_DELETE));
	confirmPopup.setCancelButtonIcon(null);
	confirmPopup.setCancelButtonText(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_POPUP_CANCEL));
	confirmPopup.setConfirmProcedure( function(){
		this.removeVariant(section);
	}.bind(this));
	confirmPopup.open();
};
oFF.VdVariantManagePopup.prototype.removeVariant = function(section)
{
	this.setBusy(true);
	var variant = section.getCustomObject();
	this.m_processor.deleteVariableVariant(variant, oFF.OlapUiValueHelpAbstract.s_syncType, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		this.setBusy(false);
		if (extResult.hasErrors())
		{
			this.showGeneralErrorMessage(extResult, oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_DELETE);
			this.shake();
		}
		else
		{
			this.removeFormItemByKey(section.getName());
			var allFormItems = this.getAllFormItems();
			if (allFormItems.size() === 1 && oFF.XString.isEqual(allFormItems.get(0).getName(), oFF.VdVariantPopupBase.TITLE_SECTION))
			{
				this.clearFormItems();
				this.addEmptySection();
			}
		}
	}.bind(this)), null);
};
oFF.VdVariantManagePopup.prototype.modifyVariant = function(section)
{
	var variant = section.getCustomObject();
	var newText = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT).getValue().getStringRepresentation();
	var newName = section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME).getValue().getStringRepresentation();
	var newScope = oFF.Scope.lookupByName(section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE).getValue().getStringRepresentation());
	if (oFF.XString.isEqual(variant.getText(), newText) && variant.getScope() === newScope && (oFF.XString.isEqual(variant.getName(), newName) || newScope === oFF.Scope.USER))
	{
		this.setEditMode(section, false);
		return;
	}
	variant.setText(newText);
	variant.setScope(newScope);
	variant.setName(newName);
	this.setBusy(true);
	this.m_processor.saveVariableVariant(variant, oFF.OlapUiValueHelpAbstract.s_syncType, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		this.setBusy(false);
		if (extResult.hasErrors())
		{
			this.showGeneralErrorMessage(extResult, oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_CHANGE);
			this.shake();
		}
		else
		{
			this.updateSectionTexts(section, variant.getName(), variant.getText(), variant.getScope());
			this.m_currentModel.put(section.getName(), oFF.PrUtils.deepCopyElement(section.getValue()));
			this.setEditMode(section, false);
		}
	}.bind(this)), null);
};
oFF.VdVariantManagePopup.prototype.addEmptySection = function()
{
	var emptySection = this.addFormSection(null, null, true);
	var emptyLabel = emptySection.addFormLabel(null, this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_EMPTY), null);
	emptyLabel.setTextAlign(oFF.UiTextAlign.CENTER);
};
oFF.VdVariantManagePopup.prototype.onAfterOpen = function(event)
{
	oFF.VdVariantPopupBase.prototype.onAfterOpen.call( this , event);
	this.m_processor.transferVariables(oFF.OlapUiValueHelpAbstract.s_syncType, oFF.VariableProcessorCallbackLambda.createSingleUse( function(extResult){
		this.getGenesis().getRoot().setBusy(false);
		this.updateVariantSections();
		this.m_currentModel = oFF.PrUtils.createDeepCopy(this.getJsonModel());
	}.bind(this)), null);
};
oFF.VdVariantManagePopup.prototype.onAfterClose = function(event)
{
	oFF.VdVariantPopupBase.prototype.onAfterClose.call( this , event);
	if (oFF.notNull(this.m_onFinished))
	{
		this.m_onFinished();
	}
	oFF.XObjectExt.release(this);
};

oFF.VdVariantSavePopup = function() {};
oFF.VdVariantSavePopup.prototype = new oFF.VdVariantPopupBase();
oFF.VdVariantSavePopup.prototype._ff_c = "VdVariantSavePopup";

oFF.VdVariantSavePopup.createSavePopup = function(manager, genesis, processor, onSaved)
{
	var newPopup = new oFF.VdVariantSavePopup();
	newPopup.setupSavePopup(manager, genesis, processor, onSaved);
	return newPopup;
};
oFF.VdVariantSavePopup.prototype.m_onSaved = null;
oFF.VdVariantSavePopup.prototype.m_done = false;
oFF.VdVariantSavePopup.prototype.m_section = null;
oFF.VdVariantSavePopup.prototype.setupSavePopup = function(manager, genesis, processor, onSaved)
{
	this.setupPopupBase(manager, processor);
	this.m_onSaved = onSaved;
	this.setupPopup(genesis);
};
oFF.VdVariantSavePopup.prototype.releaseObject = function()
{
	this.m_onSaved = null;
	oFF.VdVariantPopupBase.prototype.releaseObject.call( this );
};
oFF.VdVariantSavePopup.prototype.configurePopup = function(dialog)
{
	oFF.VdVariantPopupBase.prototype.configurePopup.call( this , dialog);
	dialog.setName("VdVariantSavePopup");
	dialog.setTitle(this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_SAVE));
	this.setBeforeSubmitPredicate( function(form1){
		return this.saveNewVariant();
	}.bind(this));
	this.setAfterOpenConsumer( function(form2){
		this.m_section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT).focus();
	}.bind(this));
};
oFF.VdVariantSavePopup.prototype.buildPopupContent = function(genesis)
{
	oFF.VdVariantPopupBase.prototype.buildPopupContent.call( this , genesis);
	this.addTitleSection();
	this.m_section = this.addVariantSectionBase(null, null, oFF.Scope.USER);
	var textItem = this.m_section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_TEXT);
	textItem.setCustomValidator( function(txt){
		if (!this.m_done)
		{
			this.validateDisplayName(txt, null);
		}
	}.bind(this));
	var nameItem = this.m_section.getFormItemByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	nameItem.setCustomValidator( function(nme){
		if (!this.m_done)
		{
			this.validateTechnicalName(nme, null);
		}
	}.bind(this));
};
oFF.VdVariantSavePopup.prototype.saveNewVariant = function()
{
	if (this.m_done)
	{
		return true;
	}
	this.validate();
	if (!this.isValid())
	{
		this.shake();
		return false;
	}
	this.setBusy(true);
	var newVariantData = this.m_section.getValue();
	var name = newVariantData.getStringByKey(oFF.VdVariantPopupBase.PROPERY_NAME);
	var text = newVariantData.getStringByKey(oFF.VdVariantPopupBase.PROPERY_TEXT);
	var scope = oFF.Scope.lookupByName(newVariantData.getStringByKey(oFF.VdVariantPopupBase.PROPERY_SCOPE));
	var dataSource = this.m_processor.getDataSource();
	var variant = oFF.QFactory.createVariableVariant(dataSource, name, text, scope);
	this.m_processor.saveVariableVariant(variant, oFF.OlapUiValueHelpAbstract.s_syncType, this, variant);
	return false;
};
oFF.VdVariantSavePopup.prototype.showSuccessMessage = function()
{
	var uiContext = this.m_manager.getUiContext();
	var msg = this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_SAVE_SUCCESS);
	uiContext.getMessageCenter().postMessage(oFF.UiMessageType.SUCCESS, msg, oFF.VdVariantPopupBase.COMPONENT_NAME);
};
oFF.VdVariantSavePopup.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.setBusy(false);
	if (extResult.hasErrors())
	{
		this.showGeneralErrorMessage(extResult, this.m_i18n.getText(oFF.VariantPopupI18n.I18N_VARIANT_CANNOT_SAVE));
		this.shake();
	}
	else
	{
		this.m_done = true;
		this.m_onSaved(customIdentifier);
		this.showSuccessMessage();
		this.submit();
	}
};
oFF.VdVariantSavePopup.prototype.onAfterClose = function(event)
{
	oFF.VdVariantPopupBase.prototype.onAfterClose.call( this , event);
	oFF.XObjectExt.release(this);
};

oFF.DfOuDialogProgram = function() {};
oFF.DfOuDialogProgram.prototype = new oFF.DfUiDialogProgram();
oFF.DfOuDialogProgram.prototype._ff_c = "DfOuDialogProgram";

oFF.DfOuDialogProgram.PARAM_QUERY_MANAGER = "queryManager";
oFF.DfOuDialogProgram.PARAM_OK_PROCEDURE = "okProcedure";
oFF.DfOuDialogProgram.PARAM_CANCEL_PROCEDURE = "cancelProcedure";
oFF.DfOuDialogProgram.prototype.m_queryManager = null;
oFF.DfOuDialogProgram.prototype.m_okProcedure = null;
oFF.DfOuDialogProgram.prototype.m_cancelProcedure = null;
oFF.DfOuDialogProgram.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfUiDialogProgram.prototype.doSetupProgramMetadata.call( this , metadata);
	metadata.addParameter(oFF.DfOuDialogProgram.PARAM_QUERY_MANAGER, "The query manager.");
	metadata.addParameter(oFF.DfOuDialogProgram.PARAM_OK_PROCEDURE, "A procedure to notify the caller when the ok button was pressed.");
	metadata.addParameter(oFF.DfOuDialogProgram.PARAM_CANCEL_PROCEDURE, "A procedure to notify the caller when the cancel button was pressed.");
};
oFF.DfOuDialogProgram.prototype.evalArguments = function()
{
	oFF.DfUiDialogProgram.prototype.evalArguments.call( this );
	this.m_queryManager = this.getArguments().getXObjectByKey(oFF.DfOuDialogProgram.PARAM_QUERY_MANAGER);
	if (oFF.isNull(this.m_queryManager))
	{
		throw oFF.XException.createRuntimeException("Missing query manager!");
	}
	this.m_okProcedure = this.getArguments().getXObjectByKey(oFF.DfOuDialogProgram.PARAM_OK_PROCEDURE);
	this.m_cancelProcedure = this.getArguments().getXObjectByKey(oFF.DfOuDialogProgram.PARAM_CANCEL_PROCEDURE);
};
oFF.DfOuDialogProgram.prototype.releaseObject = function()
{
	this.m_queryManager = null;
	this.m_okProcedure = null;
	this.m_cancelProcedure = null;
	oFF.DfUiDialogProgram.prototype.releaseObject.call( this );
};
oFF.DfOuDialogProgram.prototype.getQueryManager = function()
{
	return this.m_queryManager;
};
oFF.DfOuDialogProgram.prototype.notifyOkPressed = function()
{
	if (oFF.notNull(this.m_okProcedure))
	{
		this.m_okProcedure.execute();
	}
};
oFF.DfOuDialogProgram.prototype.notifyCancelPressed = function()
{
	if (oFF.notNull(this.m_cancelProcedure))
	{
		this.m_cancelProcedure.execute();
	}
};

oFF.OuRenderingObject = function() {};
oFF.OuRenderingObject.prototype = new oFF.DfUiDialogProgram();
oFF.OuRenderingObject.prototype._ff_c = "OuRenderingObject";

oFF.OuRenderingObject.m_tDirtyObjects = null;
oFF.OuRenderingObject.sCreateRenderingObject = function(oRenderingObject, oEnvironmentProvider)
{
	if (oFF.notNull(oRenderingObject))
	{
		oRenderingObject.setupWithEnvironment(oEnvironmentProvider);
	}
	return oRenderingObject;
};
oFF.OuRenderingObject.prototype.m_oEnvironment = null;
oFF.OuRenderingObject.prototype.m_open = false;
oFF.OuRenderingObject.prototype.m_initialized = false;
oFF.OuRenderingObject.prototype.m_dirty = false;
oFF.OuRenderingObject.prototype.m_oMessageLog = null;
oFF.OuRenderingObject.prototype.m_displayMode = null;
oFF.OuRenderingObject.prototype.m_oSize = null;
oFF.OuRenderingObject.prototype.m_rendering = false;
oFF.OuRenderingObject.prototype.m_oRoot = null;
oFF.OuRenderingObject.prototype.setupWithEnvironment = function(oEnvironmentProvider)
{
	this.setup();
	if (oFF.notNull(oEnvironmentProvider))
	{
		this.m_oEnvironment = oFF.OuEnvironment.sCreateEnvironmentUsingProvider(oEnvironmentProvider);
	}
};
oFF.OuRenderingObject.prototype.setup = function()
{
	oFF.DfUiDialogProgram.prototype.setup.call( this );
	this.m_oEnvironment = oFF.OuEnvironment.sCreateEnvironmentUsingProvider(this);
	this.m_open = false;
	this.m_initialized = false;
	this.m_dirty = true;
	this.m_displayMode = oFF.COuDisplayMode.DEFAULT;
	this.m_oSize = oFF.UiSize.createEmpty();
	this.handleSize(this.m_oSize);
	this.m_oMessageLog = oFF.OuMessageLog.sCreateMessageLog(this);
	this.m_oMessageLog.addListener(this);
	this.m_rendering = false;
	this.m_oRoot = null;
};
oFF.OuRenderingObject.prototype.setupFinal = function()
{
	if (this.m_initialized)
	{
		return;
	}
	var loProperties = this.getEnvironment().getProperties();
	this.setDisplayMode(loProperties.getProperty(oFF.COuPropertyRenderingObject.DISPLAY_MODE));
	this.handleSetup(loProperties);
	if (this.getProcess() !== null)
	{
		this.setTitle(this.getTitleDescription());
	}
	else
	{
		var loDisplayHandler = this.m_oEnvironment.getDisplayHandler();
		if (oFF.notNull(loDisplayHandler))
		{
			loDisplayHandler.setTitle(this.getTitleDescription());
			loDisplayHandler.setWidth(this.getSize().getWidth());
			loDisplayHandler.setHeight(this.getSize().getHeight());
			var ltDialogButtons = this.getButtons();
			var loDialogButtonIterator = ltDialogButtons.getIterator();
			while (loDialogButtonIterator.hasNext())
			{
				var loDialogButton = loDialogButtonIterator.next();
				if (oFF.isNull(loDialogButton))
				{
					continue;
				}
				var loButton = loDisplayHandler.addNewButton();
				loButton.setName(loDialogButton.getName());
				loButton.setText(loDialogButton.getText());
				loButton.setButtonType(loDialogButton.getButtonType());
				loButton.registerOnPress(loDialogButton.getListenerOnPress());
			}
		}
	}
	this.m_initialized = true;
};
oFF.OuRenderingObject.prototype.getEnvironment = function()
{
	return this.m_oEnvironment;
};
oFF.OuRenderingObject.prototype.provideLocalization = function()
{
	var loLocalization = null;
	var loManager = this.getUiManager();
	if (oFF.notNull(loManager))
	{
		loLocalization = loManager.getLocalization();
	}
	return loLocalization;
};
oFF.OuRenderingObject.prototype.provideGenesis = function()
{
	var loGenesis = this.getGenesis();
	if (oFF.isNull(loGenesis))
	{
		loGenesis = this.getUiManager().getFreeGenesis();
	}
	return loGenesis;
};
oFF.OuRenderingObject.prototype.provideProperties = function()
{
	var loProperties = oFF.OuProperties.sCreateProperties();
	if (this.getProcess() !== null)
	{
		var loArguments = this.getArguments();
		if (oFF.notNull(loArguments))
		{
			loProperties = loArguments.getXObjectByKey("properties");
		}
	}
	return loProperties;
};
oFF.OuRenderingObject.prototype.provideApplication = function()
{
	return this.getApplication();
};
oFF.OuRenderingObject.prototype.provideUiContext = function()
{
	return null;
};
oFF.OuRenderingObject.prototype.provideDisplayHandler = function()
{
	return null;
};
oFF.OuRenderingObject.prototype.isOpen = function()
{
	return this.m_open;
};
oFF.OuRenderingObject.prototype.open = function()
{
	this.setupFinal();
	if (!this.isOpen())
	{
		if (this.getProcess() === null)
		{
			var loDisplayHandler = this.m_oEnvironment.getDisplayHandler();
			if (oFF.notNull(loDisplayHandler))
			{
				if (!loDisplayHandler.isOpen())
				{
					loDisplayHandler.open();
				}
			}
		}
	}
	this.m_open = true;
	this.onRender();
};
oFF.OuRenderingObject.prototype.close = function()
{
	if (this.getProcess() !== null)
	{
		this.exitNow(0);
	}
	else
	{
		var loDisplayHandler = this.m_oEnvironment.getDisplayHandler();
		if (oFF.notNull(loDisplayHandler))
		{
			if (loDisplayHandler.isOpen())
			{
				loDisplayHandler.open();
			}
		}
	}
	this.releaseObject();
};
oFF.OuRenderingObject.prototype.setDirty = function(dirty)
{
	this.m_dirty = dirty;
	if (oFF.isNull(oFF.OuRenderingObject.m_tDirtyObjects))
	{
		oFF.OuRenderingObject.m_tDirtyObjects = oFF.XList.create();
	}
	if (this.m_dirty)
	{
		if (!oFF.OuRenderingObject.m_tDirtyObjects.contains(this))
		{
			oFF.OuRenderingObject.m_tDirtyObjects.add(this);
		}
	}
	else
	{
		oFF.OuRenderingObject.m_tDirtyObjects.removeElement(this);
	}
};
oFF.OuRenderingObject.prototype.isDirty = function()
{
	return this.m_dirty;
};
oFF.OuRenderingObject.prototype.getDirtyObjects = function()
{
	return oFF.OuRenderingObject.m_tDirtyObjects.createListCopy().getValuesAsReadOnlyList();
};
oFF.OuRenderingObject.prototype.getMessageLog = function()
{
	return this.m_oMessageLog;
};
oFF.OuRenderingObject.prototype.setDisplayMode = function(displayMode)
{
	var lDisplayMode = displayMode;
	if (oFF.isNull(lDisplayMode))
	{
		lDisplayMode = oFF.COuDisplayMode.DEFAULT;
	}
	if (lDisplayMode === this.m_displayMode)
	{
		return;
	}
	this.m_displayMode = lDisplayMode;
	this.setDirty(true);
};
oFF.OuRenderingObject.prototype.getDisplayMode = function()
{
	return this.m_displayMode;
};
oFF.OuRenderingObject.prototype.getContent = function()
{
	this.open();
	return this.getRoot();
};
oFF.OuRenderingObject.prototype.getSize = function()
{
	return this.m_oSize;
};
oFF.OuRenderingObject.prototype.getButtons = function()
{
	return this.provideButtons();
};
oFF.OuRenderingObject.prototype.getRoot = function()
{
	if (oFF.isNull(this.m_oRoot))
	{
		this.m_oRoot = oFF.OuRoot.sCreateRoot(this);
	}
	return this.m_oRoot;
};
oFF.OuRenderingObject.prototype.onRender = function()
{
	if (this.m_rendering)
	{
		return;
	}
	if (this.isDirty())
	{
		this.m_rendering = true;
		var loRoot = this.getRoot();
		this.handleRender(loRoot);
		var loContent = loRoot.getContent();
		if (oFF.isNull(loContent))
		{
			var loLabel = oFF.OuRenderingUtil.sCreateLabel(this, null, null, null);
			loLabel.setText("This is Test Content! It should appear on the screen...");
			loLabel.setWidth(oFF.UiCssLength.create("100%"));
			loLabel.setHeight(oFF.UiCssLength.create("50px"));
			loLabel.setPadding(oFF.UiCssBoxEdges.create("10px"));
			loLabel.setBackgroundColor(oFF.UiColor.LAVENDER.newColorWithAlpha(0.3));
			loLabel.setTextAlign(oFF.UiTextAlign.CENTER);
			loContent = loLabel;
		}
		loContent.setWidth(oFF.UiCssLength.create("100%"));
		loContent.setHeight(oFF.UiCssLength.create("100%"));
		loRoot.setContent(loContent);
		this.m_rendering = false;
		this.setDirty(false);
	}
};
oFF.OuRenderingObject.prototype.onUiEvent = function(oEvent)
{
	var lHandled = this.handleEvent(oEvent);
	if (this.isOpen())
	{
		if (this.isDirty())
		{
			this.onRender();
		}
	}
	var ltDirtyObjects = this.getDirtyObjects();
	var loDirtyObjectIterator = ltDirtyObjects.getIterator();
	while (loDirtyObjectIterator.hasNext())
	{
		var loRenderingObject = loDirtyObjectIterator.next();
		if (oFF.isNull(loRenderingObject))
		{
			continue;
		}
		loRenderingObject.onRender();
	}
	return lHandled;
};
oFF.OuRenderingObject.prototype.validate = function()
{
	var loMessageLog = this.getMessageLog();
	loMessageLog.clear();
	this.handleValidate();
};
oFF.OuRenderingObject.prototype.onMessageLogChanged = function(oMessageLog)
{
	var loMessageLog = this.getMessageLog();
	if (oMessageLog === loMessageLog)
	{
		this.setDirty(true);
	}
	this.handleMessageLogChanged(oMessageLog);
};
oFF.OuRenderingObject.prototype.releaseObject = function()
{
	oFF.DfUiDialogProgram.prototype.releaseObject.call( this );
	oFF.OuRenderingUtil.sRemoveListener(this);
	this.m_oEnvironment = oFF.XObjectExt.release(this.m_oEnvironment);
	this.m_open = false;
	this.m_initialized = false;
	this.setDirty(false);
	this.m_oMessageLog = oFF.XObjectExt.release(this.m_oMessageLog);
	this.m_displayMode = oFF.XObjectExt.release(this.m_displayMode);
	this.m_oSize = oFF.XObjectExt.release(this.m_oSize);
	this.m_rendering = false;
	this.m_oRoot = oFF.XObjectExt.release(this.m_oRoot);
};
oFF.OuRenderingObject.prototype.newProgram = function()
{
	var loClass = this.handleProvideClass();
	var loInstance = loClass.newInstance(null);
	loInstance.setup();
	return loInstance;
};
oFF.OuRenderingObject.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfUiDialogProgram.prototype.doSetupProgramMetadata.call( this , metadata);
};
oFF.OuRenderingObject.prototype.evalArguments = function()
{
	oFF.DfUiDialogProgram.prototype.evalArguments.call( this );
};
oFF.OuRenderingObject.prototype.getLogSeverity = function()
{
	return oFF.DfUiDialogProgram.prototype.getLogSeverity.call( this );
};
oFF.OuRenderingObject.prototype.getDefaultContainerType = function()
{
	return this.handleProvideContainerType();
};
oFF.OuRenderingObject.prototype.getMenuBarDisplayName = function()
{
	return this.getName();
};
oFF.OuRenderingObject.prototype.getDialogButtons = function(genesis)
{
	this.ensureCorrectGenesis(genesis);
	return this.getButtons();
};
oFF.OuRenderingObject.prototype.getDefaultContainerSize = function()
{
	return this.getSize();
};
oFF.OuRenderingObject.prototype.setupProgram = function()
{
	return null;
};
oFF.OuRenderingObject.prototype.buildUi = function(genesis)
{
	this.ensureCorrectGenesis(genesis);
	this.open();
	genesis.setRoot(this.getRoot().getControl());
};
oFF.OuRenderingObject.prototype.onPress = function(event)
{
	this.exitNow(0);
};
oFF.OuRenderingObject.prototype.ensureCorrectGenesis = function(oGenesis)
{
	var loGenesis = this.getEnvironment().getGenesis();
	if (oFF.isNull(loGenesis) || loGenesis !== oGenesis)
	{
		this.m_oEnvironment.setGenesis(oGenesis);
	}
};

oFF.OuDimensionDialog = function() {};
oFF.OuDimensionDialog.prototype = new oFF.DfUiDialogProgram();
oFF.OuDimensionDialog.prototype._ff_c = "OuDimensionDialog";

oFF.OuDimensionDialog.DEFAULT_PROGRAM_NAME = "DimensionDialog";
oFF.OuDimensionDialog.FIELD_LAYOUT_DROPDOWN = "fieldLayoutDropdown";
oFF.OuDimensionDialog.READ_MODE_DROPDOWN = "readModeDropdown";
oFF.OuDimensionDialog.ATTRIBUTE_INVENTORY_LIST = "attributeInventoryList";
oFF.OuDimensionDialog.ACTIVE_ATTRIBUTE_LIST = "attributeActiveList";
oFF.OuDimensionDialog.DEACTIVATE_SELECTION_BUTTON = "deactivateSelectionButton";
oFF.OuDimensionDialog.ACTIVATE_SELECTION_BUTTON = "activateSelectionButton";
oFF.OuDimensionDialog.TECHNICAL_BUTTON = "technicalButton";
oFF.OuDimensionDialog.createRunner = function()
{
	var runner = oFF.KernelBoot.createByName(oFF.OuDimensionDialog.DEFAULT_PROGRAM_NAME);
	return runner;
};
oFF.OuDimensionDialog.prototype.m_listener = null;
oFF.OuDimensionDialog.prototype.m_cancelBtn = null;
oFF.OuDimensionDialog.prototype.m_okBtn = null;
oFF.OuDimensionDialog.prototype.m_dimensionModel = null;
oFF.OuDimensionDialog.prototype.m_configuration = null;
oFF.OuDimensionDialog.prototype.m_dimension = null;
oFF.OuDimensionDialog.prototype.m_okButton = null;
oFF.OuDimensionDialog.prototype.m_cancelButton = null;
oFF.OuDimensionDialog.prototype.m_attributeInventoryList = null;
oFF.OuDimensionDialog.prototype.m_activeAttributeList = null;
oFF.OuDimensionDialog.prototype.m_ddLayout = null;
oFF.OuDimensionDialog.prototype.m_mainAttributeContainer = null;
oFF.OuDimensionDialog.prototype.m_sortContainer = null;
oFF.OuDimensionDialog.prototype.m_hierarchyContainer = null;
oFF.OuDimensionDialog.prototype.m_totalsContainer = null;
oFF.OuDimensionDialog.prototype.m_totalsIncludedContainer = null;
oFF.OuDimensionDialog.prototype.m_totalsRemainingContainer = null;
oFF.OuDimensionDialog.prototype.m_detailFieldContainerLayout = null;
oFF.OuDimensionDialog.prototype.m_buttonDeactivateSelection = null;
oFF.OuDimensionDialog.prototype.m_buttonActivateSelection = null;
oFF.OuDimensionDialog.prototype.m_buttonMoveUp = null;
oFF.OuDimensionDialog.prototype.m_buttonMoveDown = null;
oFF.OuDimensionDialog.prototype.m_uiContext = null;
oFF.OuDimensionDialog.prototype.newProgram = function()
{
	var prg = new oFF.OuDimensionDialog();
	prg.setup();
	return prg;
};
oFF.OuDimensionDialog.prototype.getProgramName = function()
{
	return oFF.OuDimensionDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuDimensionDialog.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfUiDialogProgram.prototype.doSetupProgramMetadata.call( this , metadata);
};
oFF.OuDimensionDialog.prototype.evalArguments = function()
{
	oFF.DfUiDialogProgram.prototype.evalArguments.call( this );
};
oFF.OuDimensionDialog.prototype.releaseObject = function()
{
	oFF.DfUiDialogProgram.prototype.releaseObject.call( this );
	this.m_dimensionModel = oFF.XObjectExt.release(this.m_dimensionModel);
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.m_dimension = null;
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_ddLayout = oFF.XObjectExt.release(this.m_ddLayout);
};
oFF.OuDimensionDialog.prototype.getLogSeverity = function()
{
	return oFF.DfUiDialogProgram.prototype.getLogSeverity.call( this );
};
oFF.OuDimensionDialog.prototype.getMenuBarDisplayName = function()
{
	return oFF.OuDimensionDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuDimensionDialog.prototype.getDialogButtons = function(genesis)
{
	this.m_okBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_okBtn.setText("Ok");
	this.m_okBtn.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okBtn.registerOnPress(this);
	this.m_cancelBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_cancelBtn.setText("Cancel");
	this.m_cancelBtn.registerOnPress(this);
	var tmpList = oFF.XList.create();
	tmpList.add(this.m_okBtn);
	tmpList.add(this.m_cancelBtn);
	return tmpList;
};
oFF.OuDimensionDialog.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss("60em", "40em");
};
oFF.OuDimensionDialog.prototype.setupProgram = function()
{
	this.m_dimension = this.getArguments().getXObjectByKey("dimension");
	this.m_listener = this.getArguments().getXObjectByKey("listener");
	var dimName = this.getArguments().getStringByKey("dimensionName");
	var tmpQm = this.getArguments().getXObjectByKey("queryManager");
	if (oFF.isNull(this.m_dimension) && oFF.XStringUtils.isNotNullAndNotEmpty(dimName) && oFF.notNull(tmpQm))
	{
		this.m_dimension = tmpQm.getQueryModel().getDimensionByName(dimName);
	}
	if (oFF.notNull(this.m_dimension))
	{
		this.m_dimensionModel = oFF.DdModelDimension.createFrom(this.m_dimension, true, null, null);
	}
	return null;
};
oFF.OuDimensionDialog.prototype.buildUi = function(genesis)
{
	var tmpLabel = genesis.newRoot(oFF.UiType.LABEL);
	tmpLabel.setText("Unknown error occurred!");
	tmpLabel.setWidth(oFF.UiCssLength.create("100%"));
	tmpLabel.setHeight(oFF.UiCssLength.create("40em"));
	tmpLabel.setPadding(oFF.UiCssBoxEdges.create("10px"));
	tmpLabel.setBackgroundColor(oFF.UiColor.LAVENDER.newColorWithAlpha(0.3));
	tmpLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	var uiMgr = this.getApplication().getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	this.m_uiContext = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	if (oFF.notNull(this.m_dimensionModel))
	{
		this.m_dimensionModel.addListener(this);
		var localization = genesis.getUiManager().getLocalization();
		if (this.m_dimensionModel.getMainAttribute() !== null)
		{
			this.m_mainAttributeContainer = oFF.DdControllerFieldContainerCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getMainAttribute(), genesis);
		}
		this.m_ddLayout = oFF.DdDimensionDisplayLayoutCompact.createWithGenesis(genesis);
		var detailsLayout = this.m_ddLayout.getDetailsTable();
		var horizontalLayout = detailsLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT);
		this.m_attributeInventoryList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.OuDimensionDialog.ATTRIBUTE_INVENTORY_LIST);
		this.m_attributeInventoryList.setSelectionMode(oFF.UiSelectionMode.MULTI_SELECT);
		this.m_attributeInventoryList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		var mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		if (oFF.isNull(this.m_buttonDeactivateSelection))
		{
			this.m_buttonDeactivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonDeactivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DEACTIVATE_SELECTION));
			this.m_buttonDeactivateSelection.setIcon("slim-arrow-left");
			this.m_buttonDeactivateSelection.setName(oFF.OuDimensionDialog.DEACTIVATE_SELECTION_BUTTON);
			this.m_buttonDeactivateSelection.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonDeactivateSelection);
		}
		if (oFF.isNull(this.m_buttonActivateSelection))
		{
			this.m_buttonActivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonActivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVATE_SELECTION));
			this.m_buttonActivateSelection.setIcon("slim-arrow-right");
			this.m_buttonActivateSelection.setName(oFF.OuDimensionDialog.ACTIVATE_SELECTION_BUTTON);
			this.m_buttonActivateSelection.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonActivateSelection);
		}
		this.m_activeAttributeList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.OuDimensionDialog.ACTIVE_ATTRIBUTE_LIST);
		this.m_activeAttributeList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		if (oFF.isNull(this.m_buttonMoveUp))
		{
			this.m_buttonMoveUp = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonMoveUp.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
			this.m_buttonMoveUp.setIcon("slim-arrow-up");
			this.m_buttonMoveUp.setName(oFF.DdControllerAbstract.UP_BUTTON);
			this.m_buttonMoveUp.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonMoveUp);
		}
		if (oFF.isNull(this.m_buttonMoveDown))
		{
			this.m_buttonMoveDown = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonMoveDown.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
			this.m_buttonMoveDown.setIcon("slim-arrow-down");
			this.m_buttonMoveDown.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
			this.m_buttonMoveDown.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonMoveDown);
		}
		this.m_detailFieldContainerLayout = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("30%"));
		var controls = oFF.XList.create();
		if (oFF.notNull(this.m_mainAttributeContainer) && this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTE_BASED) || this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS))
		{
			controls = this.m_mainAttributeContainer.getLayoutedControls();
		}
		controls.add(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
		var readModesFlex = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
		readModesFlex.setWidth(oFF.UiCssLength.create("100%"));
		controls.add(readModesFlex);
		readModesFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ONLY_POSTED_VALUES)).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("auto"));
		readModesFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		var readModeSwitch = readModesFlex.addNewItemOfType(oFF.UiType.SWITCH).setOnText(" ").setOffText(" ").setName(oFF.OuDimensionDialog.READ_MODE_DROPDOWN).setAlignSelf(oFF.UiFlexAlignSelf.CENTER);
		var readMode = this.m_dimensionModel.getDdModelReadMode().getReadMode();
		if (oFF.notNull(readMode))
		{
			readModeSwitch.setOn(readMode.isTypeOf(oFF.QMemberReadMode.BOOKED));
		}
		readModeSwitch.registerOnChange(this);
		var i;
		for (i = 0; i < controls.size(); i++)
		{
			this.m_ddLayout.getValueDisplayContent().addItem(controls.get(i));
		}
		this.m_dimensionModel.getDdModelSorting().addListener(this);
		this.m_dimensionModel.getDdModelHierarchy().addListener(this);
		this.m_sortContainer = oFF.DdControllerSortCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelSorting(), genesis);
		this.m_ddLayout.getSortDisplayContent().addAllItems(this.m_sortContainer.getVertialControls());
		this.m_hierarchyContainer = oFF.DdControllerHierarchy.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel, this.m_dimension, genesis);
		this.m_ddLayout.getHierarchyDisplayContent().addAllItems(this.m_hierarchyContainer.getVerticalControls());
		if (this.m_dimension.supportsTotals())
		{
			this.m_totalsContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotals(), genesis);
			this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsContainer.getVerticalControls());
		}
		if (this.m_dimensionModel.getDdModelTotalsIncluded() !== null)
		{
			this.m_totalsIncludedContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotalsIncluded(), genesis);
			this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsIncludedContainer.getVerticalControls());
		}
		if (this.m_dimensionModel.getDdModelTotalsRemaining() !== null)
		{
			this.m_totalsRemainingContainer = oFF.DdControllerTotalsCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotalsRemaining(), genesis);
			this.m_ddLayout.getTotalsDisplayContent().addAllItems(this.m_totalsRemainingContainer.getVerticalControls());
		}
		this.reinitializeChildControllers();
		this.m_ddLayout.buildOlapDialogUi(genesis);
	}
	else
	{
		tmpLabel.setText("Missing parameter [dimension]!");
	}
};
oFF.OuDimensionDialog.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_okBtn)
	{
		if (oFF.notNull(this.m_dimensionModel))
		{
			this.m_dimensionModel.applyToQueryModel(this.m_dimension.getQueryModel());
		}
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onSubmit();
			this.m_listener.onClose();
		}
		this.exitNow(0);
	}
	else if (control === this.m_cancelBtn)
	{
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onClose();
		}
		this.exitNow(0);
	}
	else
	{
		var controlName = event.getControl().getName();
		switch (controlName)
		{
			case oFF.OuDimensionDialog.TECHNICAL_BUTTON:
				this.m_dimensionModel.setShowTechnical(event.getControl().isPressed());
				return;

			case oFF.OuDimensionDialog.ACTIVATE_SELECTION_BUTTON:
				this.m_dimensionModel.activateSelection();
				return;

			case oFF.OuDimensionDialog.DEACTIVATE_SELECTION_BUTTON:
				this.m_dimensionModel.deActivateSelection();
				return;

			case oFF.DdControllerAbstract.BOTTOM_BUTTON:
				this.m_dimensionModel.moveBottomActiveAttribute();
				return;

			case oFF.DdControllerAbstract.DOWN_BUTTON:
				this.m_dimensionModel.moveDownActiveAttribute();
				return;

			case oFF.DdControllerAbstract.UP_BUTTON:
				this.m_dimensionModel.moveUpActiveAttribute();
				return;

			case oFF.DdControllerAbstract.TOP_BUTTON:
				this.m_dimensionModel.moveTopActiveAttribute();
				return;
		}
	}
};
oFF.OuDimensionDialog.prototype.reinitializeChildControllers = function()
{
	if (!this.m_dimensionModel.getDdModelHierarchy().isActive())
	{
		if (this.m_dimensionModel.getDdModelSorting().tryResetHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	else
	{
		if (this.m_dimensionModel.getDdModelSorting().tryApplyHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	this.m_detailFieldContainerLayout.clearItems();
	var list;
	var selectionList;
	var size;
	var i;
	var subItem;
	var item;
	list = this.m_dimensionModel.getAttributesOrderInactive();
	selectionList = this.m_dimensionModel.getAttributesOrderInactiveSelected();
	size = list.size();
	this.m_attributeInventoryList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_attributeInventoryList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonActivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	list = this.m_dimensionModel.getAttributesOrderActive();
	selectionList = this.m_dimensionModel.getAttributesOrderActiveSelected();
	size = list.size();
	this.m_activeAttributeList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_activeAttributeList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonDeactivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	this.m_detailFieldContainerLayout.clearItems();
	var detailAttribute = this.m_dimensionModel.getDetailAttribute();
	if (oFF.notNull(detailAttribute))
	{
		this.m_detailFieldContainerLayout.addNewItemOfType(oFF.UiType.LABEL).setFontSize(oFF.UiCssLength.create("125%")).setText(this.m_dimensionModel.isShowTechnical() ? detailAttribute.getComponentName() : detailAttribute.getComponentText()).setHeight(oFF.UiCssLength.create("2em"));
		var fieldContainerController = oFF.DdControllerFieldContainerCompact.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, detailAttribute, this.getGenesis());
		this.m_detailFieldContainerLayout.addAllItems(fieldContainerController.getLayoutedControls());
	}
	oFF.DdModelOrderable.adoptList(this.m_dimensionModel.getAttributesOrderActive());
	var currentSelection = selectionList.size() === 1 ? selectionList.get(0) : null;
	this.m_buttonMoveDown.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveDown());
	this.m_buttonMoveUp.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveUp());
};
oFF.OuDimensionDialog.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialog.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.OuDimensionDialog.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.OuDimensionDialog.prototype.onObservableModelChange = function(model)
{
	this.reinitializeChildControllers();
};
oFF.OuDimensionDialog.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialog.ATTRIBUTE_INVENTORY_LIST:
			this.m_dimensionModel.setAttributesOrderInactiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.OuDimensionDialog.ACTIVE_ATTRIBUTE_LIST:
			this.m_dimensionModel.setAttributesOrderActiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.OuDimensionDialog.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.OuDimensionDialog.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.OuDimensionDialog.prototype.onChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialog.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().isOn() ? oFF.FieldLayoutType.FIELD_BASED : oFF.FieldLayoutType.ATTRIBUTE_BASED);
			break;

		case oFF.OuDimensionDialog.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().isOn() ? oFF.QMemberReadMode.BOOKED : oFF.QMemberReadMode.MASTER);
			break;
	}
};
oFF.OuDimensionDialog.prototype.getListOfSelectedCustomObjects = function(context)
{
	var resultList = oFF.XList.create();
	var selectedItems = context.getSelectedItems();
	var size = selectedItems.size();
	for (var i = 0; i < size; i++)
	{
		resultList.add(selectedItems.get(i).getCustomObject());
	}
	return resultList;
};

oFF.OuDimensionDialogExt = function() {};
oFF.OuDimensionDialogExt.prototype = new oFF.DfUiDialogProgram();
oFF.OuDimensionDialogExt.prototype._ff_c = "OuDimensionDialogExt";

oFF.OuDimensionDialogExt.DEFAULT_PROGRAM_NAME = "DimensionDialogExt";
oFF.OuDimensionDialogExt.FIELD_LAYOUT_DROPDOWN = "fieldLayoutDropdown";
oFF.OuDimensionDialogExt.READ_MODE_DROPDOWN = "readModeDropdown";
oFF.OuDimensionDialogExt.ATTRIBUTE_INVENTORY_LIST = "attributeInventoryList";
oFF.OuDimensionDialogExt.ACTIVE_ATTRIBUTE_LIST = "attributeActiveList";
oFF.OuDimensionDialogExt.DEACTIVATE_SELECTION_BUTTON = "deactivateSelectionButton";
oFF.OuDimensionDialogExt.ACTIVATE_SELECTION_BUTTON = "activateSelectionButton";
oFF.OuDimensionDialogExt.TECHNICAL_BUTTON = "technicalButton";
oFF.OuDimensionDialogExt.createRunner = function()
{
	var runner = oFF.KernelBoot.createByName(oFF.OuDimensionDialogExt.DEFAULT_PROGRAM_NAME);
	return runner;
};
oFF.OuDimensionDialogExt.prototype.m_listener = null;
oFF.OuDimensionDialogExt.prototype.m_cancelBtn = null;
oFF.OuDimensionDialogExt.prototype.m_okBtn = null;
oFF.OuDimensionDialogExt.prototype.m_dimensionModel = null;
oFF.OuDimensionDialogExt.prototype.m_configuration = null;
oFF.OuDimensionDialogExt.prototype.m_dimension = null;
oFF.OuDimensionDialogExt.prototype.m_okButton = null;
oFF.OuDimensionDialogExt.prototype.m_cancelButton = null;
oFF.OuDimensionDialogExt.prototype.m_attributeInventoryList = null;
oFF.OuDimensionDialogExt.prototype.m_activeAttributeList = null;
oFF.OuDimensionDialogExt.prototype.m_ddLayout = null;
oFF.OuDimensionDialogExt.prototype.m_mainAttributeContainer = null;
oFF.OuDimensionDialogExt.prototype.m_sortContainer = null;
oFF.OuDimensionDialogExt.prototype.m_hierarchyContainer = null;
oFF.OuDimensionDialogExt.prototype.m_totalsContainer = null;
oFF.OuDimensionDialogExt.prototype.m_totalsIncludedContainer = null;
oFF.OuDimensionDialogExt.prototype.m_totalsRemainingContainer = null;
oFF.OuDimensionDialogExt.prototype.m_detailFieldContainerLayout = null;
oFF.OuDimensionDialogExt.prototype.m_buttonDeactivateSelection = null;
oFF.OuDimensionDialogExt.prototype.m_buttonActivateSelection = null;
oFF.OuDimensionDialogExt.prototype.m_buttonMoveUp = null;
oFF.OuDimensionDialogExt.prototype.m_buttonMoveDown = null;
oFF.OuDimensionDialogExt.prototype.m_uiContext = null;
oFF.OuDimensionDialogExt.prototype.newProgram = function()
{
	var prg = new oFF.OuDimensionDialogExt();
	prg.setup();
	return prg;
};
oFF.OuDimensionDialogExt.prototype.getProgramName = function()
{
	return oFF.OuDimensionDialogExt.DEFAULT_PROGRAM_NAME;
};
oFF.OuDimensionDialogExt.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfUiDialogProgram.prototype.doSetupProgramMetadata.call( this , metadata);
};
oFF.OuDimensionDialogExt.prototype.evalArguments = function()
{
	oFF.DfUiDialogProgram.prototype.evalArguments.call( this );
};
oFF.OuDimensionDialogExt.prototype.releaseObject = function()
{
	oFF.DfUiDialogProgram.prototype.releaseObject.call( this );
	this.m_dimensionModel = oFF.XObjectExt.release(this.m_dimensionModel);
	this.m_configuration = oFF.XObjectExt.release(this.m_configuration);
	this.m_dimension = null;
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_ddLayout = oFF.XObjectExt.release(this.m_ddLayout);
};
oFF.OuDimensionDialogExt.prototype.getLogSeverity = function()
{
	return oFF.DfUiDialogProgram.prototype.getLogSeverity.call( this );
};
oFF.OuDimensionDialogExt.prototype.getMenuBarDisplayName = function()
{
	return oFF.OuDimensionDialogExt.DEFAULT_PROGRAM_NAME;
};
oFF.OuDimensionDialogExt.prototype.getDialogButtons = function(genesis)
{
	this.m_okBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_okBtn.setText("Ok");
	this.m_okBtn.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okBtn.registerOnPress(this);
	this.m_cancelBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_cancelBtn.setText("Cancel");
	this.m_cancelBtn.registerOnPress(this);
	var tmpList = oFF.XList.create();
	tmpList.add(this.m_okBtn);
	tmpList.add(this.m_cancelBtn);
	return tmpList;
};
oFF.OuDimensionDialogExt.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss("60em", "40em");
};
oFF.OuDimensionDialogExt.prototype.setupProgram = function()
{
	this.m_dimension = this.getArguments().getXObjectByKey("dimension");
	this.m_listener = this.getArguments().getXObjectByKey("listener");
	if (oFF.notNull(this.m_dimension))
	{
		this.m_dimensionModel = oFF.DdModelDimension.createFrom(this.m_dimension, true, null, null);
	}
	return null;
};
oFF.OuDimensionDialogExt.prototype.buildUi = function(genesis)
{
	var tmpLabel = genesis.newRoot(oFF.UiType.LABEL);
	tmpLabel.setText("Unknown error occurred!");
	tmpLabel.setWidth(oFF.UiCssLength.create("100%"));
	tmpLabel.setHeight(oFF.UiCssLength.create("40em"));
	tmpLabel.setPadding(oFF.UiCssBoxEdges.create("10px"));
	tmpLabel.setBackgroundColor(oFF.UiColor.LAVENDER.newColorWithAlpha(0.3));
	tmpLabel.setTextAlign(oFF.UiTextAlign.CENTER);
	var uiMgr = this.getApplication().getUiManager();
	var displayFactory = oFF.OlapUiDisplayFactory.createFactoryForDialog(uiMgr);
	this.m_uiContext = oFF.OlapUiContext.createContext(uiMgr, displayFactory);
	if (oFF.notNull(this.m_dimensionModel))
	{
		this.m_dimensionModel.addListener(this);
		var localization = genesis.getUiManager().getLocalization();
		if (this.m_dimensionModel.getMainAttribute() !== null)
		{
			this.m_mainAttributeContainer = oFF.DdControllerFieldContainerExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getMainAttribute(), genesis);
		}
		this.m_ddLayout = oFF.DdDimensionDisplayLayoutExhaustive.createWithGenesis(genesis);
		var controls = oFF.XList.create();
		if (oFF.notNull(this.m_mainAttributeContainer) && this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTE_BASED) || this.m_dimensionModel.getAvailableFieldLayoutTypes().contains(oFF.FieldLayoutType.ATTRIBUTES_AND_PRESENTATIONS))
		{
			controls = this.m_mainAttributeContainer.getLayoutedControls();
		}
		var i;
		var availableFieldLayouts = this.m_dimensionModel.getAvailableFieldLayoutTypes();
		var fieldLayout = this.m_dimensionModel.getFieldLayoutType();
		if (oFF.XCollectionUtils.hasElements(availableFieldLayouts))
		{
			var fieldLayoutSegmentedButton = genesis.newControl(oFF.UiType.SEGMENTED_BUTTON);
			for (i = 0; i < availableFieldLayouts.size(); i++)
			{
				var currentFieldLayout = availableFieldLayouts.get(i);
				fieldLayoutSegmentedButton.addNewItem().setName(currentFieldLayout.getName()).setText(currentFieldLayout.getName()).setCustomObject(currentFieldLayout);
			}
			fieldLayoutSegmentedButton.setName(oFF.OuDimensionDialogExt.FIELD_LAYOUT_DROPDOWN);
			fieldLayoutSegmentedButton.setSelectedName(fieldLayout.getName());
			fieldLayoutSegmentedButton.registerOnSelectionChange(this);
			var fieldLayoutLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT);
			controls.add(fieldLayoutLayout);
			fieldLayoutLayout.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_FIELD_LAYOUT)).setName(oFF.DimensionDialogI18n.I18N_DD_FIELD_LAYOUT).setAlignSelf(oFF.UiFlexAlignSelf.END).setWidth(oFF.UiCssLength.create("50%"));
			fieldLayoutLayout.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em"));
			fieldLayoutLayout.addItem(fieldLayoutSegmentedButton.setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("50%")));
			controls.add(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
		}
		var horizontalLayout = this.getGenesis().newControl(oFF.UiType.FLEX_LAYOUT).setWidth(oFF.UiCssLength.create("100%"));
		controls.add(horizontalLayout);
		this.m_attributeInventoryList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.OuDimensionDialogExt.ATTRIBUTE_INVENTORY_LIST);
		this.m_attributeInventoryList.setSelectionMode(oFF.UiSelectionMode.MULTI_SELECT);
		this.m_attributeInventoryList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("45%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		var mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		if (oFF.isNull(this.m_buttonDeactivateSelection))
		{
			this.m_buttonDeactivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonDeactivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_DEACTIVATE_SELECTION));
			this.m_buttonDeactivateSelection.setIcon("slim-arrow-left");
			this.m_buttonDeactivateSelection.setName(oFF.OuDimensionDialogExt.DEACTIVATE_SELECTION_BUTTON);
			this.m_buttonDeactivateSelection.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonDeactivateSelection);
		}
		if (oFF.isNull(this.m_buttonActivateSelection))
		{
			this.m_buttonActivateSelection = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonActivateSelection.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_ACTIVATE_SELECTION));
			this.m_buttonActivateSelection.setIcon("slim-arrow-right");
			this.m_buttonActivateSelection.setName(oFF.OuDimensionDialogExt.ACTIVATE_SELECTION_BUTTON);
			this.m_buttonActivateSelection.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonActivateSelection);
		}
		this.m_activeAttributeList = horizontalLayout.addNewItemOfType(oFF.UiType.LIST).setName(oFF.OuDimensionDialogExt.ACTIVE_ATTRIBUTE_LIST);
		this.m_activeAttributeList.registerOnSelectionChange(this).setHeight(oFF.UiCssLength.create("100%")).setWidth(oFF.UiCssLength.create("45%"));
		horizontalLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
		mbl = horizontalLayout.addNewItemOfType(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("5%")).setHeight(oFF.UiCssLength.create("100%"));
		if (oFF.isNull(this.m_buttonMoveUp))
		{
			this.m_buttonMoveUp = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonMoveUp.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_UP));
			this.m_buttonMoveUp.setIcon("slim-arrow-up");
			this.m_buttonMoveUp.setName(oFF.DdControllerAbstract.UP_BUTTON);
			this.m_buttonMoveUp.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonMoveUp);
		}
		if (oFF.isNull(this.m_buttonMoveDown))
		{
			this.m_buttonMoveDown = mbl.addNewItemOfType(oFF.UiType.BUTTON);
			this.m_buttonMoveDown.setTooltip(localization.getText(oFF.DimensionDialogI18n.I18N_DD_MOVE_DOWN));
			this.m_buttonMoveDown.setIcon("slim-arrow-down");
			this.m_buttonMoveDown.setName(oFF.DdControllerAbstract.DOWN_BUTTON);
			this.m_buttonMoveDown.registerOnPress(this);
		}
		else
		{
			mbl.addItem(this.m_buttonMoveDown);
		}
		controls.add(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em")));
		this.m_detailFieldContainerLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT).setDirection(oFF.UiFlexDirection.COLUMN).setWidth(oFF.UiCssLength.create("100%"));
		controls.add(this.m_detailFieldContainerLayout);
		controls.add(genesis.newControl(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")));
		var readModesFlex = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
		readModesFlex.setWidth(oFF.UiCssLength.create("100%"));
		controls.add(readModesFlex);
		if (oFF.XCollectionUtils.hasElements(this.m_dimensionModel.getDdModelReadMode().getAvailableReadModes()))
		{
			readModesFlex.addNewItemOfType(oFF.UiType.LABEL).setText(localization.getText(oFF.DimensionDialogI18n.I18N_DD_READMODE)).setAlignSelf(oFF.UiFlexAlignSelf.CENTER).setWidth(oFF.UiCssLength.create("50%"));
			readModesFlex.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("1em")).setWidth(oFF.UiCssLength.create("1em"));
			var readMode = this.m_dimensionModel.getDdModelReadMode().getReadMode();
			var availableReadmodes = this.m_dimensionModel.getDdModelReadMode().getAvailableReadModes().getIterator();
			var readModeDropdown = readModesFlex.addNewItemOfType(oFF.UiType.DROPDOWN).setWidth(oFF.UiCssLength.create("50%"));
			while (availableReadmodes.hasNext())
			{
				var currentReadMode = availableReadmodes.next();
				readModeDropdown.addNewItem().setName(currentReadMode.getName()).setText(currentReadMode.getName()).setCustomObject(currentReadMode);
			}
			readModeDropdown.setName(oFF.OuDimensionDialogExt.READ_MODE_DROPDOWN);
			if (oFF.notNull(readMode))
			{
				readModeDropdown.setSelectedName(readMode.getName());
			}
			readModeDropdown.registerOnSelect(this);
		}
		if (this.m_dimension.supportsTotals())
		{
			this.m_totalsContainer = oFF.DdControllerTotalsExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotals(), genesis);
			controls.addAll(this.m_totalsContainer.getVerticalControls());
		}
		if (this.m_dimensionModel.getDdModelTotalsIncluded() !== null)
		{
			this.m_totalsIncludedContainer = oFF.DdControllerTotalsExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotalsIncluded(), genesis);
			controls.addAll(this.m_totalsIncludedContainer.getVerticalControls());
		}
		if (this.m_dimensionModel.getDdModelTotalsRemaining() !== null)
		{
			this.m_totalsRemainingContainer = oFF.DdControllerTotalsExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelTotalsRemaining(), genesis);
			controls.addAll(this.m_totalsRemainingContainer.getVerticalControls());
		}
		for (i = 0; i < controls.size(); i++)
		{
			this.m_ddLayout.getValueDisplayContent().addItem(controls.get(i));
		}
		this.m_dimensionModel.getDdModelSorting().addListener(this);
		this.m_dimensionModel.getDdModelHierarchy().addListener(this);
		this.m_sortContainer = oFF.DdControllerSortExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel.getDdModelSorting(), genesis);
		this.m_ddLayout.getSortDisplayContent().addAllItems(this.m_sortContainer.getVertialControls());
		this.m_hierarchyContainer = oFF.DdControllerHierarchy.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, this.m_dimensionModel, this.m_dimension, genesis);
		this.m_ddLayout.getHierarchyDisplayContent().addAllItems(this.m_hierarchyContainer.getVerticalControls());
		this.reinitializeChildControllers();
		this.m_ddLayout.buildOlapDialogUi(genesis);
	}
	else
	{
		tmpLabel.setText("Missing parameter [dimension]!");
	}
};
oFF.OuDimensionDialogExt.prototype.onPress = function(event)
{
	var control = event.getControl();
	if (control === this.m_okBtn)
	{
		if (oFF.notNull(this.m_dimensionModel))
		{
			this.m_dimensionModel.applyToQueryModel(this.m_dimension.getQueryModel());
		}
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onSubmit();
			this.m_listener.onClose();
		}
		this.exitNow(0);
	}
	else if (control === this.m_cancelBtn)
	{
		if (oFF.notNull(this.m_listener))
		{
			this.m_listener.onClose();
		}
		this.exitNow(0);
	}
	else
	{
		var controlName = event.getControl().getName();
		switch (controlName)
		{
			case oFF.OuDimensionDialogExt.TECHNICAL_BUTTON:
				this.m_dimensionModel.setShowTechnical(event.getControl().isPressed());
				return;

			case oFF.OuDimensionDialogExt.ACTIVATE_SELECTION_BUTTON:
				this.m_dimensionModel.activateSelection();
				return;

			case oFF.OuDimensionDialogExt.DEACTIVATE_SELECTION_BUTTON:
				this.m_dimensionModel.deActivateSelection();
				return;

			case oFF.DdControllerAbstract.BOTTOM_BUTTON:
				this.m_dimensionModel.moveBottomActiveAttribute();
				return;

			case oFF.DdControllerAbstract.DOWN_BUTTON:
				this.m_dimensionModel.moveDownActiveAttribute();
				return;

			case oFF.DdControllerAbstract.UP_BUTTON:
				this.m_dimensionModel.moveUpActiveAttribute();
				return;

			case oFF.DdControllerAbstract.TOP_BUTTON:
				this.m_dimensionModel.moveTopActiveAttribute();
				return;
		}
	}
};
oFF.OuDimensionDialogExt.prototype.reinitializeChildControllers = function()
{
	if (!this.m_dimensionModel.getDdModelHierarchy().isActive())
	{
		if (this.m_dimensionModel.getDdModelSorting().tryResetHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	else
	{
		if (this.m_dimensionModel.getDdModelSorting().tryApplyHierarchicalSort())
		{
			this.m_sortContainer.getVertialControls();
		}
	}
	this.m_detailFieldContainerLayout.clearItems();
	var list;
	var selectionList;
	var size;
	var i;
	var subItem;
	var item;
	list = this.m_dimensionModel.getAttributesOrderInactive();
	selectionList = this.m_dimensionModel.getAttributesOrderInactiveSelected();
	size = list.size();
	this.m_attributeInventoryList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_attributeInventoryList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonActivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	list = this.m_dimensionModel.getAttributesOrderActive();
	selectionList = this.m_dimensionModel.getAttributesOrderActiveSelected();
	size = list.size();
	this.m_activeAttributeList.clearItems();
	for (i = 0; i < size; i++)
	{
		item = list.get(i);
		subItem = this.m_activeAttributeList.addNewItem().setName(item.getComponentName()).setText(this.m_dimensionModel.isShowTechnical() ? item.getComponentName() : item.getComponentText());
		subItem.setSelected(selectionList.contains(item)).setCustomObject(item);
	}
	this.m_buttonDeactivateSelection.setEnabled(oFF.XCollectionUtils.hasElements(selectionList));
	this.m_detailFieldContainerLayout.clearItems();
	var detailAttribute = this.m_dimensionModel.getDetailAttribute();
	if (oFF.notNull(detailAttribute))
	{
		var fieldContainerController = oFF.DdControllerFieldContainerExhaustive.createWithModelAndGenesis(this.getApplication(), this.m_uiContext, detailAttribute, this.getGenesis());
		this.m_detailFieldContainerLayout.addAllItems(fieldContainerController.getLayoutedControls());
	}
	oFF.DdModelOrderable.adoptList(this.m_dimensionModel.getAttributesOrderActive());
	var currentSelection = selectionList.size() === 1 ? selectionList.get(0) : null;
	this.m_buttonMoveDown.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveDown());
	this.m_buttonMoveUp.setEnabled(oFF.notNull(currentSelection) && currentSelection.isPossibleMoveUp());
};
oFF.OuDimensionDialogExt.prototype.onSelect = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialogExt.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.OuDimensionDialogExt.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.OuDimensionDialogExt.prototype.onObservableModelChange = function(model)
{
	this.reinitializeChildControllers();
};
oFF.OuDimensionDialogExt.prototype.onSelectionChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialogExt.ATTRIBUTE_INVENTORY_LIST:
			this.m_dimensionModel.setAttributesOrderInactiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.OuDimensionDialogExt.ACTIVE_ATTRIBUTE_LIST:
			this.m_dimensionModel.setAttributesOrderActiveSelected(this.getListOfSelectedCustomObjects(event.getControl()));
			break;

		case oFF.OuDimensionDialogExt.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().getSelectedItem().getCustomObject());
			break;

		case oFF.OuDimensionDialogExt.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().getSelectedItem().getCustomObject());
			break;
	}
};
oFF.OuDimensionDialogExt.prototype.onChange = function(event)
{
	var controlName = event.getControl().getName();
	switch (controlName)
	{
		case oFF.OuDimensionDialogExt.FIELD_LAYOUT_DROPDOWN:
			this.m_dimensionModel.setFieldLayoutType(event.getControl().isOn() ? oFF.FieldLayoutType.FIELD_BASED : oFF.FieldLayoutType.ATTRIBUTE_BASED);
			break;

		case oFF.OuDimensionDialogExt.READ_MODE_DROPDOWN:
			this.m_dimensionModel.getDdModelReadMode().setReadMode(event.getControl().isOn() ? oFF.QMemberReadMode.BOOKED : oFF.QMemberReadMode.MASTER);
			break;
	}
};
oFF.OuDimensionDialogExt.prototype.getListOfSelectedCustomObjects = function(context)
{
	var resultList = oFF.XList.create();
	var selectedItems = context.getSelectedItems();
	var size = selectedItems.size();
	for (var i = 0; i < size; i++)
	{
		resultList.add(selectedItems.get(i).getCustomObject());
	}
	return resultList;
};

oFF.OuRenderingObjectGen = function() {};
oFF.OuRenderingObjectGen.prototype = new oFF.OuRenderingObject();
oFF.OuRenderingObjectGen.prototype._ff_c = "OuRenderingObjectGen";

oFF.OuRenderingObjectGen.prototype.m_tListeners = null;
oFF.OuRenderingObjectGen.prototype.setup = function()
{
	oFF.OuRenderingObject.prototype.setup.call( this );
	this.m_tListeners = oFF.XList.create();
};
oFF.OuRenderingObjectGen.prototype.getListeners = function()
{
	var ltRemoveListeners = oFF.XList.create();
	var loListener;
	var loListenerIterator = this.m_tListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		if (loListener.isReleased())
		{
			ltRemoveListeners.add(loListener);
		}
	}
	loListenerIterator = ltRemoveListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		this.m_tListeners.removeElement(loListener);
	}
	return this.m_tListeners;
};
oFF.OuRenderingObjectGen.prototype.addListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	if (this.m_tListeners.contains(oListener))
	{
		return;
	}
	this.m_tListeners.add(oListener);
};
oFF.OuRenderingObjectGen.prototype.removeListener = function(oListener)
{
	if (oFF.isNull(oListener))
	{
		return;
	}
	this.m_tListeners.removeElement(oListener);
};
oFF.OuRenderingObjectGen.prototype.releaseObject = function()
{
	oFF.OuRenderingObject.prototype.releaseObject.call( this );
	this.m_tListeners = oFF.XObjectExt.release(this.m_tListeners);
};

oFF.OuCurrencyConversionDialog = function() {};
oFF.OuCurrencyConversionDialog.prototype = new oFF.DfOuDialogProgram();
oFF.OuCurrencyConversionDialog.prototype._ff_c = "OuCurrencyConversionDialog";

oFF.OuCurrencyConversionDialog.DEFAULT_PROGRAM_NAME = "CurrencyConversionDialog";
oFF.OuCurrencyConversionDialog.OK_BUTTON = "CurrencyConversionDialog_okButton";
oFF.OuCurrencyConversionDialog.CANCEL_BUTTON = "CurrencyConversionDialog_cancelButton";
oFF.OuCurrencyConversionDialog.DROPDOWN_CURRENCY = "CurrencyConversionDialog_currencyDropdown";
oFF.OuCurrencyConversionDialog.DROPDOWN_TRANSLATION = "CurrencyConversionDialog_translationDropdown";
oFF.OuCurrencyConversionDialog.EXCEPTION_BW_CC_NOT_SUPPORTED = "Query Model does not support BW Currency Translation.";
oFF.OuCurrencyConversionDialog.EXCEPTION_BW_CC_NOT_ENABLED = "The client cannot apply a currency translation on this query.";
oFF.OuCurrencyConversionDialog.EXCEPTION_INVALID_STATE_FOR_QM_UPDATE = "Cannot apply currency translation with only one instead of two of the following: a fixed target currency; a translation type.";
oFF.OuCurrencyConversionDialog.EXCEPTION_INVALID_DROPDOWN_VALUE = "A reserved dropdown key is contained in the dataset, corresponding to the empty item.";
oFF.OuCurrencyConversionDialog.prototype.m_okButton = null;
oFF.OuCurrencyConversionDialog.prototype.m_cancelButton = null;
oFF.OuCurrencyConversionDialog.prototype.m_targetCurrencyDropdown = null;
oFF.OuCurrencyConversionDialog.prototype.m_currencyTranslationTypeDropdown = null;
oFF.OuCurrencyConversionDialog.prototype.m_currencyTranslationManager = null;
oFF.OuCurrencyConversionDialog.prototype.m_currencyConversionDialogHelper = null;
oFF.OuCurrencyConversionDialog.prototype.newProgram = function()
{
	var prg = new oFF.OuCurrencyConversionDialog();
	prg.setup();
	return prg;
};
oFF.OuCurrencyConversionDialog.prototype.getProgramName = function()
{
	return oFF.OuCurrencyConversionDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuCurrencyConversionDialog.prototype.getContainerName = function()
{
	return this.getProgramName();
};
oFF.OuCurrencyConversionDialog.prototype.getDialogButtons = function(genesis)
{
	var dialogButtons = oFF.XList.create();
	this.m_okButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_okButton.setName(oFF.OuCurrencyConversionDialog.OK_BUTTON);
	this.m_okButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(oFF.UiLambdaPressListener.create( function(controlEvent){
		this.onOkPressed();
	}.bind(this)));
	this.m_okButton.setEnabled(false);
	dialogButtons.add(this.m_okButton);
	this.m_cancelButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_cancelButton.setName(oFF.OuCurrencyConversionDialog.CANCEL_BUTTON);
	this.m_cancelButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.CANCEL));
	this.m_cancelButton.registerOnPress(oFF.UiLambdaPressListener.create( function(controlEvent2){
		this.onCancelPressed();
	}.bind(this)));
	dialogButtons.add(this.m_cancelButton);
	return dialogButtons;
};
oFF.OuCurrencyConversionDialog.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createExt(oFF.UiCssLength.create("450px"), oFF.UiCssLength.create("170px"));
};
oFF.OuCurrencyConversionDialog.prototype.getContainerAfterOpenProcedure = function()
{
	return  function(){
		if (oFF.notNull(this.m_targetCurrencyDropdown))
		{
			this.m_targetCurrencyDropdown.focus();
		}
	}.bind(this);
};
oFF.OuCurrencyConversionDialog.prototype.getTheme = function()
{
	return oFF.UiTheme.SAC;
};
oFF.OuCurrencyConversionDialog.prototype.setupProgram = function()
{
	this.m_currencyTranslationManager = this.getQueryManager().getQueryModel().getCurrencyTranslationManager();
	return null;
};
oFF.OuCurrencyConversionDialog.prototype.buildUi = function(genesis)
{
	this.checkTranslationManagerIsValid();
	this.setTitle(this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TITLE));
	var mainLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	mainLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	mainLayout.setPadding(this.getTheme().getDialogPadding());
	mainLayout.addItem(this.setupForm(genesis).getView());
	genesis.setRoot(mainLayout);
	this.disableDropdowns();
	this.m_currencyTranslationManager.setupBwCatalogs(oFF.SyncType.NON_BLOCKING, this);
};
oFF.OuCurrencyConversionDialog.prototype.releaseObject = function()
{
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_targetCurrencyDropdown = oFF.XObjectExt.release(this.m_targetCurrencyDropdown);
	this.m_currencyTranslationTypeDropdown = oFF.XObjectExt.release(this.m_currencyTranslationTypeDropdown);
	this.m_currencyConversionDialogHelper = oFF.XObjectExt.release(this.m_currencyConversionDialogHelper);
	this.m_currencyTranslationManager = null;
	oFF.DfOuDialogProgram.prototype.releaseObject.call( this );
};
oFF.OuCurrencyConversionDialog.prototype.onCatalogsLoaded = function()
{
	this.m_currencyConversionDialogHelper = oFF.OuCurrencyConversionDialogHelper.create(this.m_currencyTranslationManager);
	this.rerenderUi(true);
	this.setDropdownSelectionsFromQuery();
	this.enableDropdowns();
};
oFF.OuCurrencyConversionDialog.prototype.setupForm = function(genesis)
{
	var form = oFF.UiForm.create(genesis);
	var targetCurrencyLabelText = this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TARGET_CURRENCY_LABEL);
	this.m_targetCurrencyDropdown = form.addDropdown(oFF.OuCurrencyConversionDialog.DROPDOWN_CURRENCY, "", targetCurrencyLabelText, null, false);
	this.m_targetCurrencyDropdown.setValueChangedConsumer( function(key, newVal){
		this.handleFormItemValueChanged(key, newVal);
	}.bind(this));
	this.m_targetCurrencyDropdown.setEnterPressedProcedure( function(){
		this.handleFormItemEnterPressed();
	}.bind(this));
	var currencyTranslationTypeText = this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TRANSLATION_TYPE_LABEL);
	this.m_currencyTranslationTypeDropdown = form.addDropdown(oFF.OuCurrencyConversionDialog.DROPDOWN_TRANSLATION, "", currencyTranslationTypeText, null, false);
	this.m_currencyTranslationTypeDropdown.setValueChangedConsumer( function(key2, newVal2){
		this.handleFormItemValueChanged(key2, newVal2);
	}.bind(this));
	this.m_currencyTranslationTypeDropdown.setEnterPressedProcedure( function(){
		this.handleFormItemEnterPressed();
	}.bind(this));
	return form;
};
oFF.OuCurrencyConversionDialog.prototype.rerenderUi = function(resetSelections)
{
	var selectedCurrency = this.m_targetCurrencyDropdown.getValue().getStringRepresentation();
	if (resetSelections || oFF.isNull(selectedCurrency))
	{
		selectedCurrency = oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME;
	}
	var selectedTranslation = this.m_currencyTranslationTypeDropdown.getValue().getStringRepresentation();
	if (resetSelections || oFF.isNull(selectedTranslation))
	{
		selectedTranslation = oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME;
	}
	this.addItemsToCurrencyDropdown(this.m_currencyConversionDialogHelper.getCurrenciesOfTranslation(selectedTranslation));
	this.addItemsToConversionDropdown(this.m_currencyConversionDialogHelper.getTranslationsOfCurrency(selectedCurrency));
	var isCurrencySelected = !this.m_currencyConversionDialogHelper.isEmptyItemValue(selectedCurrency);
	var isTranslationSelected = !this.m_currencyConversionDialogHelper.isEmptyItemValue(selectedTranslation);
	var areAllSelected = isCurrencySelected && isTranslationSelected;
	var areNoneSelected = !isCurrencySelected && !isTranslationSelected;
	this.m_targetCurrencyDropdown.setValue(oFF.XStringValue.create(selectedCurrency));
	this.m_currencyTranslationTypeDropdown.setValue(oFF.XStringValue.create(selectedTranslation));
	this.m_okButton.setEnabled(areAllSelected || areNoneSelected);
};
oFF.OuCurrencyConversionDialog.prototype.setDropdownsEnabled = function(enable)
{
	this.m_targetCurrencyDropdown.setEnabled(enable);
	this.m_currencyTranslationTypeDropdown.setEnabled(enable);
};
oFF.OuCurrencyConversionDialog.prototype.enableDropdowns = function()
{
	this.setDropdownsEnabled(true);
};
oFF.OuCurrencyConversionDialog.prototype.disableDropdowns = function()
{
	this.setDropdownsEnabled(false);
};
oFF.OuCurrencyConversionDialog.prototype.setDropdownSelectionsFromQuery = function()
{
	var queryCurrencyTranslation = this.m_currencyTranslationManager.getQueryCurrencyTranslation();
	var targetCurrency = queryCurrencyTranslation.getFixedTargetCurrency();
	var currencyTranslationType = queryCurrencyTranslation.getCurrencyTranslationName();
	if (queryCurrencyTranslation.isApplyDefinedCurrencyTranslation() && oFF.XStringUtils.isNotNullAndNotEmpty(targetCurrency) && oFF.XStringUtils.isNotNullAndNotEmpty(currencyTranslationType))
	{
		this.m_targetCurrencyDropdown.setValue(oFF.XStringValue.create(targetCurrency));
		this.m_currencyTranslationTypeDropdown.setValue(oFF.XStringValue.create(currencyTranslationType));
		this.rerenderUi(false);
	}
};
oFF.OuCurrencyConversionDialog.prototype.addItemsToCurrencyDropdown = function(items)
{
	var dropdownItems = oFF.XLinkedHashMapOfStringByString.create();
	var targetCurrencyDropdownDefaultValue = this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_DEFAULT_VALUE);
	dropdownItems.put(oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME, targetCurrencyDropdownDefaultValue);
	var size = items.size();
	for (var i = 0; i < size; i++)
	{
		var item = items.get(i);
		var itemName = item.getName();
		if (this.m_currencyConversionDialogHelper.isEmptyItemValue(itemName))
		{
			throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialog.EXCEPTION_INVALID_DROPDOWN_VALUE);
		}
		var itemText = this.getLocalization().getTextWithPlaceholder2(oFF.OuCurrencyConversionDialogI18n.TARGET_DROPDOWN_VALUE, itemName, item.getText());
		dropdownItems.put(itemName, itemText);
	}
	this.m_targetCurrencyDropdown.setDropdownItems(dropdownItems);
};
oFF.OuCurrencyConversionDialog.prototype.addItemsToConversionDropdown = function(items)
{
	var dropdownItems = oFF.XLinkedHashMapOfStringByString.create();
	var currencyTranslationTypeDropdownDefaultValue = this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TYPE_DROPDOWN_DEFAULT_VALUE);
	dropdownItems.put(oFF.OuCurrencyConversionDialogHelper.EMPTY_ITEM_NAME, currencyTranslationTypeDropdownDefaultValue);
	var size = items.size();
	for (var i = 0; i < size; i++)
	{
		var item = items.get(i);
		if (this.m_currencyConversionDialogHelper.isEmptyItemValue(item.getName()))
		{
			throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialog.EXCEPTION_INVALID_DROPDOWN_VALUE);
		}
		dropdownItems.put(item.getName(), item.getText());
	}
	this.m_currencyTranslationTypeDropdown.setDropdownItems(dropdownItems);
};
oFF.OuCurrencyConversionDialog.prototype.checkTranslationManagerIsValid = function()
{
	if (!this.m_currencyTranslationManager.getModelCapabilities().supportsQueryCurrencyTranslation() || this.m_currencyTranslationManager.getQueryCurrencyTranslation() === null)
	{
		this.getGenesis().showErrorToast(this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_SUPPORTED));
		this.terminate();
		throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialog.EXCEPTION_BW_CC_NOT_SUPPORTED);
	}
	if (this.m_currencyTranslationManager.getQueryCurrencyTranslation() === null)
	{
		this.getGenesis().showErrorToast(this.getLocalization().getText(oFF.OuCurrencyConversionDialogI18n.TOAST_ERROR_TRANSLATION_NOT_ENABLED));
		this.terminate();
		throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialog.EXCEPTION_BW_CC_NOT_ENABLED);
	}
};
oFF.OuCurrencyConversionDialog.prototype.updateQueryModel = function()
{
	var currency = this.m_targetCurrencyDropdown.getValue().getStringRepresentation();
	var translation = this.m_currencyTranslationTypeDropdown.getValue().getStringRepresentation();
	var isCurrencyNotSetButTranslationSet = this.m_currencyConversionDialogHelper.isEmptyItemValue(currency) && !this.m_currencyConversionDialogHelper.isEmptyItemValue(translation);
	var isTranslationNotSetButCurrencySet = this.m_currencyConversionDialogHelper.isEmptyItemValue(translation) && !this.m_currencyConversionDialogHelper.isEmptyItemValue(currency);
	if (isCurrencyNotSetButTranslationSet || isTranslationNotSetButCurrencySet)
	{
		throw oFF.XException.createRuntimeException(oFF.OuCurrencyConversionDialog.EXCEPTION_INVALID_STATE_FOR_QM_UPDATE);
	}
	var queryModel = this.m_currencyTranslationManager.getQueryModel();
	queryModel.queueEventing();
	var queryCurrencyTranslation = this.m_currencyTranslationManager.getQueryCurrencyTranslation();
	var isTranslationSet = !this.m_currencyConversionDialogHelper.isEmptyItemValue(translation);
	if (isTranslationSet)
	{
		queryCurrencyTranslation.setFixedTargetCurrencyByString(currency);
		queryCurrencyTranslation.setCurrencyTranslationName(translation);
	}
	queryCurrencyTranslation.setApplyDefinedCurrencyTranslation(isTranslationSet);
	queryModel.resumeEventing();
};
oFF.OuCurrencyConversionDialog.prototype.onOkPressed = function()
{
	this.updateQueryModel();
	this.notifyOkPressed();
	this.terminate();
};
oFF.OuCurrencyConversionDialog.prototype.onCancelPressed = function()
{
	this.notifyCancelPressed();
	this.terminate();
};
oFF.OuCurrencyConversionDialog.prototype.handleFormItemValueChanged = function(key, newValue)
{
	this.rerenderUi(this.m_currencyConversionDialogHelper.isEmptyItemValue(newValue.getStringRepresentation()));
};
oFF.OuCurrencyConversionDialog.prototype.handleFormItemEnterPressed = function()
{
	if (this.m_okButton.isEnabled())
	{
		this.onOkPressed();
	}
};

oFF.OuDimensionDialog2 = function() {};
oFF.OuDimensionDialog2.prototype = new oFF.DfOuDialogProgram();
oFF.OuDimensionDialog2.prototype._ff_c = "OuDimensionDialog2";

oFF.OuDimensionDialog2.DEFAULT_PROGRAM_NAME = "DimensionDialog2";
oFF.OuDimensionDialog2.PARAM_DIMENSION_NAME = "dimensionName";
oFF.OuDimensionDialog2.PARAM_INITIAL_TAB = "initialTab";
oFF.OuDimensionDialog2.PARAM_INITIAL_TAB_DISPLAY = "display";
oFF.OuDimensionDialog2.PARAM_INITIAL_TAB_SORT = "sort";
oFF.OuDimensionDialog2.PARAM_INITIAL_TAB_HIERARCHY = "hierarchy";
oFF.OuDimensionDialog2.prototype.m_dimension = null;
oFF.OuDimensionDialog2.prototype.m_root = null;
oFF.OuDimensionDialog2.prototype.m_displayTab = null;
oFF.OuDimensionDialog2.prototype.m_sortTab = null;
oFF.OuDimensionDialog2.prototype.m_hierarchyTab = null;
oFF.OuDimensionDialog2.prototype.m_initialTab = null;
oFF.OuDimensionDialog2.prototype.newProgram = function()
{
	var program = new oFF.OuDimensionDialog2();
	program.setup();
	return program;
};
oFF.OuDimensionDialog2.prototype.getProgramName = function()
{
	return oFF.OuDimensionDialog2.DEFAULT_PROGRAM_NAME;
};
oFF.OuDimensionDialog2.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss("400px", "460px");
};
oFF.OuDimensionDialog2.prototype.getDialogButtons = function(genesis)
{
	var i18n = this.getLocalization();
	var okBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	okBtn.setText(i18n.getText(oFF.UiCommonI18n.OK));
	okBtn.setButtonType(oFF.UiButtonType.PRIMARY);
	okBtn.registerOnPress(oFF.UiLambdaPressListener.create( function(evt1){
		this.saveState();
		this.notifyOkPressed();
		this.terminate();
	}.bind(this)));
	var cancelBtn = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	cancelBtn.setText(i18n.getText(oFF.UiCommonI18n.CANCEL));
	cancelBtn.registerOnPress(oFF.UiLambdaPressListener.create( function(evt2){
		this.notifyCancelPressed();
		this.terminate();
	}.bind(this)));
	var tmpList = oFF.XList.create();
	tmpList.add(okBtn);
	tmpList.add(cancelBtn);
	return tmpList;
};
oFF.OuDimensionDialog2.prototype.getContainerAfterOpenProcedure = function()
{
	return  function(){
		if (this.m_root.getSelectedItem() !== null)
		{
			this.m_root.getSelectedItem().focus();
		}
	}.bind(this);
};
oFF.OuDimensionDialog2.prototype.doSetupProgramMetadata = function(metadata)
{
	oFF.DfOuDialogProgram.prototype.doSetupProgramMetadata.call( this , metadata);
	metadata.addParameter(oFF.OuDimensionDialog2.PARAM_DIMENSION_NAME, "The dimension to show properties for.");
	metadata.addParameter(oFF.OuDimensionDialog2.PARAM_INITIAL_TAB, "The initial tab to be pre-selected.");
};
oFF.OuDimensionDialog2.prototype.evalArguments = function()
{
	oFF.DfOuDialogProgram.prototype.evalArguments.call( this );
	var dimName = this.getArguments().getStringByKey(oFF.OuDimensionDialog2.PARAM_DIMENSION_NAME);
	this.m_dimension = this.getQueryManager().getQueryModel().getDimensionByName(dimName);
	this.m_initialTab = this.getArguments().getStringByKey(oFF.OuDimensionDialog2.PARAM_INITIAL_TAB);
};
oFF.OuDimensionDialog2.prototype.setupProgram = function()
{
	return null;
};
oFF.OuDimensionDialog2.prototype.buildUi = function(genesis)
{
	var displayName = this.getDimensionDisplayName();
	this.setTitle(this.getLocalization().getTextWithPlaceholder(oFF.OuDimensionDialog2I18n.TITLE, displayName));
	this.m_root = genesis.newRoot(oFF.UiType.ICON_TAB_BAR);
	this.m_root.setApplyContentPadding(false);
	var i18n = this.getLocalization();
	this.m_displayTab = oFF.OuDd2DisplayTab.createTab(this.m_dimension, i18n);
	this.m_sortTab = oFF.OuDd2SortingTab.createTab(this.m_dimension, i18n);
	this.m_hierarchyTab = oFF.OuDd2HierarchyTab.createTab(this.m_dimension, i18n);
	this.m_displayTab.buildUi(genesis, this.m_root);
	this.m_sortTab.buildUi(genesis, this.m_root);
	this.m_hierarchyTab.buildUi(genesis, this.m_root);
	this.loadState();
	if (oFF.notNull(this.m_initialTab))
	{
		switch (this.m_initialTab)
		{
			case oFF.OuDimensionDialog2.PARAM_INITIAL_TAB_SORT:
				if (oFF.notNull(this.m_sortTab))
				{
					this.m_sortTab.selectItem();
				}
				break;

			case oFF.OuDimensionDialog2.PARAM_INITIAL_TAB_HIERARCHY:
				if (oFF.notNull(this.m_hierarchyTab))
				{
					this.m_hierarchyTab.selectItem();
				}
				break;
		}
	}
};
oFF.OuDimensionDialog2.prototype.releaseObject = function()
{
	this.m_displayTab = null;
	this.m_sortTab = null;
	this.m_hierarchyTab = null;
	this.m_dimension = null;
	this.m_initialTab = null;
	this.m_root = oFF.XObjectExt.release(this.m_root);
	oFF.DfOuDialogProgram.prototype.releaseObject.call( this );
};
oFF.OuDimensionDialog2.prototype.getDimensionDisplayName = function()
{
	var text = this.m_dimension.getText();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		return text;
	}
	var name = this.m_dimension.getName();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(name))
	{
		return name;
	}
	return this.getLocalization().getText(oFF.OuDimensionDialog2I18n.DIMENSION);
};
oFF.OuDimensionDialog2.prototype.loadState = function()
{
	this.m_displayTab.loadState();
	this.m_sortTab.loadState();
	this.m_hierarchyTab.loadState();
};
oFF.OuDimensionDialog2.prototype.saveState = function()
{
	this.m_sortTab.saveState();
	this.m_hierarchyTab.saveState();
	this.m_displayTab.saveState();
};

oFF.OuSelectHierarchyDialog = function() {};
oFF.OuSelectHierarchyDialog.prototype = new oFF.DfOuDialogProgram();
oFF.OuSelectHierarchyDialog.prototype._ff_c = "OuSelectHierarchyDialog";

oFF.OuSelectHierarchyDialog.DEFAULT_PROGRAM_NAME = "SelectHierarchyDialog";
oFF.OuSelectHierarchyDialog.PARAM_DIMENSION = "dimension";
oFF.OuSelectHierarchyDialog.FLAT_PRESENTATION_ITEM = "SelectHierarchyDialog_FlatPresentationMenu";
oFF.OuSelectHierarchyDialog.DROPDOWN_HIERARCHY = "SelectHierarchyDialog_hierarchyDropdown";
oFF.OuSelectHierarchyDialog.prototype.m_okButton = null;
oFF.OuSelectHierarchyDialog.prototype.m_cancelButton = null;
oFF.OuSelectHierarchyDialog.prototype.m_hierarchyDropdown = null;
oFF.OuSelectHierarchyDialog.prototype.m_selectedItem = null;
oFF.OuSelectHierarchyDialog.prototype.m_selectedHierarchyName = null;
oFF.OuSelectHierarchyDialog.prototype.m_dimension = null;
oFF.OuSelectHierarchyDialog.prototype.newProgram = function()
{
	var prg = new oFF.OuSelectHierarchyDialog();
	prg.setup();
	return prg;
};
oFF.OuSelectHierarchyDialog.prototype.getProgramName = function()
{
	return oFF.OuSelectHierarchyDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuSelectHierarchyDialog.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss("600px", "120px");
};
oFF.OuSelectHierarchyDialog.prototype.getContainerAfterOpenProcedure = function()
{
	return  function(){
		if (oFF.notNull(this.m_hierarchyDropdown))
		{
			this.m_hierarchyDropdown.focus();
		}
	}.bind(this);
};
oFF.OuSelectHierarchyDialog.prototype.getTheme = function()
{
	return oFF.UiTheme.SAC;
};
oFF.OuSelectHierarchyDialog.prototype.setupProgram = function()
{
	return null;
};
oFF.OuSelectHierarchyDialog.prototype.buildUi = function(genesis)
{
	this.setTitle(this.getLocalization().getText(oFF.OuHierarchyDialogI18n.TITLE));
	this.m_dimension = this.getArguments().getXObjectByKey(oFF.OuSelectHierarchyDialog.PARAM_DIMENSION);
	var mainLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	mainLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	mainLayout.setPadding(this.getTheme().getDialogPadding());
	if (oFF.isNull(this.m_dimension))
	{
		var noDimensionErrorLabel = this.getLocalization().getText(oFF.OuHierarchyDialogI18n.NO_DIMENSION_ERROR_LABEL);
		var errorLabel = mainLayout.addNewItemOfType(oFF.UiType.LABEL);
		errorLabel.setText(noDimensionErrorLabel);
	}
	else
	{
		mainLayout.addItem(this.setupForm(genesis).getView());
		this.m_dimension.getHierarchyManager().fetchHierarchyCatalog(oFF.SyncType.BLOCKING, this, null);
	}
	genesis.setRoot(mainLayout);
};
oFF.OuSelectHierarchyDialog.prototype.setupForm = function(genesis)
{
	var form = oFF.UiForm.create(genesis);
	var hierarchyLabelText = this.getLocalization().getText(oFF.OuHierarchyDialogI18n.HIERARCHY_LABEL);
	this.m_hierarchyDropdown = form.addComboBox(oFF.OuSelectHierarchyDialog.DROPDOWN_HIERARCHY, "", hierarchyLabelText, null, false);
	this.m_hierarchyDropdown.setValueChangedConsumer( function(key, newVal){
		this.m_selectedHierarchyName = oFF.XValueUtil.getString(newVal);
	}.bind(this));
	this.m_hierarchyDropdown.setEnterPressedProcedure( function(){
		this.m_selectedHierarchyName = oFF.XValueUtil.getString(this.m_hierarchyDropdown.getValue());
	}.bind(this));
	return form;
};
oFF.OuSelectHierarchyDialog.prototype.getDialogButtons = function(genesis)
{
	var dialogButtons = oFF.XList.create();
	this.m_okButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_okButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.OK));
	this.m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	this.m_okButton.registerOnPress(oFF.UiLambdaPressListener.create( function(controlEvent){
		this.onOkPressed();
	}.bind(this)));
	this.m_okButton.focus();
	dialogButtons.add(this.m_okButton);
	this.m_cancelButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	this.m_cancelButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.CANCEL));
	this.m_cancelButton.registerOnPress(oFF.UiLambdaPressListener.create( function(controlEvent2){
		this.onCancelPressed();
	}.bind(this)));
	dialogButtons.add(this.m_cancelButton);
	return dialogButtons;
};
oFF.OuSelectHierarchyDialog.prototype.onHierarchyCatalogResult = function(extResult, result, customIdentifier)
{
	if (!extResult.hasErrors() && oFF.notNull(result))
	{
		this.addItemsToHierarchyDropdown(result.getObjects());
	}
};
oFF.OuSelectHierarchyDialog.prototype.addItemsToHierarchyDropdown = function(catalogItems)
{
	var dropdownItems = oFF.XLinkedHashMapOfStringByString.create();
	dropdownItems.put(oFF.OuSelectHierarchyDialog.FLAT_PRESENTATION_ITEM, this.getLocalization().getText(oFF.OuHierarchyDialogI18n.FLAT_REPRESENTATION_ITEM_LABEL));
	var i;
	var sortedList = oFF.XCollectionUtils.createListCopy(catalogItems);
	sortedList.sortByComparator(oFF.XComparatorLambda.create( function(item1, item2){
		return oFF.XIntegerValue.create(oFF.XString.compare(item1.getHierarchyShortText(), item2.getHierarchyShortText()));
	}.bind(this)));
	for (i = 0; i < sortedList.size(); i++)
	{
		var catItem = sortedList.get(i);
		var catItemShortText = catItem.getHierarchyShortText();
		if (oFF.isNull(catItemShortText))
		{
			catItemShortText = catItem.getHierarchyName();
			if (this.m_dimension.isStructure())
			{
				catItemShortText = this.getLocalization().getText(oFF.OuHierarchyDialogI18n.HIERARCHY_LABEL);
			}
		}
		dropdownItems.put(catItem.getHierarchyName(), catItemShortText);
	}
	this.m_hierarchyDropdown.setComboBoxItems(dropdownItems);
	if (this.m_dimension.isHierarchyActive())
	{
		this.m_hierarchyDropdown.setValue(oFF.XStringValue.create(this.m_dimension.getHierarchyName()));
	}
	else
	{
		this.m_hierarchyDropdown.setValue(oFF.XStringValue.create(oFF.OuSelectHierarchyDialog.FLAT_PRESENTATION_ITEM));
	}
};
oFF.OuSelectHierarchyDialog.prototype.releaseObject = function()
{
	this.m_hierarchyDropdown = oFF.XObjectExt.release(this.m_hierarchyDropdown);
	this.m_okButton = oFF.XObjectExt.release(this.m_okButton);
	this.m_cancelButton = oFF.XObjectExt.release(this.m_cancelButton);
	this.m_selectedItem = oFF.XObjectExt.release(this.m_selectedItem);
	oFF.DfOuDialogProgram.prototype.releaseObject.call( this );
};
oFF.OuSelectHierarchyDialog.prototype.onOkPressed = function()
{
	if (oFF.notNull(this.m_selectedHierarchyName))
	{
		if (oFF.XString.isEqual(this.m_selectedHierarchyName, oFF.OuSelectHierarchyDialog.FLAT_PRESENTATION_ITEM))
		{
			this.m_dimension.setHierarchyActive(!this.m_dimension.isHierarchyActive());
		}
		else
		{
			this.m_dimension.setHierarchyName(this.m_selectedHierarchyName);
			this.m_dimension.setHierarchyActive(true);
		}
		this.notifyOkPressed();
	}
	this.terminate();
};
oFF.OuSelectHierarchyDialog.prototype.onCancelPressed = function()
{
	this.terminate();
};

oFF.OuQueryInformationDialog = function() {};
oFF.OuQueryInformationDialog.prototype = new oFF.DfOuDialogProgram();
oFF.OuQueryInformationDialog.prototype._ff_c = "OuQueryInformationDialog";

oFF.OuQueryInformationDialog.DEFAULT_PROGRAM_NAME = "QueryInformationDialog";
oFF.OuQueryInformationDialog.PARAM_INFO_DIALOG_CONFIG = "infoDialogConfig";
oFF.OuQueryInformationDialog.MODEL_INFO_KEY = "modelInfo";
oFF.OuQueryInformationDialog.prototype.m_dialogConfig = null;
oFF.OuQueryInformationDialog.prototype.evalArguments = function()
{
	oFF.DfOuDialogProgram.prototype.evalArguments.call( this );
	this.m_dialogConfig = this.getArguments().getXObjectByKey(oFF.OuQueryInformationDialog.PARAM_INFO_DIALOG_CONFIG);
};
oFF.OuQueryInformationDialog.prototype.newProgram = function()
{
	var prg = new oFF.OuQueryInformationDialog();
	prg.setup();
	return prg;
};
oFF.OuQueryInformationDialog.prototype.getProgramName = function()
{
	return oFF.OuQueryInformationDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuQueryInformationDialog.prototype.getTheme = function()
{
	return oFF.UiTheme.SAC;
};
oFF.OuQueryInformationDialog.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss("25em", "30em");
};
oFF.OuQueryInformationDialog.prototype.setupProgram = function()
{
	return null;
};
oFF.OuQueryInformationDialog.prototype.buildUi = function(genesis)
{
	this.setTitle(this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.DIALOG_TITLE));
	var mainLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	var iconTabBar = mainLayout.addNewItemOfType(oFF.UiType.ICON_TAB_BAR);
	iconTabBar.addItem(this.buildGeneralTab(genesis));
	var variables = this.getQueryManager().getInputEnabledAndNonTechnicalVariables();
	var variableInfo = this.processVariables(variables);
	if (!variableInfo.isEmpty())
	{
		iconTabBar.addItem(this.buildVariablesTab(genesis, variableInfo));
	}
	genesis.setRoot(mainLayout);
};
oFF.OuQueryInformationDialog.prototype.buildGeneralTab = function(genesis)
{
	var queryModel = this.getQueryManager().getQueryModel();
	var systemType = queryModel.getSystemType();
	var generalTab = genesis.newControl(oFF.UiType.ICON_TAB_BAR_ITEM);
	generalTab.setName("generalTab");
	generalTab.setText(this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_HEADER));
	var generalTabLayout = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	generalTabLayout.setMargin(oFF.UiCssBoxEdges.create("0 1em 0 1em"));
	var datasourceIdMap = oFF.XHashMapOfStringByString.create();
	datasourceIdMap.put("label", this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_NAME_LABEL));
	datasourceIdMap.put("value", this.getDatasourceName(systemType));
	var descMap = oFF.XHashMapOfStringByString.create();
	descMap.put("label", this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_DESC_LABEL));
	descMap.put("value", queryModel.getText());
	var datasourceSectionPartsMap = oFF.XLinkedHashMapByString.create();
	datasourceSectionPartsMap.put("TechID", datasourceIdMap);
	datasourceSectionPartsMap.put("Description", descMap);
	var datasourceSectionMap = oFF.XLinkedHashMapByString.create();
	datasourceSectionMap.put("datasourceSection", datasourceSectionPartsMap);
	this.buildSection(generalTabLayout, "datasource", this.getDatasourceSectionHeader(systemType), datasourceSectionMap);
	if (queryModel.getSystemType().isTypeOf(oFF.SystemType.BW))
	{
		this.buildInfoProviderSection(queryModel, generalTabLayout);
	}
	generalTab.setContent(generalTabLayout);
	return generalTab;
};
oFF.OuQueryInformationDialog.prototype.buildInfoProviderSection = function(queryModel, generalTabLayout)
{
	var infoProvider = queryModel.getInfoProvider();
	var infoProviderName = oFF.isNull(infoProvider) ? "" : infoProvider.getText();
	var infoProviderDesc = oFF.isNull(infoProvider) ? "" : infoProvider.getName();
	if (oFF.XStringUtils.isNullOrEmpty(infoProviderName))
	{
		infoProviderName = infoProviderDesc;
	}
	var techIdMap = oFF.XHashMapOfStringByString.create();
	techIdMap.put("label", this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_NAME_LABEL));
	techIdMap.put("value", infoProviderName);
	var descMap = oFF.XHashMapOfStringByString.create();
	descMap.put("label", this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.GENERAL_TAB_DESC_LABEL));
	descMap.put("value", infoProviderDesc);
	var infoProviderSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.INFO_PROVIDER_SECTION_HEADER);
	var infoProviderSectionPartsMap = oFF.XLinkedHashMapByString.create();
	infoProviderSectionPartsMap.put("TechID", techIdMap);
	infoProviderSectionPartsMap.put("Description", descMap);
	var infoProviderSectionMap = oFF.XLinkedHashMapByString.create();
	infoProviderSectionMap.put("infoProviderSection", infoProviderSectionPartsMap);
	this.buildSection(generalTabLayout, "infoProvider", infoProviderSectionHeader, infoProviderSectionMap);
	var cubeInfo = queryModel.getCubeInfo();
	var lastUpdated = cubeInfo.getDataRollUpMin();
	if (oFF.isNull(lastUpdated))
	{
		lastUpdated = cubeInfo.getUpdatedOn();
	}
	if (oFF.notNull(lastUpdated))
	{
		this.buildLastUpdatedSection(generalTabLayout, lastUpdated);
	}
};
oFF.OuQueryInformationDialog.prototype.buildLastUpdatedSection = function(parentTabLayout, lastUpdated)
{
	var dateFormatter = oFF.XDateFormatter.create("yyyy/MM/dd HH:mm:ss");
	var dateInfoMap = oFF.XHashMapOfStringByString.create();
	dateInfoMap.put("label", this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_DATE_LABEL));
	dateInfoMap.put("value", dateFormatter.formatDateTime(lastUpdated));
	var lastUpdatedSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.LAST_UPDATED_SECTION_HEADER);
	var lastUpdatedSectionPartsList = oFF.XList.create();
	lastUpdatedSectionPartsList.add(dateInfoMap);
	var lastUpdatedSectionPartsMap = oFF.XLinkedHashMapByString.create();
	lastUpdatedSectionPartsMap.put("DateInfo", dateInfoMap);
	var lastUpdatedSectionMap = oFF.XLinkedHashMapByString.create();
	lastUpdatedSectionMap.put("lastUpdatedSection", lastUpdatedSectionPartsMap);
	this.buildSection(parentTabLayout, "lastUpdated", lastUpdatedSectionHeader, lastUpdatedSectionMap);
};
oFF.OuQueryInformationDialog.prototype.buildSection = function(parentTabLayout, sectionId, sectionHeaderText, sectionInfoMap)
{
	var sectionLayout = parentTabLayout.addNewItemOfType(oFF.UiType.VERTICAL_LAYOUT);
	sectionLayout.setMargin(oFF.UiCssBoxEdges.create("1em 0 0 0"));
	var sectionHeader = sectionLayout.addNewItemOfType(oFF.UiType.LABEL);
	sectionHeader.setName(this.buildSectionElementName(sectionId, "Header"));
	sectionHeader.setText(sectionHeaderText);
	sectionHeader.setFontSize(oFF.UiCssLength.create("1em"));
	sectionHeader.setFontWeight(oFF.UiFontWeight.BOLD);
	sectionHeader.setFontColor(oFF.UiColor.create("#333"));
	var sectionKey = sectionInfoMap.getKeysAsReadOnlyListOfString().get(0);
	var sectionInfoPartsMap = sectionInfoMap.getByKey(sectionKey);
	var partKeys = sectionInfoPartsMap.getKeysAsReadOnlyListOfString();
	for (var i = 0; i < partKeys.size(); i++)
	{
		var mapKey = partKeys.get(i);
		var map = sectionInfoPartsMap.getByKey(mapKey);
		var sectionString = map.getByKey("label");
		var itemLabel = sectionLayout.addNewItemOfType(oFF.UiType.LABEL);
		var itemName = this.buildSectionElementName(sectionId, this.buildSectionElementName(mapKey, "Label"));
		itemLabel.setName(itemName);
		itemLabel.setText(sectionString);
		sectionString = map.getByKey("value");
		var itemText = sectionLayout.addNewItemOfType(oFF.UiType.LABEL);
		itemName = this.buildSectionElementName(sectionId, this.buildSectionElementName(mapKey, "Text"));
		itemText.setName(itemName);
		itemText.setWrapping(true);
		itemText.setMargin(oFF.UiCssBoxEdges.create("0 0 1em 0"));
		itemText.setText(sectionString);
	}
};
oFF.OuQueryInformationDialog.prototype.buildVariablesTab = function(genesis, variableInfo)
{
	var variablesTab = genesis.newControl(oFF.UiType.ICON_TAB_BAR_ITEM);
	variablesTab.setName("variablesTab");
	variablesTab.setText(this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.VARIABLES_TAB_HEADER));
	var variablesTabLayout = genesis.newControl(oFF.UiType.VERTICAL_LAYOUT);
	variablesTabLayout.setMargin(oFF.UiCssBoxEdges.create("1em"));
	var variableKeys = variableInfo.getKeysAsReadOnlyListOfString();
	var variableTree = variablesTabLayout.addNewItemOfType(oFF.UiType.TREE);
	variableTree.setName("variableTree");
	for (var i = 0; i < variableKeys.size(); i++)
	{
		var currKey = variableKeys.get(i);
		var variableValues = variableInfo.getByKey(currKey);
		this.buildVariableNodes(genesis, currKey, variableValues, variableTree);
	}
	variablesTab.setContent(variablesTabLayout);
	return variablesTab;
};
oFF.OuQueryInformationDialog.prototype.processVariables = function(variables)
{
	var result = oFF.XHashMapByString.create();
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		var valuesFromVariable = oFF.VdImportExport.getValuesFromVariable(variable);
		if (valuesFromVariable.isEmpty())
		{
			continue;
		}
		var variableName = variable.getText();
		if (oFF.XStringUtils.isNullOrEmpty(variableName))
		{
			variableName = variable.getName();
		}
		result.put(variableName, valuesFromVariable);
	}
	return result;
};
oFF.OuQueryInformationDialog.prototype.buildVariableNodes = function(genesis, variableKey, variableValues, variableTree)
{
	if (variableValues.size() > 0)
	{
		var variableNode = genesis.newControl(oFF.UiType.TREE_ITEM);
		variableNode.setText(variableKey);
		variableNode.setCounter(variableValues.size());
		for (var j = 0; j < variableValues.size(); j++)
		{
			var valueNode = this.buildNode(genesis, j, variableValues);
			variableNode.addItem(valueNode);
			variableTree.addItem(variableNode);
		}
	}
};
oFF.OuQueryInformationDialog.prototype.buildNode = function(genesis, valueIndex, variableValues)
{
	var lowDisplayValue;
	var highDisplayValue;
	var valueText = "";
	var variableValueNode = genesis.newControl(oFF.UiType.TREE_ITEM);
	var value = variableValues.get(valueIndex);
	lowDisplayValue = this.getVariableOperandText(value.getFirstOperand());
	highDisplayValue = this.getVariableOperandText(value.getSecondOperand());
	var templateKey = this.getNodeTemplateKey(value.getOperator());
	if (oFF.XStringUtils.isNotNullAndNotEmpty(highDisplayValue))
	{
		valueText = this.getLocalization().getTextWithPlaceholder2(templateKey, lowDisplayValue, highDisplayValue);
	}
	else if (oFF.XStringUtils.isNotNullAndNotEmpty(lowDisplayValue))
	{
		if (oFF.XStringUtils.isNullOrEmpty(templateKey))
		{
			valueText = lowDisplayValue;
		}
		else
		{
			valueText = this.getLocalization().getTextWithPlaceholder(templateKey, lowDisplayValue);
		}
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(valueText))
	{
		variableValueNode.setText(valueText);
	}
	return variableValueNode;
};
oFF.OuQueryInformationDialog.prototype.getNodeTemplateKey = function(operator)
{
	var templateKey = "";
	if (operator === oFF.VdComparisonOperator.EQUAL)
	{
		return templateKey;
	}
	else if (operator === oFF.VdComparisonOperator.BETWEEN)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_RANGE_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.GREATER_THAN)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GT_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.GREATER_EQUAL)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_GTE_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.LESS_THAN)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LT_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.LESS_EQUAL)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_LTE_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.NOT_EQUAL)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NE_TEMPLATE;
	}
	else if (operator === oFF.VdComparisonOperator.NOT_BETWEEN)
	{
		templateKey = oFF.OuQueryInformationDialogI18n.VARIABLE_VALUE_NOT_IN_RANGE_TEMPLATE;
	}
	return templateKey;
};
oFF.OuQueryInformationDialog.prototype.getVariableOperandText = function(operand)
{
	var displayValue = operand.getText();
	if (oFF.XStringUtils.isNullOrEmpty(displayValue))
	{
		displayValue = operand.getDisplayKey();
	}
	if (oFF.XStringUtils.isNullOrEmpty(displayValue))
	{
		displayValue = operand.getKey();
	}
	return displayValue;
};
oFF.OuQueryInformationDialog.prototype.buildSectionElementName = function(sectionId, elementName)
{
	var buffer = oFF.XStringBuffer.create().append(sectionId).append(elementName);
	return buffer.toString();
};
oFF.OuQueryInformationDialog.prototype.getDatasourceSectionHeader = function(systemType)
{
	var datasourceSectionHeader = "";
	if (systemType.isTypeOf(oFF.SystemType.BW))
	{
		datasourceSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.BW_QUERY_SECTION_HEADER);
	}
	else if (systemType.isTypeOf(oFF.SystemType.ORCA))
	{
		var modelInfoKey = this.m_dialogConfig.getByKey(oFF.OuQueryInformationDialog.MODEL_INFO_KEY);
		if (oFF.notNull(modelInfoKey))
		{
			var modelSubtype = modelInfoKey.getStringByKey(oFF.OuQueryInformationDialogConstants.MODEL_SUBTYPE_KEY);
			if (oFF.XString.isEqual(modelSubtype, oFF.OuQueryInformationDialogConstants.MODEL_SUBTYPE_PLANNING))
			{
				datasourceSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.PLANNING_MODEL_SECTION_HEADER);
			}
			else
			{
				datasourceSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.ANALYTIC_MODEL_SECTION_HEADER);
			}
		}
		else
		{
			datasourceSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.FALLBACK_MODEL_SECTION_HEADER);
		}
	}
	else if (systemType.isTypeOf(oFF.SystemType.HANA))
	{
		datasourceSectionHeader = this.getLocalization().getText(oFF.OuQueryInformationDialogI18n.CALC_VIEW_SECTION_HEADER);
	}
	return datasourceSectionHeader;
};
oFF.OuQueryInformationDialog.prototype.getDatasourceName = function(systemType)
{
	var dataSourceName = this.getQueryManager().getDataSource().getName();
	if (systemType.isTypeOf(oFF.SystemType.ORCA))
	{
		var modelInfoKey = this.m_dialogConfig.getByKey(oFF.OuQueryInformationDialog.MODEL_INFO_KEY);
		if (oFF.notNull(modelInfoKey))
		{
			dataSourceName = modelInfoKey.getStringByKey(oFF.OuQueryInformationDialogConstants.MODEL_DISPLAY_NAME_KEY);
		}
	}
	return dataSourceName;
};

oFF.OuTopNDialog = function() {};
oFF.OuTopNDialog.prototype = new oFF.DfOuDialogProgram();
oFF.OuTopNDialog.prototype._ff_c = "OuTopNDialog";

oFF.OuTopNDialog.DIALOG_HEIGHT = "auto";
oFF.OuTopNDialog.DIALOG_WIDTH = "26rem";
oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_BOTTOM_VALUE = "1_BOTTOM";
oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_TOP_VALUE = "0_TOP";
oFF.OuTopNDialog.N_VALUE_INITIAL = "1";
oFF.OuTopNDialog.N_VALUE_MAX_LENGTH = 4;
oFF.OuTopNDialog.DEFAULT_PROGRAM_NAME = "TopNDialog";
oFF.OuTopNDialog.PARAM_MEASURE = "measure";
oFF.OuTopNDialog.PARAM_VERSION = "version";
oFF.OuTopNDialog.PARAM_SECONDARY_MEASURE = "secondarymeasure";
oFF.OuTopNDialog.PARAM_N_VALUE = "nvalue";
oFF.OuTopNDialog.PARAM_TOP_OR_BOTTOM_VALUE = "topOrBottom";
oFF.OuTopNDialog.TOP = "top";
oFF.OuTopNDialog.BOTTOM = "bottom";
oFF.OuTopNDialog.topNConditionExists = function(qm)
{
	return oFF.notNull(qm) && qm.getConvenienceCommands().getRank(null) !== null;
};
oFF.OuTopNDialog.prototype.m_secondaryMeasure = null;
oFF.OuTopNDialog.prototype.m_measureName = null;
oFF.OuTopNDialog.prototype.m_measureText = null;
oFF.OuTopNDialog.prototype.m_measure = null;
oFF.OuTopNDialog.prototype.m_version = null;
oFF.OuTopNDialog.prototype.m_topOrBottomDropDown = null;
oFF.OuTopNDialog.prototype.m_measures = null;
oFF.OuTopNDialog.prototype.m_form = null;
oFF.OuTopNDialog.prototype.m_nValueInputField = null;
oFF.OuTopNDialog.prototype.m_initialValueForDropDown = null;
oFF.OuTopNDialog.prototype.m_initialNValue = null;
oFF.OuTopNDialog.prototype.newProgram = function()
{
	var prg = new oFF.OuTopNDialog();
	prg.setup();
	return prg;
};
oFF.OuTopNDialog.prototype.getProgramName = function()
{
	return oFF.OuTopNDialog.DEFAULT_PROGRAM_NAME;
};
oFF.OuTopNDialog.prototype.evalArguments = function()
{
	oFF.DfOuDialogProgram.prototype.evalArguments.call( this );
	this.m_measure = this.getArguments().getXObjectByKey(oFF.OuTopNDialog.PARAM_MEASURE);
	if (oFF.isNull(this.m_measure))
	{
		throw oFF.XException.createIllegalArgumentException("The parameter with the measure must not be null");
	}
	this.m_measureName = this.m_measure.getName();
	this.m_measureText = this.m_measure.getText();
	this.m_secondaryMeasure = this.getArguments().getXObjectByKey(oFF.OuTopNDialog.PARAM_SECONDARY_MEASURE);
	this.m_version = this.getArguments().getXObjectByKey(oFF.OuTopNDialog.PARAM_VERSION);
	this.m_initialValueForDropDown = this.determineInitialValueForDropDown();
	this.m_initialNValue = this.determineInitialNValue();
};
oFF.OuTopNDialog.prototype.getDefaultContainerSize = function()
{
	return oFF.UiSize.createByCss(oFF.OuTopNDialog.DIALOG_WIDTH, oFF.OuTopNDialog.DIALOG_HEIGHT);
};
oFF.OuTopNDialog.prototype.getTheme = function()
{
	return oFF.UiTheme.SAC;
};
oFF.OuTopNDialog.prototype.setupProgram = function()
{
	return null;
};
oFF.OuTopNDialog.prototype.buildUi = function(genesis)
{
	this.setTitle(this.getLocalization().getText(oFF.OuTopNDialogI18n.TITLE));
	var mainLayout = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	mainLayout.setDirection(oFF.UiFlexDirection.COLUMN);
	mainLayout.setPadding(this.getTheme().getDialogPadding());
	if (oFF.OuTopNDialog.topNConditionExists(this.getQueryManager()))
	{
		mainLayout.addItem(this.createInfoSection(genesis));
	}
	mainLayout.addItem(this.setupForm(genesis).getView());
	genesis.setRoot(mainLayout);
};
oFF.OuTopNDialog.prototype.createInfoSection = function(genesis)
{
	var infoSection = genesis.newControl(oFF.UiType.FLEX_LAYOUT);
	infoSection.setDirection(oFF.UiFlexDirection.ROW);
	var infoIco = genesis.newControl(oFF.UiType.ICON);
	infoIco.setIcon("message-information");
	infoIco.setEnabled(false);
	infoIco.setPadding(oFF.UiCssBoxEdges.create("0px 5px 0px 0px"));
	infoSection.addItem(infoIco);
	var overwriteInformationalLabel = genesis.newControl(oFF.UiType.LABEL);
	overwriteInformationalLabel.setName("overwriteInformationalLabel");
	overwriteInformationalLabel.setText(this.getLocalization().getText(oFF.OuTopNDialogI18n.INFORMATON_MESSAGE));
	overwriteInformationalLabel.setTooltip(this.getLocalization().getText(oFF.OuTopNDialogI18n.INFORMATON_MESSAGE));
	overwriteInformationalLabel.setFontStyle(oFF.UiFontStyle.ITALIC);
	overwriteInformationalLabel.setWrapping(true);
	overwriteInformationalLabel.setPadding(oFF.UiCssBoxEdges.create("0px 1px 0px 0px"));
	infoSection.addItem(overwriteInformationalLabel);
	infoSection.setPadding(oFF.UiCssBoxEdges.create("0px 0px 10px 0px"));
	return infoSection;
};
oFF.OuTopNDialog.prototype.setupForm = function(genesis)
{
	this.m_form = oFF.UiForm.create(genesis);
	this.createSettingsSection();
	this.createMeasureSelectionField(genesis);
	this.m_form.validate();
	return this.m_form;
};
oFF.OuTopNDialog.prototype.createMeasureSelectionField = function(genesis)
{
	var basedOnText = this.getLocalization().getText(oFF.OuTopNDialogI18n.BASED_ON_SECTION_TITLE);
	this.m_form.addFormLabel("BasedOn", basedOnText, basedOnText);
	var closeListener = oFF.OuLambdaFdCloseListener.create( function(item){
		if (oFF.notNull(item) && item.size() > 0)
		{
			this.m_measureName = item.get(0).getName();
			this.m_measureText = item.get(0).getText();
			this.m_measures.setValue(oFF.XStringValue.create(this.m_measureText));
		}
	}.bind(this));
	var valueHelp =  function(){
		var context = oFF.OlapUiContext.createContext(genesis.getUiManager(), oFF.OlapUiDisplayFactory.createFactoryForDialog(genesis.getUiManager()));
		var selectMeasureDialogTitle = this.getLocalization().getText(oFF.OuTopNDialogI18n.SELECT_MEASURE_DIALOG_TITLE);
		var entryPoint = oFF.FdEntryPoint.createEntryPointForUiContext(context, selectMeasureDialogTitle);
		entryPoint.getConfiguration().addSelectedItem(oFF.FdSimpleItem.create(this.m_measureName, null, null));
		entryPoint.openWithDimension(this.m_measure.getDimension(), closeListener);
	}.bind(this);
	var measuresTitle = this.getLocalization().getText(oFF.OuTopNDialogI18n.MEASURES_INPUTFIELD_TITLE);
	this.m_measures = this.m_form.addInput("MeasuresInputField", this.m_measureText, measuresTitle, "MeasuresInputField_Text", null, valueHelp);
	this.m_measures.setRequired(true);
	this.m_measures.setLabelFontWeight(oFF.UiFontWeight.NORMAL);
};
oFF.OuTopNDialog.prototype.createSettingsSection = function()
{
	this.m_form.addFormLabel("Settings", this.getLocalization().getText(oFF.OuTopNDialogI18n.SETTINGS_SECTION_TITLE), this.getLocalization().getText(oFF.OuTopNDialogI18n.SETTINGS_SECTION_TITLE));
	var m_settingsSection = this.m_form.addFormSection("settingsSection", null, true);
	m_settingsSection.showSectionMarkerDuringValidation(false);
	var values = oFF.XHashMapOfStringByString.create();
	values.put(oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_TOP_VALUE, this.getLocalization().getText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TOP_ELEMENT));
	values.put(oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_BOTTOM_VALUE, this.getLocalization().getText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_BOTTOM_ELEMENT));
	this.m_topOrBottomDropDown = m_settingsSection.addComboBox("topOrBottom", this.m_initialValueForDropDown, this.getLocalization().getText(oFF.OuTopNDialogI18n.TOPBOTTOM_DROPDOWN_TITLE), values, false);
	this.m_topOrBottomDropDown.setLabelFontWeight(oFF.UiFontWeight.NORMAL);
	this.m_topOrBottomDropDown.setFlex("0 0 30%");
	this.m_nValueInputField = m_settingsSection.addInput("nValue", this.m_initialNValue, this.getLocalization().getText(oFF.OuTopNDialogI18n.N_VALUE_TITLE), "", oFF.UiInputType.NUMBER, null);
	this.m_nValueInputField.setRequired(true);
	this.m_nValueInputField.setLabelFontWeight(oFF.UiFontWeight.NORMAL);
	this.m_nValueInputField.setFlex("0 0 30%");
	this.m_nValueInputField.setCustomValidator( function(txt){
		var userInput = this.m_nValueInputField.getValue().getStringRepresentation();
		if (oFF.notNull(userInput) && oFF.XString.size(userInput) <= oFF.OuTopNDialog.N_VALUE_MAX_LENGTH && this.isInteger(userInput) && !this.isZero(userInput))
		{
			this.m_nValueInputField.setValid();
		}
		else
		{
			this.m_nValueInputField.setInvalid(this.getLocalization().getText(oFF.OuTopNDialogI18n.N_VALUE_VALIDATION_MESSAGE));
		}
	}.bind(this));
};
oFF.OuTopNDialog.prototype.isZero = function(s)
{
	return oFF.XString.isEqual(s, "0");
};
oFF.OuTopNDialog.prototype.isInteger = function(s)
{
	return oFF.XString.match(s, "^\\d+$");
};
oFF.OuTopNDialog.prototype.determineInitialValueForDropDown = function()
{
	var result = oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_TOP_VALUE;
	var topOrBottomParameter = this.getArguments().getXObjectByKey(oFF.OuTopNDialog.PARAM_TOP_OR_BOTTOM_VALUE);
	if (oFF.notNull(topOrBottomParameter))
	{
		var stringValue = topOrBottomParameter.getString();
		if (oFF.XString.isEqual(stringValue, oFF.OuTopNDialog.TOP))
		{
			result = oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_TOP_VALUE;
		}
		else if (oFF.XString.isEqual(stringValue, oFF.OuTopNDialog.BOTTOM))
		{
			result = oFF.OuTopNDialog.TOPBOTTOM_DROPDOWN_BOTTOM_VALUE;
		}
		else
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The parameter for PARAM_TOP_OR_BOTTOM_VALUE is invalid. Value supplied is '", stringValue, "'"));
		}
	}
	return result;
};
oFF.OuTopNDialog.prototype.determineInitialNValue = function()
{
	var result;
	var nValueParameter = this.getArguments().getXObjectByKey(oFF.OuTopNDialog.PARAM_N_VALUE);
	if (oFF.notNull(nValueParameter))
	{
		result = nValueParameter.getStringRepresentation();
	}
	else
	{
		result = oFF.OuTopNDialog.N_VALUE_INITIAL;
	}
	return result;
};
oFF.OuTopNDialog.prototype.getDialogButtons = function(genesis)
{
	var dialogButtons = oFF.XList.create();
	var m_okButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	m_okButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.OK));
	m_okButton.setButtonType(oFF.UiButtonType.PRIMARY);
	m_okButton.registerOnPress(oFF.UiLambdaPressListener.create( function(event){
		this.onOkPressed();
	}.bind(this)));
	m_okButton.focus();
	dialogButtons.add(m_okButton);
	var m_cancelButton = genesis.newControl(oFF.UiType.DIALOG_BUTTON);
	m_cancelButton.setText(this.getLocalization().getText(oFF.UiCommonI18n.CANCEL));
	m_cancelButton.registerOnPress(oFF.UiLambdaPressListener.create( function(event2){
		this.terminate();
	}.bind(this)));
	dialogButtons.add(m_cancelButton);
	return dialogButtons;
};
oFF.OuTopNDialog.prototype.onOkPressed = function()
{
	if (!this.m_form.isValid())
	{
		this.shake();
		return;
	}
	var queryModel = this.getQueryManager().getQueryModel();
	queryModel.getConvenienceCommands().clearRank(null);
	var indicateTopBottom = oFF.ConditionComparisonOperator.TOP_N;
	var maxRows = oFF.XInteger.convertFromString(this.m_nValueInputField.getValue().getStringRepresentation());
	var secondaryMeasureName = oFF.notNull(this.m_secondaryMeasure) ? this.m_secondaryMeasure.getName() : null;
	var versionMemberName = oFF.isNull(this.m_version) ? null : this.m_version.getName();
	var versionDimension = oFF.isNull(this.m_version) ? null : this.m_version.getDimension();
	queryModel.getConvenienceCommands().buildRankExt(maxRows, this.m_measureName, secondaryMeasureName, null, indicateTopBottom, versionMemberName, versionDimension, true);
	this.notifyOkPressed();
	this.terminate();
};
oFF.OuTopNDialog.prototype.releaseObject = function()
{
	this.m_secondaryMeasure = null;
	this.m_measure = null;
	this.m_topOrBottomDropDown = oFF.XObjectExt.release(this.m_topOrBottomDropDown);
	this.m_measures = oFF.XObjectExt.release(this.m_measures);
	this.m_form = oFF.XObjectExt.release(this.m_form);
	this.m_nValueInputField = oFF.XObjectExt.release(this.m_nValueInputField);
	oFF.DfOuDialogProgram.prototype.releaseObject.call( this );
};

oFF.OuRenderingObjectWithModel = function() {};
oFF.OuRenderingObjectWithModel.prototype = new oFF.OuRenderingObjectGen();
oFF.OuRenderingObjectWithModel.prototype._ff_c = "OuRenderingObjectWithModel";

oFF.OuRenderingObjectWithModel.prototype.m_oModel = null;
oFF.OuRenderingObjectWithModel.prototype.handleSetup = function(oProperties)
{
	var loModel = oProperties.getProperty(oFF.COuPropertyRenderingObject.MODEL);
	this.setModel(loModel);
	if (this.getModel() === null)
	{
		var ltProperties = oProperties.getPropertiesOfType(oFF.COuPropertyType.SOURCE);
		var ltModelProperties = oFF.OuProperties.sCreateProperties();
		ltModelProperties.setProperties(ltProperties);
		this.handleProvideModel(ltModelProperties);
	}
	this.handleSetupWithModel(oProperties);
};
oFF.OuRenderingObjectWithModel.prototype.setModel = function(oModel)
{
	var loProvided = oModel;
	var loContained = this.m_oModel;
	if (loProvided === loContained)
	{
		return;
	}
	if (oFF.notNull(this.m_oModel))
	{
		this.m_oModel.removeListener(this);
	}
	this.m_oModel = oModel;
	if (oFF.notNull(this.m_oModel))
	{
		this.m_oModel.addListener(this);
	}
	this.setDirty(true);
	var ltListeners = this.getListeners();
	var loListenerIterator = ltListeners.getIterator();
	while (loListenerIterator.hasNext())
	{
		var loListener = loListenerIterator.next();
		if (oFF.isNull(loListener))
		{
			continue;
		}
		loListener.onRenderingObjectModelChanged(this);
	}
};
oFF.OuRenderingObjectWithModel.prototype.getModel = function()
{
	return this.m_oModel;
};
oFF.OuRenderingObjectWithModel.prototype.onModelChanged = function(oModel, oProperty)
{
	this.handleModelChanged(oModel, oProperty);
};
oFF.OuRenderingObjectWithModel.prototype.releaseObject = function()
{
	oFF.OuRenderingObjectGen.prototype.releaseObject.call( this );
	if (oFF.notNull(this.m_oModel))
	{
		this.m_oModel.removeListener(this);
		this.m_oModel = null;
	}
};

oFF.OuDialog = function() {};
oFF.OuDialog.prototype = new oFF.OuRenderingObjectWithModel();
oFF.OuDialog.prototype._ff_c = "OuDialog";

oFF.OuDialog.prototype.m_oUIEDialog = null;
oFF.OuDialog.prototype.m_oUIEMessageLog = null;
oFF.OuDialog.prototype.m_oUIEMessagesContainer = null;
oFF.OuDialog.prototype.m_oUIEMessagesToolbar = null;
oFF.OuDialog.prototype.m_oUIEMessagesTable = null;
oFF.OuDialog.prototype.handleSetupWithModel = function(oProperties)
{
	this.handleSetupDialog(oProperties);
};
oFF.OuDialog.prototype.handleProvideContainerType = function()
{
	return oFF.ProgramContainerType.DIALOG;
};
oFF.OuDialog.prototype.handleSize = function(oSize)
{
	oSize.setWidth(oFF.UiCssLength.create("60em"));
	oSize.setHeight(oFF.UiCssLength.create("30em"));
	this.handleDialogSize(oSize);
};
oFF.OuDialog.prototype.provideButtons = function()
{
	var ltDialogButtons = oFF.XList.create();
	var loDialogButton;
	loDialogButton = oFF.OuRenderingUtil.sCreateDialogButton(this, oFF.COuDialogButtons.OK.getName(), this.getEnvironment().getLocalization().getText(oFF.OlapUiI18n.I18N_OK));
	if (oFF.notNull(loDialogButton))
	{
		loDialogButton.setButtonType(oFF.UiButtonType.PRIMARY);
		ltDialogButtons.add(loDialogButton);
	}
	loDialogButton = oFF.OuRenderingUtil.sCreateDialogButton(this, oFF.COuDialogButtons.CANCEL.getName(), this.getEnvironment().getLocalization().getText(oFF.OlapUiI18n.I18N_CANCEL));
	if (oFF.notNull(loDialogButton))
	{
		ltDialogButtons.add(loDialogButton);
	}
	this.handleDialogButtons(ltDialogButtons);
	return ltDialogButtons;
};
oFF.OuDialog.prototype.handleRender = function(oRoot)
{
	var loContent = this.renderDialog();
	var loDialog = loContent;
	var loDialogContent = loDialog.getItem(0);
	var loDialogMessageLog = loDialog.getItem(1);
	if (oFF.isNull(loDialogMessageLog) || !loDialogMessageLog.isVisible())
	{
		loContent = loDialogContent;
	}
	if (oFF.notNull(loContent))
	{
		loContent.setWidth(oFF.UiCssLength.create("100%"));
		loContent.setHeight(oFF.UiCssLength.create("100%"));
	}
	oRoot.setContent(loContent);
	this.getRoot().getControl().setPadding(oFF.UiCssBoxEdges.create("1em"));
};
oFF.OuDialog.prototype.handleEvent = function(oEvent)
{
	var lHandled;
	if (oFF.XString.isEqual(oEvent.getControlName(), oFF.COuDialogConstants.UIE_ID_CLEAR_MESSAGES))
	{
		lHandled = true;
		this.getMessageLog().clear();
	}
	else if (oFF.XString.isEqual(oEvent.getControlName(), oFF.COuDialogButtons.OK.getName()))
	{
		lHandled = true;
		var lSubmitted = false;
		this.validate();
		var loMessageLog = this.getMessageLog();
		if (!loMessageLog.hasMessages(oFF.Severity.ERROR))
		{
			lSubmitted = this.submit();
		}
		if (lSubmitted)
		{
			this.close();
		}
	}
	else if (oFF.XString.isEqual(oEvent.getControlName(), oFF.COuDialogButtons.CANCEL.getName()))
	{
		lHandled = true;
		this.close();
	}
	else
	{
		lHandled = this.handleEventDialog(oEvent);
	}
	return lHandled;
};
oFF.OuDialog.prototype.handleMessageLogChanged = function(oMessageLog)
{
	this.setDirty(true);
};
oFF.OuDialog.prototype.submit = function()
{
	var lSubmitted;
	lSubmitted = this.handleSubmit();
	if (lSubmitted)
	{
		var ltListeners = this.getListeners();
		var loListenerIterator = ltListeners.getIterator();
		while (loListenerIterator.hasNext())
		{
			var loListener = loListenerIterator.next();
			if (oFF.isNull(loListener))
			{
				continue;
			}
			loListener.onDialogAfterSubmit(this);
		}
	}
	return lSubmitted;
};
oFF.OuDialog.prototype.renderDialog = function()
{
	var loContent = this.handleRenderDialog();
	if (oFF.notNull(loContent))
	{
		loContent.setWidth(oFF.UiCssLength.create("90%"));
		loContent.setHeight(oFF.UiCssLength.create("90%"));
	}
	var loMessageLog = this.renderMessageLog();
	if (oFF.notNull(loMessageLog))
	{
		loMessageLog.setWidth(oFF.UiCssLength.create("auto"));
		loMessageLog.setHeight(oFF.UiCssLength.create("auto"));
	}
	if (oFF.isNull(this.m_oUIEDialog))
	{
		this.m_oUIEDialog = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.COuDialogConstants.UIE_ID_DIALOG_CONTENT);
		this.m_oUIEDialog.addItem(loContent);
		this.m_oUIEDialog.addNewItemOfType(oFF.UiType.SPACER);
		this.m_oUIEDialog.addItem(loMessageLog);
	}
	return this.m_oUIEDialog;
};
oFF.OuDialog.prototype.renderMessageLog = function()
{
	var loMessages = this.renderMessagesContainer();
	if (oFF.isNull(this.m_oUIEMessageLog))
	{
		this.m_oUIEMessageLog = oFF.OuRenderingUtil.sCreatePanel(this, null, oFF.COuDialogConstants.UIE_ID_MESSAGE_LOG, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTexts.I18N_MESSAGES.getId()), loMessages);
		this.m_oUIEMessageLog.setExpandable(true);
		this.m_oUIEMessageLog.setExpanded(true);
	}
	var loMessageLog = this.getMessageLog();
	var ltMessages = loMessageLog.getMessages();
	this.m_oUIEMessageLog.setVisible(!ltMessages.isEmpty());
	return this.m_oUIEMessageLog;
};
oFF.OuDialog.prototype.renderMessagesContainer = function()
{
	var loToolbar = this.renderMessagesToolbar();
	var loMessages = this.renderMessagesTable();
	if (oFF.isNull(this.m_oUIEMessagesContainer))
	{
		this.m_oUIEMessagesContainer = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.COuDialogConstants.UIE_ID_MESSAGES);
		this.m_oUIEMessagesContainer.addItem(loToolbar);
		this.m_oUIEMessagesContainer.addNewItemOfType(oFF.UiType.SPACER);
		this.m_oUIEMessagesContainer.addItem(loMessages);
	}
	return this.m_oUIEMessagesContainer;
};
oFF.OuDialog.prototype.renderMessagesToolbar = function()
{
	if (oFF.isNull(this.m_oUIEMessagesToolbar))
	{
		this.m_oUIEMessagesToolbar = oFF.OuRenderingUtil.sCreateToolbar(this, null, oFF.COuDialogConstants.UIE_ID_MESSAGES_TOOLBAR);
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEMessagesToolbar, oFF.COuDialogConstants.UIE_ID_CLEAR_MESSAGES, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTexts.I18N_CLEAR.getId()));
	}
	return this.m_oUIEMessagesToolbar;
};
oFF.OuDialog.prototype.renderMessagesTable = function()
{
	if (oFF.isNull(this.m_oUIEMessagesTable))
	{
		this.m_oUIEMessagesTable = oFF.OuRenderingUtil.sCreateTable(this, null, oFF.COuDialogConstants.UIE_ID_MESSAGES, oFF.UiSelectionMode.NONE);
		var loColumn;
		loColumn = oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEMessagesTable, oFF.COuDialogConstants.UIE_ID_MESSAGE_SEVERITY, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTexts.I18N_MESSAGE_SEVERITY.getId()));
		loColumn.setWidth(oFF.UiCssLength.create("10%"));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEMessagesTable, oFF.COuDialogConstants.UIE_ID_MESSAGE_MESSAGE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTexts.I18N_MESSAGE_TEXT.getId()));
	}
	var loMessageLog = this.getMessageLog();
	var ltMessages = loMessageLog.getMessages();
	this.m_oUIEMessagesTable.clearResponsiveTableRows();
	if (!ltMessages.isEmpty())
	{
		var lcUIEName = oFF.XStringUtils.concatenate2(oFF.COuDialogConstants.UIE_ID_MESSAGE, "-");
		var lUIEName;
		var lMessageIndex = 1;
		var loMessageIterator = ltMessages.getIterator();
		while (loMessageIterator.hasNext())
		{
			var loMessage = loMessageIterator.next();
			if (oFF.isNull(loMessage))
			{
				continue;
			}
			lMessageIndex = lMessageIndex + 1;
			lUIEName = oFF.XStringUtils.concatenate2(lcUIEName, oFF.XInteger.convertToString(lMessageIndex));
			var loUIETableRow = oFF.OuRenderingUtil.sCreateTableRow(this, this.m_oUIEMessagesTable, lUIEName);
			oFF.OuRenderingUtil.sCreateTableCell(this, loUIETableRow, lUIEName, loMessage.getSeverity().getName());
			oFF.OuRenderingUtil.sCreateTableCell(this, loUIETableRow, lUIEName, loMessage.getText());
		}
	}
	return this.m_oUIEMessagesTable;
};
oFF.OuDialog.prototype.releaseObject = function()
{
	oFF.OuRenderingObjectWithModel.prototype.releaseObject.call( this );
};

oFF.OuView = function() {};
oFF.OuView.prototype = new oFF.OuRenderingObjectWithModel();
oFF.OuView.prototype._ff_c = "OuView";

oFF.OuView.prototype.handleSize = function(oSize) {};
oFF.OuView.prototype.handleSetupWithModel = function(oProperties)
{
	this.handleSetupView(oProperties);
};
oFF.OuView.prototype.handleProvideContainerType = function()
{
	return oFF.ProgramContainerType.DIALOG;
};
oFF.OuView.prototype.handleRender = function(oRoot)
{
	var loContent = this.handleRenderView();
	oRoot.setContent(loContent);
};
oFF.OuView.prototype.handleEvent = function(oEvent)
{
	return this.handleEventView(oEvent);
};
oFF.OuView.prototype.handleMessageLogChanged = function(oMessageLog) {};
oFF.OuView.prototype.provideButtons = function()
{
	return null;
};
oFF.OuView.prototype.releaseObject = function()
{
	oFF.OuRenderingObjectWithModel.prototype.releaseObject.call( this );
};

oFF.OuDialogCondition = function() {};
oFF.OuDialogCondition.prototype = new oFF.OuDialog();
oFF.OuDialogCondition.prototype._ff_c = "OuDialogCondition";

oFF.OuDialogCondition.DEFAULT_PROGRAM_NAME = "Dialog_Condition";
oFF.OuDialogCondition.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuDialogCondition.DEFAULT_PROGRAM_NAME);
};
oFF.OuDialogCondition.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuDialogCondition();
	loProgram.setup();
	return loProgram;
};
oFF.OuDialogCondition.prototype.m_oViewCondition = null;
oFF.OuDialogCondition.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuDialogCondition);
};
oFF.OuDialogCondition.prototype.handleSetupDialog = function(oProperties) {};
oFF.OuDialogCondition.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelCondition(), oProperties);
	this.setModel(loModel);
};
oFF.OuDialogCondition.prototype.handleDialogSize = function(oSize)
{
	oSize.setWidth(oFF.UiCssLength.create("60em"));
	oSize.setHeight(oFF.UiCssLength.create("50em"));
};
oFF.OuDialogCondition.prototype.handleDialogButtons = function(tDialogButtons) {};
oFF.OuDialogCondition.prototype.handleModelChanged = function(oModel, oProperty) {};
oFF.OuDialogCondition.prototype.getName = function()
{
	return oFF.COuConditionObject.DIALOG_CONDITION.getName();
};
oFF.OuDialogCondition.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITION.getId());
};
oFF.OuDialogCondition.prototype.handleRenderDialog = function()
{
	return this.renderConditionView();
};
oFF.OuDialogCondition.prototype.handleEventDialog = function(oEvent)
{
	return false;
};
oFF.OuDialogCondition.prototype.handleValidate = function()
{
	if (oFF.notNull(this.m_oViewCondition))
	{
		this.m_oViewCondition.validate();
	}
};
oFF.OuDialogCondition.prototype.handleSubmit = function()
{
	var lSubmitted = false;
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		lSubmitted = loModel.submit();
	}
	return lSubmitted;
};
oFF.OuDialogCondition.prototype.renderConditionView = function()
{
	if (oFF.isNull(this.m_oViewCondition))
	{
		this.m_oViewCondition = this.getEnvironment().createView(new oFF.OuViewCondition(), this.getModel());
		this.getMessageLog().addMessageLog(this.m_oViewCondition.getMessageLog());
	}
	if (oFF.notNull(this.m_oViewCondition))
	{
		this.m_oViewCondition.setDisplayMode(this.getDisplayMode());
		this.m_oViewCondition.setModel(this.getModel());
		return this.m_oViewCondition.getContent().getControl();
	}
	return null;
};
oFF.OuDialogCondition.prototype.releaseObject = function()
{
	oFF.OuDialog.prototype.releaseObject.call( this );
	this.m_oViewCondition = oFF.XObjectExt.release(this.m_oViewCondition);
};
oFF.OuDialogCondition.prototype.getProgramName = function()
{
	return oFF.OuDialogCondition.DEFAULT_PROGRAM_NAME;
};

oFF.OuDialogConditions = function() {};
oFF.OuDialogConditions.prototype = new oFF.OuDialog();
oFF.OuDialogConditions.prototype._ff_c = "OuDialogConditions";

oFF.OuDialogConditions.DEFAULT_PROGRAM_NAME = "Dialog_Conditions";
oFF.OuDialogConditions.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuDialogConditions.DEFAULT_PROGRAM_NAME);
};
oFF.OuDialogConditions.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuDialogConditions();
	loProgram.setup();
	return loProgram;
};
oFF.OuDialogConditions.prototype.m_oViewConditions = null;
oFF.OuDialogConditions.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuDialogConditions);
};
oFF.OuDialogConditions.prototype.handleSetupDialog = function(oProperties) {};
oFF.OuDialogConditions.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelConditions(), oProperties);
	this.setModel(loModel);
};
oFF.OuDialogConditions.prototype.handleDialogSize = function(oSize)
{
	oSize.setWidth(oFF.UiCssLength.create("60em"));
	oSize.setHeight(oFF.UiCssLength.create("30em"));
};
oFF.OuDialogConditions.prototype.handleDialogButtons = function(tDialogButtons) {};
oFF.OuDialogConditions.prototype.handleModelChanged = function(oModel, oProperty) {};
oFF.OuDialogConditions.prototype.getName = function()
{
	return oFF.COuConditionObject.DIALOG_CONDITIONS.getName();
};
oFF.OuDialogConditions.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITIONS.getId());
};
oFF.OuDialogConditions.prototype.handleRenderDialog = function()
{
	return this.renderConditionsView();
};
oFF.OuDialogConditions.prototype.handleEventDialog = function(oEvent)
{
	return false;
};
oFF.OuDialogConditions.prototype.handleValidate = function()
{
	if (oFF.notNull(this.m_oViewConditions))
	{
		this.m_oViewConditions.validate();
	}
};
oFF.OuDialogConditions.prototype.handleSubmit = function()
{
	var lSubmitted = false;
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		lSubmitted = loModel.submit();
	}
	return lSubmitted;
};
oFF.OuDialogConditions.prototype.renderConditionsView = function()
{
	if (oFF.isNull(this.m_oViewConditions))
	{
		this.m_oViewConditions = this.getEnvironment().createView(new oFF.OuViewConditions(), this.getModel());
		this.getMessageLog().addMessageLog(this.m_oViewConditions.getMessageLog());
	}
	if (oFF.notNull(this.m_oViewConditions))
	{
		this.m_oViewConditions.setDisplayMode(this.getDisplayMode());
		this.m_oViewConditions.setModel(this.getModel());
		return this.m_oViewConditions.getContent().getControl();
	}
	return null;
};
oFF.OuDialogConditions.prototype.releaseObject = function()
{
	oFF.OuDialog.prototype.releaseObject.call( this );
	this.m_oViewConditions = oFF.XObjectExt.release(this.m_oViewConditions);
};
oFF.OuDialogConditions.prototype.getProgramName = function()
{
	return oFF.OuDialogConditions.DEFAULT_PROGRAM_NAME;
};

oFF.OuViewCondition = function() {};
oFF.OuViewCondition.prototype = new oFF.OuView();
oFF.OuViewCondition.prototype._ff_c = "OuViewCondition";

oFF.OuViewCondition.UIE_ID_CONDITION_GENERAL = "General";
oFF.OuViewCondition.UIE_ID_CONDITION_DESCRIPTION = "ConditionDescription";
oFF.OuViewCondition.UIE_ID_CONDITION_ACTIVE = "ConditionActive";
oFF.OuViewCondition.UIE_ID_CONDITION_EVALUATION = "Evaluation";
oFF.OuViewCondition.DEFAULT_PROGRAM_NAME = "View_Condition";
oFF.OuViewCondition.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuViewCondition.DEFAULT_PROGRAM_NAME);
};
oFF.OuViewCondition.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuViewCondition();
	loProgram.setup();
	return loProgram;
};
oFF.OuViewCondition.prototype.m_oUIEGeneralContainer = null;
oFF.OuViewCondition.prototype.m_oUIEConditionDescription = null;
oFF.OuViewCondition.prototype.m_oUIEConditionActive = null;
oFF.OuViewCondition.prototype.m_oViewThresholds = null;
oFF.OuViewCondition.prototype.m_oViewEvaluation = null;
oFF.OuViewCondition.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuViewCondition);
};
oFF.OuViewCondition.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelCondition(), oProperties);
	this.setModel(loModel);
};
oFF.OuViewCondition.prototype.handleSetupView = function(oProperties) {};
oFF.OuViewCondition.prototype.getName = function()
{
	return oFF.COuConditionObject.VIEW_CONDITION.getName();
};
oFF.OuViewCondition.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITION.getId());
};
oFF.OuViewCondition.prototype.handleRenderView = function()
{
	var loContent = this.getRoot().getContent();
	var loGeneral = this.renderGeneralContainer();
	var loThresholds = this.renderThresholdsView();
	var loEvaluation = this.renderEvaluationView();
	if (oFF.isNull(loContent))
	{
		var loLayoutGeneral = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, null);
		loLayoutGeneral.addItem(loGeneral);
		if (oFF.notNull(loThresholds))
		{
			loLayoutGeneral.addNewItemOfType(oFF.UiType.SPACER);
			loLayoutGeneral.addItem(loThresholds);
		}
		var loTabStrip = oFF.OuRenderingUtil.sCreateTabStrip(this, null, null);
		oFF.OuRenderingUtil.sCreateTabStripItem(this, loTabStrip, oFF.OuViewCondition.UIE_ID_CONDITION_GENERAL, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_GENERAL.getId()), loLayoutGeneral);
		if (oFF.notNull(loEvaluation))
		{
			oFF.OuRenderingUtil.sCreateTabStripItem(this, loTabStrip, oFF.OuViewCondition.UIE_ID_CONDITION_EVALUATION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE.getId()), loEvaluation);
		}
		loContent = loTabStrip;
	}
	return loContent;
};
oFF.OuViewCondition.prototype.handleEventView = function(oEvent)
{
	var lHandled = false;
	switch (oEvent.getControlName())
	{
		case oFF.OuViewCondition.UIE_ID_CONDITION_DESCRIPTION:
			lHandled = true;
			this.onChangeConditionDescription(oEvent);
			break;

		case oFF.OuViewCondition.UIE_ID_CONDITION_ACTIVE:
			lHandled = true;
			this.onChangeConditionActive(oEvent);
			break;

		default:
			break;
	}
	return lHandled;
};
oFF.OuViewCondition.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.validate();
		loMessageLog.addMessageLog(loModel.getMessageLog());
	}
	var ltMessages = loMessageLog.getMessages();
	var loMessageIterator = ltMessages.getIterator();
	while (loMessageIterator.hasNext())
	{
		var loMessage = loMessageIterator.next();
		if (oFF.isNull(loMessage))
		{
			continue;
		}
		if (loMessage.getAddInfo() === oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION)
		{
			this.m_oUIEConditionDescription.setValueState(oFF.UiValueState.ERROR);
			this.m_oUIEConditionDescription.setValueStateText(loMessage.getText());
		}
	}
	if (oFF.notNull(this.m_oViewThresholds))
	{
		this.m_oViewThresholds.validate();
	}
	if (oFF.notNull(this.m_oViewEvaluation))
	{
		this.m_oViewEvaluation.validate();
	}
};
oFF.OuViewCondition.prototype.handleModelChanged = function(oModel, oProperty) {};
oFF.OuViewCondition.prototype.renderGeneralContainer = function()
{
	if (oFF.isNull(this.m_oUIEGeneralContainer))
	{
		this.m_oUIEGeneralContainer = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.OuViewCondition.UIE_ID_CONDITION_GENERAL);
		this.m_oUIEGeneralContainer.setWidth(oFF.UiCssLength.create("100%"));
		var loLayoutRow = oFF.OuRenderingUtil.sCreateLayoutRow(this, this.m_oUIEGeneralContainer, oFF.OuViewCondition.UIE_ID_CONDITION_GENERAL);
		loLayoutRow.setWidth(oFF.UiCssLength.create("100%"));
		this.m_oUIEConditionDescription = oFF.OuRenderingUtil.sCreateInputField(this, loLayoutRow, oFF.OuViewCondition.UIE_ID_CONDITION_DESCRIPTION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CONDITION_DESCRIPTION.getId()), null);
		loLayoutRow.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("3em"));
		this.m_oUIEConditionActive = oFF.OuRenderingUtil.sCreateSwitch(this, loLayoutRow, oFF.OuViewCondition.UIE_ID_CONDITION_ACTIVE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CONDITION_ACTIVE.getId()), false);
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		this.m_oUIEConditionDescription.setText(loModel.getText());
		this.m_oUIEConditionDescription.setTooltip(loModel.getText());
		this.m_oUIEConditionActive.setOn(loModel.isActive());
	}
	return this.m_oUIEGeneralContainer;
};
oFF.OuViewCondition.prototype.renderThresholdsView = function()
{
	var loModel = this.getModel();
	var loModelThresholds = null;
	if (oFF.notNull(loModel))
	{
		loModelThresholds = loModel.getThresholdManager();
	}
	if (oFF.isNull(this.m_oViewThresholds))
	{
		this.m_oViewThresholds = this.getEnvironment().createView(new oFF.OuViewConditionThresholds(), loModelThresholds);
		this.getMessageLog().addMessageLog(this.m_oViewThresholds.getMessageLog());
	}
	if (oFF.notNull(this.m_oViewThresholds))
	{
		this.m_oViewThresholds.setDisplayMode(this.getDisplayMode());
		this.m_oViewThresholds.setModel(loModelThresholds);
		return this.m_oViewThresholds.getContent().getControl();
	}
	return null;
};
oFF.OuViewCondition.prototype.renderEvaluationView = function()
{
	var loModel = this.getModel();
	var loModelEvaluation = null;
	if (oFF.notNull(loModel))
	{
		loModelEvaluation = loModel.getEvaluation();
	}
	if (oFF.isNull(this.m_oViewEvaluation))
	{
		this.m_oViewEvaluation = this.getEnvironment().createView(new oFF.OuViewConditionEvaluation(), loModelEvaluation);
		this.getMessageLog().addMessageLog(this.m_oViewEvaluation.getMessageLog());
	}
	if (oFF.notNull(this.m_oViewEvaluation))
	{
		this.m_oViewEvaluation.setDisplayMode(this.getDisplayMode());
		this.m_oViewEvaluation.setModel(loModelEvaluation);
		return this.m_oViewEvaluation.getContent().getControl();
	}
	return null;
};
oFF.OuViewCondition.prototype.onChangeConditionDescription = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.setText(this.m_oUIEConditionDescription.getText());
	}
	this.m_oUIEConditionDescription.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEConditionDescription.setValueStateText(null);
};
oFF.OuViewCondition.prototype.onChangeConditionActive = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.setIsActive(this.m_oUIEConditionActive.isOn());
	}
};
oFF.OuViewCondition.prototype.releaseObject = function()
{
	oFF.OuView.prototype.releaseObject.call( this );
	this.m_oUIEGeneralContainer = oFF.XObjectExt.release(this.m_oUIEGeneralContainer);
	this.m_oUIEConditionDescription = oFF.XObjectExt.release(this.m_oUIEConditionDescription);
	this.m_oUIEConditionActive = oFF.XObjectExt.release(this.m_oUIEConditionActive);
	this.m_oViewThresholds = oFF.XObjectExt.release(this.m_oViewThresholds);
	this.m_oViewEvaluation = oFF.XObjectExt.release(this.m_oViewEvaluation);
};
oFF.OuViewCondition.prototype.getProgramName = function()
{
	return oFF.OuViewCondition.DEFAULT_PROGRAM_NAME;
};

oFF.OuViewConditionEvaluation = function() {};
oFF.OuViewConditionEvaluation.prototype = new oFF.OuView();
oFF.OuViewConditionEvaluation.prototype._ff_c = "OuViewConditionEvaluation";

oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION = "ConditionEvaluation";
oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_TYPE = "ConditionEvaluationType";
oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION = "ConditionEvaluationDimension";
oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION_NAME = "ConditionEvaluationDimensionName";
oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION_TEXT = "ConditionEvaluationDimensionText";
oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSIONS = "ConditionEvaluationDimensions";
oFF.OuViewConditionEvaluation.DEFAULT_PROGRAM_NAME = "View_Condition_Evaluation";
oFF.OuViewConditionEvaluation.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuViewConditionEvaluation.DEFAULT_PROGRAM_NAME);
};
oFF.OuViewConditionEvaluation.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuViewConditionEvaluation();
	loProgram.setup();
	return loProgram;
};
oFF.OuViewConditionEvaluation.prototype.m_oUIEEvaluationType = null;
oFF.OuViewConditionEvaluation.prototype.m_oUIEEvaluationDimensionsTable = null;
oFF.OuViewConditionEvaluation.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuViewConditionEvaluation);
};
oFF.OuViewConditionEvaluation.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelConditionEvaluation(), oProperties);
	this.setModel(loModel);
};
oFF.OuViewConditionEvaluation.prototype.handleSetupView = function(oProperties) {};
oFF.OuViewConditionEvaluation.prototype.getName = function()
{
	return oFF.COuConditionObject.VIEW_CONDITION_EVALUATION.getName();
};
oFF.OuViewConditionEvaluation.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE.getId());
};
oFF.OuViewConditionEvaluation.prototype.handleRenderView = function()
{
	var loContent = this.getRoot().getContent();
	var loEvaluationType = this.renderEvaluationType();
	var loEvaluationDimensions = this.renderEvaluationDimensionsTable();
	if (oFF.isNull(loContent))
	{
		var loLayout = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION);
		loLayout.setWidth(oFF.UiCssLength.create("100%"));
		loLayout.addItem(loEvaluationType);
		loLayout.addNewItemOfType(oFF.UiType.SPACER);
		loLayout.addItem(loEvaluationDimensions);
		loContent = loLayout;
	}
	return loContent;
};
oFF.OuViewConditionEvaluation.prototype.handleEventView = function(oEvent)
{
	var lHandled = false;
	switch (oEvent.getControlName())
	{
		case oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_TYPE:
			lHandled = true;
			this.onChangeEvaluationType(oEvent);
			break;

		case oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSIONS:
			lHandled = true;
			this.onSelectEvaluationDimension(oEvent);
			break;

		case oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION:
			lHandled = true;
			this.onSelectEvaluationDimension(oEvent);
			break;

		default:
			break;
	}
	return lHandled;
};
oFF.OuViewConditionEvaluation.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.validate();
		loMessageLog.addMessageLog(loModel.getMessageLog());
	}
};
oFF.OuViewConditionEvaluation.prototype.handleModelChanged = function(oModel, oProperty)
{
	if (oModel === this.getModel())
	{
		if (oProperty.getProperty() === oFF.OuModelConditionEvaluation.PROPERTY_CONDITION_EVALUATION_TYPE)
		{
			this.setDirty(true);
		}
	}
};
oFF.OuViewConditionEvaluation.prototype.renderEvaluationType = function()
{
	if (oFF.isNull(this.m_oUIEEvaluationType))
	{
		this.m_oUIEEvaluationType = oFF.OuRenderingUtil.sCreateDropdown(this, null, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_TYPE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_EVALUATION_TYPE.getId()));
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var lUIESelectedItemName;
		this.m_oUIEEvaluationType.clearItems();
		var lEvaluationType = loModel.getEvaluationType();
		var lEvaluationTypeName = oFF.notNull(lEvaluationType) ? lEvaluationType.getName() : null;
		lUIESelectedItemName = null;
		var ltSupportedEvaluationTypes = loModel.getSupportedEvaluationTypes();
		var loSupportedEvaluationTypeIterator = ltSupportedEvaluationTypes.getIterator();
		while (loSupportedEvaluationTypeIterator.hasNext())
		{
			var lSupportedEvaluationType = loSupportedEvaluationTypeIterator.next();
			if (oFF.isNull(lSupportedEvaluationType))
			{
				continue;
			}
			var loUIEDropdownItem = oFF.OuRenderingUtil.sCreateDropdownItem(this, this.m_oUIEEvaluationType, lSupportedEvaluationType.getName(), lSupportedEvaluationType.getText());
			if (oFF.XString.isEqual(lSupportedEvaluationType.getName(), lEvaluationTypeName))
			{
				lUIESelectedItemName = loUIEDropdownItem.getName();
			}
		}
		this.m_oUIEEvaluationType.setSelectedName(lUIESelectedItemName);
	}
	return this.m_oUIEEvaluationType.getParent();
};
oFF.OuViewConditionEvaluation.prototype.renderEvaluationDimensionsTable = function()
{
	if (oFF.isNull(this.m_oUIEEvaluationDimensionsTable))
	{
		this.m_oUIEEvaluationDimensionsTable = oFF.OuRenderingUtil.sCreateTable(this, null, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSIONS, oFF.UiSelectionMode.MULTI_SELECT);
		this.m_oUIEEvaluationDimensionsTable.setVisible(false);
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEEvaluationDimensionsTable, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION_NAME, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSION.getId()));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEEvaluationDimensionsTable, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION_TEXT, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_EVALUATION_DIMENSION.getId()));
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		this.m_oUIEEvaluationDimensionsTable.setVisible(loModel.getEvaluationType() === oFF.ConditionDimensionEvaluationType.GIVEN_LIST);
		var lcUIEName = oFF.XStringUtils.concatenate2(oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION, "-");
		var lUIEName;
		this.m_oUIEEvaluationDimensionsTable.clearResponsiveTableRows();
		var ltEvaluationDimensions = loModel.getEvaluationDimensions();
		var ltSupportedEvaluationDimensions = loModel.getSupportedEvaluationDimensions();
		var loSupportedEvaluationDimensionIterator = ltSupportedEvaluationDimensions.getIterator();
		var lSupportedEvaluationDimensionIndex = 0;
		while (loSupportedEvaluationDimensionIterator.hasNext())
		{
			var loSupportedEvaluationDimension = loSupportedEvaluationDimensionIterator.next();
			if (oFF.isNull(loSupportedEvaluationDimension))
			{
				continue;
			}
			lSupportedEvaluationDimensionIndex = lSupportedEvaluationDimensionIndex + 1;
			lUIEName = oFF.XStringUtils.concatenate2(lcUIEName, loSupportedEvaluationDimension.getName());
			var loTableRow = oFF.OuRenderingUtil.sCreateTableRow(this, this.m_oUIEEvaluationDimensionsTable, lUIEName);
			loTableRow.setSelected(ltEvaluationDimensions.containsKey(loSupportedEvaluationDimension.getName()));
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loSupportedEvaluationDimension.getName());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loSupportedEvaluationDimension.getText());
		}
	}
	return this.m_oUIEEvaluationDimensionsTable;
};
oFF.OuViewConditionEvaluation.prototype.onChangeEvaluationType = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loSelectedItem = this.m_oUIEEvaluationType.getSelectedItem();
		var lSelectedItemName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedItem);
		loModel.setEvaluationType(oFF.ConditionDimensionEvaluationType.lookupName(lSelectedItemName));
	}
};
oFF.OuViewConditionEvaluation.prototype.onSelectEvaluationDimension = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearEvaluationDimensions();
		var ltSelectedItems = this.m_oUIEEvaluationDimensionsTable.getSelectedItems();
		var loSelectedItemIterator = ltSelectedItems.getIterator();
		while (loSelectedItemIterator.hasNext())
		{
			var loSelectedItem = loSelectedItemIterator.next();
			if (oFF.isNull(loSelectedItem))
			{
				continue;
			}
			var lSelectedItemName = loSelectedItem.getName();
			var loSelectedRow = this.m_oUIEEvaluationDimensionsTable.getResponsiveTableRowByName(lSelectedItemName);
			var lSelectedRowName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedRow);
			var lEvaluationDimension = oFF.XString.replace(lSelectedRowName, oFF.OuViewConditionEvaluation.UIE_ID_CONDITION_EVALUATION_DIMENSION, "");
			if (oFF.notNull(lEvaluationDimension))
			{
				if (oFF.XString.startsWith(lEvaluationDimension, "-"))
				{
					lEvaluationDimension = oFF.XString.substring(lEvaluationDimension, 1, -1);
				}
			}
			var loEvaluationDimension = loModel.getSupportedEvaluationDimensions().getByKey(lEvaluationDimension);
			if (oFF.notNull(loEvaluationDimension))
			{
				loModel.addEvaluationDimension(loEvaluationDimension);
			}
		}
	}
};
oFF.OuViewConditionEvaluation.prototype.releaseObject = function()
{
	oFF.OuView.prototype.releaseObject.call( this );
	this.m_oUIEEvaluationType = oFF.XObjectExt.release(this.m_oUIEEvaluationType);
	this.m_oUIEEvaluationDimensionsTable = oFF.XObjectExt.release(this.m_oUIEEvaluationDimensionsTable);
};
oFF.OuViewConditionEvaluation.prototype.getProgramName = function()
{
	return oFF.OuViewConditionEvaluation.DEFAULT_PROGRAM_NAME;
};

oFF.OuViewConditionThreshold = function() {};
oFF.OuViewConditionThreshold.prototype = new oFF.OuView();
oFF.OuViewConditionThreshold.prototype._ff_c = "OuViewConditionThreshold";

oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD = "Threshold";
oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_MEASURE = "ThresholdMeasure";
oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_OPERATOR = "ThresholdOperator";
oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_LOW_VALUE = "ThresholdLowValue";
oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_HIGH_VALUE = "ThresholdHighValue";
oFF.OuViewConditionThreshold.DEFAULT_PROGRAM_NAME = "View_Condition_Threshold";
oFF.OuViewConditionThreshold.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuViewConditionThreshold.DEFAULT_PROGRAM_NAME);
};
oFF.OuViewConditionThreshold.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuViewConditionThreshold();
	loProgram.setup();
	return loProgram;
};
oFF.OuViewConditionThreshold.prototype.m_oUIEThresholdMeasure = null;
oFF.OuViewConditionThreshold.prototype.m_oUIEThresholdOperator = null;
oFF.OuViewConditionThreshold.prototype.m_oUIEThresholdLowValue = null;
oFF.OuViewConditionThreshold.prototype.m_oUIEThresholdHighValue = null;
oFF.OuViewConditionThreshold.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuViewConditionThreshold);
};
oFF.OuViewConditionThreshold.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelConditionThreshold(), oProperties);
	this.setModel(loModel);
};
oFF.OuViewConditionThreshold.prototype.handleSetupView = function(oProperties) {};
oFF.OuViewConditionThreshold.prototype.getName = function()
{
	return oFF.COuConditionObject.VIEW_CONDITION_THRESHOLD.getName();
};
oFF.OuViewConditionThreshold.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLD.getId());
};
oFF.OuViewConditionThreshold.prototype.handleRenderView = function()
{
	var loContent = this.getRoot().getContent();
	if (oFF.isNull(loContent))
	{
		var loLayout = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD);
		loLayout.setWidth(oFF.UiCssLength.create("100%"));
		var lLabelWidthCss = oFF.UiCssLength.create("30%");
		this.m_oUIEThresholdMeasure = oFF.OuRenderingUtil.sCreateDropdown(this, loLayout, oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_MEASURE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_KEY_FIGURE.getId()));
		this.m_oUIEThresholdMeasure.getParent().getItem(0).setWidth(lLabelWidthCss);
		this.m_oUIEThresholdOperator = oFF.OuRenderingUtil.sCreateDropdown(this, loLayout, oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_OPERATOR, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_OPERATOR.getId()));
		this.m_oUIEThresholdOperator.getParent().getItem(0).setWidth(lLabelWidthCss);
		this.m_oUIEThresholdLowValue = oFF.OuRenderingUtil.sCreateInputField(this, loLayout, oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_LOW_VALUE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_LOW_VALUE.getId()), null);
		this.m_oUIEThresholdLowValue.getParent().getItem(0).setWidth(lLabelWidthCss);
		this.m_oUIEThresholdHighValue = oFF.OuRenderingUtil.sCreateInputField(this, loLayout, oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_HIGH_VALUE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_HIGH_VALUE.getId()), null);
		this.m_oUIEThresholdHighValue.getParent().getItem(0).setWidth(lLabelWidthCss);
		loContent = loLayout;
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loUIEDropdownItem;
		var lUIESelectedItemName;
		this.m_oUIEThresholdMeasure.clearItems();
		var loMeasure = loModel.getMeasure();
		var lMeasureName = oFF.notNull(loMeasure) ? loMeasure.getName() : null;
		lUIESelectedItemName = null;
		var ltSupportedMeasures = loModel.getSupportedMeasures();
		var loSupportedMeasureIterator = ltSupportedMeasures.getIterator();
		while (loSupportedMeasureIterator.hasNext())
		{
			var loSupportedMeasure = loSupportedMeasureIterator.next();
			if (oFF.isNull(loSupportedMeasure))
			{
				continue;
			}
			loUIEDropdownItem = oFF.OuRenderingUtil.sCreateDropdownItem(this, this.m_oUIEThresholdMeasure, loSupportedMeasure.getName(), loSupportedMeasure.getText());
			if (oFF.XString.isEqual(loSupportedMeasure.getName(), lMeasureName))
			{
				lUIESelectedItemName = loUIEDropdownItem.getName();
			}
		}
		this.m_oUIEThresholdMeasure.setSelectedName(lUIESelectedItemName);
		this.m_oUIEThresholdOperator.clearItems();
		var lOperator = loModel.getOperator();
		var lOperatorName = oFF.notNull(lOperator) ? lOperator.getName() : null;
		lUIESelectedItemName = null;
		var ltSupportedOperators = loModel.getSupportedOperators();
		var loSupportedOperatorIterator = ltSupportedOperators.getIterator();
		while (loSupportedOperatorIterator.hasNext())
		{
			var lSupportedOperator = loSupportedOperatorIterator.next();
			if (oFF.isNull(lSupportedOperator))
			{
				continue;
			}
			loUIEDropdownItem = oFF.OuRenderingUtil.sCreateDropdownItem(this, this.m_oUIEThresholdOperator, lSupportedOperator.getName(), lSupportedOperator.getText());
			if (oFF.XString.isEqual(lSupportedOperator.getName(), lOperatorName))
			{
				lUIESelectedItemName = loUIEDropdownItem.getName();
			}
		}
		this.m_oUIEThresholdOperator.setSelectedName(lUIESelectedItemName);
		this.m_oUIEThresholdLowValue.setText(loModel.getLowValue());
		this.m_oUIEThresholdHighValue.setText(loModel.getHighValue());
		if (loModel.getOperator() !== oFF.ConditionComparisonOperator.BETWEEN && loModel.getOperator() !== oFF.ConditionComparisonOperator.NOT_BETWEEN)
		{
			this.m_oUIEThresholdHighValue.getParent().setVisible(false);
			this.m_oUIEThresholdLowValue.getParent().getItem(0).setText(this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_VALUE.getId()));
		}
		else
		{
			this.m_oUIEThresholdHighValue.getParent().setVisible(true);
			this.m_oUIEThresholdLowValue.getParent().getItem(0).setText(this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_LOW_VALUE.getId()));
		}
	}
	return loContent;
};
oFF.OuViewConditionThreshold.prototype.handleEventView = function(oEvent)
{
	var lHandled = false;
	switch (oEvent.getControlName())
	{
		case oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_MEASURE:
			lHandled = true;
			this.onChangeKeyFigure(oEvent);
			break;

		case oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_OPERATOR:
			lHandled = true;
			this.onChangeOperator(oEvent);
			break;

		case oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_LOW_VALUE:
			lHandled = true;
			this.onChangeLowValue(oEvent);
			break;

		case oFF.OuViewConditionThreshold.UIE_ID_THRESHOLD_HIGH_VALUE:
			lHandled = true;
			this.onChangeHighValue(oEvent);
			break;

		default:
			break;
	}
	return lHandled;
};
oFF.OuViewConditionThreshold.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.validate();
		loMessageLog.addMessageLog(loModel.getMessageLog());
	}
	var ltMessages = loMessageLog.getMessages();
	var loMessageIterator = ltMessages.getIterator();
	while (loMessageIterator.hasNext())
	{
		var loMessage = loMessageIterator.next();
		if (oFF.isNull(loMessage))
		{
			continue;
		}
		if (loMessage.getAddInfo() === oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_MEASURE)
		{
			this.m_oUIEThresholdMeasure.setValueState(oFF.UiValueState.ERROR);
			this.m_oUIEThresholdMeasure.setValueStateText(loMessage.getText());
		}
		if (loMessage.getAddInfo() === oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR)
		{
			this.m_oUIEThresholdOperator.setValueState(oFF.UiValueState.ERROR);
			this.m_oUIEThresholdOperator.setValueStateText(loMessage.getText());
		}
		if (loMessage.getAddInfo() === oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_LOW)
		{
			this.m_oUIEThresholdLowValue.setValueState(oFF.UiValueState.ERROR);
			this.m_oUIEThresholdLowValue.setValueStateText(loMessage.getText());
		}
		if (loMessage.getAddInfo() === oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_HIGH)
		{
			this.m_oUIEThresholdHighValue.setValueState(oFF.UiValueState.ERROR);
			this.m_oUIEThresholdHighValue.setValueStateText(loMessage.getText());
		}
	}
};
oFF.OuViewConditionThreshold.prototype.handleModelChanged = function(oModel, oProperty)
{
	if (oModel === this.getModel())
	{
		if (oProperty.getProperty() === oFF.OuModelConditionThreshold.PROPERTY_THRESHOLD_OPERATOR)
		{
			this.setDirty(true);
		}
	}
};
oFF.OuViewConditionThreshold.prototype.onChangeKeyFigure = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loSelectedItem = this.m_oUIEThresholdMeasure.getSelectedItem();
		var lSelectedItemName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedItem);
		loModel.setMeasure(lSelectedItemName);
	}
	this.m_oUIEThresholdMeasure.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdMeasure.setValueStateText(null);
};
oFF.OuViewConditionThreshold.prototype.onChangeOperator = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loSelectedItem = this.m_oUIEThresholdOperator.getSelectedItem();
		var lSelectedItemName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedItem);
		loModel.setOperator(oFF.ConditionComparisonOperator.sLookupName(lSelectedItemName));
	}
	this.m_oUIEThresholdOperator.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdOperator.setValueStateText(null);
};
oFF.OuViewConditionThreshold.prototype.onChangeLowValue = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.setLowValue(this.m_oUIEThresholdLowValue.getText());
	}
	this.m_oUIEThresholdLowValue.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdLowValue.setValueStateText(null);
	this.m_oUIEThresholdHighValue.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdHighValue.setValueStateText(null);
};
oFF.OuViewConditionThreshold.prototype.onChangeHighValue = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.setHighValue(this.m_oUIEThresholdHighValue.getText());
	}
	this.m_oUIEThresholdLowValue.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdLowValue.setValueStateText(null);
	this.m_oUIEThresholdHighValue.setValueState(oFF.UiValueState.NONE);
	this.m_oUIEThresholdHighValue.setValueStateText(null);
};
oFF.OuViewConditionThreshold.prototype.releaseObject = function()
{
	oFF.OuView.prototype.releaseObject.call( this );
	this.m_oUIEThresholdMeasure = oFF.XObjectExt.release(this.m_oUIEThresholdMeasure);
	this.m_oUIEThresholdOperator = oFF.XObjectExt.release(this.m_oUIEThresholdOperator);
	this.m_oUIEThresholdLowValue = oFF.XObjectExt.release(this.m_oUIEThresholdLowValue);
	this.m_oUIEThresholdHighValue = oFF.XObjectExt.release(this.m_oUIEThresholdHighValue);
};
oFF.OuViewConditionThreshold.prototype.getProgramName = function()
{
	return oFF.OuViewConditionThreshold.DEFAULT_PROGRAM_NAME;
};

oFF.OuViewConditionThresholds = function() {};
oFF.OuViewConditionThresholds.prototype = new oFF.OuView();
oFF.OuViewConditionThresholds.prototype._ff_c = "OuViewConditionThresholds";

oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS = "Thresholds";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS_TOOLBAR = "ThresholdsToolbar";
oFF.OuViewConditionThresholds.UIE_ID_CREATE_THRESHOLD = "CreateThreshold";
oFF.OuViewConditionThresholds.UIE_ID_CHANGE_THRESHOLD = "ChangeThreshold";
oFF.OuViewConditionThresholds.UIE_ID_DELETE_THRESHOLD = "DeleteThreshold";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_TOOLBAR = "ThresholdToolbar";
oFF.OuViewConditionThresholds.UIE_ID_SAVE_THRESHOLD = "SaveThreshold";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD = "Threshold";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_KEY_FIGURE = "ThresholdKeyFigure";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_OPERATOR = "ThresholdOperator";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_LOW_VALUE = "ThresholdLowValue";
oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_HIGH_VALUE = "ThresholdHighValue";
oFF.OuViewConditionThresholds.DEFAULT_PROGRAM_NAME = "View_Condition_Thresholds";
oFF.OuViewConditionThresholds.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuViewConditionThresholds.DEFAULT_PROGRAM_NAME);
};
oFF.OuViewConditionThresholds.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuViewConditionThresholds();
	loProgram.setup();
	return loProgram;
};
oFF.OuViewConditionThresholds.prototype.m_oUIEThresholdsContainer = null;
oFF.OuViewConditionThresholds.prototype.m_oUIEThresholdsToolbar = null;
oFF.OuViewConditionThresholds.prototype.m_oUIEThresholdsTable = null;
oFF.OuViewConditionThresholds.prototype.m_oUIEThresholdContainer = null;
oFF.OuViewConditionThresholds.prototype.m_oUIEThresholdToolbar = null;
oFF.OuViewConditionThresholds.prototype.m_oViewThreshold = null;
oFF.OuViewConditionThresholds.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuViewConditionThresholds);
};
oFF.OuViewConditionThresholds.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelConditionThresholds(), oProperties);
	this.setModel(loModel);
};
oFF.OuViewConditionThresholds.prototype.handleSetupView = function(oProperties) {};
oFF.OuViewConditionThresholds.prototype.getName = function()
{
	return oFF.COuConditionObject.VIEW_CONDITION_THRESHOLDS.getName();
};
oFF.OuViewConditionThresholds.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLDS.getId());
};
oFF.OuViewConditionThresholds.prototype.handleRenderView = function()
{
	var loContent = this.getRoot().getContent();
	var loThresholds = this.renderThresholdsContainer();
	var loThreshold = this.renderThresholdContainer();
	if (oFF.isNull(loContent))
	{
		var loLayout = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, null);
		loLayout.addItem(loThresholds);
		loLayout.addNewItemOfType(oFF.UiType.SPACER).setHeight(oFF.UiCssLength.create("3em"));
		loLayout.addItem(loThreshold);
		loContent = loLayout;
	}
	return loContent;
};
oFF.OuViewConditionThresholds.prototype.renderThresholdsContainer = function()
{
	var loToolbar = this.renderThresholdsToolbar();
	var loThresholds = this.renderThresholdsTable();
	if (oFF.isNull(this.m_oUIEThresholdsContainer))
	{
		this.m_oUIEThresholdsContainer = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS);
		this.m_oUIEThresholdsContainer.addItem(loToolbar);
		this.m_oUIEThresholdsContainer.addNewItemOfType(oFF.UiType.SPACER);
		this.m_oUIEThresholdsContainer.addItem(loThresholds);
	}
	return this.m_oUIEThresholdsContainer;
};
oFF.OuViewConditionThresholds.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.validate();
		loMessageLog.addMessageLog(loModel.getMessageLog());
	}
};
oFF.OuViewConditionThresholds.prototype.handleEventView = function(oEvent)
{
	var lHandled = false;
	switch (oEvent.getControlName())
	{
		case oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS:
			if (oEvent.getEvent() === oFF.COuEvent.ON_SELECT || oEvent.getEvent() === oFF.COuEvent.ON_SELECTION_CHANGE)
			{
				lHandled = true;
				this.onChangeThreshold(oEvent);
			}
			break;

		case oFF.OuViewConditionThresholds.UIE_ID_CREATE_THRESHOLD:
			lHandled = true;
			this.onCreateThreshold();
			break;

		case oFF.OuViewConditionThresholds.UIE_ID_CHANGE_THRESHOLD:
			lHandled = true;
			this.onChangeThreshold(oEvent);
			break;

		case oFF.OuViewConditionThresholds.UIE_ID_DELETE_THRESHOLD:
			lHandled = true;
			this.onDeleteThreshold(oEvent);
			break;

		case oFF.OuViewConditionThresholds.UIE_ID_SAVE_THRESHOLD:
			lHandled = true;
			this.onSubmitThreshold();
			break;

		default:
			break;
	}
	return lHandled;
};
oFF.OuViewConditionThresholds.prototype.handleModelChanged = function(oModel, oProperty)
{
	if (oModel === this.getModel() && oProperty.getProperty() === oFF.OuModelConditionThresholds.PROPERTY_CONDITION_THRESHOLDS)
	{
		this.setDirty(true);
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var ltThresholds = loModel.getThresholds();
		var loThresholdIterator = ltThresholds.getIterator();
		while (loThresholdIterator.hasNext())
		{
			var loThreshold = loThresholdIterator.next();
			if (oFF.isNull(loThreshold))
			{
				continue;
			}
			if (oModel === loThreshold)
			{
				this.setDirty(true);
			}
		}
	}
};
oFF.OuViewConditionThresholds.prototype.onRenderingObjectModelChanged = function(oRenderingObject)
{
	if (oRenderingObject === this.m_oViewThreshold)
	{
		this.handleModelChanged(this.m_oViewThreshold.getModel(), null);
	}
};
oFF.OuViewConditionThresholds.prototype.renderThresholdsToolbar = function()
{
	if (oFF.isNull(this.m_oUIEThresholdsToolbar))
	{
		this.m_oUIEThresholdsToolbar = oFF.OuRenderingUtil.sCreateToolbar(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS_TOOLBAR);
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEThresholdsToolbar, oFF.OuViewConditionThresholds.UIE_ID_CREATE_THRESHOLD, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CREATE_THRESHOLD.getId()));
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEThresholdsToolbar, oFF.OuViewConditionThresholds.UIE_ID_DELETE_THRESHOLD, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DELETE_THRESHOLD.getId()));
	}
	return this.m_oUIEThresholdsToolbar;
};
oFF.OuViewConditionThresholds.prototype.renderThresholdsTable = function()
{
	if (oFF.isNull(this.m_oUIEThresholdsTable))
	{
		this.m_oUIEThresholdsTable = oFF.OuRenderingUtil.sCreateTable(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS, oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEThresholdsTable, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_KEY_FIGURE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_KEY_FIGURE.getId()));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEThresholdsTable, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_OPERATOR, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_OPERATOR.getId()));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEThresholdsTable, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_LOW_VALUE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_LOW_VALUE.getId()));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEThresholdsTable, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_HIGH_VALUE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_HIGH_VALUE.getId()));
	}
	this.m_oUIEThresholdsTable.clearResponsiveTableRows();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var ltThresholds = loModel.getThresholds();
		var loThresholdIterator = ltThresholds.getIterator();
		var loThreshold;
		var lcUIEName = oFF.XStringUtils.concatenate2(oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD, "-");
		var lUIEName;
		var lThresholdIndex;
		lThresholdIndex = 0;
		while (loThresholdIterator.hasNext())
		{
			loThreshold = loThresholdIterator.next();
			if (oFF.isNull(loThreshold))
			{
				continue;
			}
			lThresholdIndex = lThresholdIndex + 1;
			lUIEName = oFF.XStringUtils.concatenate2(lcUIEName, oFF.XInteger.convertToString(lThresholdIndex));
			var loTableRow = oFF.OuRenderingUtil.sCreateTableRow(this, this.m_oUIEThresholdsTable, lUIEName);
			loTableRow.setSelected(loThreshold.isSelected());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loThreshold.getMeasure().getText());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loThreshold.getOperator().getName());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loThreshold.getLowValue());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loThreshold.getHighValue());
		}
	}
	return this.m_oUIEThresholdsTable;
};
oFF.OuViewConditionThresholds.prototype.renderThresholdContainer = function()
{
	var loToolbar = this.renderThresholdToolbar();
	var loThreshold = this.renderThresholdView();
	if (oFF.isNull(this.m_oUIEThresholdContainer))
	{
		var loLayout = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLDS);
		loLayout.addItem(loToolbar);
		loLayout.addNewItemOfType(oFF.UiType.SPACER);
		loLayout.addItem(loThreshold);
		this.m_oUIEThresholdContainer = oFF.OuRenderingUtil.sCreatePanel(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_THRESHOLD.getId()), loLayout);
	}
	var lVisible = false;
	if (oFF.notNull(this.m_oViewThreshold))
	{
		lVisible = this.m_oViewThreshold.getModel() !== null;
	}
	this.m_oUIEThresholdContainer.setVisible(lVisible);
	return this.m_oUIEThresholdContainer;
};
oFF.OuViewConditionThresholds.prototype.renderThresholdToolbar = function()
{
	if (oFF.isNull(this.m_oUIEThresholdToolbar))
	{
		this.m_oUIEThresholdToolbar = oFF.OuRenderingUtil.sCreateToolbar(this, null, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD_TOOLBAR);
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEThresholdToolbar, oFF.OuViewConditionThresholds.UIE_ID_SAVE_THRESHOLD, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTexts.I18N_SAVE.getId()));
	}
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		if (oFF.notNull(this.m_oViewThreshold))
		{
			var loButtonSave = this.m_oUIEThresholdToolbar.getItem(0);
			loButtonSave.setVisible(this.m_oViewThreshold.getDisplayMode() === oFF.COuDisplayMode.CREATE);
		}
	}
	return this.m_oUIEThresholdToolbar;
};
oFF.OuViewConditionThresholds.prototype.renderThresholdView = function()
{
	var loModel = this.getModel();
	var loModelThreshold = null;
	if (loModel.getSelections().hasElements())
	{
		loModelThreshold = loModel.getSelections().get(0);
	}
	if (oFF.isNull(this.m_oViewThreshold))
	{
		this.m_oViewThreshold = this.getEnvironment().createView(new oFF.OuViewConditionThreshold(), loModelThreshold);
		this.m_oViewThreshold.addListener(this);
	}
	if (oFF.notNull(this.m_oViewThreshold))
	{
		if (this.m_oViewThreshold.getDisplayMode() !== oFF.COuDisplayMode.CREATE)
		{
			this.m_oViewThreshold.setModel(loModelThreshold);
		}
		return this.m_oViewThreshold.getContent().getControl();
	}
	return null;
};
oFF.OuViewConditionThresholds.prototype.onCreateThreshold = function()
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loThreshold = loModel.createThreshold();
		loModel.clearSelections();
		if (oFF.notNull(this.m_oViewThreshold))
		{
			this.m_oViewThreshold.setDisplayMode(oFF.COuDisplayMode.CREATE);
			this.m_oViewThreshold.setModel(loThreshold);
			this.setDirty(true);
		}
	}
};
oFF.OuViewConditionThresholds.prototype.onChangeThreshold = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearSelections();
		var ltSelectedItems = this.m_oUIEThresholdsTable.getSelectedItems();
		var loSelectedItemIterator = ltSelectedItems.getIterator();
		while (loSelectedItemIterator.hasNext())
		{
			var loSelectedItem = loSelectedItemIterator.next();
			if (oFF.isNull(loSelectedItem))
			{
				continue;
			}
			var lSelectedItemName = loSelectedItem.getName();
			var loSelectedRow = this.m_oUIEThresholdsTable.getResponsiveTableRowByName(lSelectedItemName);
			var lSelectedRowName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedRow);
			var lIndexAsString = oFF.XString.replace(lSelectedRowName, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD, "");
			var lIndex = 0;
			if (oFF.notNull(lIndexAsString))
			{
				if (oFF.XString.startsWith(lIndexAsString, "-"))
				{
					lIndex = oFF.XInteger.convertFromString(oFF.XString.substring(lIndexAsString, 1, -1));
				}
				else
				{
					lIndex = oFF.XInteger.convertFromString(lIndexAsString);
				}
			}
			var loThreshold = loModel.getThresholds().get(lIndex - 1);
			if (oFF.notNull(loThreshold))
			{
				if (oFF.notNull(this.m_oViewThreshold))
				{
					this.m_oViewThreshold.setDisplayMode(oFF.COuDisplayMode.CHANGE);
					this.m_oViewThreshold.setModel(loThreshold);
				}
				loModel.selectItem(loThreshold);
			}
			break;
		}
	}
};
oFF.OuViewConditionThresholds.prototype.onDeleteThreshold = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearSelections();
		var ltSelectedItems = this.m_oUIEThresholdsTable.getSelectedItems();
		var loSelectedItemIterator = ltSelectedItems.getIterator();
		while (loSelectedItemIterator.hasNext())
		{
			var loSelectedItem = loSelectedItemIterator.next();
			if (oFF.isNull(loSelectedItem))
			{
				continue;
			}
			var lSelectedItemName = loSelectedItem.getName();
			var loSelectedRow = this.m_oUIEThresholdsTable.getResponsiveTableRowByName(lSelectedItemName);
			var lSelectedRowName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedRow);
			var lIndexAsString = oFF.XString.replace(lSelectedRowName, oFF.OuViewConditionThresholds.UIE_ID_THRESHOLD, "");
			var lIndex = 0;
			if (oFF.notNull(lIndexAsString))
			{
				if (oFF.XString.startsWith(lIndexAsString, "-"))
				{
					lIndex = oFF.XInteger.convertFromString(oFF.XString.substring(lIndexAsString, 1, -1));
				}
				else
				{
					lIndex = oFF.XInteger.convertFromString(lIndexAsString);
				}
			}
			var loThreshold = loModel.getThresholds().get(lIndex - 1);
			if (oFF.notNull(loThreshold))
			{
				loModel.removeThreshold(loThreshold);
			}
		}
	}
};
oFF.OuViewConditionThresholds.prototype.onSubmitThreshold = function()
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var loMessageLog = this.getMessageLog();
		loMessageLog.clear();
		loModel.clearSelections();
		var lModelThreshold = null;
		if (oFF.notNull(this.m_oViewThreshold))
		{
			lModelThreshold = this.m_oViewThreshold.getModel();
			this.m_oViewThreshold.validate();
			loMessageLog.addMessages(this.m_oViewThreshold.getMessageLog().getMessages());
		}
		if (!loMessageLog.hasMessages(oFF.Severity.ERROR))
		{
			if (!loModel.getThresholds().contains(lModelThreshold))
			{
				loModel.addThreshold(lModelThreshold);
				loModel.selectItem(lModelThreshold);
			}
		}
	}
};
oFF.OuViewConditionThresholds.prototype.releaseObject = function()
{
	oFF.OuView.prototype.releaseObject.call( this );
	this.m_oUIEThresholdsContainer = oFF.XObjectExt.release(this.m_oUIEThresholdsContainer);
	this.m_oUIEThresholdsToolbar = oFF.XObjectExt.release(this.m_oUIEThresholdsToolbar);
	this.m_oUIEThresholdsTable = oFF.XObjectExt.release(this.m_oUIEThresholdsTable);
	this.m_oUIEThresholdContainer = oFF.XObjectExt.release(this.m_oUIEThresholdContainer);
	this.m_oUIEThresholdToolbar = oFF.XObjectExt.release(this.m_oUIEThresholdToolbar);
	this.m_oViewThreshold = oFF.XObjectExt.release(this.m_oViewThreshold);
};
oFF.OuViewConditionThresholds.prototype.getProgramName = function()
{
	return oFF.OuViewConditionThresholds.DEFAULT_PROGRAM_NAME;
};

oFF.OuViewConditions = function() {};
oFF.OuViewConditions.prototype = new oFF.OuView();
oFF.OuViewConditions.prototype._ff_c = "OuViewConditions";

oFF.OuViewConditions.UIE_ID_CONDITIONS = "Conditions";
oFF.OuViewConditions.UIE_ID_CONDITIONS_TOOLBAR = "ConditionsToolbar";
oFF.OuViewConditions.UIE_ID_CREATE_CONDITION = "CreateCondition";
oFF.OuViewConditions.UIE_ID_CHANGE_CONDITION = "ChangeCondition";
oFF.OuViewConditions.UIE_ID_DELETE_CONDITION = "DeleteCondition";
oFF.OuViewConditions.UIE_ID_CONDITION = "Condition";
oFF.OuViewConditions.UIE_ID_CONDITION_ACTIVE = "Active";
oFF.OuViewConditions.DEFAULT_PROGRAM_NAME = "View_Conditions";
oFF.OuViewConditions.createRunner = function()
{
	return oFF.KernelBoot.createByName(oFF.OuViewConditions.DEFAULT_PROGRAM_NAME);
};
oFF.OuViewConditions.createNewTestDialogProgram = function()
{
	var loProgram = new oFF.OuViewConditions();
	loProgram.setup();
	return loProgram;
};
oFF.OuViewConditions.prototype.m_oUIEConditionsToolbar = null;
oFF.OuViewConditions.prototype.m_oUIEConditionsTable = null;
oFF.OuViewConditions.prototype.m_oDialogCondition = null;
oFF.OuViewConditions.prototype.handleProvideClass = function()
{
	return oFF.XClass.create(oFF.OuViewConditions);
};
oFF.OuViewConditions.prototype.handleProvideModel = function(oProperties)
{
	var loModel = this.getEnvironment().createModel(new oFF.OuModelConditions(), oProperties);
	this.setModel(loModel);
};
oFF.OuViewConditions.prototype.handleSetupView = function(oProperties) {};
oFF.OuViewConditions.prototype.getName = function()
{
	return oFF.COuConditionObject.VIEW_CONDITIONS.getName();
};
oFF.OuViewConditions.prototype.getTitleDescription = function()
{
	return this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DEFINE_CONDITIONS.getId());
};
oFF.OuViewConditions.prototype.handleRenderView = function()
{
	var loContent = this.getRoot().getContent();
	var loToolbar = this.renderConditionsToolbar();
	var loConditions = this.renderConditionsTable();
	if (oFF.isNull(loContent))
	{
		var loLayout = oFF.OuRenderingUtil.sCreateLayoutColumn(this, null, null);
		loLayout.addItem(loToolbar);
		loLayout.addNewItemOfType(oFF.UiType.SPACER).setWidth(oFF.UiCssLength.create("1em"));
		loLayout.addItem(loConditions);
		loContent = loLayout;
	}
	return loContent;
};
oFF.OuViewConditions.prototype.handleEventView = function(oEvent)
{
	var lHandled = false;
	switch (oEvent.getControlName())
	{
		case oFF.OuViewConditions.UIE_ID_CREATE_CONDITION:
			lHandled = true;
			this.onCreateCondition(oEvent);
			break;

		case oFF.OuViewConditions.UIE_ID_CHANGE_CONDITION:
			lHandled = true;
			this.onChangeCondition(oEvent);
			break;

		case oFF.OuViewConditions.UIE_ID_DELETE_CONDITION:
			lHandled = true;
			this.onDeleteCondition(oEvent);
			break;

		default:
			break;
	}
	return lHandled;
};
oFF.OuViewConditions.prototype.handleValidate = function()
{
	var loMessageLog = this.getMessageLog();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.validate();
		loMessageLog.addMessageLog(loModel.getMessageLog());
	}
};
oFF.OuViewConditions.prototype.handleModelChanged = function(oModel, oProperty)
{
	if (oModel === this.getModel() && oProperty.getProperty() === oFF.OuModelConditions.PROPERTY_CONDITIONS)
	{
		this.setDirty(true);
	}
	if (oProperty.getProperty() === oFF.OuModelCondition.PROPERTY_CONDITION_DESCRIPTION || oProperty.getProperty() === oFF.OuModelCondition.PROPERTY_CONDITION_ACTIVE)
	{
		this.setDirty(true);
	}
};
oFF.OuViewConditions.prototype.renderConditionsToolbar = function()
{
	if (oFF.isNull(this.m_oUIEConditionsToolbar))
	{
		this.m_oUIEConditionsToolbar = oFF.OuRenderingUtil.sCreateToolbar(this, null, oFF.OuViewConditions.UIE_ID_CONDITIONS_TOOLBAR);
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEConditionsToolbar, oFF.OuViewConditions.UIE_ID_CREATE_CONDITION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CREATE_CONDITION.getId()));
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEConditionsToolbar, oFF.OuViewConditions.UIE_ID_CHANGE_CONDITION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CHANGE_CONDITION.getId()));
		oFF.OuRenderingUtil.sCreateToolbarButton(this, this.m_oUIEConditionsToolbar, oFF.OuViewConditions.UIE_ID_DELETE_CONDITION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_DELETE_CONDITION.getId()));
	}
	return this.m_oUIEConditionsToolbar;
};
oFF.OuViewConditions.prototype.renderConditionsTable = function()
{
	if (oFF.isNull(this.m_oUIEConditionsTable))
	{
		this.m_oUIEConditionsTable = oFF.OuRenderingUtil.sCreateTable(this, null, oFF.OuViewConditions.UIE_ID_CONDITIONS, oFF.UiSelectionMode.SINGLE_SELECT_MASTER);
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEConditionsTable, oFF.OuViewConditions.UIE_ID_CONDITION, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CONDITION.getId()));
		oFF.OuRenderingUtil.sCreateTableColumn(this, this.m_oUIEConditionsTable, oFF.OuViewConditions.UIE_ID_CONDITION_ACTIVE, this.getEnvironment().getLocalization().getText(oFF.OuLocalizationTextsConditions.I18N_CONDITION_ACTIVE.getId()));
	}
	this.m_oUIEConditionsTable.clearResponsiveTableRows();
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		var ltConditions = loModel.getConditions();
		var loConditionsIterator = ltConditions.getIterator();
		var loCondition;
		var lcUIEName = oFF.XStringUtils.concatenate2(oFF.OuViewConditions.UIE_ID_CONDITION, "-");
		var lUIEName;
		var lConditionIndex;
		lConditionIndex = 0;
		while (loConditionsIterator.hasNext())
		{
			loCondition = loConditionsIterator.next();
			if (oFF.isNull(loCondition))
			{
				continue;
			}
			lConditionIndex = lConditionIndex + 1;
			lUIEName = oFF.XStringUtils.concatenate2(lcUIEName, oFF.XInteger.convertToString(lConditionIndex));
			var loTableRow = oFF.OuRenderingUtil.sCreateTableRow(this, this.m_oUIEConditionsTable, lUIEName);
			loTableRow.setSelected(loCondition.isSelected());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, loCondition.getText());
			oFF.OuRenderingUtil.sCreateTableCell(this, loTableRow, lUIEName, oFF.XBoolean.convertToString(loCondition.isActive()));
		}
	}
	return this.m_oUIEConditionsTable;
};
oFF.OuViewConditions.prototype.openConditionDialog = function(displayMode, oModel)
{
	if (oFF.isNull(this.m_oDialogCondition) || this.m_oDialogCondition.isReleased())
	{
		this.m_oDialogCondition = this.getEnvironment().createDialog(new oFF.OuDialogCondition(), oModel);
		this.m_oDialogCondition.addListener(this);
	}
	if (oFF.notNull(displayMode))
	{
		this.m_oDialogCondition.setDisplayMode(displayMode);
	}
	if (oFF.notNull(oModel))
	{
		this.m_oDialogCondition.setModel(oModel);
	}
	this.m_oDialogCondition.open();
	return this.m_oDialogCondition;
};
oFF.OuViewConditions.prototype.getConditionDialog = function()
{
	return this.m_oDialogCondition;
};
oFF.OuViewConditions.prototype.onCreateCondition = function(oEvent)
{
	var loModel = this.getModel();
	var loCondition = loModel.createCondition(null);
	loModel.clearSelections();
	if (oFF.notNull(loCondition))
	{
		this.openConditionDialog(oFF.COuDisplayMode.CREATE, loCondition);
	}
};
oFF.OuViewConditions.prototype.onSubmitCondition = function()
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearSelections();
		var loConditionDialog = this.getConditionDialog();
		var loModelCondition = loConditionDialog.getModel();
		if (!loModel.getConditions().contains(loModelCondition))
		{
			loModel.addCondition(loModelCondition);
		}
		loModel.selectItem(loModelCondition);
	}
};
oFF.OuViewConditions.prototype.onChangeCondition = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearSelections();
		var ltSelectedItems = this.m_oUIEConditionsTable.getSelectedItems();
		if (ltSelectedItems.isEmpty())
		{
			return;
		}
		var loSelectedItem = ltSelectedItems.get(0);
		var lSelectedItemName = loSelectedItem.getName();
		var loSelectedRow = this.m_oUIEConditionsTable.getResponsiveTableRowByName(lSelectedItemName);
		var lSelectedRowName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedRow);
		var lIndexAsString = oFF.XString.replace(lSelectedRowName, oFF.OuViewConditions.UIE_ID_CONDITION, "");
		var lIndex = 0;
		if (oFF.notNull(lIndexAsString))
		{
			if (oFF.XString.startsWith(lIndexAsString, "-"))
			{
				lIndex = oFF.XInteger.convertFromString(oFF.XString.substring(lIndexAsString, 1, -1));
			}
			else
			{
				lIndex = oFF.XInteger.convertFromString(lIndexAsString);
			}
		}
		var loCondition = loModel.getConditions().get(lIndex - 1);
		if (oFF.notNull(loCondition))
		{
			this.openConditionDialog(oFF.COuDisplayMode.CHANGE, loCondition);
		}
	}
};
oFF.OuViewConditions.prototype.onDeleteCondition = function(oEvent)
{
	var loModel = this.getModel();
	if (oFF.notNull(loModel))
	{
		loModel.clearSelections();
		var ltSelectedItems = this.m_oUIEConditionsTable.getSelectedItems();
		if (ltSelectedItems.isEmpty())
		{
			return;
		}
		var loSelectedItemIterator = ltSelectedItems.getIterator();
		while (loSelectedItemIterator.hasNext())
		{
			var loSelectedItem = loSelectedItemIterator.next();
			if (oFF.isNull(loSelectedItem))
			{
				continue;
			}
			var lSelectedItemName = loSelectedItem.getName();
			var loSelectedRow = this.m_oUIEConditionsTable.getResponsiveTableRowByName(lSelectedItemName);
			var lSelectedRowName = oFF.OuRenderingUtil.sGetControlName(oEvent.getRenderingObject(), loSelectedRow);
			var lIndexAsString = oFF.XString.replace(lSelectedRowName, oFF.OuViewConditions.UIE_ID_CONDITION, "");
			var lIndex = 0;
			if (oFF.notNull(lIndexAsString))
			{
				if (oFF.XString.startsWith(lIndexAsString, "-"))
				{
					lIndex = oFF.XInteger.convertFromString(oFF.XString.substring(lIndexAsString, 1, -1));
				}
				else
				{
					lIndex = oFF.XInteger.convertFromString(lIndexAsString);
				}
			}
			var loCondition = loModel.getConditions().get(lIndex - 1);
			if (oFF.notNull(loCondition))
			{
				loModel.removeCondition(loCondition);
			}
		}
	}
};
oFF.OuViewConditions.prototype.onRenderingObjectModelChanged = function(oRenderingObject) {};
oFF.OuViewConditions.prototype.onDialogAfterSubmit = function(oDialog)
{
	if (oDialog === this.getConditionDialog())
	{
		this.onSubmitCondition();
	}
};
oFF.OuViewConditions.prototype.releaseObject = function()
{
	oFF.OuView.prototype.releaseObject.call( this );
	this.m_oUIEConditionsToolbar = oFF.XObjectExt.release(this.m_oUIEConditionsToolbar);
	this.m_oUIEConditionsTable = oFF.XObjectExt.release(this.m_oUIEConditionsTable);
	this.m_oDialogCondition = oFF.XObjectExt.release(this.m_oDialogCondition);
};
oFF.OuViewConditions.prototype.getProgramName = function()
{
	return oFF.OuViewConditions.DEFAULT_PROGRAM_NAME;
};

oFF.OlapCmdButton = function() {};
oFF.OlapCmdButton.prototype = new oFF.UiComposite();
oFF.OlapCmdButton.prototype._ff_c = "OlapCmdButton";

oFF.OlapCmdButton.create = function()
{
	var newObject = new oFF.OlapCmdButton();
	newObject.setup();
	return newObject;
};
oFF.OlapCmdButton.prototype.m_button = null;
oFF.OlapCmdButton.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.OlapCmdButton.prototype.initializeComposite = function()
{
	this.m_button = this.newControl(oFF.UiType.BUTTON);
	this.m_button.registerOnPress(this);
	this.setBaseControl(this.m_button);
};
oFF.OlapCmdButton.prototype.releaseObject = function()
{
	this.m_button = oFF.XObjectExt.release(this.m_button);
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.OlapCmdButton.prototype.setText = function(text)
{
	oFF.UiComposite.prototype.setText.call( this , text);
	this.m_button.setText(text);
	return this;
};
oFF.OlapCmdButton.prototype.onPress = function(event)
{
	this.displayVariableScreen();
};
oFF.OlapCmdButton.prototype.displayVariableScreen = function()
{
	var olapEnv = this.getUiManager().getProcess().getEntity(oFF.ProcessEntity.OLAP_ENVIRONMENT);
	oFF.VdDragonflyEntryPoint.createEntryPoint("Process Variables", olapEnv.getVariableProcessor(), this).open();
};
oFF.OlapCmdButton.prototype.onOk = function()
{
	var olapEnv = this.getUiManager().getProcess().getEntity(oFF.ProcessEntity.OLAP_ENVIRONMENT);
	var qmIter = olapEnv.getAllAreaQueryManager().getIterator();
	while (qmIter.hasNext())
	{
		qmIter.next().processQueryExecution(null, null, null);
	}
};
oFF.OlapCmdButton.prototype.onCancel = function() {};

oFF.OlapContextMenu = function() {};
oFF.OlapContextMenu.prototype = new oFF.UiComposite();
oFF.OlapContextMenu.prototype._ff_c = "OlapContextMenu";

oFF.OlapContextMenu.create = function()
{
	var newObject = new oFF.OlapContextMenu();
	newObject.setup();
	return newObject;
};
oFF.OlapContextMenu.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.OlapContextMenu.prototype.initializeComposite = function()
{
	var menu = this.newControl(oFF.UiType.MENU);
	this.setBaseControl(menu);
};
oFF.OlapContextMenu.prototype.releaseObject = function()
{
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.OlapContextMenu.prototype.onPress = function(event) {};

oFF.OlapPivotTable = function() {};
oFF.OlapPivotTable.prototype = new oFF.UiComposite();
oFF.OlapPivotTable.prototype._ff_c = "OlapPivotTable";

oFF.OlapPivotTable.create = function()
{
	var newObject = new oFF.OlapPivotTable();
	newObject.setup();
	return newObject;
};
oFF.OlapPivotTable.prototype.m_fireflyGrid = null;
oFF.OlapPivotTable.prototype.m_dim = null;
oFF.OlapPivotTable.prototype.m_mem = null;
oFF.OlapPivotTable.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.OlapPivotTable.prototype.initializeComposite = function()
{
	this.m_fireflyGrid = this.newControl(oFF.UiType.FIREFLY_GRID);
	this.m_fireflyGrid.registerOnPress(this);
	this.setBaseControl(this.m_fireflyGrid);
};
oFF.OlapPivotTable.prototype.releaseObject = function()
{
	this.m_fireflyGrid = oFF.XObjectExt.release(this.m_fireflyGrid);
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.OlapPivotTable.prototype.onPress = function(event)
{
	var selectionExp = oFF.XStringUtils.concatenate2("dp:", this.getText());
	var process = this.getUiManager().getSession();
	var dataProvder = process.getSelector().selectComponentByExpr(selectionExp, oFF.SigSelDomain.DATA, this, 1, false);
	if (oFF.notNull(dataProvder))
	{
		var queryManager = dataProvder.getQueryManager();
		var queryModel = queryManager.getQueryModel();
		var dim = null;
		var sDim = event.getParameters().getStringByKey("Dimension");
		if (oFF.XString.isEqual(event.getParameters().getStringByKey("Action"), "CellClick"))
		{
			var subMenuItem;
			this.m_dim = oFF.isNull(sDim) ? null : queryModel.getDimensionByName(sDim);
			this.m_mem = event.getParameters().getStringByKey("Member");
			var menu = this.newControl(oFF.UiType.MENU);
			var menuItem = null;
			if (queryManager.getApplication().getUndoManager().getAvailableUndoStepCount() > 0)
			{
				menuItem = this.newControl(oFF.UiType.MENU_ITEM);
				menuItem.setText("Back");
				menuItem.setTag("Back");
				menuItem.registerOnPress(this);
				menu.addItem(menuItem);
			}
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Filter And Drill Down");
			var dimIter = queryModel.getDimensions().getIterator();
			var counter = 0;
			while (dimIter.hasNext())
			{
				dim = dimIter.next();
				if (dim.getAxisType() === oFF.AxisType.FREE)
				{
					subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
					subMenuItem.setText(dim.getText());
					subMenuItem.registerOnPress(this);
					subMenuItem.setTag("FilterAndDrilldown");
					subMenuItem.setName(dim.getName());
					++counter;
					menuItem.addItem(subMenuItem);
				}
			}
			if (counter > 0)
			{
				menu.addItem(menuItem);
			}
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Filter");
			if (oFF.notNull(this.m_mem))
			{
				var menuItemKF = this.newControl(oFF.UiType.MENU_ITEM);
				menuItemKF.setTag("Filter");
				menuItemKF.setText("Keep");
				menuItemKF.registerOnPress(this);
				menuItem.addItem(menuItemKF);
			}
			if (oFF.notNull(this.m_dim) && this.m_dim.getFilter() !== null)
			{
				var menuItemRF = this.newControl(oFF.UiType.MENU_ITEM);
				menuItemRF.setTag("RemoveFilter");
				menuItemRF.setText("Remove");
				menuItemRF.registerOnPress(this);
				menuItem.addItem(menuItemRF);
			}
			var menuItemSF = this.newControl(oFF.UiType.MENU_ITEM);
			menuItemSF.setTag("SelectFilter");
			menuItemSF.setText("Select");
			menuItemSF.registerOnPress(this);
			menuItem.addItem(menuItemSF);
			menu.addItem(menuItem);
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Drill Down");
			dimIter = queryModel.getDimensions().getIterator();
			while (dimIter.hasNext())
			{
				dim = dimIter.next();
				if (dim.getAxisType() === oFF.AxisType.FREE)
				{
					subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
					subMenuItem.setText(dim.getText());
					subMenuItem.setTag("Drilldown");
					subMenuItem.setName(dim.getName());
					subMenuItem.registerOnPress(this);
					menuItem.addItem(subMenuItem);
				}
				if (oFF.XString.isEqual(dim.getName(), sDim))
				{
					this.m_dim = dim;
				}
			}
			if (counter > 0)
			{
				menu.addItem(menuItem);
			}
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Drill Across");
			dimIter = queryModel.getDimensions().getIterator();
			while (dimIter.hasNext())
			{
				dim = dimIter.next();
				if (dim.getAxisType() === oFF.AxisType.FREE)
				{
					subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
					subMenuItem.setText(dim.getText());
					subMenuItem.registerOnPress(this);
					subMenuItem.setTag("Drillacross");
					subMenuItem.setName(dim.getName());
					menuItem.addItem(subMenuItem);
					++counter;
				}
			}
			if (counter > 0)
			{
				menu.addItem(menuItem);
			}
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Exchange With");
			dimIter = queryModel.getDimensions().getIterator();
			while (dimIter.hasNext())
			{
				dim = dimIter.next();
				if (dim.getAxisType() === oFF.AxisType.FREE)
				{
					subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
					subMenuItem.setText(dim.getText());
					subMenuItem.setTag("Exchange");
					subMenuItem.setName(dim.getName());
					subMenuItem.registerOnPress(this);
					menuItem.addItem(subMenuItem);
				}
			}
			if (counter > 0)
			{
				menu.addItem(menuItem);
			}
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			menuItem.setText("Remove From Layout");
			menuItem.setTag("Remove");
			menuItem.registerOnPress(this);
			menu.addItem(menuItem);
			menuItem = this.newControl(oFF.UiType.MENU_ITEM);
			if (oFF.notNull(this.m_dim))
			{
				menuItem.setText("Sort");
				subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
				subMenuItem.setText("Ascending");
				subMenuItem.setTag("SortAscending");
				subMenuItem.registerOnPress(this);
				menuItem.addItem(subMenuItem);
				subMenuItem = this.newControl(oFF.UiType.MENU_ITEM);
				subMenuItem.setText("Descending");
				subMenuItem.setTag("SortDescending");
				subMenuItem.registerOnPress(this);
				menuItem.addItem(subMenuItem);
				menu.addItem(menuItem);
				menuItem = this.newControl(oFF.UiType.MENU_ITEM);
				menuItem.setText("Axis Properties ...");
				menuItem.registerOnPress(this);
				menuItem.setTag("AxisProp");
				menu.addItem(menuItem);
				menuItem = this.newControl(oFF.UiType.MENU_ITEM);
				menuItem.setText("Properties ...");
				menuItem.registerOnPress(this);
				menuItem.setTag("Prop");
				menuItem.registerOnClick(this);
				menu.addItem(menuItem);
			}
			if (queryModel.hasInputEnabledVariables())
			{
				menuItem = this.newControl(oFF.UiType.MENU_ITEM);
				menuItem.setText("Prompt Variables");
				menuItem.setTag("Prompt");
				menuItem.registerOnPress(this);
				menu.addItem(menuItem);
			}
			if (queryModel.getCurrencyTranslationManager() !== null && !oFF.XString.isEqual(queryModel.getCurrencyTranslationManager().getCurrencyTranslationEnabledType(), oFF.CurrencyTranslationConstants.NO_CURRENCY))
			{
				menuItem = this.newControl(oFF.UiType.MENU_ITEM);
				menuItem.setText("Currency Translation");
				menuItem.setTag("CurrTransl");
				menuItem.registerOnPress(this);
				menu.addItem(menuItem);
			}
			var x = event.getParameters().getIntegerByKey("left");
			var y = event.getParameters().getIntegerByKey("top");
			menu.openAtPosition(x, y);
		}
		else if (oFF.XString.isEqual(event.getParameters().getStringByKey("Action"), "Drill"))
		{
			queryManager.getSession().notifyInterruptStep(oFF.XInterruptStep.create(), true);
			this.m_dim = oFF.isNull(sDim) ? null : queryModel.getDimensionByName(sDim);
			if (oFF.isNull(this.m_dim))
			{
				return;
			}
			var resultSet = queryManager.processQueryExecution(oFF.SyncType.BLOCKING, null, null).getData().getClassicResultSet();
			var tupleIndex = event.getParameters().getIntegerByKey("TupleIndex");
			var axisType = this.m_dim.getAxisType();
			var te = resultSet.getAxis(axisType).getTupleAt(tupleIndex).getTupleElementByDimension(this.m_dim);
			te.setNextDrillState(te.getDrillState() !== oFF.DrillState.COLLAPSED ? oFF.DrillState.COLLAPSED : oFF.DrillState.EXPANDED);
		}
		else
		{
			var sTag = event.getControl().getTag();
			if (oFF.XString.isEqual(sTag, "Back"))
			{
				queryManager.getApplication().getUndoManager().processUndo(oFF.SyncType.NON_BLOCKING, null, null);
				return;
			}
			var step = oFF.XInterruptStep.create();
			queryManager.getSession().notifyInterruptStep(step, true);
			if (oFF.XString.isEqual(sTag, "Filter"))
			{
				queryManager.getQueryModel().getFilter().getDynamicFilter().addSingleMemberFilterByName(this.m_dim.getName(), this.m_mem, oFF.ComparisonOperator.EQUAL);
			}
			else if (oFF.XString.isEqual(sTag, "DrillDown"))
			{
				queryManager.getQueryModel().getFilter().getDynamicFilter().addSingleMemberFilterByName(this.m_dim.getName(), this.m_mem, oFF.ComparisonOperator.EQUAL);
			}
			else if (oFF.XString.isEqual(sTag, "RemoveFilter"))
			{
				queryManager.getQueryModel().getFilter().getDynamicFilter().addSingleMemberFilterByName(this.m_dim.getName(), this.m_mem, oFF.ComparisonOperator.EQUAL);
				oFF.QFilterUtil.clearSelectionsInContainerByDimension(this.m_dim.getName(), queryManager.getQueryModel().getFilter().getDynamicFilter());
			}
			else if (oFF.XString.isEqual(sTag, "FilterAndDrilldown"))
			{
				queryManager.getQueryModel().getFilter().getDynamicFilter().addSingleMemberFilterByName(this.m_dim.getName(), this.m_mem, oFF.ComparisonOperator.EQUAL);
				dim = queryModel.getDimensionByName(event.getControl().getName());
				queryModel.getFilter().getDynamicFilter().addSingleMemberFilterByName(this.m_dim.getName(), this.m_mem, oFF.ComparisonOperator.EQUAL);
				this.m_dim.getAxis().add(dim);
				queryModel.getAxis(oFF.AxisType.FREE).add(this.m_dim);
			}
			else if (oFF.XString.isEqual(sTag, "Drilldown"))
			{
				dim = queryModel.getDimensionByName(event.getControl().getName());
				queryModel.getRowsAxis().add(dim);
			}
			else if (oFF.XString.isEqual(sTag, "Drillacross"))
			{
				dim = queryModel.getDimensionByName(event.getControl().getName());
				queryModel.getColumnsAxis().add(dim);
			}
			else if (oFF.XString.isEqual(sTag, "Exchange"))
			{
				dim = queryModel.getDimensionByName(event.getControl().getName());
				this.m_dim.getAxis().add(dim);
				queryModel.getAxis(oFF.AxisType.FREE).add(this.m_dim);
			}
			else if (oFF.XString.isEqual(sTag, "Remove"))
			{
				queryModel.getAxis(oFF.AxisType.FREE).add(this.m_dim);
			}
			else if (oFF.XString.isEqual(sTag, "SortAscending"))
			{
				this.m_dim.getResultSetSorting().setDirection(oFF.XSortDirection.ASCENDING);
			}
			else if (oFF.XString.isEqual(sTag, "SortDescending"))
			{
				this.m_dim.getResultSetSorting().setDirection(oFF.XSortDirection.DESCENDING);
			}
			else if (oFF.XString.isEqual(sTag, "SelectFilter"))
			{
				var selEntryPoint = oFF.FdEntryPoint.createEntryPoint(queryManager.getApplication(), "Selector");
				selEntryPoint.getConfiguration().addFilterType(oFF.FdFilterType.FUNCTIONAL_VALUES);
				selEntryPoint.openWithDimension(this.m_dim, this);
			}
			else if (oFF.XString.isEqual(sTag, "Prop"))
			{
				var dimEntryPoint = oFF.DdOceanEntryPoint.createEntryPoint(queryManager.getApplication());
				dimEntryPoint.openDimensionDialog(oFF.XStringUtils.concatenate2("Properties of ", this.m_dim.getText()), this.m_dim, null);
			}
			else if (oFF.XString.isEqual(sTag, "AxisProp"))
			{
				var axisEntryPoint = oFF.DdOceanEntryPoint.createEntryPoint(queryManager.getApplication());
				axisEntryPoint.openAxisDialog(oFF.XStringUtils.concatenate2("Properties of ", this.m_dim.getAxis().getText()), this.m_dim.getAxis(), null);
			}
			else if (oFF.XString.isEqual(sTag, "Prompt"))
			{
				oFF.VdDragonflyEntryPoint.createEntryPoint(queryModel.getText(), queryManager.getOlapEnv().getVariableProcessor(), null).open();
			}
			else if (oFF.XString.isEqual(sTag, "CurrTransl"))
			{
				var ctEntryPoint = oFF.CtOceanEntryPoint.createEntryPoint(queryManager.getApplication());
				ctEntryPoint.openQCTDialog("Currency Translation", queryModel.getCurrencyTranslationManager(), null);
			}
			queryManager.getSession().notifyInterruptStep(step, false);
		}
	}
};
oFF.OlapPivotTable.prototype.setModelJson = function(model)
{
	return this.m_fireflyGrid.setModelJson(model);
};
oFF.OlapPivotTable.prototype.onClick = function(event) {};
oFF.OlapPivotTable.prototype.onFilterDialogOk = function(selection)
{
	if (oFF.notNull(selection))
	{
		var selIter = selection.getIterator();
		var sel;
		var selectionExp = oFF.XStringUtils.concatenate2("dp:", this.getText());
		var process = this.getUiManager().getSession();
		var dataProvder = process.getSelector().selectComponentByExpr(selectionExp, oFF.SigSelDomain.DATA, this, 1, false);
		var queryManager = dataProvder.getQueryManager();
		var queryModel = queryManager.getQueryModel();
		oFF.QFilterUtil.clearSelectionsInContainerByDimension(this.m_dim.getName(), queryManager.getQueryModel().getFilter().getDynamicFilter());
		while (selIter.hasNext())
		{
			sel = selIter.next();
			queryModel.getFilter().getDynamicFilter().addSingleMemberFilterByDimension(this.m_dim, sel.getKey(), oFF.ComparisonOperator.EQUAL);
		}
	}
};
oFF.OlapPivotTable.prototype.onFilterDialogCancel = function() {};

oFF.UiConvenienceCmdsMenu = function() {};
oFF.UiConvenienceCmdsMenu.prototype = new oFF.UiComposite();
oFF.UiConvenienceCmdsMenu.prototype._ff_c = "UiConvenienceCmdsMenu";

oFF.UiConvenienceCmdsMenu.create = function()
{
	var newObject = new oFF.UiConvenienceCmdsMenu();
	newObject.setup();
	return newObject;
};
oFF.UiConvenienceCmdsMenu.prototype.m_mainMenu = null;
oFF.UiConvenienceCmdsMenu.prototype.m_convenienceCommands = null;
oFF.UiConvenienceCmdsMenu.prototype.m_queryManager = null;
oFF.UiConvenienceCmdsMenu.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.UiConvenienceCmdsMenu.prototype.initializeComposite = function()
{
	this.m_mainMenu = this.newControl(oFF.UiType.MENU);
	this.setBaseControl(this.m_mainMenu);
};
oFF.UiConvenienceCmdsMenu.prototype.releaseObject = function()
{
	this.m_mainMenu = oFF.XObjectExt.release(this.m_mainMenu);
	this.m_convenienceCommands = null;
	this.m_queryManager = null;
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.UiConvenienceCmdsMenu.prototype.setCustomParameters = function(customParameters)
{
	oFF.UiComposite.prototype.setCustomParameters.call( this , customParameters);
	this.retrieveQueryManager();
	return this;
};
oFF.UiConvenienceCmdsMenu.prototype.openAt = function(control)
{
	oFF.UiComposite.prototype.openAt.call( this , control);
	this.prepareMenu();
	if (this.m_mainMenu.hasItems())
	{
		this.m_mainMenu.openAt(control);
	}
	return this;
};
oFF.UiConvenienceCmdsMenu.prototype.onPress = function(event)
{
	var controlParent = event.getControl().getParent();
	if (oFF.notNull(controlParent) && (controlParent.getUiType() === oFF.UiType.MENU || controlParent.getUiType() === oFF.UiType.MENU_ITEM) && oFF.notNull(this.m_convenienceCommands))
	{
		this.getUiManager().getSession().notifyInterruptStep(oFF.XInterruptStep.create(), true);
		var tmpDim;
		var dimensionName;
		if (oFF.XString.isEqual(controlParent.getTag(), "attributeItem"))
		{
			var tmpAttr = controlParent.getCustomObject();
			var attributeName = tmpAttr.getName();
			dimensionName = tmpAttr.getDimension().getName();
			switch (event.getControl().getTag())
			{
				case "attrShow":
					this.m_convenienceCommands.addAttributeToResultSet(dimensionName, attributeName);
					break;

				case "attrHide":
					this.m_convenienceCommands.removeAttributeFromResultSet(dimensionName, attributeName);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getTag(), "hierarchyItem"))
		{
			tmpDim = controlParent.getParent().getCustomObject();
			var tmpHier = controlParent.getCustomObject();
			dimensionName = tmpDim.getName();
			var hierName = tmpHier.getHierarchyName();
			switch (event.getControl().getTag())
			{
				case "activateHierarchy":
					this.m_convenienceCommands.setDimensionHierarchy(dimensionName, hierName, true, 0);
					break;

				case "deactivateHierarchy":
					this.m_convenienceCommands.setDimensionHierarchy(dimensionName, hierName, false, 0);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getName(), "dimTotalsMenu"))
		{
			tmpDim = controlParent.getCustomObject();
			dimensionName = tmpDim.getName();
			switch (event.getControl().getTag())
			{
				case "dimTotalsShow":
					this.m_convenienceCommands.setTotalsVisibleOnDimension(dimensionName, oFF.ResultVisibility.ALWAYS);
					break;

				case "dimTotalsHide":
					this.m_convenienceCommands.setTotalsVisibleOnDimension(dimensionName, oFF.ResultVisibility.HIDDEN);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getTag(), "sortBySubMenu"))
		{
			tmpDim = controlParent.getCustomObject();
			var sortType = event.getControl().getCustomObject();
			dimensionName = tmpDim.getName();
			switch (event.getControl().getTag())
			{
				case "sortAsc":
					this.m_convenienceCommands.sort(sortType, null, dimensionName, null, null, null, oFF.XSortDirection.ASCENDING);
					break;

				case "sortDesc":
					this.m_convenienceCommands.sort(sortType, null, dimensionName, null, null, null, oFF.XSortDirection.DESCENDING);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getName(), "dimMoveToAxisMenu"))
		{
			tmpDim = controlParent.getCustomObject();
			dimensionName = tmpDim.getName();
			switch (event.getControl().getTag())
			{
				case "moveToAxisRows":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.ROWS);
					break;

				case "moveToAxisColumns":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.COLUMNS);
					break;

				case "moveToAxisFree":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.FREE);
					break;

				case "moveToAxisDynamic":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.DYNAMIC);
					break;

				case "moveToAxisFilter":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.FILTER);
					break;

				case "moveToAxisRepository":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.REPOSITORY);
					break;

				case "moveToAxisVirtual":
					this.m_convenienceCommands.moveDimensionToAxis(dimensionName, oFF.AxisType.VIRTUAL);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getTag(), "axesTotalsMenu"))
		{
			var tmpAxis = controlParent.getCustomObject();
			switch (event.getControl().getTag())
			{
				case "axesTotalsShow":
					this.m_convenienceCommands.setTotalsVisibleOnAxis(tmpAxis.getType(), oFF.ResultVisibility.ALWAYS);
					break;

				case "axesTotalsHide":
					this.m_convenienceCommands.setTotalsVisibleOnAxis(tmpAxis.getType(), oFF.ResultVisibility.HIDDEN);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getName(), "clearAxisMenu"))
		{
			switch (event.getControl().getName())
			{
				case "clearRowAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.ROWS);
					break;

				case "clearColumnAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.COLUMNS);
					break;

				case "clearFreeAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.FREE);
					break;

				case "clearDynamicAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.DYNAMIC);
					break;

				case "clearFilterAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.FILTER);
					break;

				case "clearRepositoryAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.REPOSITORY);
					break;

				case "clearVirtualAxis":
					this.m_convenienceCommands.clearAxis(oFF.AxisType.VIRTUAL);
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(controlParent.getName(), "axesMenu"))
		{
			switch (event.getControl().getName())
			{
				case "switchAxesMenuItem":
					this.m_convenienceCommands.switchAxes();
					break;

				default:
			}
		}
		else if (oFF.XString.isEqual(event.getControl().getName(), "reset"))
		{
			this.m_convenienceCommands.reset();
		}
		else if (oFF.XString.isEqual(event.getControl().getName(), "resetToDefault"))
		{
			this.m_convenienceCommands.resetToDefault();
		}
		this.getUiManager().getSession().notifyInterruptStep(oFF.XInterruptStep.create(), false);
	}
};
oFF.UiConvenienceCmdsMenu.prototype.retrieveQueryManager = function()
{
	var dataProviderName = this.getCustomParameters().asStructure().getStringByKeyExt("dp", "");
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dataProviderName))
	{
		var selectionExp = oFF.XStringUtils.concatenate2("dp:", dataProviderName);
		var process = this.getUiManager().getSession();
		var dataProvder = process.getSelector().selectComponentByExpr(selectionExp, oFF.SigSelDomain.DATA, this, 1, false);
		if (oFF.notNull(dataProvder))
		{
			this.m_queryManager = dataProvder.getQueryManager();
			this.m_convenienceCommands = this.m_queryManager.getConvenienceCommands();
		}
	}
};
oFF.UiConvenienceCmdsMenu.prototype.prepareMenu = function()
{
	if (this.m_mainMenu.hasItems())
	{
		return;
	}
	if (oFF.isNull(this.m_queryManager))
	{
		this.retrieveQueryManager();
	}
	if (oFF.notNull(this.m_queryManager))
	{
		var dimensionList = this.m_queryManager.getDimensionAccessor().getDimensions();
		var dimensionIterator = dimensionList.getIterator();
		var dimensionsMenu = this.m_mainMenu.addNewItem().setName("dimMenu").setText("Dimensions");
		while (dimensionIterator.hasNext())
		{
			var tmpDim = dimensionIterator.next();
			if (tmpDim.isUniversalDisplayHierarchyDimension())
			{
				continue;
			}
			var dimText = tmpDim.getText();
			var dimName = tmpDim.getName();
			if (oFF.XStringUtils.isNullOrEmpty(dimText))
			{
				dimText = dimName;
			}
			var dimenionMenu = dimensionsMenu.addNewItem().setName(dimName).setText(dimText).setCustomObject(tmpDim);
			this.addDimHierarchyMenu(tmpDim, dimenionMenu);
			this.addDimAttributesMenu(tmpDim, dimenionMenu);
			this.addDimTotalsMenu(tmpDim, dimenionMenu);
			this.addDimSortingMenu(tmpDim, dimenionMenu);
			this.addMoveDimensionToAxisMenu(tmpDim, dimenionMenu);
		}
		var queryModel = this.m_queryManager.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var axesMenu = this.m_mainMenu.addNewItem().setName("axesMenu").setText("Axes");
			this.addAxesRowsMenu(queryModel, axesMenu);
			this.addAxesColumnsMenu(queryModel, axesMenu);
			axesMenu.addNewItem().setName("switchAxesMenuItem").setText("Switch axes").registerOnPress(this);
			this.addAxesClearAxesMenu(axesMenu);
		}
		this.m_mainMenu.addNewItem().setName("reset").setText("Reset").registerOnPress(this);
		this.m_mainMenu.addNewItem().setName("resetToDefault").setText("Reset to default").registerOnPress(this);
	}
	else
	{
		var newToast = this.newControl(oFF.UiType.TOAST);
		newToast.setText("No data provider specified!");
		newToast.setMessageType(oFF.UiMessageType.ERROR);
		newToast.open();
	}
};
oFF.UiConvenienceCmdsMenu.prototype.addDimHierarchyMenu = function(dimension, dimenionMenu)
{
	var hierarchyMenu = dimenionMenu.addNewItem().setName("hierarchyMenu").setText("Hierarchy").setCustomObject(dimension);
	var hierarchies = dimension.getHierarchies();
	if (dimension.supportsHierarchy() && oFF.notNull(hierarchies))
	{
		var hierarchyIterator = hierarchies.getObjects().getIterator();
		while (hierarchyIterator.hasNext())
		{
			var tmpHier = hierarchyIterator.next();
			var hierarchyItem = hierarchyMenu.addNewItem().setTag("hierarchyItem").setText(tmpHier.getHierarchyName()).setCustomObject(tmpHier);
			hierarchyItem.addNewItem().setTag("activateHierarchy").setText("activate").registerOnPress(this);
			hierarchyItem.addNewItem().setTag("deactivateHierarchy").setText("deactivate").registerOnPress(this);
		}
	}
	hierarchyMenu.setEnabled(hierarchyMenu.hasItems() ? true : false);
};
oFF.UiConvenienceCmdsMenu.prototype.addDimAttributesMenu = function(dimension, dimenionMenu)
{
	var attributesMenu = dimenionMenu.addNewItem().setName("attrMenu").setText("Attributes");
	var attributeList = dimension.getAttributes();
	if (attributeList.hasElements())
	{
		var attributeIterator = attributeList.getIterator();
		while (attributeIterator.hasNext())
		{
			var tmpAttr = attributeIterator.next();
			var attrText = tmpAttr.getText();
			var attrName = tmpAttr.getName();
			if (oFF.XStringUtils.isNullOrEmpty(attrText))
			{
				attrText = attrName;
			}
			var attrMenu = attributesMenu.addNewItem().setName(attrName).setTag("attributeItem").setText(attrText).setCustomObject(tmpAttr);
			attrMenu.addNewItem().setTag("attrShow").setText("show").setCustomObject(tmpAttr).registerOnPress(this);
			attrMenu.addNewItem().setTag("attrHide").setText("hide").setCustomObject(tmpAttr).registerOnPress(this);
		}
	}
	attributesMenu.setEnabled(attributesMenu.hasItems() ? true : false);
};
oFF.UiConvenienceCmdsMenu.prototype.addDimTotalsMenu = function(dimension, dimenionMenu)
{
	var dimTotalsMenu = dimenionMenu.addNewItem().setName("dimTotalsMenu").setText("Totals").setCustomObject(dimension);
	if (dimension.supportsTotals())
	{
		dimTotalsMenu.addNewItem().setTag("dimTotalsShow").setText("show").registerOnPress(this);
		dimTotalsMenu.addNewItem().setTag("dimTotalsHide").setText("hide").registerOnPress(this);
	}
	else
	{
		dimTotalsMenu.setEnabled(false);
	}
};
oFF.UiConvenienceCmdsMenu.prototype.addDimSortingMenu = function(dimension, dimenionMenu)
{
	var dimSortMenu = dimenionMenu.addNewItem().setName("sortMenu").setText("Sort").setCustomObject(dimension);
	this.addSortSubmenuWithSortType(dimension, dimSortMenu, oFF.SortType.MEMBER_TEXT, "By text");
	this.addSortSubmenuWithSortType(dimension, dimSortMenu, oFF.SortType.MEMBER_KEY, "By key");
	this.addSortSubmenuWithSortType(dimension, dimSortMenu, oFF.SortType.HIERARCHY, "By hierarchy");
};
oFF.UiConvenienceCmdsMenu.prototype.addSortSubmenuWithSortType = function(dimension, dimSortMenu, sortType, text)
{
	var dimSortByHierarchyMenu = dimSortMenu.addNewItem().setTag("sortBySubMenu").setText(text).setCustomObject(dimension);
	if (dimension.supportsSorting(sortType))
	{
		dimSortByHierarchyMenu.addNewItem().setTag("sortAsc").setText("Ascending").registerOnPress(this).setCustomObject(sortType);
		dimSortByHierarchyMenu.addNewItem().setTag("sortDesc").setText("Descending").registerOnPress(this).setCustomObject(sortType);
	}
	else
	{
		dimSortByHierarchyMenu.setEnabled(false);
	}
};
oFF.UiConvenienceCmdsMenu.prototype.addMoveDimensionToAxisMenu = function(dimension, dimenionMenu)
{
	var dimMoveToAxisMenu = dimenionMenu.addNewItem().setName("dimMoveToAxisMenu").setText("Move to axis").setCustomObject(dimension);
	if (dimension.supportsAxis(oFF.AxisType.ROWS))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisRows").setText("Rows").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.COLUMNS))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisColumns").setText("Columns").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.FREE))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisFree").setText("Free").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.DYNAMIC))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisDynamic").setText("Dynamic").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.FILTER))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisFilter").setText("Filter").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.REPOSITORY))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisRepository").setText("Repository").registerOnPress(this);
	}
	if (dimension.supportsAxis(oFF.AxisType.VIRTUAL))
	{
		dimMoveToAxisMenu.addNewItem().setTag("moveToAxisVirtual").setText("Virtual").registerOnPress(this);
	}
	dimMoveToAxisMenu.setEnabled(dimMoveToAxisMenu.hasItems() ? true : false);
};
oFF.UiConvenienceCmdsMenu.prototype.addAxesRowsMenu = function(queryModel, axesMenu)
{
	var rowsAxis = queryModel.getAxesManager().getRowsAxis();
	if (oFF.notNull(rowsAxis))
	{
		var rowsMenu = axesMenu.addNewItem().setName("rowsMenuItem").setText("Rows").setCustomObject(rowsAxis);
		if (rowsAxis.supportsTotals())
		{
			var rowsTotalsMenu = rowsMenu.addNewItem().setTag("axesTotalsMenu").setText("Totals").setCustomObject(rowsAxis);
			rowsTotalsMenu.addNewItem().setTag("axesTotalsShow").setText("show").registerOnPress(this);
			rowsTotalsMenu.addNewItem().setTag("axesTotalsHide").setText("hide").registerOnPress(this);
		}
		else
		{
			rowsMenu.setEnabled(false);
		}
	}
};
oFF.UiConvenienceCmdsMenu.prototype.addAxesColumnsMenu = function(queryModel, axesMenu)
{
	var columnsAxis = queryModel.getAxesManager().getColumnsAxis();
	if (oFF.notNull(columnsAxis))
	{
		var columnsMenu = axesMenu.addNewItem().setName("columnsMenuItem").setText("Columns").setCustomObject(columnsAxis);
		if (columnsAxis.supportsTotals())
		{
			var columnsTotalsMenu = columnsMenu.addNewItem().setTag("axesTotalsMenu").setText("Totals").setCustomObject(columnsAxis);
			columnsTotalsMenu.addNewItem().setTag("axesTotalsShow").setText("show").registerOnPress(this);
			columnsTotalsMenu.addNewItem().setTag("axesTotalsHide").setText("hide").registerOnPress(this);
		}
		else
		{
			columnsMenu.setEnabled(false);
		}
	}
};
oFF.UiConvenienceCmdsMenu.prototype.addAxesClearAxesMenu = function(axesMenu)
{
	var clearAxisMenu = axesMenu.addNewItem().setName("clearAxisMenu").setText("Clear axis");
	clearAxisMenu.addNewItem().setName("clearRowAxis").setText("Row").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearColumnAxis").setText("Column").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearFreeAxis").setText("Free").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearDynamicAxis").setText("Dynamic").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearFilterAxis").setText("Filter").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearRepositoryAxis").setText("Respository").registerOnPress(this);
	clearAxisMenu.addNewItem().setName("clearVirtualAxis").setText("Virtual").registerOnPress(this);
};

oFF.UiRedoButton = function() {};
oFF.UiRedoButton.prototype = new oFF.UiComposite();
oFF.UiRedoButton.prototype._ff_c = "UiRedoButton";

oFF.UiRedoButton.create = function()
{
	var newObject = new oFF.UiRedoButton();
	newObject.setup();
	return newObject;
};
oFF.UiRedoButton.prototype.m_redoButton = null;
oFF.UiRedoButton.prototype.m_application = null;
oFF.UiRedoButton.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.UiRedoButton.prototype.initializeComposite = function()
{
	this.m_application = this.getUiManager().getProcess().getApplication();
	if (oFF.notNull(this.m_application))
	{
		this.m_application.getUndoManager().registerUndoManagerListener(this);
	}
	this.m_redoButton = this.newControl(oFF.UiType.BUTTON);
	this.m_redoButton.setText("Redo");
	this.m_redoButton.registerOnPress(this);
	this.m_redoButton.setEnabled(false);
	this.setBaseControl(this.m_redoButton);
};
oFF.UiRedoButton.prototype.releaseObject = function()
{
	this.m_redoButton = oFF.XObjectExt.release(this.m_redoButton);
	this.m_application = null;
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.UiRedoButton.prototype.setMargin = function(margin)
{
	oFF.UiComposite.prototype.setMargin.call( this , margin);
	this.m_redoButton.setMargin(margin);
	return this;
};
oFF.UiRedoButton.prototype.onPress = function(event)
{
	var newToast = this.newControl(oFF.UiType.TOAST);
	if (oFF.notNull(this.m_application))
	{
		this.m_application.getUndoManager().processRedo(null, null, null);
		newToast.setText("Redo!");
	}
	else
	{
		newToast.setText("Application not found! Redo not possible!");
		newToast.setMessageType(oFF.UiMessageType.ERROR);
	}
	newToast.open();
};
oFF.UiRedoButton.prototype.undoManagerStateChanged = function()
{
	if (oFF.notNull(this.m_application) && oFF.notNull(this.m_redoButton))
	{
		this.m_redoButton.setEnabled(this.m_application.getUndoManager().getAvailableRedoStepCount() > 0);
		this.m_redoButton.setText(this.getButtonText());
	}
};
oFF.UiRedoButton.prototype.getButtonText = function()
{
	if (oFF.notNull(this.m_application))
	{
		var availableRedoStepCount = this.m_application.getUndoManager().getAvailableRedoStepCount();
		if (availableRedoStepCount > 0)
		{
			var redoStepCountStr = oFF.XInteger.convertToString(availableRedoStepCount);
			return oFF.XStringUtils.concatenate3("Redo (", redoStepCountStr, ")");
		}
	}
	return "Redo";
};

oFF.UiUndoButton = function() {};
oFF.UiUndoButton.prototype = new oFF.UiComposite();
oFF.UiUndoButton.prototype._ff_c = "UiUndoButton";

oFF.UiUndoButton.create = function()
{
	var newObject = new oFF.UiUndoButton();
	newObject.setup();
	return newObject;
};
oFF.UiUndoButton.prototype.m_undoButton = null;
oFF.UiUndoButton.prototype.m_application = null;
oFF.UiUndoButton.prototype.setup = function()
{
	oFF.UiComposite.prototype.setup.call( this );
};
oFF.UiUndoButton.prototype.initializeComposite = function()
{
	this.m_application = this.getUiManager().getProcess().getApplication();
	if (oFF.notNull(this.m_application))
	{
		this.m_application.getUndoManager().registerUndoManagerListener(this);
	}
	this.m_undoButton = this.newControl(oFF.UiType.BUTTON);
	this.m_undoButton.setText(this.getButtonText());
	this.m_undoButton.registerOnPress(this);
	this.m_undoButton.setEnabled(false);
	this.setBaseControl(this.m_undoButton);
};
oFF.UiUndoButton.prototype.releaseObject = function()
{
	this.m_undoButton = oFF.XObjectExt.release(this.m_undoButton);
	this.m_application = null;
	oFF.UiComposite.prototype.releaseObject.call( this );
};
oFF.UiUndoButton.prototype.setMargin = function(margin)
{
	oFF.UiComposite.prototype.setMargin.call( this , margin);
	this.m_undoButton.setMargin(margin);
	return this;
};
oFF.UiUndoButton.prototype.onPress = function(event)
{
	var newToast = this.newControl(oFF.UiType.TOAST);
	if (oFF.notNull(this.m_application))
	{
		this.m_application.getUndoManager().processUndo(null, null, null);
		newToast.setText("Undo!");
	}
	else
	{
		newToast.setText("Application not found! Undo not possible!");
		newToast.setMessageType(oFF.UiMessageType.ERROR);
	}
	newToast.open();
};
oFF.UiUndoButton.prototype.undoManagerStateChanged = function()
{
	if (oFF.notNull(this.m_application) && oFF.notNull(this.m_undoButton))
	{
		this.m_undoButton.setEnabled(this.m_application.getUndoManager().getAvailableUndoStepCount() > 0);
		this.m_undoButton.setText(this.getButtonText());
	}
};
oFF.UiUndoButton.prototype.getButtonText = function()
{
	if (oFF.notNull(this.m_application))
	{
		var availableUndoStepCount = this.m_application.getUndoManager().getAvailableUndoStepCount();
		if (availableUndoStepCount > 0)
		{
			var undoStepCountStr = oFF.XInteger.convertToString(availableUndoStepCount);
			return oFF.XStringUtils.concatenate3("Undo (", undoStepCountStr, ")");
		}
	}
	return "Undo";
};

oFF.OlapUiModule = function() {};
oFF.OlapUiModule.prototype = new oFF.DfModule();
oFF.OlapUiModule.prototype._ff_c = "OlapUiModule";

oFF.OlapUiModule.s_module = null;
oFF.OlapUiModule.getInstance = function()
{
	if (oFF.isNull(oFF.OlapUiModule.s_module))
	{
		oFF.DfModule.checkInitialized(oFF.UiModule.getInstance());
		oFF.DfModule.checkInitialized(oFF.UiProgramModule.getInstance());
		oFF.DfModule.checkInitialized(oFF.OlapApiModule.getInstance());
		oFF.OlapUiModule.s_module = oFF.DfModule.startExt(new oFF.OlapUiModule());
		oFF.OlapUiI18nFactory.staticSetup();
		oFF.OlapUiI18n.staticSetup();
		oFF.VdComparisonOperator.staticSetup();
		oFF.DialogDisplayMode.staticSetup();
		oFF.DialogLabelMode.staticSetup();
		oFF.DialogGridFormat.staticSetup();
		oFF.DialogGridParser.staticSetup();
		oFF.FdContentType.staticSetup();
		oFF.FdDimensionDisplayInfo.staticSetup();
		oFF.OlapUiReadMode.staticSetup();
		oFF.FdLayoutSize.staticSetup();
		oFF.FdTableType.staticSetup();
		oFF.FdFeature.staticSetup();
		oFF.FdItemType.staticSetup();
		oFF.FdFilterType.staticSetup();
		oFF.FdComparisonOperator.staticSetup();
		oFF.UiVdFactory.staticSetup();
		oFF.VdOrcaScenario.staticSetup();
		oFF.VdOrcaLevel.staticSetup();
		oFF.OrcaLinkVarJoinMode.staticSetup();
		oFF.OrcaLinkVarSubmitHandling.staticSetup();
		oFF.DdDisplayAs.staticSetup();
		oFF.VdValueFormat.staticSetup();
		oFF.VdControllerState.staticSetup();
		oFF.FieldContainerDisplay.staticSetup();
		oFF.FieldContainerKeyDisplay.staticSetup();
		oFF.OuSetup.staticSetup();
		oFF.UiType.UNDO_BUTTON.setFactory(new oFF.UiUndoButtonFactory());
		oFF.UiType.REDO_BUTTON.setFactory(new oFF.UiRedoButtonFactory());
		oFF.UiType.CONVENIENCE_CMDS_MENU.setFactory(new oFF.UiConvenienceCmdsMenuFactory());
		oFF.UiType.OLAP_CMD_BUTTON.setFactory(new oFF.OlapCmdButtonFactory());
		oFF.UiType.OLAP_PIVOT_TABLE.setFactory(new oFF.OlapPivotTableFactory());
		oFF.UiType.OLAP_CONTEXT_MENU.setFactory(new oFF.OlapContextMenuFactory());
		oFF.ProgramRegistration.setProgramFactory(new oFF.FirstAidShell());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuDimensionDialog());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuDimensionDialogExt());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuDimensionDialog2());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuCurrencyConversionDialog());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuQueryInformationDialog());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuSelectHierarchyDialog());
		oFF.ProgramRegistration.setProgramFactory(new oFF.OuTopNDialog());
		oFF.OuCurrencyConversionDialogI18n.staticSetup();
		oFF.OuQueryInformationDialogI18n.staticSetup();
		oFF.OuDimensionDialog2I18n.staticSetup();
		oFF.OuHierarchyDialogI18n.staticSetup();
		oFF.OuTopNDialogI18n.staticSetup();
		oFF.FilterDialogI18n.staticSetup();
		oFF.DfModule.stopExt(oFF.OlapUiModule.s_module);
	}
	return oFF.OlapUiModule.s_module;
};
oFF.OlapUiModule.prototype.getName = function()
{
	return "ff8010.olap.ui";
};

oFF.OlapUiModule.getInstance();

return sap.firefly;
	} );